var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

// node_modules/base64-js/index.js
var require_base64_js = __commonJS({
  "node_modules/base64-js/index.js"(exports) {
    "use strict";
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    var i;
    var len;
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len2 = b64.length;
      if (len2 % 4 > 0) {
        throw new Error("Invalid string. Length must be a multiple of 4");
      }
      var validLen = b64.indexOf("=");
      if (validLen === -1) validLen = len2;
      var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
      return [validLen, placeHoldersLen];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i2;
      for (i2 = 0; i2 < len2; i2 += 4) {
        tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i2 = start; i2 < end; i2 += 3) {
        tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len2 = uint8.length;
      var extraBytes = len2 % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
        parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
      }
      if (extraBytes === 1) {
        tmp = uint8[len2 - 1];
        parts.push(
          lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "=="
        );
      } else if (extraBytes === 2) {
        tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
        parts.push(
          lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "="
        );
      }
      return parts.join("");
    }
  }
});

// node_modules/ieee754/index.js
var require_ieee754 = __commonJS({
  "node_modules/ieee754/index.js"(exports) {
    exports.read = function(buffer, offset, isLE, mLen, nBytes) {
      var e2, m;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? nBytes - 1 : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];
      i += d;
      e2 = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;
      for (; nBits > 0; e2 = e2 * 256 + buffer[offset + i], i += d, nBits -= 8) {
      }
      m = e2 & (1 << -nBits) - 1;
      e2 >>= -nBits;
      nBits += mLen;
      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {
      }
      if (e2 === 0) {
        e2 = 1 - eBias;
      } else if (e2 === eMax) {
        return m ? NaN : (s ? -1 : 1) * Infinity;
      } else {
        m = m + Math.pow(2, mLen);
        e2 = e2 - eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e2 - mLen);
    };
    exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
      var e2, m, c;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i = isLE ? 0 : nBytes - 1;
      var d = isLE ? 1 : -1;
      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);
      if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e2 = eMax;
      } else {
        e2 = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e2)) < 1) {
          e2--;
          c *= 2;
        }
        if (e2 + eBias >= 1) {
          value += rt / c;
        } else {
          value += rt * Math.pow(2, 1 - eBias);
        }
        if (value * c >= 2) {
          e2++;
          c /= 2;
        }
        if (e2 + eBias >= eMax) {
          m = 0;
          e2 = eMax;
        } else if (e2 + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e2 = e2 + eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e2 = 0;
        }
      }
      for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {
      }
      e2 = e2 << mLen | m;
      eLen += mLen;
      for (; eLen > 0; buffer[offset + i] = e2 & 255, i += d, e2 /= 256, eLen -= 8) {
      }
      buffer[offset + i - d] |= s * 128;
    };
  }
});

// node_modules/buffer/index.js
var require_buffer = __commonJS({
  "node_modules/buffer/index.js"(exports) {
    "use strict";
    var base64 = require_base64_js();
    var ieee754 = require_ieee754();
    var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
    exports.Buffer = Buffer5;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    var K_MAX_LENGTH = 2147483647;
    exports.kMaxLength = K_MAX_LENGTH;
    Buffer5.TYPED_ARRAY_SUPPORT = typedArraySupport();
    if (!Buffer5.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
      console.error(
        "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
      );
    }
    function typedArraySupport() {
      try {
        const arr = new Uint8Array(1);
        const proto = { foo: function() {
          return 42;
        } };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
      } catch (e2) {
        return false;
      }
    }
    Object.defineProperty(Buffer5.prototype, "parent", {
      enumerable: true,
      get: function() {
        if (!Buffer5.isBuffer(this)) return void 0;
        return this.buffer;
      }
    });
    Object.defineProperty(Buffer5.prototype, "offset", {
      enumerable: true,
      get: function() {
        if (!Buffer5.isBuffer(this)) return void 0;
        return this.byteOffset;
      }
    });
    function createBuffer(length) {
      if (length > K_MAX_LENGTH) {
        throw new RangeError('The value "' + length + '" is invalid for option "size"');
      }
      const buf = new Uint8Array(length);
      Object.setPrototypeOf(buf, Buffer5.prototype);
      return buf;
    }
    function Buffer5(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        if (typeof encodingOrOffset === "string") {
          throw new TypeError(
            'The "string" argument must be of type string. Received type number'
          );
        }
        return allocUnsafe(arg);
      }
      return from(arg, encodingOrOffset, length);
    }
    Buffer5.poolSize = 8192;
    function from(value, encodingOrOffset, length) {
      if (typeof value === "string") {
        return fromString(value, encodingOrOffset);
      }
      if (ArrayBuffer.isView(value)) {
        return fromArrayView(value);
      }
      if (value == null) {
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
        );
      }
      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
        return fromArrayBuffer(value, encodingOrOffset, length);
      }
      if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
        return fromArrayBuffer(value, encodingOrOffset, length);
      }
      if (typeof value === "number") {
        throw new TypeError(
          'The "value" argument must not be of type number. Received type number'
        );
      }
      const valueOf = value.valueOf && value.valueOf();
      if (valueOf != null && valueOf !== value) {
        return Buffer5.from(valueOf, encodingOrOffset, length);
      }
      const b = fromObject(value);
      if (b) return b;
      if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
        return Buffer5.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
      }
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
      );
    }
    Buffer5.from = function(value, encodingOrOffset, length) {
      return from(value, encodingOrOffset, length);
    };
    Object.setPrototypeOf(Buffer5.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(Buffer5, Uint8Array);
    function assertSize(size) {
      if (typeof size !== "number") {
        throw new TypeError('"size" argument must be of type number');
      } else if (size < 0) {
        throw new RangeError('The value "' + size + '" is invalid for option "size"');
      }
    }
    function alloc(size, fill, encoding) {
      assertSize(size);
      if (size <= 0) {
        return createBuffer(size);
      }
      if (fill !== void 0) {
        return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
      }
      return createBuffer(size);
    }
    Buffer5.alloc = function(size, fill, encoding) {
      return alloc(size, fill, encoding);
    };
    function allocUnsafe(size) {
      assertSize(size);
      return createBuffer(size < 0 ? 0 : checked(size) | 0);
    }
    Buffer5.allocUnsafe = function(size) {
      return allocUnsafe(size);
    };
    Buffer5.allocUnsafeSlow = function(size) {
      return allocUnsafe(size);
    };
    function fromString(string, encoding) {
      if (typeof encoding !== "string" || encoding === "") {
        encoding = "utf8";
      }
      if (!Buffer5.isEncoding(encoding)) {
        throw new TypeError("Unknown encoding: " + encoding);
      }
      const length = byteLength(string, encoding) | 0;
      let buf = createBuffer(length);
      const actual = buf.write(string, encoding);
      if (actual !== length) {
        buf = buf.slice(0, actual);
      }
      return buf;
    }
    function fromArrayLike(array) {
      const length = array.length < 0 ? 0 : checked(array.length) | 0;
      const buf = createBuffer(length);
      for (let i = 0; i < length; i += 1) {
        buf[i] = array[i] & 255;
      }
      return buf;
    }
    function fromArrayView(arrayView) {
      if (isInstance(arrayView, Uint8Array)) {
        const copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
      }
      return fromArrayLike(arrayView);
    }
    function fromArrayBuffer(array, byteOffset, length) {
      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('"offset" is outside of buffer bounds');
      }
      if (array.byteLength < byteOffset + (length || 0)) {
        throw new RangeError('"length" is outside of buffer bounds');
      }
      let buf;
      if (byteOffset === void 0 && length === void 0) {
        buf = new Uint8Array(array);
      } else if (length === void 0) {
        buf = new Uint8Array(array, byteOffset);
      } else {
        buf = new Uint8Array(array, byteOffset, length);
      }
      Object.setPrototypeOf(buf, Buffer5.prototype);
      return buf;
    }
    function fromObject(obj) {
      if (Buffer5.isBuffer(obj)) {
        const len = checked(obj.length) | 0;
        const buf = createBuffer(len);
        if (buf.length === 0) {
          return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
      }
      if (obj.length !== void 0) {
        if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
          return createBuffer(0);
        }
        return fromArrayLike(obj);
      }
      if (obj.type === "Buffer" && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
      }
    }
    function checked(length) {
      if (length >= K_MAX_LENGTH) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
      }
      return length | 0;
    }
    function SlowBuffer(length) {
      if (+length != length) {
        length = 0;
      }
      return Buffer5.alloc(+length);
    }
    Buffer5.isBuffer = function isBuffer(b) {
      return b != null && b._isBuffer === true && b !== Buffer5.prototype;
    };
    Buffer5.compare = function compare(a, b) {
      if (isInstance(a, Uint8Array)) a = Buffer5.from(a, a.offset, a.byteLength);
      if (isInstance(b, Uint8Array)) b = Buffer5.from(b, b.offset, b.byteLength);
      if (!Buffer5.isBuffer(a) || !Buffer5.isBuffer(b)) {
        throw new TypeError(
          'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
        );
      }
      if (a === b) return 0;
      let x = a.length;
      let y = b.length;
      for (let i = 0, len = Math.min(x, y); i < len; ++i) {
        if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break;
        }
      }
      if (x < y) return -1;
      if (y < x) return 1;
      return 0;
    };
    Buffer5.isEncoding = function isEncoding(encoding) {
      switch (String(encoding).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    Buffer5.concat = function concat(list, length) {
      if (!Array.isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      if (list.length === 0) {
        return Buffer5.alloc(0);
      }
      let i;
      if (length === void 0) {
        length = 0;
        for (i = 0; i < list.length; ++i) {
          length += list[i].length;
        }
      }
      const buffer = Buffer5.allocUnsafe(length);
      let pos = 0;
      for (i = 0; i < list.length; ++i) {
        let buf = list[i];
        if (isInstance(buf, Uint8Array)) {
          if (pos + buf.length > buffer.length) {
            if (!Buffer5.isBuffer(buf)) buf = Buffer5.from(buf);
            buf.copy(buffer, pos);
          } else {
            Uint8Array.prototype.set.call(
              buffer,
              buf,
              pos
            );
          }
        } else if (!Buffer5.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        } else {
          buf.copy(buffer, pos);
        }
        pos += buf.length;
      }
      return buffer;
    };
    function byteLength(string, encoding) {
      if (Buffer5.isBuffer(string)) {
        return string.length;
      }
      if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
        return string.byteLength;
      }
      if (typeof string !== "string") {
        throw new TypeError(
          'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string
        );
      }
      const len = string.length;
      const mustMatch = arguments.length > 2 && arguments[2] === true;
      if (!mustMatch && len === 0) return 0;
      let loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "ascii":
          case "latin1":
          case "binary":
            return len;
          case "utf8":
          case "utf-8":
            return utf8ToBytes(string).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return len * 2;
          case "hex":
            return len >>> 1;
          case "base64":
            return base64ToBytes(string).length;
          default:
            if (loweredCase) {
              return mustMatch ? -1 : utf8ToBytes(string).length;
            }
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer5.byteLength = byteLength;
    function slowToString(encoding, start, end) {
      let loweredCase = false;
      if (start === void 0 || start < 0) {
        start = 0;
      }
      if (start > this.length) {
        return "";
      }
      if (end === void 0 || end > this.length) {
        end = this.length;
      }
      if (end <= 0) {
        return "";
      }
      end >>>= 0;
      start >>>= 0;
      if (end <= start) {
        return "";
      }
      if (!encoding) encoding = "utf8";
      while (true) {
        switch (encoding) {
          case "hex":
            return hexSlice(this, start, end);
          case "utf8":
          case "utf-8":
            return utf8Slice(this, start, end);
          case "ascii":
            return asciiSlice(this, start, end);
          case "latin1":
          case "binary":
            return latin1Slice(this, start, end);
          case "base64":
            return base64Slice(this, start, end);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return utf16leSlice(this, start, end);
          default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = (encoding + "").toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer5.prototype._isBuffer = true;
    function swap(b, n2, m) {
      const i = b[n2];
      b[n2] = b[m];
      b[m] = i;
    }
    Buffer5.prototype.swap16 = function swap16() {
      const len = this.length;
      if (len % 2 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      }
      for (let i = 0; i < len; i += 2) {
        swap(this, i, i + 1);
      }
      return this;
    };
    Buffer5.prototype.swap32 = function swap32() {
      const len = this.length;
      if (len % 4 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      }
      for (let i = 0; i < len; i += 4) {
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
      }
      return this;
    };
    Buffer5.prototype.swap64 = function swap64() {
      const len = this.length;
      if (len % 8 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      }
      for (let i = 0; i < len; i += 8) {
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
      }
      return this;
    };
    Buffer5.prototype.toString = function toString() {
      const length = this.length;
      if (length === 0) return "";
      if (arguments.length === 0) return utf8Slice(this, 0, length);
      return slowToString.apply(this, arguments);
    };
    Buffer5.prototype.toLocaleString = Buffer5.prototype.toString;
    Buffer5.prototype.equals = function equals(b) {
      if (!Buffer5.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
      if (this === b) return true;
      return Buffer5.compare(this, b) === 0;
    };
    Buffer5.prototype.inspect = function inspect() {
      let str = "";
      const max = exports.INSPECT_MAX_BYTES;
      str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
      if (this.length > max) str += " ... ";
      return "<Buffer " + str + ">";
    };
    if (customInspectSymbol) {
      Buffer5.prototype[customInspectSymbol] = Buffer5.prototype.inspect;
    }
    Buffer5.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
      if (isInstance(target, Uint8Array)) {
        target = Buffer5.from(target, target.offset, target.byteLength);
      }
      if (!Buffer5.isBuffer(target)) {
        throw new TypeError(
          'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target
        );
      }
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = target ? target.length : 0;
      }
      if (thisStart === void 0) {
        thisStart = 0;
      }
      if (thisEnd === void 0) {
        thisEnd = this.length;
      }
      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError("out of range index");
      }
      if (thisStart >= thisEnd && start >= end) {
        return 0;
      }
      if (thisStart >= thisEnd) {
        return -1;
      }
      if (start >= end) {
        return 1;
      }
      start >>>= 0;
      end >>>= 0;
      thisStart >>>= 0;
      thisEnd >>>= 0;
      if (this === target) return 0;
      let x = thisEnd - thisStart;
      let y = end - start;
      const len = Math.min(x, y);
      const thisCopy = this.slice(thisStart, thisEnd);
      const targetCopy = target.slice(start, end);
      for (let i = 0; i < len; ++i) {
        if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break;
        }
      }
      if (x < y) return -1;
      if (y < x) return 1;
      return 0;
    };
    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
      if (buffer.length === 0) return -1;
      if (typeof byteOffset === "string") {
        encoding = byteOffset;
        byteOffset = 0;
      } else if (byteOffset > 2147483647) {
        byteOffset = 2147483647;
      } else if (byteOffset < -2147483648) {
        byteOffset = -2147483648;
      }
      byteOffset = +byteOffset;
      if (numberIsNaN(byteOffset)) {
        byteOffset = dir ? 0 : buffer.length - 1;
      }
      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
      if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
      } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
      }
      if (typeof val === "string") {
        val = Buffer5.from(val, encoding);
      }
      if (Buffer5.isBuffer(val)) {
        if (val.length === 0) {
          return -1;
        }
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
      } else if (typeof val === "number") {
        val = val & 255;
        if (typeof Uint8Array.prototype.indexOf === "function") {
          if (dir) {
            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
          } else {
            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          }
        }
        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
      }
      throw new TypeError("val must be string, number or Buffer");
    }
    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
      let indexSize = 1;
      let arrLength = arr.length;
      let valLength = val.length;
      if (encoding !== void 0) {
        encoding = String(encoding).toLowerCase();
        if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
          if (arr.length < 2 || val.length < 2) {
            return -1;
          }
          indexSize = 2;
          arrLength /= 2;
          valLength /= 2;
          byteOffset /= 2;
        }
      }
      function read2(buf, i2) {
        if (indexSize === 1) {
          return buf[i2];
        } else {
          return buf.readUInt16BE(i2 * indexSize);
        }
      }
      let i;
      if (dir) {
        let foundIndex = -1;
        for (i = byteOffset; i < arrLength; i++) {
          if (read2(arr, i) === read2(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
          }
        }
      } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for (i = byteOffset; i >= 0; i--) {
          let found = true;
          for (let j = 0; j < valLength; j++) {
            if (read2(arr, i + j) !== read2(val, j)) {
              found = false;
              break;
            }
          }
          if (found) return i;
        }
      }
      return -1;
    }
    Buffer5.prototype.includes = function includes(val, byteOffset, encoding) {
      return this.indexOf(val, byteOffset, encoding) !== -1;
    };
    Buffer5.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };
    Buffer5.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };
    function hexWrite(buf, string, offset, length) {
      offset = Number(offset) || 0;
      const remaining = buf.length - offset;
      if (!length) {
        length = remaining;
      } else {
        length = Number(length);
        if (length > remaining) {
          length = remaining;
        }
      }
      const strLen = string.length;
      if (length > strLen / 2) {
        length = strLen / 2;
      }
      let i;
      for (i = 0; i < length; ++i) {
        const parsed = parseInt(string.substr(i * 2, 2), 16);
        if (numberIsNaN(parsed)) return i;
        buf[offset + i] = parsed;
      }
      return i;
    }
    function utf8Write(buf, string, offset, length) {
      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
    }
    function asciiWrite(buf, string, offset, length) {
      return blitBuffer(asciiToBytes(string), buf, offset, length);
    }
    function base64Write(buf, string, offset, length) {
      return blitBuffer(base64ToBytes(string), buf, offset, length);
    }
    function ucs2Write(buf, string, offset, length) {
      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
    }
    Buffer5.prototype.write = function write(string, offset, length, encoding) {
      if (offset === void 0) {
        encoding = "utf8";
        length = this.length;
        offset = 0;
      } else if (length === void 0 && typeof offset === "string") {
        encoding = offset;
        length = this.length;
        offset = 0;
      } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
          length = length >>> 0;
          if (encoding === void 0) encoding = "utf8";
        } else {
          encoding = length;
          length = void 0;
        }
      } else {
        throw new Error(
          "Buffer.write(string, encoding, offset[, length]) is no longer supported"
        );
      }
      const remaining = this.length - offset;
      if (length === void 0 || length > remaining) length = remaining;
      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
        throw new RangeError("Attempt to write outside buffer bounds");
      }
      if (!encoding) encoding = "utf8";
      let loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "hex":
            return hexWrite(this, string, offset, length);
          case "utf8":
          case "utf-8":
            return utf8Write(this, string, offset, length);
          case "ascii":
          case "latin1":
          case "binary":
            return asciiWrite(this, string, offset, length);
          case "base64":
            return base64Write(this, string, offset, length);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return ucs2Write(this, string, offset, length);
          default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    };
    Buffer5.prototype.toJSON = function toJSON() {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };
    function base64Slice(buf, start, end) {
      if (start === 0 && end === buf.length) {
        return base64.fromByteArray(buf);
      } else {
        return base64.fromByteArray(buf.slice(start, end));
      }
    }
    function utf8Slice(buf, start, end) {
      end = Math.min(buf.length, end);
      const res = [];
      let i = start;
      while (i < end) {
        const firstByte = buf[i];
        let codePoint = null;
        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i + bytesPerSequence <= end) {
          let secondByte, thirdByte, fourthByte, tempCodePoint;
          switch (bytesPerSequence) {
            case 1:
              if (firstByte < 128) {
                codePoint = firstByte;
              }
              break;
            case 2:
              secondByte = buf[i + 1];
              if ((secondByte & 192) === 128) {
                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                if (tempCodePoint > 127) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                  codePoint = tempCodePoint;
                }
              }
          }
        }
        if (codePoint === null) {
          codePoint = 65533;
          bytesPerSequence = 1;
        } else if (codePoint > 65535) {
          codePoint -= 65536;
          res.push(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i += bytesPerSequence;
      }
      return decodeCodePointsArray(res);
    }
    var MAX_ARGUMENTS_LENGTH = 4096;
    function decodeCodePointsArray(codePoints) {
      const len = codePoints.length;
      if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints);
      }
      let res = "";
      let i = 0;
      while (i < len) {
        res += String.fromCharCode.apply(
          String,
          codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
        );
      }
      return res;
    }
    function asciiSlice(buf, start, end) {
      let ret = "";
      end = Math.min(buf.length, end);
      for (let i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i] & 127);
      }
      return ret;
    }
    function latin1Slice(buf, start, end) {
      let ret = "";
      end = Math.min(buf.length, end);
      for (let i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i]);
      }
      return ret;
    }
    function hexSlice(buf, start, end) {
      const len = buf.length;
      if (!start || start < 0) start = 0;
      if (!end || end < 0 || end > len) end = len;
      let out = "";
      for (let i = start; i < end; ++i) {
        out += hexSliceLookupTable[buf[i]];
      }
      return out;
    }
    function utf16leSlice(buf, start, end) {
      const bytes = buf.slice(start, end);
      let res = "";
      for (let i = 0; i < bytes.length - 1; i += 2) {
        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
      }
      return res;
    }
    Buffer5.prototype.slice = function slice(start, end) {
      const len = this.length;
      start = ~~start;
      end = end === void 0 ? len : ~~end;
      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }
      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }
      if (end < start) end = start;
      const newBuf = this.subarray(start, end);
      Object.setPrototypeOf(newBuf, Buffer5.prototype);
      return newBuf;
    };
    function checkOffset(offset, ext, length) {
      if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
      if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
    }
    Buffer5.prototype.readUintLE = Buffer5.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      let val = this[offset];
      let mul = 1;
      let i = 0;
      while (++i < byteLength2 && (mul *= 256)) {
        val += this[offset + i] * mul;
      }
      return val;
    };
    Buffer5.prototype.readUintBE = Buffer5.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        checkOffset(offset, byteLength2, this.length);
      }
      let val = this[offset + --byteLength2];
      let mul = 1;
      while (byteLength2 > 0 && (mul *= 256)) {
        val += this[offset + --byteLength2] * mul;
      }
      return val;
    };
    Buffer5.prototype.readUint8 = Buffer5.prototype.readUInt8 = function readUInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 1, this.length);
      return this[offset];
    };
    Buffer5.prototype.readUint16LE = Buffer5.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] | this[offset + 1] << 8;
    };
    Buffer5.prototype.readUint16BE = Buffer5.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] << 8 | this[offset + 1];
    };
    Buffer5.prototype.readUint32LE = Buffer5.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
    };
    Buffer5.prototype.readUint32BE = Buffer5.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };
    Buffer5.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
      const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
      return BigInt(lo) + (BigInt(hi) << BigInt(32));
    });
    Buffer5.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
      const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
      return (BigInt(hi) << BigInt(32)) + BigInt(lo);
    });
    Buffer5.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      let val = this[offset];
      let mul = 1;
      let i = 0;
      while (++i < byteLength2 && (mul *= 256)) {
        val += this[offset + i] * mul;
      }
      mul *= 128;
      if (val >= mul) val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer5.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      let i = byteLength2;
      let mul = 1;
      let val = this[offset + --i];
      while (i > 0 && (mul *= 256)) {
        val += this[offset + --i] * mul;
      }
      mul *= 128;
      if (val >= mul) val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer5.prototype.readInt8 = function readInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 1, this.length);
      if (!(this[offset] & 128)) return this[offset];
      return (255 - this[offset] + 1) * -1;
    };
    Buffer5.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      const val = this[offset] | this[offset + 1] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer5.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      const val = this[offset + 1] | this[offset] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer5.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };
    Buffer5.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };
    Buffer5.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
      return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
    });
    Buffer5.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const val = (first << 24) + // Overflow
      this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
      return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
    });
    Buffer5.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, true, 23, 4);
    };
    Buffer5.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, false, 23, 4);
    };
    Buffer5.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, true, 52, 8);
    };
    Buffer5.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, false, 52, 8);
    };
    function checkInt(buf, value, offset, ext, max, min) {
      if (!Buffer5.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
      if (offset + ext > buf.length) throw new RangeError("Index out of range");
    }
    Buffer5.prototype.writeUintLE = Buffer5.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      let mul = 1;
      let i = 0;
      this[offset] = value & 255;
      while (++i < byteLength2 && (mul *= 256)) {
        this[offset + i] = value / mul & 255;
      }
      return offset + byteLength2;
    };
    Buffer5.prototype.writeUintBE = Buffer5.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      let i = byteLength2 - 1;
      let mul = 1;
      this[offset + i] = value & 255;
      while (--i >= 0 && (mul *= 256)) {
        this[offset + i] = value / mul & 255;
      }
      return offset + byteLength2;
    };
    Buffer5.prototype.writeUint8 = Buffer5.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 1, 255, 0);
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer5.prototype.writeUint16LE = Buffer5.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer5.prototype.writeUint16BE = Buffer5.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer5.prototype.writeUint32LE = Buffer5.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset + 3] = value >>> 24;
      this[offset + 2] = value >>> 16;
      this[offset + 1] = value >>> 8;
      this[offset] = value & 255;
      return offset + 4;
    };
    Buffer5.prototype.writeUint32BE = Buffer5.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    function wrtBigUInt64LE(buf, value, offset, min, max) {
      checkIntBI(value, min, max, buf, offset, 7);
      let lo = Number(value & BigInt(4294967295));
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      let hi = Number(value >> BigInt(32) & BigInt(4294967295));
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      return offset;
    }
    function wrtBigUInt64BE(buf, value, offset, min, max) {
      checkIntBI(value, min, max, buf, offset, 7);
      let lo = Number(value & BigInt(4294967295));
      buf[offset + 7] = lo;
      lo = lo >> 8;
      buf[offset + 6] = lo;
      lo = lo >> 8;
      buf[offset + 5] = lo;
      lo = lo >> 8;
      buf[offset + 4] = lo;
      let hi = Number(value >> BigInt(32) & BigInt(4294967295));
      buf[offset + 3] = hi;
      hi = hi >> 8;
      buf[offset + 2] = hi;
      hi = hi >> 8;
      buf[offset + 1] = hi;
      hi = hi >> 8;
      buf[offset] = hi;
      return offset + 8;
    }
    Buffer5.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
      return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer5.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
      return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer5.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      let i = 0;
      let mul = 1;
      let sub = 0;
      this[offset] = value & 255;
      while (++i < byteLength2 && (mul *= 256)) {
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
          sub = 1;
        }
        this[offset + i] = (value / mul >> 0) - sub & 255;
      }
      return offset + byteLength2;
    };
    Buffer5.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      let i = byteLength2 - 1;
      let mul = 1;
      let sub = 0;
      this[offset + i] = value & 255;
      while (--i >= 0 && (mul *= 256)) {
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
          sub = 1;
        }
        this[offset + i] = (value / mul >> 0) - sub & 255;
      }
      return offset + byteLength2;
    };
    Buffer5.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 1, 127, -128);
      if (value < 0) value = 255 + value + 1;
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer5.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer5.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer5.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      this[offset + 2] = value >>> 16;
      this[offset + 3] = value >>> 24;
      return offset + 4;
    };
    Buffer5.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
      if (value < 0) value = 4294967295 + value + 1;
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    Buffer5.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
      return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    Buffer5.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
      return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function checkIEEE754(buf, value, offset, ext, max, min) {
      if (offset + ext > buf.length) throw new RangeError("Index out of range");
      if (offset < 0) throw new RangeError("Index out of range");
    }
    function writeFloat(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
      }
      ieee754.write(buf, value, offset, littleEndian, 23, 4);
      return offset + 4;
    }
    Buffer5.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
      return writeFloat(this, value, offset, true, noAssert);
    };
    Buffer5.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
      return writeFloat(this, value, offset, false, noAssert);
    };
    function writeDouble(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
      }
      ieee754.write(buf, value, offset, littleEndian, 52, 8);
      return offset + 8;
    }
    Buffer5.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
      return writeDouble(this, value, offset, true, noAssert);
    };
    Buffer5.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
      return writeDouble(this, value, offset, false, noAssert);
    };
    Buffer5.prototype.copy = function copy(target, targetStart, start, end) {
      if (!Buffer5.isBuffer(target)) throw new TypeError("argument should be a Buffer");
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start;
      if (end === start) return 0;
      if (target.length === 0 || this.length === 0) return 0;
      if (targetStart < 0) {
        throw new RangeError("targetStart out of bounds");
      }
      if (start < 0 || start >= this.length) throw new RangeError("Index out of range");
      if (end < 0) throw new RangeError("sourceEnd out of bounds");
      if (end > this.length) end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }
      const len = end - start;
      if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
        this.copyWithin(targetStart, start, end);
      } else {
        Uint8Array.prototype.set.call(
          target,
          this.subarray(start, end),
          targetStart
        );
      }
      return len;
    };
    Buffer5.prototype.fill = function fill(val, start, end, encoding) {
      if (typeof val === "string") {
        if (typeof start === "string") {
          encoding = start;
          start = 0;
          end = this.length;
        } else if (typeof end === "string") {
          encoding = end;
          end = this.length;
        }
        if (encoding !== void 0 && typeof encoding !== "string") {
          throw new TypeError("encoding must be a string");
        }
        if (typeof encoding === "string" && !Buffer5.isEncoding(encoding)) {
          throw new TypeError("Unknown encoding: " + encoding);
        }
        if (val.length === 1) {
          const code = val.charCodeAt(0);
          if (encoding === "utf8" && code < 128 || encoding === "latin1") {
            val = code;
          }
        }
      } else if (typeof val === "number") {
        val = val & 255;
      } else if (typeof val === "boolean") {
        val = Number(val);
      }
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
      }
      if (end <= start) {
        return this;
      }
      start = start >>> 0;
      end = end === void 0 ? this.length : end >>> 0;
      if (!val) val = 0;
      let i;
      if (typeof val === "number") {
        for (i = start; i < end; ++i) {
          this[i] = val;
        }
      } else {
        const bytes = Buffer5.isBuffer(val) ? val : Buffer5.from(val, encoding);
        const len = bytes.length;
        if (len === 0) {
          throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        }
        for (i = 0; i < end - start; ++i) {
          this[i + start] = bytes[i % len];
        }
      }
      return this;
    };
    var errors = {};
    function E(sym, getMessage, Base) {
      errors[sym] = class NodeError extends Base {
        constructor() {
          super();
          Object.defineProperty(this, "message", {
            value: getMessage.apply(this, arguments),
            writable: true,
            configurable: true
          });
          this.name = `${this.name} [${sym}]`;
          this.stack;
          delete this.name;
        }
        get code() {
          return sym;
        }
        set code(value) {
          Object.defineProperty(this, "code", {
            configurable: true,
            enumerable: true,
            value,
            writable: true
          });
        }
        toString() {
          return `${this.name} [${sym}]: ${this.message}`;
        }
      };
    }
    E(
      "ERR_BUFFER_OUT_OF_BOUNDS",
      function(name) {
        if (name) {
          return `${name} is outside of buffer bounds`;
        }
        return "Attempt to access memory outside buffer bounds";
      },
      RangeError
    );
    E(
      "ERR_INVALID_ARG_TYPE",
      function(name, actual) {
        return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
      },
      TypeError
    );
    E(
      "ERR_OUT_OF_RANGE",
      function(str, range, input) {
        let msg = `The value of "${str}" is out of range.`;
        let received = input;
        if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
          received = addNumericalSeparator(String(input));
        } else if (typeof input === "bigint") {
          received = String(input);
          if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
            received = addNumericalSeparator(received);
          }
          received += "n";
        }
        msg += ` It must be ${range}. Received ${received}`;
        return msg;
      },
      RangeError
    );
    function addNumericalSeparator(val) {
      let res = "";
      let i = val.length;
      const start = val[0] === "-" ? 1 : 0;
      for (; i >= start + 4; i -= 3) {
        res = `_${val.slice(i - 3, i)}${res}`;
      }
      return `${val.slice(0, i)}${res}`;
    }
    function checkBounds(buf, offset, byteLength2) {
      validateNumber(offset, "offset");
      if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
        boundsError(offset, buf.length - (byteLength2 + 1));
      }
    }
    function checkIntBI(value, min, max, buf, offset, byteLength2) {
      if (value > max || value < min) {
        const n2 = typeof min === "bigint" ? "n" : "";
        let range;
        if (byteLength2 > 3) {
          if (min === 0 || min === BigInt(0)) {
            range = `>= 0${n2} and < 2${n2} ** ${(byteLength2 + 1) * 8}${n2}`;
          } else {
            range = `>= -(2${n2} ** ${(byteLength2 + 1) * 8 - 1}${n2}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n2}`;
          }
        } else {
          range = `>= ${min}${n2} and <= ${max}${n2}`;
        }
        throw new errors.ERR_OUT_OF_RANGE("value", range, value);
      }
      checkBounds(buf, offset, byteLength2);
    }
    function validateNumber(value, name) {
      if (typeof value !== "number") {
        throw new errors.ERR_INVALID_ARG_TYPE(name, "number", value);
      }
    }
    function boundsError(value, length, type) {
      if (Math.floor(value) !== value) {
        validateNumber(value, type);
        throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
      }
      if (length < 0) {
        throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
      }
      throw new errors.ERR_OUT_OF_RANGE(
        type || "offset",
        `>= ${type ? 1 : 0} and <= ${length}`,
        value
      );
    }
    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
    function base64clean(str) {
      str = str.split("=")[0];
      str = str.trim().replace(INVALID_BASE64_RE, "");
      if (str.length < 2) return "";
      while (str.length % 4 !== 0) {
        str = str + "=";
      }
      return str;
    }
    function utf8ToBytes(string, units) {
      units = units || Infinity;
      let codePoint;
      const length = string.length;
      let leadSurrogate = null;
      const bytes = [];
      for (let i = 0; i < length; ++i) {
        codePoint = string.charCodeAt(i);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            } else if (i + 1 === length) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0) break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0) break;
          bytes.push(
            codePoint >> 6 | 192,
            codePoint & 63 | 128
          );
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0) break;
          bytes.push(
            codePoint >> 12 | 224,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0) break;
          bytes.push(
            codePoint >> 18 | 240,
            codePoint >> 12 & 63 | 128,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else {
          throw new Error("Invalid code point");
        }
      }
      return bytes;
    }
    function asciiToBytes(str) {
      const byteArray = [];
      for (let i = 0; i < str.length; ++i) {
        byteArray.push(str.charCodeAt(i) & 255);
      }
      return byteArray;
    }
    function utf16leToBytes(str, units) {
      let c, hi, lo;
      const byteArray = [];
      for (let i = 0; i < str.length; ++i) {
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
      }
      return byteArray;
    }
    function base64ToBytes(str) {
      return base64.toByteArray(base64clean(str));
    }
    function blitBuffer(src2, dst, offset, length) {
      let i;
      for (i = 0; i < length; ++i) {
        if (i + offset >= dst.length || i >= src2.length) break;
        dst[i + offset] = src2[i];
      }
      return i;
    }
    function isInstance(obj, type) {
      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
    }
    function numberIsNaN(obj) {
      return obj !== obj;
    }
    var hexSliceLookupTable = function() {
      const alphabet = "0123456789abcdef";
      const table = new Array(256);
      for (let i = 0; i < 16; ++i) {
        const i16 = i * 16;
        for (let j = 0; j < 16; ++j) {
          table[i16 + j] = alphabet[i] + alphabet[j];
        }
      }
      return table;
    }();
    function defineBigIntMethod(fn) {
      return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
    }
    function BufferBigIntNotDefined() {
      throw new Error("BigInt not supported");
    }
  }
});

// node_modules/@stellar/js-xdr/dist/xdr.js
var require_xdr = __commonJS({
  "node_modules/@stellar/js-xdr/dist/xdr.js"(exports, module) {
    !function(t2, e2) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e2() : "function" == typeof define && define.amd ? define([], e2) : "object" == typeof exports ? exports.XDR = e2() : t2.XDR = e2();
    }(exports, () => (() => {
      var t2 = { 616: (t3, e3, r4) => {
        "use strict";
        r4.d(e3, { A: () => i });
        var n2 = r4(287);
        n2.hp.alloc(1).subarray(0, 1) instanceof n2.hp || (n2.hp.prototype.subarray = function(t4, e4) {
          const r5 = Uint8Array.prototype.subarray.call(this, t4, e4);
          return Object.setPrototypeOf(r5, n2.hp.prototype), r5;
        });
        const i = n2.hp;
      }, 281: (t3, e3, r4) => {
        const n2 = r4(164);
        t3.exports = n2;
      }, 164: (t3, e3, r4) => {
        "use strict";
        r4.r(e3), r4.d(e3, { Array: () => F, Bool: () => S, Double: () => L, Enum: () => q, Float: () => O, Hyper: () => U, Int: () => v, LargeInt: () => x, Opaque: () => D, Option: () => X, Quadruple: () => N, Reference: () => G, String: () => M, Struct: () => Y, Union: () => W, UnsignedHyper: () => T, UnsignedInt: () => R, VarArray: () => P, VarOpaque: () => z, Void: () => k, XdrReader: () => f, XdrWriter: () => c, config: () => it });
        class n2 extends TypeError {
          constructor(t4) {
            super(`XDR Write Error: ${t4}`);
          }
        }
        class i extends TypeError {
          constructor(t4) {
            super(`XDR Read Error: ${t4}`);
          }
        }
        class o2 extends TypeError {
          constructor(t4) {
            super(`XDR Type Definition Error: ${t4}`);
          }
        }
        class s extends o2 {
          constructor() {
            super("method not implemented, it should be overloaded in the descendant class.");
          }
        }
        var u = r4(616).A;
        class f {
          constructor(t4) {
            __publicField(this, "_buffer");
            __publicField(this, "_length");
            __publicField(this, "_index");
            if (!u.isBuffer(t4)) {
              if (!(t4 instanceof Array || Array.isArray(t4) || ArrayBuffer.isView(t4))) throw new i(`source invalid: ${t4}`);
              t4 = u.from(t4);
            }
            this._buffer = t4, this._length = t4.length, this._index = 0;
          }
          get eof() {
            return this._index === this._length;
          }
          advance(t4) {
            const e4 = this._index;
            if (this._index += t4, this._length < this._index) throw new i("attempt to read outside the boundary of the buffer");
            const r5 = 4 - (t4 % 4 || 4);
            if (r5 > 0) {
              for (let t5 = 0; t5 < r5; t5++) if (0 !== this._buffer[this._index + t5]) throw new i("invalid padding");
              this._index += r5;
            }
            return e4;
          }
          rewind() {
            this._index = 0;
          }
          read(t4) {
            const e4 = this.advance(t4);
            return this._buffer.subarray(e4, e4 + t4);
          }
          readInt32BE() {
            return this._buffer.readInt32BE(this.advance(4));
          }
          readUInt32BE() {
            return this._buffer.readUInt32BE(this.advance(4));
          }
          readBigInt64BE() {
            return this._buffer.readBigInt64BE(this.advance(8));
          }
          readBigUInt64BE() {
            return this._buffer.readBigUInt64BE(this.advance(8));
          }
          readFloatBE() {
            return this._buffer.readFloatBE(this.advance(4));
          }
          readDoubleBE() {
            return this._buffer.readDoubleBE(this.advance(8));
          }
          ensureInputConsumed() {
            if (this._index !== this._length) throw new i("invalid XDR contract typecast - source buffer not entirely consumed");
          }
        }
        var a = r4(616).A;
        const h = 8192;
        class c {
          constructor(t4) {
            __publicField(this, "_buffer");
            __publicField(this, "_length");
            __publicField(this, "_index", 0);
            "number" == typeof t4 ? t4 = a.allocUnsafe(t4) : t4 instanceof a || (t4 = a.allocUnsafe(h)), this._buffer = t4, this._length = t4.length;
          }
          alloc(t4) {
            const e4 = this._index;
            return this._index += t4, this._length < this._index && this.resize(this._index), e4;
          }
          resize(t4) {
            const e4 = Math.ceil(t4 / h) * h, r5 = a.allocUnsafe(e4);
            this._buffer.copy(r5, 0, 0, this._length), this._buffer = r5, this._length = e4;
          }
          finalize() {
            return this._buffer.subarray(0, this._index);
          }
          toArray() {
            return [...this.finalize()];
          }
          write(t4, e4) {
            if ("string" == typeof t4) {
              const r6 = this.alloc(e4);
              this._buffer.write(t4, r6, "utf8");
            } else {
              t4 instanceof a || (t4 = a.from(t4));
              const r6 = this.alloc(e4);
              t4.copy(this._buffer, r6, 0, e4);
            }
            const r5 = 4 - (e4 % 4 || 4);
            if (r5 > 0) {
              const t5 = this.alloc(r5);
              this._buffer.fill(0, t5, this._index);
            }
          }
          writeInt32BE(t4) {
            const e4 = this.alloc(4);
            this._buffer.writeInt32BE(t4, e4);
          }
          writeUInt32BE(t4) {
            const e4 = this.alloc(4);
            this._buffer.writeUInt32BE(t4, e4);
          }
          writeBigInt64BE(t4) {
            const e4 = this.alloc(8);
            this._buffer.writeBigInt64BE(t4, e4);
          }
          writeBigUInt64BE(t4) {
            const e4 = this.alloc(8);
            this._buffer.writeBigUInt64BE(t4, e4);
          }
          writeFloatBE(t4) {
            const e4 = this.alloc(4);
            this._buffer.writeFloatBE(t4, e4);
          }
          writeDoubleBE(t4) {
            const e4 = this.alloc(8);
            this._buffer.writeDoubleBE(t4, e4);
          }
        }
        __publicField(c, "bufferChunkSize", h);
        var l2 = r4(616).A;
        class p {
          toXDR(t4 = "raw") {
            if (!this.write) return this.constructor.toXDR(this, t4);
            const e4 = new c();
            return this.write(this, e4), w(e4.finalize(), t4);
          }
          fromXDR(t4, e4 = "raw") {
            if (!this.read) return this.constructor.fromXDR(t4, e4);
            const r5 = new f(m(t4, e4)), n3 = this.read(r5);
            return r5.ensureInputConsumed(), n3;
          }
          validateXDR(t4, e4 = "raw") {
            try {
              return this.fromXDR(t4, e4), true;
            } catch (t5) {
              return false;
            }
          }
          static toXDR(t4, e4 = "raw") {
            const r5 = new c();
            return this.write(t4, r5), w(r5.finalize(), e4);
          }
          static fromXDR(t4, e4 = "raw") {
            const r5 = new f(m(t4, e4)), n3 = this.read(r5);
            return r5.ensureInputConsumed(), n3;
          }
          static validateXDR(t4, e4 = "raw") {
            try {
              return this.fromXDR(t4, e4), true;
            } catch (t5) {
              return false;
            }
          }
        }
        class d extends p {
          static read(t4) {
            throw new s();
          }
          static write(t4, e4) {
            throw new s();
          }
          static isValid(t4) {
            return false;
          }
        }
        class g extends p {
          isValid(t4) {
            return false;
          }
        }
        class y extends TypeError {
          constructor(t4) {
            super(`Invalid format ${t4}, must be one of "raw", "hex", "base64"`);
          }
        }
        function w(t4, e4) {
          switch (e4) {
            case "raw":
              return t4;
            case "hex":
              return t4.toString("hex");
            case "base64":
              return t4.toString("base64");
            default:
              throw new y(e4);
          }
        }
        function m(t4, e4) {
          switch (e4) {
            case "raw":
              return t4;
            case "hex":
              return l2.from(t4, "hex");
            case "base64":
              return l2.from(t4, "base64");
            default:
              throw new y(e4);
          }
        }
        function b(t4, e4) {
          return null != t4 && (t4 instanceof e4 || _(t4, e4) && "function" == typeof t4.constructor.read && "function" == typeof t4.constructor.write && _(t4, "XdrType"));
        }
        function _(t4, e4) {
          do {
            if (t4.constructor.name === e4) return true;
          } while (t4 = Object.getPrototypeOf(t4));
          return false;
        }
        const B = 2147483647, E = -2147483648;
        class v extends d {
          static read(t4) {
            return t4.readInt32BE();
          }
          static write(t4, e4) {
            if ("number" != typeof t4) throw new n2("not a number");
            if ((0 | t4) !== t4) throw new n2("invalid i32 value");
            e4.writeInt32BE(t4);
          }
          static isValid(t4) {
            return "number" == typeof t4 && (0 | t4) === t4 && (t4 >= E && t4 <= B);
          }
        }
        function A(t4, e4, r5) {
          if ("bigint" != typeof t4) throw new TypeError("Expected bigint 'value', got " + typeof t4);
          const n3 = e4 / r5;
          if (1 === n3) return [t4];
          if (r5 < 32 || r5 > 128 || 2 !== n3 && 4 !== n3 && 8 !== n3) throw new TypeError(`invalid bigint (${t4}) and slice size (${e4} -> ${r5}) combination`);
          const i2 = BigInt(r5), o3 = new Array(n3);
          for (let e5 = 0; e5 < n3; e5++) o3[e5] = BigInt.asIntN(r5, t4), t4 >>= i2;
          return o3;
        }
        function I(t4, e4) {
          if (e4) return [0n, (1n << BigInt(t4)) - 1n];
          const r5 = 1n << BigInt(t4 - 1);
          return [0n - r5, r5 - 1n];
        }
        v.MAX_VALUE = B, v.MIN_VALUE = 2147483648;
        class x extends d {
          constructor(t4) {
            super(), this._value = function(t5, e4, r5) {
              t5 instanceof Array ? t5.length && t5[0] instanceof Array && (t5 = t5[0]) : t5 = [t5];
              const n3 = e4 / t5.length;
              switch (n3) {
                case 32:
                case 64:
                case 128:
                case 256:
                  break;
                default:
                  throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${t5}`);
              }
              try {
                for (let e5 = 0; e5 < t5.length; e5++) "bigint" != typeof t5[e5] && (t5[e5] = BigInt(t5[e5].valueOf()));
              } catch (e5) {
                throw new TypeError(`expected bigint-like values, got: ${t5} (${e5})`);
              }
              if (r5 && 1 === t5.length && t5[0] < 0n) throw new RangeError(`expected a positive value, got: ${t5}`);
              let i2 = BigInt.asUintN(n3, t5[0]);
              for (let e5 = 1; e5 < t5.length; e5++) i2 |= BigInt.asUintN(n3, t5[e5]) << BigInt(e5 * n3);
              r5 || (i2 = BigInt.asIntN(e4, i2));
              const [o3, s2] = I(e4, r5);
              if (i2 >= o3 && i2 <= s2) return i2;
              throw new TypeError(`bigint values [${t5}] for ${function(t6, e5) {
                return `${e5 ? "u" : "i"}${t6}`;
              }(e4, r5)} out of range [${o3}, ${s2}]: ${i2}`);
            }(t4, this.size, this.unsigned);
          }
          get unsigned() {
            throw new s();
          }
          get size() {
            throw new s();
          }
          slice(t4) {
            return A(this._value, this.size, t4);
          }
          toString() {
            return this._value.toString();
          }
          toJSON() {
            return { _value: this._value.toString() };
          }
          toBigInt() {
            return BigInt(this._value);
          }
          static read(t4) {
            const { size: e4 } = this.prototype;
            return 64 === e4 ? new this(t4.readBigUInt64BE()) : new this(...Array.from({ length: e4 / 64 }, () => t4.readBigUInt64BE()).reverse());
          }
          static write(t4, e4) {
            if (t4 instanceof this) t4 = t4._value;
            else if ("bigint" != typeof t4 || t4 > this.MAX_VALUE || t4 < this.MIN_VALUE) throw new n2(`${t4} is not a ${this.name}`);
            const { unsigned: r5, size: i2 } = this.prototype;
            if (64 === i2) r5 ? e4.writeBigUInt64BE(t4) : e4.writeBigInt64BE(t4);
            else for (const n3 of A(t4, i2, 64).reverse()) r5 ? e4.writeBigUInt64BE(n3) : e4.writeBigInt64BE(n3);
          }
          static isValid(t4) {
            return "bigint" == typeof t4 || t4 instanceof this;
          }
          static fromString(t4) {
            return new this(t4);
          }
          static defineIntBoundaries() {
            const [t4, e4] = I(this.prototype.size, this.prototype.unsigned);
            this.MIN_VALUE = t4, this.MAX_VALUE = e4;
          }
        }
        __publicField(x, "MAX_VALUE", 0n);
        __publicField(x, "MIN_VALUE", 0n);
        class U extends x {
          constructor(...t4) {
            super(t4);
          }
          get low() {
            return Number(0xffffffffn & this._value) | 0;
          }
          get high() {
            return Number(this._value >> 32n) | 0;
          }
          get size() {
            return 64;
          }
          get unsigned() {
            return false;
          }
          static fromBits(t4, e4) {
            return new this(t4, e4);
          }
        }
        U.defineIntBoundaries();
        const $ = 4294967295;
        class R extends d {
          static read(t4) {
            return t4.readUInt32BE();
          }
          static write(t4, e4) {
            if ("number" != typeof t4 || !(t4 >= 0 && t4 <= $) || t4 % 1 != 0) throw new n2("invalid u32 value");
            e4.writeUInt32BE(t4);
          }
          static isValid(t4) {
            return "number" == typeof t4 && t4 % 1 == 0 && (t4 >= 0 && t4 <= $);
          }
        }
        R.MAX_VALUE = $, R.MIN_VALUE = 0;
        class T extends x {
          constructor(...t4) {
            super(t4);
          }
          get low() {
            return Number(0xffffffffn & this._value) | 0;
          }
          get high() {
            return Number(this._value >> 32n) | 0;
          }
          get size() {
            return 64;
          }
          get unsigned() {
            return true;
          }
          static fromBits(t4, e4) {
            return new this(t4, e4);
          }
        }
        T.defineIntBoundaries();
        class O extends d {
          static read(t4) {
            return t4.readFloatBE();
          }
          static write(t4, e4) {
            if ("number" != typeof t4) throw new n2("not a number");
            e4.writeFloatBE(t4);
          }
          static isValid(t4) {
            return "number" == typeof t4;
          }
        }
        class L extends d {
          static read(t4) {
            return t4.readDoubleBE();
          }
          static write(t4, e4) {
            if ("number" != typeof t4) throw new n2("not a number");
            e4.writeDoubleBE(t4);
          }
          static isValid(t4) {
            return "number" == typeof t4;
          }
        }
        class N extends d {
          static read() {
            throw new o2("quadruple not supported");
          }
          static write() {
            throw new o2("quadruple not supported");
          }
          static isValid() {
            return false;
          }
        }
        class S extends d {
          static read(t4) {
            const e4 = v.read(t4);
            switch (e4) {
              case 0:
                return false;
              case 1:
                return true;
              default:
                throw new i(`got ${e4} when trying to read a bool`);
            }
          }
          static write(t4, e4) {
            const r5 = t4 ? 1 : 0;
            v.write(r5, e4);
          }
          static isValid(t4) {
            return "boolean" == typeof t4;
          }
        }
        var V = r4(616).A;
        class M extends g {
          constructor(t4 = R.MAX_VALUE) {
            super(), this._maxLength = t4;
          }
          read(t4) {
            const e4 = R.read(t4);
            if (e4 > this._maxLength) throw new i(`saw ${e4} length String, max allowed is ${this._maxLength}`);
            return t4.read(e4);
          }
          readString(t4) {
            return this.read(t4).toString("utf8");
          }
          write(t4, e4) {
            const r5 = "string" == typeof t4 ? V.byteLength(t4, "utf8") : t4.length;
            if (r5 > this._maxLength) throw new n2(`got ${t4.length} bytes, max allowed is ${this._maxLength}`);
            R.write(r5, e4), e4.write(t4, r5);
          }
          isValid(t4) {
            return "string" == typeof t4 ? V.byteLength(t4, "utf8") <= this._maxLength : !!(t4 instanceof Array || V.isBuffer(t4)) && t4.length <= this._maxLength;
          }
        }
        var C = r4(616).A;
        class D extends g {
          constructor(t4) {
            super(), this._length = t4;
          }
          read(t4) {
            return t4.read(this._length);
          }
          write(t4, e4) {
            const { length: r5 } = t4;
            if (r5 !== this._length) throw new n2(`got ${t4.length} bytes, expected ${this._length}`);
            e4.write(t4, r5);
          }
          isValid(t4) {
            return C.isBuffer(t4) && t4.length === this._length;
          }
        }
        var j = r4(616).A;
        class z extends g {
          constructor(t4 = R.MAX_VALUE) {
            super(), this._maxLength = t4;
          }
          read(t4) {
            const e4 = R.read(t4);
            if (e4 > this._maxLength) throw new i(`saw ${e4} length VarOpaque, max allowed is ${this._maxLength}`);
            return t4.read(e4);
          }
          write(t4, e4) {
            const { length: r5 } = t4;
            if (t4.length > this._maxLength) throw new n2(`got ${t4.length} bytes, max allowed is ${this._maxLength}`);
            R.write(r5, e4), e4.write(t4, r5);
          }
          isValid(t4) {
            return j.isBuffer(t4) && t4.length <= this._maxLength;
          }
        }
        class F extends g {
          constructor(t4, e4) {
            super(), this._childType = t4, this._length = e4;
          }
          read(t4) {
            const e4 = new r4.g.Array(this._length);
            for (let r5 = 0; r5 < this._length; r5++) e4[r5] = this._childType.read(t4);
            return e4;
          }
          write(t4, e4) {
            if (!r4.g.Array.isArray(t4)) throw new n2("value is not array");
            if (t4.length !== this._length) throw new n2(`got array of size ${t4.length}, expected ${this._length}`);
            for (const r5 of t4) this._childType.write(r5, e4);
          }
          isValid(t4) {
            if (!(t4 instanceof r4.g.Array) || t4.length !== this._length) return false;
            for (const e4 of t4) if (!this._childType.isValid(e4)) return false;
            return true;
          }
        }
        class P extends g {
          constructor(t4, e4 = R.MAX_VALUE) {
            super(), this._childType = t4, this._maxLength = e4;
          }
          read(t4) {
            const e4 = R.read(t4);
            if (e4 > this._maxLength) throw new i(`saw ${e4} length VarArray, max allowed is ${this._maxLength}`);
            const r5 = new Array(e4);
            for (let n3 = 0; n3 < e4; n3++) r5[n3] = this._childType.read(t4);
            return r5;
          }
          write(t4, e4) {
            if (!(t4 instanceof Array)) throw new n2("value is not array");
            if (t4.length > this._maxLength) throw new n2(`got array of size ${t4.length}, max allowed is ${this._maxLength}`);
            R.write(t4.length, e4);
            for (const r5 of t4) this._childType.write(r5, e4);
          }
          isValid(t4) {
            if (!(t4 instanceof Array) || t4.length > this._maxLength) return false;
            for (const e4 of t4) if (!this._childType.isValid(e4)) return false;
            return true;
          }
        }
        class X extends d {
          constructor(t4) {
            super(), this._childType = t4;
          }
          read(t4) {
            if (S.read(t4)) return this._childType.read(t4);
          }
          write(t4, e4) {
            const r5 = null != t4;
            S.write(r5, e4), r5 && this._childType.write(t4, e4);
          }
          isValid(t4) {
            return null == t4 || this._childType.isValid(t4);
          }
        }
        class k extends d {
          static read() {
          }
          static write(t4) {
            if (void 0 !== t4) throw new n2("trying to write value to a void slot");
          }
          static isValid(t4) {
            return void 0 === t4;
          }
        }
        class q extends d {
          constructor(t4, e4) {
            super(), this.name = t4, this.value = e4;
          }
          static read(t4) {
            const e4 = v.read(t4), r5 = this._byValue[e4];
            if (void 0 === r5) throw new i(`unknown ${this.enumName} member for value ${e4}`);
            return r5;
          }
          static write(t4, e4) {
            if (!this.isValid(t4)) throw new n2(`${t4} has enum name ${t4 == null ? void 0 : t4.enumName}, not ${this.enumName}: ${JSON.stringify(t4)}`);
            v.write(t4.value, e4);
          }
          static isValid(t4) {
            var _a;
            return ((_a = t4 == null ? void 0 : t4.constructor) == null ? void 0 : _a.enumName) === this.enumName || b(t4, this);
          }
          static members() {
            return this._members;
          }
          static values() {
            return Object.values(this._members);
          }
          static fromName(t4) {
            const e4 = this._members[t4];
            if (!e4) throw new TypeError(`${t4} is not a member of ${this.enumName}`);
            return e4;
          }
          static fromValue(t4) {
            const e4 = this._byValue[t4];
            if (void 0 === e4) throw new TypeError(`${t4} is not a value of any member of ${this.enumName}`);
            return e4;
          }
          static create(t4, e4, r5) {
            const n3 = class extends q {
            };
            n3.enumName = e4, t4.results[e4] = n3, n3._members = {}, n3._byValue = {};
            for (const [t5, e5] of Object.entries(r5)) {
              const r6 = new n3(t5, e5);
              n3._members[t5] = r6, n3._byValue[e5] = r6, n3[t5] = () => r6;
            }
            return n3;
          }
        }
        class G extends d {
          resolve() {
            throw new o2('"resolve" method should be implemented in the descendant class');
          }
        }
        class Y extends g {
          constructor(t4) {
            super(), this._attributes = t4 || {};
          }
          static read(t4) {
            const e4 = {};
            for (const [r5, n3] of this._fields) e4[r5] = n3.read(t4);
            return new this(e4);
          }
          static write(t4, e4) {
            var _a;
            if (!this.isValid(t4)) throw new n2(`${t4} has struct name ${(_a = t4 == null ? void 0 : t4.constructor) == null ? void 0 : _a.structName}, not ${this.structName}: ${JSON.stringify(t4)}`);
            for (const [r5, n3] of this._fields) {
              const i2 = t4._attributes[r5];
              n3.write(i2, e4);
            }
          }
          static isValid(t4) {
            var _a;
            return ((_a = t4 == null ? void 0 : t4.constructor) == null ? void 0 : _a.structName) === this.structName || b(t4, this);
          }
          static create(t4, e4, r5) {
            const n3 = class extends Y {
            };
            n3.structName = e4, t4.results[e4] = n3;
            const i2 = new Array(r5.length);
            for (let e5 = 0; e5 < r5.length; e5++) {
              const o3 = r5[e5], s2 = o3[0];
              let u2 = o3[1];
              u2 instanceof G && (u2 = u2.resolve(t4)), i2[e5] = [s2, u2], n3.prototype[s2] = J(s2);
            }
            return n3._fields = i2, n3;
          }
        }
        function J(t4) {
          return function(e4) {
            return void 0 !== e4 && (this._attributes[t4] = e4), this._attributes[t4];
          };
        }
        class W extends g {
          constructor(t4, e4) {
            super(), this.set(t4, e4);
          }
          set(t4, e4) {
            "string" == typeof t4 && (t4 = this.constructor._switchOn.fromName(t4)), this._switch = t4;
            const r5 = this.constructor.armForSwitch(this._switch);
            this._arm = r5, this._armType = r5 === k ? k : this.constructor._arms[r5], this._value = e4;
          }
          get(t4 = this._arm) {
            if (this._arm !== k && this._arm !== t4) throw new TypeError(`${t4} not set`);
            return this._value;
          }
          switch() {
            return this._switch;
          }
          arm() {
            return this._arm;
          }
          armType() {
            return this._armType;
          }
          value() {
            return this._value;
          }
          static armForSwitch(t4) {
            const e4 = this._switches.get(t4);
            if (void 0 !== e4) return e4;
            if (this._defaultArm) return this._defaultArm;
            throw new TypeError(`Bad union switch: ${t4}`);
          }
          static armTypeForArm(t4) {
            return t4 === k ? k : this._arms[t4];
          }
          static read(t4) {
            const e4 = this._switchOn.read(t4), r5 = this.armForSwitch(e4), n3 = r5 === k ? k : this._arms[r5];
            let i2;
            return i2 = void 0 !== n3 ? n3.read(t4) : r5.read(t4), new this(e4, i2);
          }
          static write(t4, e4) {
            if (!this.isValid(t4)) throw new n2(`${t4} has union name ${t4 == null ? void 0 : t4.unionName}, not ${this.unionName}: ${JSON.stringify(t4)}`);
            this._switchOn.write(t4.switch(), e4), t4.armType().write(t4.value(), e4);
          }
          static isValid(t4) {
            var _a;
            return ((_a = t4 == null ? void 0 : t4.constructor) == null ? void 0 : _a.unionName) === this.unionName || b(t4, this);
          }
          static create(t4, e4, r5) {
            const n3 = class extends W {
            };
            n3.unionName = e4, t4.results[e4] = n3, r5.switchOn instanceof G ? n3._switchOn = r5.switchOn.resolve(t4) : n3._switchOn = r5.switchOn, n3._switches = /* @__PURE__ */ new Map(), n3._arms = {};
            let i2 = r5.defaultArm;
            i2 instanceof G && (i2 = i2.resolve(t4)), n3._defaultArm = i2;
            for (const [t5, e5] of r5.switches) {
              const r6 = "string" == typeof t5 ? n3._switchOn.fromName(t5) : t5;
              n3._switches.set(r6, e5);
            }
            if (void 0 !== n3._switchOn.values) for (const t5 of n3._switchOn.values()) n3[t5.name] = function(e5) {
              return new n3(t5, e5);
            }, n3.prototype[t5.name] = function(e5) {
              return this.set(t5, e5);
            };
            if (r5.arms) for (const [e5, i3] of Object.entries(r5.arms)) n3._arms[e5] = i3 instanceof G ? i3.resolve(t4) : i3, i3 !== k && (n3.prototype[e5] = function() {
              return this.get(e5);
            });
            return n3;
          }
        }
        class H extends G {
          constructor(t4) {
            super(), this.name = t4;
          }
          resolve(t4) {
            return t4.definitions[this.name].resolve(t4);
          }
        }
        class Q extends G {
          constructor(t4, e4, r5 = false) {
            super(), this.childReference = t4, this.length = e4, this.variable = r5;
          }
          resolve(t4) {
            let e4 = this.childReference, r5 = this.length;
            return e4 instanceof G && (e4 = e4.resolve(t4)), r5 instanceof G && (r5 = r5.resolve(t4)), this.variable ? new P(e4, r5) : new F(e4, r5);
          }
        }
        class Z extends G {
          constructor(t4) {
            super(), this.childReference = t4, this.name = t4.name;
          }
          resolve(t4) {
            let e4 = this.childReference;
            return e4 instanceof G && (e4 = e4.resolve(t4)), new X(e4);
          }
        }
        class K extends G {
          constructor(t4, e4) {
            super(), this.sizedType = t4, this.length = e4;
          }
          resolve(t4) {
            let e4 = this.length;
            return e4 instanceof G && (e4 = e4.resolve(t4)), new this.sizedType(e4);
          }
        }
        class tt {
          constructor(t4, e4, r5) {
            this.constructor = t4, this.name = e4, this.config = r5;
          }
          resolve(t4) {
            return this.name in t4.results ? t4.results[this.name] : this.constructor(t4, this.name, this.config);
          }
        }
        function et(t4, e4, r5) {
          return r5 instanceof G && (r5 = r5.resolve(t4)), t4.results[e4] = r5, r5;
        }
        function rt(t4, e4, r5) {
          return t4.results[e4] = r5, r5;
        }
        class nt {
          constructor(t4) {
            this._destination = t4, this._definitions = {};
          }
          enum(t4, e4) {
            const r5 = new tt(q.create, t4, e4);
            this.define(t4, r5);
          }
          struct(t4, e4) {
            const r5 = new tt(Y.create, t4, e4);
            this.define(t4, r5);
          }
          union(t4, e4) {
            const r5 = new tt(W.create, t4, e4);
            this.define(t4, r5);
          }
          typedef(t4, e4) {
            const r5 = new tt(et, t4, e4);
            this.define(t4, r5);
          }
          const(t4, e4) {
            const r5 = new tt(rt, t4, e4);
            this.define(t4, r5);
          }
          void() {
            return k;
          }
          bool() {
            return S;
          }
          int() {
            return v;
          }
          hyper() {
            return U;
          }
          uint() {
            return R;
          }
          uhyper() {
            return T;
          }
          float() {
            return O;
          }
          double() {
            return L;
          }
          quadruple() {
            return N;
          }
          string(t4) {
            return new K(M, t4);
          }
          opaque(t4) {
            return new K(D, t4);
          }
          varOpaque(t4) {
            return new K(z, t4);
          }
          array(t4, e4) {
            return new Q(t4, e4);
          }
          varArray(t4, e4) {
            return new Q(t4, e4, true);
          }
          option(t4) {
            return new Z(t4);
          }
          define(t4, e4) {
            if (void 0 !== this._destination[t4]) throw new o2(`${t4} is already defined`);
            this._definitions[t4] = e4;
          }
          lookup(t4) {
            return new H(t4);
          }
          resolve() {
            for (const t4 of Object.values(this._definitions)) t4.resolve({ definitions: this._definitions, results: this._destination });
          }
        }
        function it(t4, e4 = {}) {
          if (t4) {
            const r5 = new nt(e4);
            t4(r5), r5.resolve();
          }
          return e4;
        }
      }, 526: (t3, e3) => {
        "use strict";
        e3.byteLength = function(t4) {
          var e4 = u(t4), r5 = e4[0], n3 = e4[1];
          return 3 * (r5 + n3) / 4 - n3;
        }, e3.toByteArray = function(t4) {
          var e4, r5, o3 = u(t4), s2 = o3[0], f2 = o3[1], a = new i(function(t5, e5, r6) {
            return 3 * (e5 + r6) / 4 - r6;
          }(0, s2, f2)), h = 0, c = f2 > 0 ? s2 - 4 : s2;
          for (r5 = 0; r5 < c; r5 += 4) e4 = n2[t4.charCodeAt(r5)] << 18 | n2[t4.charCodeAt(r5 + 1)] << 12 | n2[t4.charCodeAt(r5 + 2)] << 6 | n2[t4.charCodeAt(r5 + 3)], a[h++] = e4 >> 16 & 255, a[h++] = e4 >> 8 & 255, a[h++] = 255 & e4;
          2 === f2 && (e4 = n2[t4.charCodeAt(r5)] << 2 | n2[t4.charCodeAt(r5 + 1)] >> 4, a[h++] = 255 & e4);
          1 === f2 && (e4 = n2[t4.charCodeAt(r5)] << 10 | n2[t4.charCodeAt(r5 + 1)] << 4 | n2[t4.charCodeAt(r5 + 2)] >> 2, a[h++] = e4 >> 8 & 255, a[h++] = 255 & e4);
          return a;
        }, e3.fromByteArray = function(t4) {
          for (var e4, n3 = t4.length, i2 = n3 % 3, o3 = [], s2 = 16383, u2 = 0, a = n3 - i2; u2 < a; u2 += s2) o3.push(f(t4, u2, u2 + s2 > a ? a : u2 + s2));
          1 === i2 ? (e4 = t4[n3 - 1], o3.push(r4[e4 >> 2] + r4[e4 << 4 & 63] + "==")) : 2 === i2 && (e4 = (t4[n3 - 2] << 8) + t4[n3 - 1], o3.push(r4[e4 >> 10] + r4[e4 >> 4 & 63] + r4[e4 << 2 & 63] + "="));
          return o3.join("");
        };
        for (var r4 = [], n2 = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0; s < 64; ++s) r4[s] = o2[s], n2[o2.charCodeAt(s)] = s;
        function u(t4) {
          var e4 = t4.length;
          if (e4 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var r5 = t4.indexOf("=");
          return -1 === r5 && (r5 = e4), [r5, r5 === e4 ? 0 : 4 - r5 % 4];
        }
        function f(t4, e4, n3) {
          for (var i2, o3, s2 = [], u2 = e4; u2 < n3; u2 += 3) i2 = (t4[u2] << 16 & 16711680) + (t4[u2 + 1] << 8 & 65280) + (255 & t4[u2 + 2]), s2.push(r4[(o3 = i2) >> 18 & 63] + r4[o3 >> 12 & 63] + r4[o3 >> 6 & 63] + r4[63 & o3]);
          return s2.join("");
        }
        n2["-".charCodeAt(0)] = 62, n2["_".charCodeAt(0)] = 63;
      }, 287: (t3, e3, r4) => {
        "use strict";
        const n2 = r4(526), i = r4(251), o2 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        e3.hp = f, e3.IS = 50;
        const s = 2147483647;
        function u(t4) {
          if (t4 > s) throw new RangeError('The value "' + t4 + '" is invalid for option "size"');
          const e4 = new Uint8Array(t4);
          return Object.setPrototypeOf(e4, f.prototype), e4;
        }
        function f(t4, e4, r5) {
          if ("number" == typeof t4) {
            if ("string" == typeof e4) throw new TypeError('The "string" argument must be of type string. Received type number');
            return c(t4);
          }
          return a(t4, e4, r5);
        }
        function a(t4, e4, r5) {
          if ("string" == typeof t4) return function(t5, e5) {
            "string" == typeof e5 && "" !== e5 || (e5 = "utf8");
            if (!f.isEncoding(e5)) throw new TypeError("Unknown encoding: " + e5);
            const r6 = 0 | g(t5, e5);
            let n4 = u(r6);
            const i3 = n4.write(t5, e5);
            i3 !== r6 && (n4 = n4.slice(0, i3));
            return n4;
          }(t4, e4);
          if (ArrayBuffer.isView(t4)) return function(t5) {
            if (W(t5, Uint8Array)) {
              const e5 = new Uint8Array(t5);
              return p(e5.buffer, e5.byteOffset, e5.byteLength);
            }
            return l2(t5);
          }(t4);
          if (null == t4) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t4);
          if (W(t4, ArrayBuffer) || t4 && W(t4.buffer, ArrayBuffer)) return p(t4, e4, r5);
          if ("undefined" != typeof SharedArrayBuffer && (W(t4, SharedArrayBuffer) || t4 && W(t4.buffer, SharedArrayBuffer))) return p(t4, e4, r5);
          if ("number" == typeof t4) throw new TypeError('The "value" argument must not be of type number. Received type number');
          const n3 = t4.valueOf && t4.valueOf();
          if (null != n3 && n3 !== t4) return f.from(n3, e4, r5);
          const i2 = function(t5) {
            if (f.isBuffer(t5)) {
              const e5 = 0 | d(t5.length), r6 = u(e5);
              return 0 === r6.length || t5.copy(r6, 0, 0, e5), r6;
            }
            if (void 0 !== t5.length) return "number" != typeof t5.length || H(t5.length) ? u(0) : l2(t5);
            if ("Buffer" === t5.type && Array.isArray(t5.data)) return l2(t5.data);
          }(t4);
          if (i2) return i2;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t4[Symbol.toPrimitive]) return f.from(t4[Symbol.toPrimitive]("string"), e4, r5);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t4);
        }
        function h(t4) {
          if ("number" != typeof t4) throw new TypeError('"size" argument must be of type number');
          if (t4 < 0) throw new RangeError('The value "' + t4 + '" is invalid for option "size"');
        }
        function c(t4) {
          return h(t4), u(t4 < 0 ? 0 : 0 | d(t4));
        }
        function l2(t4) {
          const e4 = t4.length < 0 ? 0 : 0 | d(t4.length), r5 = u(e4);
          for (let n3 = 0; n3 < e4; n3 += 1) r5[n3] = 255 & t4[n3];
          return r5;
        }
        function p(t4, e4, r5) {
          if (e4 < 0 || t4.byteLength < e4) throw new RangeError('"offset" is outside of buffer bounds');
          if (t4.byteLength < e4 + (r5 || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let n3;
          return n3 = void 0 === e4 && void 0 === r5 ? new Uint8Array(t4) : void 0 === r5 ? new Uint8Array(t4, e4) : new Uint8Array(t4, e4, r5), Object.setPrototypeOf(n3, f.prototype), n3;
        }
        function d(t4) {
          if (t4 >= s) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
          return 0 | t4;
        }
        function g(t4, e4) {
          if (f.isBuffer(t4)) return t4.length;
          if (ArrayBuffer.isView(t4) || W(t4, ArrayBuffer)) return t4.byteLength;
          if ("string" != typeof t4) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t4);
          const r5 = t4.length, n3 = arguments.length > 2 && true === arguments[2];
          if (!n3 && 0 === r5) return 0;
          let i2 = false;
          for (; ; ) switch (e4) {
            case "ascii":
            case "latin1":
            case "binary":
              return r5;
            case "utf8":
            case "utf-8":
              return G(t4).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r5;
            case "hex":
              return r5 >>> 1;
            case "base64":
              return Y(t4).length;
            default:
              if (i2) return n3 ? -1 : G(t4).length;
              e4 = ("" + e4).toLowerCase(), i2 = true;
          }
        }
        function y(t4, e4, r5) {
          let n3 = false;
          if ((void 0 === e4 || e4 < 0) && (e4 = 0), e4 > this.length) return "";
          if ((void 0 === r5 || r5 > this.length) && (r5 = this.length), r5 <= 0) return "";
          if ((r5 >>>= 0) <= (e4 >>>= 0)) return "";
          for (t4 || (t4 = "utf8"); ; ) switch (t4) {
            case "hex":
              return T(this, e4, r5);
            case "utf8":
            case "utf-8":
              return x(this, e4, r5);
            case "ascii":
              return $(this, e4, r5);
            case "latin1":
            case "binary":
              return R(this, e4, r5);
            case "base64":
              return I(this, e4, r5);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return O(this, e4, r5);
            default:
              if (n3) throw new TypeError("Unknown encoding: " + t4);
              t4 = (t4 + "").toLowerCase(), n3 = true;
          }
        }
        function w(t4, e4, r5) {
          const n3 = t4[e4];
          t4[e4] = t4[r5], t4[r5] = n3;
        }
        function m(t4, e4, r5, n3, i2) {
          if (0 === t4.length) return -1;
          if ("string" == typeof r5 ? (n3 = r5, r5 = 0) : r5 > 2147483647 ? r5 = 2147483647 : r5 < -2147483648 && (r5 = -2147483648), H(r5 = +r5) && (r5 = i2 ? 0 : t4.length - 1), r5 < 0 && (r5 = t4.length + r5), r5 >= t4.length) {
            if (i2) return -1;
            r5 = t4.length - 1;
          } else if (r5 < 0) {
            if (!i2) return -1;
            r5 = 0;
          }
          if ("string" == typeof e4 && (e4 = f.from(e4, n3)), f.isBuffer(e4)) return 0 === e4.length ? -1 : b(t4, e4, r5, n3, i2);
          if ("number" == typeof e4) return e4 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(t4, e4, r5) : Uint8Array.prototype.lastIndexOf.call(t4, e4, r5) : b(t4, [e4], r5, n3, i2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function b(t4, e4, r5, n3, i2) {
          let o3, s2 = 1, u2 = t4.length, f2 = e4.length;
          if (void 0 !== n3 && ("ucs2" === (n3 = String(n3).toLowerCase()) || "ucs-2" === n3 || "utf16le" === n3 || "utf-16le" === n3)) {
            if (t4.length < 2 || e4.length < 2) return -1;
            s2 = 2, u2 /= 2, f2 /= 2, r5 /= 2;
          }
          function a2(t5, e5) {
            return 1 === s2 ? t5[e5] : t5.readUInt16BE(e5 * s2);
          }
          if (i2) {
            let n4 = -1;
            for (o3 = r5; o3 < u2; o3++) if (a2(t4, o3) === a2(e4, -1 === n4 ? 0 : o3 - n4)) {
              if (-1 === n4 && (n4 = o3), o3 - n4 + 1 === f2) return n4 * s2;
            } else -1 !== n4 && (o3 -= o3 - n4), n4 = -1;
          } else for (r5 + f2 > u2 && (r5 = u2 - f2), o3 = r5; o3 >= 0; o3--) {
            let r6 = true;
            for (let n4 = 0; n4 < f2; n4++) if (a2(t4, o3 + n4) !== a2(e4, n4)) {
              r6 = false;
              break;
            }
            if (r6) return o3;
          }
          return -1;
        }
        function _(t4, e4, r5, n3) {
          r5 = Number(r5) || 0;
          const i2 = t4.length - r5;
          n3 ? (n3 = Number(n3)) > i2 && (n3 = i2) : n3 = i2;
          const o3 = e4.length;
          let s2;
          for (n3 > o3 / 2 && (n3 = o3 / 2), s2 = 0; s2 < n3; ++s2) {
            const n4 = parseInt(e4.substr(2 * s2, 2), 16);
            if (H(n4)) return s2;
            t4[r5 + s2] = n4;
          }
          return s2;
        }
        function B(t4, e4, r5, n3) {
          return J(G(e4, t4.length - r5), t4, r5, n3);
        }
        function E(t4, e4, r5, n3) {
          return J(function(t5) {
            const e5 = [];
            for (let r6 = 0; r6 < t5.length; ++r6) e5.push(255 & t5.charCodeAt(r6));
            return e5;
          }(e4), t4, r5, n3);
        }
        function v(t4, e4, r5, n3) {
          return J(Y(e4), t4, r5, n3);
        }
        function A(t4, e4, r5, n3) {
          return J(function(t5, e5) {
            let r6, n4, i2;
            const o3 = [];
            for (let s2 = 0; s2 < t5.length && !((e5 -= 2) < 0); ++s2) r6 = t5.charCodeAt(s2), n4 = r6 >> 8, i2 = r6 % 256, o3.push(i2), o3.push(n4);
            return o3;
          }(e4, t4.length - r5), t4, r5, n3);
        }
        function I(t4, e4, r5) {
          return 0 === e4 && r5 === t4.length ? n2.fromByteArray(t4) : n2.fromByteArray(t4.slice(e4, r5));
        }
        function x(t4, e4, r5) {
          r5 = Math.min(t4.length, r5);
          const n3 = [];
          let i2 = e4;
          for (; i2 < r5; ) {
            const e5 = t4[i2];
            let o3 = null, s2 = e5 > 239 ? 4 : e5 > 223 ? 3 : e5 > 191 ? 2 : 1;
            if (i2 + s2 <= r5) {
              let r6, n4, u2, f2;
              switch (s2) {
                case 1:
                  e5 < 128 && (o3 = e5);
                  break;
                case 2:
                  r6 = t4[i2 + 1], 128 == (192 & r6) && (f2 = (31 & e5) << 6 | 63 & r6, f2 > 127 && (o3 = f2));
                  break;
                case 3:
                  r6 = t4[i2 + 1], n4 = t4[i2 + 2], 128 == (192 & r6) && 128 == (192 & n4) && (f2 = (15 & e5) << 12 | (63 & r6) << 6 | 63 & n4, f2 > 2047 && (f2 < 55296 || f2 > 57343) && (o3 = f2));
                  break;
                case 4:
                  r6 = t4[i2 + 1], n4 = t4[i2 + 2], u2 = t4[i2 + 3], 128 == (192 & r6) && 128 == (192 & n4) && 128 == (192 & u2) && (f2 = (15 & e5) << 18 | (63 & r6) << 12 | (63 & n4) << 6 | 63 & u2, f2 > 65535 && f2 < 1114112 && (o3 = f2));
              }
            }
            null === o3 ? (o3 = 65533, s2 = 1) : o3 > 65535 && (o3 -= 65536, n3.push(o3 >>> 10 & 1023 | 55296), o3 = 56320 | 1023 & o3), n3.push(o3), i2 += s2;
          }
          return function(t5) {
            const e5 = t5.length;
            if (e5 <= U) return String.fromCharCode.apply(String, t5);
            let r6 = "", n4 = 0;
            for (; n4 < e5; ) r6 += String.fromCharCode.apply(String, t5.slice(n4, n4 += U));
            return r6;
          }(n3);
        }
        f.TYPED_ARRAY_SUPPORT = function() {
          try {
            const t4 = new Uint8Array(1), e4 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(e4, Uint8Array.prototype), Object.setPrototypeOf(t4, e4), 42 === t4.foo();
          } catch (t4) {
            return false;
          }
        }(), f.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(f.prototype, "parent", { enumerable: true, get: function() {
          if (f.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(f.prototype, "offset", { enumerable: true, get: function() {
          if (f.isBuffer(this)) return this.byteOffset;
        } }), f.poolSize = 8192, f.from = function(t4, e4, r5) {
          return a(t4, e4, r5);
        }, Object.setPrototypeOf(f.prototype, Uint8Array.prototype), Object.setPrototypeOf(f, Uint8Array), f.alloc = function(t4, e4, r5) {
          return function(t5, e5, r6) {
            return h(t5), t5 <= 0 ? u(t5) : void 0 !== e5 ? "string" == typeof r6 ? u(t5).fill(e5, r6) : u(t5).fill(e5) : u(t5);
          }(t4, e4, r5);
        }, f.allocUnsafe = function(t4) {
          return c(t4);
        }, f.allocUnsafeSlow = function(t4) {
          return c(t4);
        }, f.isBuffer = function(t4) {
          return null != t4 && true === t4._isBuffer && t4 !== f.prototype;
        }, f.compare = function(t4, e4) {
          if (W(t4, Uint8Array) && (t4 = f.from(t4, t4.offset, t4.byteLength)), W(e4, Uint8Array) && (e4 = f.from(e4, e4.offset, e4.byteLength)), !f.isBuffer(t4) || !f.isBuffer(e4)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (t4 === e4) return 0;
          let r5 = t4.length, n3 = e4.length;
          for (let i2 = 0, o3 = Math.min(r5, n3); i2 < o3; ++i2) if (t4[i2] !== e4[i2]) {
            r5 = t4[i2], n3 = e4[i2];
            break;
          }
          return r5 < n3 ? -1 : n3 < r5 ? 1 : 0;
        }, f.isEncoding = function(t4) {
          switch (String(t4).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, f.concat = function(t4, e4) {
          if (!Array.isArray(t4)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t4.length) return f.alloc(0);
          let r5;
          if (void 0 === e4) for (e4 = 0, r5 = 0; r5 < t4.length; ++r5) e4 += t4[r5].length;
          const n3 = f.allocUnsafe(e4);
          let i2 = 0;
          for (r5 = 0; r5 < t4.length; ++r5) {
            let e5 = t4[r5];
            if (W(e5, Uint8Array)) i2 + e5.length > n3.length ? (f.isBuffer(e5) || (e5 = f.from(e5)), e5.copy(n3, i2)) : Uint8Array.prototype.set.call(n3, e5, i2);
            else {
              if (!f.isBuffer(e5)) throw new TypeError('"list" argument must be an Array of Buffers');
              e5.copy(n3, i2);
            }
            i2 += e5.length;
          }
          return n3;
        }, f.byteLength = g, f.prototype._isBuffer = true, f.prototype.swap16 = function() {
          const t4 = this.length;
          if (t4 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let e4 = 0; e4 < t4; e4 += 2) w(this, e4, e4 + 1);
          return this;
        }, f.prototype.swap32 = function() {
          const t4 = this.length;
          if (t4 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let e4 = 0; e4 < t4; e4 += 4) w(this, e4, e4 + 3), w(this, e4 + 1, e4 + 2);
          return this;
        }, f.prototype.swap64 = function() {
          const t4 = this.length;
          if (t4 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let e4 = 0; e4 < t4; e4 += 8) w(this, e4, e4 + 7), w(this, e4 + 1, e4 + 6), w(this, e4 + 2, e4 + 5), w(this, e4 + 3, e4 + 4);
          return this;
        }, f.prototype.toString = function() {
          const t4 = this.length;
          return 0 === t4 ? "" : 0 === arguments.length ? x(this, 0, t4) : y.apply(this, arguments);
        }, f.prototype.toLocaleString = f.prototype.toString, f.prototype.equals = function(t4) {
          if (!f.isBuffer(t4)) throw new TypeError("Argument must be a Buffer");
          return this === t4 || 0 === f.compare(this, t4);
        }, f.prototype.inspect = function() {
          let t4 = "";
          const r5 = e3.IS;
          return t4 = this.toString("hex", 0, r5).replace(/(.{2})/g, "$1 ").trim(), this.length > r5 && (t4 += " ... "), "<Buffer " + t4 + ">";
        }, o2 && (f.prototype[o2] = f.prototype.inspect), f.prototype.compare = function(t4, e4, r5, n3, i2) {
          if (W(t4, Uint8Array) && (t4 = f.from(t4, t4.offset, t4.byteLength)), !f.isBuffer(t4)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t4);
          if (void 0 === e4 && (e4 = 0), void 0 === r5 && (r5 = t4 ? t4.length : 0), void 0 === n3 && (n3 = 0), void 0 === i2 && (i2 = this.length), e4 < 0 || r5 > t4.length || n3 < 0 || i2 > this.length) throw new RangeError("out of range index");
          if (n3 >= i2 && e4 >= r5) return 0;
          if (n3 >= i2) return -1;
          if (e4 >= r5) return 1;
          if (this === t4) return 0;
          let o3 = (i2 >>>= 0) - (n3 >>>= 0), s2 = (r5 >>>= 0) - (e4 >>>= 0);
          const u2 = Math.min(o3, s2), a2 = this.slice(n3, i2), h2 = t4.slice(e4, r5);
          for (let t5 = 0; t5 < u2; ++t5) if (a2[t5] !== h2[t5]) {
            o3 = a2[t5], s2 = h2[t5];
            break;
          }
          return o3 < s2 ? -1 : s2 < o3 ? 1 : 0;
        }, f.prototype.includes = function(t4, e4, r5) {
          return -1 !== this.indexOf(t4, e4, r5);
        }, f.prototype.indexOf = function(t4, e4, r5) {
          return m(this, t4, e4, r5, true);
        }, f.prototype.lastIndexOf = function(t4, e4, r5) {
          return m(this, t4, e4, r5, false);
        }, f.prototype.write = function(t4, e4, r5, n3) {
          if (void 0 === e4) n3 = "utf8", r5 = this.length, e4 = 0;
          else if (void 0 === r5 && "string" == typeof e4) n3 = e4, r5 = this.length, e4 = 0;
          else {
            if (!isFinite(e4)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            e4 >>>= 0, isFinite(r5) ? (r5 >>>= 0, void 0 === n3 && (n3 = "utf8")) : (n3 = r5, r5 = void 0);
          }
          const i2 = this.length - e4;
          if ((void 0 === r5 || r5 > i2) && (r5 = i2), t4.length > 0 && (r5 < 0 || e4 < 0) || e4 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          n3 || (n3 = "utf8");
          let o3 = false;
          for (; ; ) switch (n3) {
            case "hex":
              return _(this, t4, e4, r5);
            case "utf8":
            case "utf-8":
              return B(this, t4, e4, r5);
            case "ascii":
            case "latin1":
            case "binary":
              return E(this, t4, e4, r5);
            case "base64":
              return v(this, t4, e4, r5);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return A(this, t4, e4, r5);
            default:
              if (o3) throw new TypeError("Unknown encoding: " + n3);
              n3 = ("" + n3).toLowerCase(), o3 = true;
          }
        }, f.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const U = 4096;
        function $(t4, e4, r5) {
          let n3 = "";
          r5 = Math.min(t4.length, r5);
          for (let i2 = e4; i2 < r5; ++i2) n3 += String.fromCharCode(127 & t4[i2]);
          return n3;
        }
        function R(t4, e4, r5) {
          let n3 = "";
          r5 = Math.min(t4.length, r5);
          for (let i2 = e4; i2 < r5; ++i2) n3 += String.fromCharCode(t4[i2]);
          return n3;
        }
        function T(t4, e4, r5) {
          const n3 = t4.length;
          (!e4 || e4 < 0) && (e4 = 0), (!r5 || r5 < 0 || r5 > n3) && (r5 = n3);
          let i2 = "";
          for (let n4 = e4; n4 < r5; ++n4) i2 += Q[t4[n4]];
          return i2;
        }
        function O(t4, e4, r5) {
          const n3 = t4.slice(e4, r5);
          let i2 = "";
          for (let t5 = 0; t5 < n3.length - 1; t5 += 2) i2 += String.fromCharCode(n3[t5] + 256 * n3[t5 + 1]);
          return i2;
        }
        function L(t4, e4, r5) {
          if (t4 % 1 != 0 || t4 < 0) throw new RangeError("offset is not uint");
          if (t4 + e4 > r5) throw new RangeError("Trying to access beyond buffer length");
        }
        function N(t4, e4, r5, n3, i2, o3) {
          if (!f.isBuffer(t4)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (e4 > i2 || e4 < o3) throw new RangeError('"value" argument is out of bounds');
          if (r5 + n3 > t4.length) throw new RangeError("Index out of range");
        }
        function S(t4, e4, r5, n3, i2) {
          P(e4, n3, i2, t4, r5, 7);
          let o3 = Number(e4 & BigInt(4294967295));
          t4[r5++] = o3, o3 >>= 8, t4[r5++] = o3, o3 >>= 8, t4[r5++] = o3, o3 >>= 8, t4[r5++] = o3;
          let s2 = Number(e4 >> BigInt(32) & BigInt(4294967295));
          return t4[r5++] = s2, s2 >>= 8, t4[r5++] = s2, s2 >>= 8, t4[r5++] = s2, s2 >>= 8, t4[r5++] = s2, r5;
        }
        function V(t4, e4, r5, n3, i2) {
          P(e4, n3, i2, t4, r5, 7);
          let o3 = Number(e4 & BigInt(4294967295));
          t4[r5 + 7] = o3, o3 >>= 8, t4[r5 + 6] = o3, o3 >>= 8, t4[r5 + 5] = o3, o3 >>= 8, t4[r5 + 4] = o3;
          let s2 = Number(e4 >> BigInt(32) & BigInt(4294967295));
          return t4[r5 + 3] = s2, s2 >>= 8, t4[r5 + 2] = s2, s2 >>= 8, t4[r5 + 1] = s2, s2 >>= 8, t4[r5] = s2, r5 + 8;
        }
        function M(t4, e4, r5, n3, i2, o3) {
          if (r5 + n3 > t4.length) throw new RangeError("Index out of range");
          if (r5 < 0) throw new RangeError("Index out of range");
        }
        function C(t4, e4, r5, n3, o3) {
          return e4 = +e4, r5 >>>= 0, o3 || M(t4, 0, r5, 4), i.write(t4, e4, r5, n3, 23, 4), r5 + 4;
        }
        function D(t4, e4, r5, n3, o3) {
          return e4 = +e4, r5 >>>= 0, o3 || M(t4, 0, r5, 8), i.write(t4, e4, r5, n3, 52, 8), r5 + 8;
        }
        f.prototype.slice = function(t4, e4) {
          const r5 = this.length;
          (t4 = ~~t4) < 0 ? (t4 += r5) < 0 && (t4 = 0) : t4 > r5 && (t4 = r5), (e4 = void 0 === e4 ? r5 : ~~e4) < 0 ? (e4 += r5) < 0 && (e4 = 0) : e4 > r5 && (e4 = r5), e4 < t4 && (e4 = t4);
          const n3 = this.subarray(t4, e4);
          return Object.setPrototypeOf(n3, f.prototype), n3;
        }, f.prototype.readUintLE = f.prototype.readUIntLE = function(t4, e4, r5) {
          t4 >>>= 0, e4 >>>= 0, r5 || L(t4, e4, this.length);
          let n3 = this[t4], i2 = 1, o3 = 0;
          for (; ++o3 < e4 && (i2 *= 256); ) n3 += this[t4 + o3] * i2;
          return n3;
        }, f.prototype.readUintBE = f.prototype.readUIntBE = function(t4, e4, r5) {
          t4 >>>= 0, e4 >>>= 0, r5 || L(t4, e4, this.length);
          let n3 = this[t4 + --e4], i2 = 1;
          for (; e4 > 0 && (i2 *= 256); ) n3 += this[t4 + --e4] * i2;
          return n3;
        }, f.prototype.readUint8 = f.prototype.readUInt8 = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 1, this.length), this[t4];
        }, f.prototype.readUint16LE = f.prototype.readUInt16LE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 2, this.length), this[t4] | this[t4 + 1] << 8;
        }, f.prototype.readUint16BE = f.prototype.readUInt16BE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 2, this.length), this[t4] << 8 | this[t4 + 1];
        }, f.prototype.readUint32LE = f.prototype.readUInt32LE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 4, this.length), (this[t4] | this[t4 + 1] << 8 | this[t4 + 2] << 16) + 16777216 * this[t4 + 3];
        }, f.prototype.readUint32BE = f.prototype.readUInt32BE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 4, this.length), 16777216 * this[t4] + (this[t4 + 1] << 16 | this[t4 + 2] << 8 | this[t4 + 3]);
        }, f.prototype.readBigUInt64LE = Z(function(t4) {
          X(t4 >>>= 0, "offset");
          const e4 = this[t4], r5 = this[t4 + 7];
          void 0 !== e4 && void 0 !== r5 || k(t4, this.length - 8);
          const n3 = e4 + 256 * this[++t4] + 65536 * this[++t4] + this[++t4] * 2 ** 24, i2 = this[++t4] + 256 * this[++t4] + 65536 * this[++t4] + r5 * 2 ** 24;
          return BigInt(n3) + (BigInt(i2) << BigInt(32));
        }), f.prototype.readBigUInt64BE = Z(function(t4) {
          X(t4 >>>= 0, "offset");
          const e4 = this[t4], r5 = this[t4 + 7];
          void 0 !== e4 && void 0 !== r5 || k(t4, this.length - 8);
          const n3 = e4 * 2 ** 24 + 65536 * this[++t4] + 256 * this[++t4] + this[++t4], i2 = this[++t4] * 2 ** 24 + 65536 * this[++t4] + 256 * this[++t4] + r5;
          return (BigInt(n3) << BigInt(32)) + BigInt(i2);
        }), f.prototype.readIntLE = function(t4, e4, r5) {
          t4 >>>= 0, e4 >>>= 0, r5 || L(t4, e4, this.length);
          let n3 = this[t4], i2 = 1, o3 = 0;
          for (; ++o3 < e4 && (i2 *= 256); ) n3 += this[t4 + o3] * i2;
          return i2 *= 128, n3 >= i2 && (n3 -= Math.pow(2, 8 * e4)), n3;
        }, f.prototype.readIntBE = function(t4, e4, r5) {
          t4 >>>= 0, e4 >>>= 0, r5 || L(t4, e4, this.length);
          let n3 = e4, i2 = 1, o3 = this[t4 + --n3];
          for (; n3 > 0 && (i2 *= 256); ) o3 += this[t4 + --n3] * i2;
          return i2 *= 128, o3 >= i2 && (o3 -= Math.pow(2, 8 * e4)), o3;
        }, f.prototype.readInt8 = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 1, this.length), 128 & this[t4] ? -1 * (255 - this[t4] + 1) : this[t4];
        }, f.prototype.readInt16LE = function(t4, e4) {
          t4 >>>= 0, e4 || L(t4, 2, this.length);
          const r5 = this[t4] | this[t4 + 1] << 8;
          return 32768 & r5 ? 4294901760 | r5 : r5;
        }, f.prototype.readInt16BE = function(t4, e4) {
          t4 >>>= 0, e4 || L(t4, 2, this.length);
          const r5 = this[t4 + 1] | this[t4] << 8;
          return 32768 & r5 ? 4294901760 | r5 : r5;
        }, f.prototype.readInt32LE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 4, this.length), this[t4] | this[t4 + 1] << 8 | this[t4 + 2] << 16 | this[t4 + 3] << 24;
        }, f.prototype.readInt32BE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 4, this.length), this[t4] << 24 | this[t4 + 1] << 16 | this[t4 + 2] << 8 | this[t4 + 3];
        }, f.prototype.readBigInt64LE = Z(function(t4) {
          X(t4 >>>= 0, "offset");
          const e4 = this[t4], r5 = this[t4 + 7];
          void 0 !== e4 && void 0 !== r5 || k(t4, this.length - 8);
          const n3 = this[t4 + 4] + 256 * this[t4 + 5] + 65536 * this[t4 + 6] + (r5 << 24);
          return (BigInt(n3) << BigInt(32)) + BigInt(e4 + 256 * this[++t4] + 65536 * this[++t4] + this[++t4] * 2 ** 24);
        }), f.prototype.readBigInt64BE = Z(function(t4) {
          X(t4 >>>= 0, "offset");
          const e4 = this[t4], r5 = this[t4 + 7];
          void 0 !== e4 && void 0 !== r5 || k(t4, this.length - 8);
          const n3 = (e4 << 24) + 65536 * this[++t4] + 256 * this[++t4] + this[++t4];
          return (BigInt(n3) << BigInt(32)) + BigInt(this[++t4] * 2 ** 24 + 65536 * this[++t4] + 256 * this[++t4] + r5);
        }), f.prototype.readFloatLE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 4, this.length), i.read(this, t4, true, 23, 4);
        }, f.prototype.readFloatBE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 4, this.length), i.read(this, t4, false, 23, 4);
        }, f.prototype.readDoubleLE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 8, this.length), i.read(this, t4, true, 52, 8);
        }, f.prototype.readDoubleBE = function(t4, e4) {
          return t4 >>>= 0, e4 || L(t4, 8, this.length), i.read(this, t4, false, 52, 8);
        }, f.prototype.writeUintLE = f.prototype.writeUIntLE = function(t4, e4, r5, n3) {
          if (t4 = +t4, e4 >>>= 0, r5 >>>= 0, !n3) {
            N(this, t4, e4, r5, Math.pow(2, 8 * r5) - 1, 0);
          }
          let i2 = 1, o3 = 0;
          for (this[e4] = 255 & t4; ++o3 < r5 && (i2 *= 256); ) this[e4 + o3] = t4 / i2 & 255;
          return e4 + r5;
        }, f.prototype.writeUintBE = f.prototype.writeUIntBE = function(t4, e4, r5, n3) {
          if (t4 = +t4, e4 >>>= 0, r5 >>>= 0, !n3) {
            N(this, t4, e4, r5, Math.pow(2, 8 * r5) - 1, 0);
          }
          let i2 = r5 - 1, o3 = 1;
          for (this[e4 + i2] = 255 & t4; --i2 >= 0 && (o3 *= 256); ) this[e4 + i2] = t4 / o3 & 255;
          return e4 + r5;
        }, f.prototype.writeUint8 = f.prototype.writeUInt8 = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 1, 255, 0), this[e4] = 255 & t4, e4 + 1;
        }, f.prototype.writeUint16LE = f.prototype.writeUInt16LE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 2, 65535, 0), this[e4] = 255 & t4, this[e4 + 1] = t4 >>> 8, e4 + 2;
        }, f.prototype.writeUint16BE = f.prototype.writeUInt16BE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 2, 65535, 0), this[e4] = t4 >>> 8, this[e4 + 1] = 255 & t4, e4 + 2;
        }, f.prototype.writeUint32LE = f.prototype.writeUInt32LE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 4, 4294967295, 0), this[e4 + 3] = t4 >>> 24, this[e4 + 2] = t4 >>> 16, this[e4 + 1] = t4 >>> 8, this[e4] = 255 & t4, e4 + 4;
        }, f.prototype.writeUint32BE = f.prototype.writeUInt32BE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 4, 4294967295, 0), this[e4] = t4 >>> 24, this[e4 + 1] = t4 >>> 16, this[e4 + 2] = t4 >>> 8, this[e4 + 3] = 255 & t4, e4 + 4;
        }, f.prototype.writeBigUInt64LE = Z(function(t4, e4 = 0) {
          return S(this, t4, e4, BigInt(0), BigInt("0xffffffffffffffff"));
        }), f.prototype.writeBigUInt64BE = Z(function(t4, e4 = 0) {
          return V(this, t4, e4, BigInt(0), BigInt("0xffffffffffffffff"));
        }), f.prototype.writeIntLE = function(t4, e4, r5, n3) {
          if (t4 = +t4, e4 >>>= 0, !n3) {
            const n4 = Math.pow(2, 8 * r5 - 1);
            N(this, t4, e4, r5, n4 - 1, -n4);
          }
          let i2 = 0, o3 = 1, s2 = 0;
          for (this[e4] = 255 & t4; ++i2 < r5 && (o3 *= 256); ) t4 < 0 && 0 === s2 && 0 !== this[e4 + i2 - 1] && (s2 = 1), this[e4 + i2] = (t4 / o3 | 0) - s2 & 255;
          return e4 + r5;
        }, f.prototype.writeIntBE = function(t4, e4, r5, n3) {
          if (t4 = +t4, e4 >>>= 0, !n3) {
            const n4 = Math.pow(2, 8 * r5 - 1);
            N(this, t4, e4, r5, n4 - 1, -n4);
          }
          let i2 = r5 - 1, o3 = 1, s2 = 0;
          for (this[e4 + i2] = 255 & t4; --i2 >= 0 && (o3 *= 256); ) t4 < 0 && 0 === s2 && 0 !== this[e4 + i2 + 1] && (s2 = 1), this[e4 + i2] = (t4 / o3 | 0) - s2 & 255;
          return e4 + r5;
        }, f.prototype.writeInt8 = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 1, 127, -128), t4 < 0 && (t4 = 255 + t4 + 1), this[e4] = 255 & t4, e4 + 1;
        }, f.prototype.writeInt16LE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 2, 32767, -32768), this[e4] = 255 & t4, this[e4 + 1] = t4 >>> 8, e4 + 2;
        }, f.prototype.writeInt16BE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 2, 32767, -32768), this[e4] = t4 >>> 8, this[e4 + 1] = 255 & t4, e4 + 2;
        }, f.prototype.writeInt32LE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 4, 2147483647, -2147483648), this[e4] = 255 & t4, this[e4 + 1] = t4 >>> 8, this[e4 + 2] = t4 >>> 16, this[e4 + 3] = t4 >>> 24, e4 + 4;
        }, f.prototype.writeInt32BE = function(t4, e4, r5) {
          return t4 = +t4, e4 >>>= 0, r5 || N(this, t4, e4, 4, 2147483647, -2147483648), t4 < 0 && (t4 = 4294967295 + t4 + 1), this[e4] = t4 >>> 24, this[e4 + 1] = t4 >>> 16, this[e4 + 2] = t4 >>> 8, this[e4 + 3] = 255 & t4, e4 + 4;
        }, f.prototype.writeBigInt64LE = Z(function(t4, e4 = 0) {
          return S(this, t4, e4, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), f.prototype.writeBigInt64BE = Z(function(t4, e4 = 0) {
          return V(this, t4, e4, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), f.prototype.writeFloatLE = function(t4, e4, r5) {
          return C(this, t4, e4, true, r5);
        }, f.prototype.writeFloatBE = function(t4, e4, r5) {
          return C(this, t4, e4, false, r5);
        }, f.prototype.writeDoubleLE = function(t4, e4, r5) {
          return D(this, t4, e4, true, r5);
        }, f.prototype.writeDoubleBE = function(t4, e4, r5) {
          return D(this, t4, e4, false, r5);
        }, f.prototype.copy = function(t4, e4, r5, n3) {
          if (!f.isBuffer(t4)) throw new TypeError("argument should be a Buffer");
          if (r5 || (r5 = 0), n3 || 0 === n3 || (n3 = this.length), e4 >= t4.length && (e4 = t4.length), e4 || (e4 = 0), n3 > 0 && n3 < r5 && (n3 = r5), n3 === r5) return 0;
          if (0 === t4.length || 0 === this.length) return 0;
          if (e4 < 0) throw new RangeError("targetStart out of bounds");
          if (r5 < 0 || r5 >= this.length) throw new RangeError("Index out of range");
          if (n3 < 0) throw new RangeError("sourceEnd out of bounds");
          n3 > this.length && (n3 = this.length), t4.length - e4 < n3 - r5 && (n3 = t4.length - e4 + r5);
          const i2 = n3 - r5;
          return this === t4 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e4, r5, n3) : Uint8Array.prototype.set.call(t4, this.subarray(r5, n3), e4), i2;
        }, f.prototype.fill = function(t4, e4, r5, n3) {
          if ("string" == typeof t4) {
            if ("string" == typeof e4 ? (n3 = e4, e4 = 0, r5 = this.length) : "string" == typeof r5 && (n3 = r5, r5 = this.length), void 0 !== n3 && "string" != typeof n3) throw new TypeError("encoding must be a string");
            if ("string" == typeof n3 && !f.isEncoding(n3)) throw new TypeError("Unknown encoding: " + n3);
            if (1 === t4.length) {
              const e5 = t4.charCodeAt(0);
              ("utf8" === n3 && e5 < 128 || "latin1" === n3) && (t4 = e5);
            }
          } else "number" == typeof t4 ? t4 &= 255 : "boolean" == typeof t4 && (t4 = Number(t4));
          if (e4 < 0 || this.length < e4 || this.length < r5) throw new RangeError("Out of range index");
          if (r5 <= e4) return this;
          let i2;
          if (e4 >>>= 0, r5 = void 0 === r5 ? this.length : r5 >>> 0, t4 || (t4 = 0), "number" == typeof t4) for (i2 = e4; i2 < r5; ++i2) this[i2] = t4;
          else {
            const o3 = f.isBuffer(t4) ? t4 : f.from(t4, n3), s2 = o3.length;
            if (0 === s2) throw new TypeError('The value "' + t4 + '" is invalid for argument "value"');
            for (i2 = 0; i2 < r5 - e4; ++i2) this[i2 + e4] = o3[i2 % s2];
          }
          return this;
        };
        const j = {};
        function z(t4, e4, r5) {
          j[t4] = class extends r5 {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: e4.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${t4}]`, this.stack, delete this.name;
            }
            get code() {
              return t4;
            }
            set code(t5) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: t5, writable: true });
            }
            toString() {
              return `${this.name} [${t4}]: ${this.message}`;
            }
          };
        }
        function F(t4) {
          let e4 = "", r5 = t4.length;
          const n3 = "-" === t4[0] ? 1 : 0;
          for (; r5 >= n3 + 4; r5 -= 3) e4 = `_${t4.slice(r5 - 3, r5)}${e4}`;
          return `${t4.slice(0, r5)}${e4}`;
        }
        function P(t4, e4, r5, n3, i2, o3) {
          if (t4 > r5 || t4 < e4) {
            const n4 = "bigint" == typeof e4 ? "n" : "";
            let i3;
            throw i3 = o3 > 3 ? 0 === e4 || e4 === BigInt(0) ? `>= 0${n4} and < 2${n4} ** ${8 * (o3 + 1)}${n4}` : `>= -(2${n4} ** ${8 * (o3 + 1) - 1}${n4}) and < 2 ** ${8 * (o3 + 1) - 1}${n4}` : `>= ${e4}${n4} and <= ${r5}${n4}`, new j.ERR_OUT_OF_RANGE("value", i3, t4);
          }
          !function(t5, e5, r6) {
            X(e5, "offset"), void 0 !== t5[e5] && void 0 !== t5[e5 + r6] || k(e5, t5.length - (r6 + 1));
          }(n3, i2, o3);
        }
        function X(t4, e4) {
          if ("number" != typeof t4) throw new j.ERR_INVALID_ARG_TYPE(e4, "number", t4);
        }
        function k(t4, e4, r5) {
          if (Math.floor(t4) !== t4) throw X(t4, r5), new j.ERR_OUT_OF_RANGE(r5 || "offset", "an integer", t4);
          if (e4 < 0) throw new j.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new j.ERR_OUT_OF_RANGE(r5 || "offset", `>= ${r5 ? 1 : 0} and <= ${e4}`, t4);
        }
        z("ERR_BUFFER_OUT_OF_BOUNDS", function(t4) {
          return t4 ? `${t4} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), z("ERR_INVALID_ARG_TYPE", function(t4, e4) {
          return `The "${t4}" argument must be of type number. Received type ${typeof e4}`;
        }, TypeError), z("ERR_OUT_OF_RANGE", function(t4, e4, r5) {
          let n3 = `The value of "${t4}" is out of range.`, i2 = r5;
          return Number.isInteger(r5) && Math.abs(r5) > 2 ** 32 ? i2 = F(String(r5)) : "bigint" == typeof r5 && (i2 = String(r5), (r5 > BigInt(2) ** BigInt(32) || r5 < -(BigInt(2) ** BigInt(32))) && (i2 = F(i2)), i2 += "n"), n3 += ` It must be ${e4}. Received ${i2}`, n3;
        }, RangeError);
        const q = /[^+/0-9A-Za-z-_]/g;
        function G(t4, e4) {
          let r5;
          e4 = e4 || 1 / 0;
          const n3 = t4.length;
          let i2 = null;
          const o3 = [];
          for (let s2 = 0; s2 < n3; ++s2) {
            if (r5 = t4.charCodeAt(s2), r5 > 55295 && r5 < 57344) {
              if (!i2) {
                if (r5 > 56319) {
                  (e4 -= 3) > -1 && o3.push(239, 191, 189);
                  continue;
                }
                if (s2 + 1 === n3) {
                  (e4 -= 3) > -1 && o3.push(239, 191, 189);
                  continue;
                }
                i2 = r5;
                continue;
              }
              if (r5 < 56320) {
                (e4 -= 3) > -1 && o3.push(239, 191, 189), i2 = r5;
                continue;
              }
              r5 = 65536 + (i2 - 55296 << 10 | r5 - 56320);
            } else i2 && (e4 -= 3) > -1 && o3.push(239, 191, 189);
            if (i2 = null, r5 < 128) {
              if ((e4 -= 1) < 0) break;
              o3.push(r5);
            } else if (r5 < 2048) {
              if ((e4 -= 2) < 0) break;
              o3.push(r5 >> 6 | 192, 63 & r5 | 128);
            } else if (r5 < 65536) {
              if ((e4 -= 3) < 0) break;
              o3.push(r5 >> 12 | 224, r5 >> 6 & 63 | 128, 63 & r5 | 128);
            } else {
              if (!(r5 < 1114112)) throw new Error("Invalid code point");
              if ((e4 -= 4) < 0) break;
              o3.push(r5 >> 18 | 240, r5 >> 12 & 63 | 128, r5 >> 6 & 63 | 128, 63 & r5 | 128);
            }
          }
          return o3;
        }
        function Y(t4) {
          return n2.toByteArray(function(t5) {
            if ((t5 = (t5 = t5.split("=")[0]).trim().replace(q, "")).length < 2) return "";
            for (; t5.length % 4 != 0; ) t5 += "=";
            return t5;
          }(t4));
        }
        function J(t4, e4, r5, n3) {
          let i2;
          for (i2 = 0; i2 < n3 && !(i2 + r5 >= e4.length || i2 >= t4.length); ++i2) e4[i2 + r5] = t4[i2];
          return i2;
        }
        function W(t4, e4) {
          return t4 instanceof e4 || null != t4 && null != t4.constructor && null != t4.constructor.name && t4.constructor.name === e4.name;
        }
        function H(t4) {
          return t4 != t4;
        }
        const Q = function() {
          const t4 = "0123456789abcdef", e4 = new Array(256);
          for (let r5 = 0; r5 < 16; ++r5) {
            const n3 = 16 * r5;
            for (let i2 = 0; i2 < 16; ++i2) e4[n3 + i2] = t4[r5] + t4[i2];
          }
          return e4;
        }();
        function Z(t4) {
          return "undefined" == typeof BigInt ? K : t4;
        }
        function K() {
          throw new Error("BigInt not supported");
        }
      }, 251: (t3, e3) => {
        e3.read = function(t4, e4, r4, n2, i) {
          var o2, s, u = 8 * i - n2 - 1, f = (1 << u) - 1, a = f >> 1, h = -7, c = r4 ? i - 1 : 0, l2 = r4 ? -1 : 1, p = t4[e4 + c];
          for (c += l2, o2 = p & (1 << -h) - 1, p >>= -h, h += u; h > 0; o2 = 256 * o2 + t4[e4 + c], c += l2, h -= 8) ;
          for (s = o2 & (1 << -h) - 1, o2 >>= -h, h += n2; h > 0; s = 256 * s + t4[e4 + c], c += l2, h -= 8) ;
          if (0 === o2) o2 = 1 - a;
          else {
            if (o2 === f) return s ? NaN : 1 / 0 * (p ? -1 : 1);
            s += Math.pow(2, n2), o2 -= a;
          }
          return (p ? -1 : 1) * s * Math.pow(2, o2 - n2);
        }, e3.write = function(t4, e4, r4, n2, i, o2) {
          var s, u, f, a = 8 * o2 - i - 1, h = (1 << a) - 1, c = h >> 1, l2 = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n2 ? 0 : o2 - 1, d = n2 ? 1 : -1, g = e4 < 0 || 0 === e4 && 1 / e4 < 0 ? 1 : 0;
          for (e4 = Math.abs(e4), isNaN(e4) || e4 === 1 / 0 ? (u = isNaN(e4) ? 1 : 0, s = h) : (s = Math.floor(Math.log(e4) / Math.LN2), e4 * (f = Math.pow(2, -s)) < 1 && (s--, f *= 2), (e4 += s + c >= 1 ? l2 / f : l2 * Math.pow(2, 1 - c)) * f >= 2 && (s++, f /= 2), s + c >= h ? (u = 0, s = h) : s + c >= 1 ? (u = (e4 * f - 1) * Math.pow(2, i), s += c) : (u = e4 * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; t4[r4 + p] = 255 & u, p += d, u /= 256, i -= 8) ;
          for (s = s << i | u, a += i; a > 0; t4[r4 + p] = 255 & s, p += d, s /= 256, a -= 8) ;
          t4[r4 + p - d] |= 128 * g;
        };
      } }, e2 = {};
      function r3(n2) {
        var i = e2[n2];
        if (void 0 !== i) return i.exports;
        var o2 = e2[n2] = { exports: {} };
        return t2[n2](o2, o2.exports, r3), o2.exports;
      }
      return r3.d = (t3, e3) => {
        for (var n2 in e3) r3.o(e3, n2) && !r3.o(t3, n2) && Object.defineProperty(t3, n2, { enumerable: true, get: e3[n2] });
      }, r3.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
          return this || new Function("return this")();
        } catch (t3) {
          if ("object" == typeof window) return window;
        }
      }(), r3.o = (t3, e3) => Object.prototype.hasOwnProperty.call(t3, e3), r3.r = (t3) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t3, "__esModule", { value: true });
      }, r3(281);
    })());
  }
});

// node_modules/@stellar/stellar-base/lib/generated/curr_generated.js
var require_curr_generated = __commonJS({
  "node_modules/@stellar/stellar-base/lib/generated/curr_generated.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var XDR = _interopRequireWildcard(require_xdr());
    function _getRequireWildcardCache(e2) {
      if ("function" != typeof WeakMap) return null;
      var r3 = /* @__PURE__ */ new WeakMap(), t2 = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e3) {
        return e3 ? t2 : r3;
      })(e2);
    }
    function _interopRequireWildcard(e2, r3) {
      if (!r3 && e2 && e2.__esModule) return e2;
      if (null === e2 || "object" != _typeof(e2) && "function" != typeof e2) return { "default": e2 };
      var t2 = _getRequireWildcardCache(r3);
      if (t2 && t2.has(e2)) return t2.get(e2);
      var n2 = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e2) if ("default" !== u && {}.hasOwnProperty.call(e2, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e2, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n2, u, i) : n2[u] = e2[u];
      }
      return n2["default"] = e2, t2 && t2.set(e2, n2), n2;
    }
    var types = XDR.config(function(xdr2) {
      var SCSYMBOL_LIMIT = 32;
      var SC_SPEC_DOC_LIMIT = 1024;
      xdr2.typedef("Value", xdr2.varOpaque());
      xdr2.struct("ScpBallot", [["counter", xdr2.lookup("Uint32")], ["value", xdr2.lookup("Value")]]);
      xdr2["enum"]("ScpStatementType", {
        scpStPrepare: 0,
        scpStConfirm: 1,
        scpStExternalize: 2,
        scpStNominate: 3
      });
      xdr2.struct("ScpNomination", [["quorumSetHash", xdr2.lookup("Hash")], ["votes", xdr2.varArray(xdr2.lookup("Value"), 2147483647)], ["accepted", xdr2.varArray(xdr2.lookup("Value"), 2147483647)]]);
      xdr2.struct("ScpStatementPrepare", [["quorumSetHash", xdr2.lookup("Hash")], ["ballot", xdr2.lookup("ScpBallot")], ["prepared", xdr2.option(xdr2.lookup("ScpBallot"))], ["preparedPrime", xdr2.option(xdr2.lookup("ScpBallot"))], ["nC", xdr2.lookup("Uint32")], ["nH", xdr2.lookup("Uint32")]]);
      xdr2.struct("ScpStatementConfirm", [["ballot", xdr2.lookup("ScpBallot")], ["nPrepared", xdr2.lookup("Uint32")], ["nCommit", xdr2.lookup("Uint32")], ["nH", xdr2.lookup("Uint32")], ["quorumSetHash", xdr2.lookup("Hash")]]);
      xdr2.struct("ScpStatementExternalize", [["commit", xdr2.lookup("ScpBallot")], ["nH", xdr2.lookup("Uint32")], ["commitQuorumSetHash", xdr2.lookup("Hash")]]);
      xdr2.union("ScpStatementPledges", {
        switchOn: xdr2.lookup("ScpStatementType"),
        switchName: "type",
        switches: [["scpStPrepare", "prepare"], ["scpStConfirm", "confirm"], ["scpStExternalize", "externalize"], ["scpStNominate", "nominate"]],
        arms: {
          prepare: xdr2.lookup("ScpStatementPrepare"),
          confirm: xdr2.lookup("ScpStatementConfirm"),
          externalize: xdr2.lookup("ScpStatementExternalize"),
          nominate: xdr2.lookup("ScpNomination")
        }
      });
      xdr2.struct("ScpStatement", [["nodeId", xdr2.lookup("NodeId")], ["slotIndex", xdr2.lookup("Uint64")], ["pledges", xdr2.lookup("ScpStatementPledges")]]);
      xdr2.struct("ScpEnvelope", [["statement", xdr2.lookup("ScpStatement")], ["signature", xdr2.lookup("Signature")]]);
      xdr2.struct("ScpQuorumSet", [["threshold", xdr2.lookup("Uint32")], ["validators", xdr2.varArray(xdr2.lookup("NodeId"), 2147483647)], ["innerSets", xdr2.varArray(xdr2.lookup("ScpQuorumSet"), 2147483647)]]);
      xdr2.typedef("Thresholds", xdr2.opaque(4));
      xdr2.typedef("String32", xdr2.string(32));
      xdr2.typedef("String64", xdr2.string(64));
      xdr2.typedef("SequenceNumber", xdr2.lookup("Int64"));
      xdr2.typedef("DataValue", xdr2.varOpaque(64));
      xdr2.typedef("PoolId", xdr2.lookup("Hash"));
      xdr2.typedef("AssetCode4", xdr2.opaque(4));
      xdr2.typedef("AssetCode12", xdr2.opaque(12));
      xdr2["enum"]("AssetType", {
        assetTypeNative: 0,
        assetTypeCreditAlphanum4: 1,
        assetTypeCreditAlphanum12: 2,
        assetTypePoolShare: 3
      });
      xdr2.union("AssetCode", {
        switchOn: xdr2.lookup("AssetType"),
        switchName: "type",
        switches: [["assetTypeCreditAlphanum4", "assetCode4"], ["assetTypeCreditAlphanum12", "assetCode12"]],
        arms: {
          assetCode4: xdr2.lookup("AssetCode4"),
          assetCode12: xdr2.lookup("AssetCode12")
        }
      });
      xdr2.struct("AlphaNum4", [["assetCode", xdr2.lookup("AssetCode4")], ["issuer", xdr2.lookup("AccountId")]]);
      xdr2.struct("AlphaNum12", [["assetCode", xdr2.lookup("AssetCode12")], ["issuer", xdr2.lookup("AccountId")]]);
      xdr2.union("Asset", {
        switchOn: xdr2.lookup("AssetType"),
        switchName: "type",
        switches: [["assetTypeNative", xdr2["void"]()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"]],
        arms: {
          alphaNum4: xdr2.lookup("AlphaNum4"),
          alphaNum12: xdr2.lookup("AlphaNum12")
        }
      });
      xdr2.struct("Price", [["n", xdr2.lookup("Int32")], ["d", xdr2.lookup("Int32")]]);
      xdr2.struct("Liabilities", [["buying", xdr2.lookup("Int64")], ["selling", xdr2.lookup("Int64")]]);
      xdr2["enum"]("ThresholdIndices", {
        thresholdMasterWeight: 0,
        thresholdLow: 1,
        thresholdMed: 2,
        thresholdHigh: 3
      });
      xdr2["enum"]("LedgerEntryType", {
        account: 0,
        trustline: 1,
        offer: 2,
        data: 3,
        claimableBalance: 4,
        liquidityPool: 5,
        contractData: 6,
        contractCode: 7,
        configSetting: 8,
        ttl: 9
      });
      xdr2.struct("Signer", [["key", xdr2.lookup("SignerKey")], ["weight", xdr2.lookup("Uint32")]]);
      xdr2["enum"]("AccountFlags", {
        authRequiredFlag: 1,
        authRevocableFlag: 2,
        authImmutableFlag: 4,
        authClawbackEnabledFlag: 8
      });
      xdr2["const"]("MASK_ACCOUNT_FLAGS", 7);
      xdr2["const"]("MASK_ACCOUNT_FLAGS_V17", 15);
      xdr2["const"]("MAX_SIGNERS", 20);
      xdr2.typedef("SponsorshipDescriptor", xdr2.option(xdr2.lookup("AccountId")));
      xdr2.struct("AccountEntryExtensionV3", [["ext", xdr2.lookup("ExtensionPoint")], ["seqLedger", xdr2.lookup("Uint32")], ["seqTime", xdr2.lookup("TimePoint")]]);
      xdr2.union("AccountEntryExtensionV2Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [3, "v3"]],
        arms: {
          v3: xdr2.lookup("AccountEntryExtensionV3")
        }
      });
      xdr2.struct("AccountEntryExtensionV2", [["numSponsored", xdr2.lookup("Uint32")], ["numSponsoring", xdr2.lookup("Uint32")], ["signerSponsoringIDs", xdr2.varArray(xdr2.lookup("SponsorshipDescriptor"), xdr2.lookup("MAX_SIGNERS"))], ["ext", xdr2.lookup("AccountEntryExtensionV2Ext")]]);
      xdr2.union("AccountEntryExtensionV1Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [2, "v2"]],
        arms: {
          v2: xdr2.lookup("AccountEntryExtensionV2")
        }
      });
      xdr2.struct("AccountEntryExtensionV1", [["liabilities", xdr2.lookup("Liabilities")], ["ext", xdr2.lookup("AccountEntryExtensionV1Ext")]]);
      xdr2.union("AccountEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("AccountEntryExtensionV1")
        }
      });
      xdr2.struct("AccountEntry", [["accountId", xdr2.lookup("AccountId")], ["balance", xdr2.lookup("Int64")], ["seqNum", xdr2.lookup("SequenceNumber")], ["numSubEntries", xdr2.lookup("Uint32")], ["inflationDest", xdr2.option(xdr2.lookup("AccountId"))], ["flags", xdr2.lookup("Uint32")], ["homeDomain", xdr2.lookup("String32")], ["thresholds", xdr2.lookup("Thresholds")], ["signers", xdr2.varArray(xdr2.lookup("Signer"), xdr2.lookup("MAX_SIGNERS"))], ["ext", xdr2.lookup("AccountEntryExt")]]);
      xdr2["enum"]("TrustLineFlags", {
        authorizedFlag: 1,
        authorizedToMaintainLiabilitiesFlag: 2,
        trustlineClawbackEnabledFlag: 4
      });
      xdr2["const"]("MASK_TRUSTLINE_FLAGS", 1);
      xdr2["const"]("MASK_TRUSTLINE_FLAGS_V13", 3);
      xdr2["const"]("MASK_TRUSTLINE_FLAGS_V17", 7);
      xdr2["enum"]("LiquidityPoolType", {
        liquidityPoolConstantProduct: 0
      });
      xdr2.union("TrustLineAsset", {
        switchOn: xdr2.lookup("AssetType"),
        switchName: "type",
        switches: [["assetTypeNative", xdr2["void"]()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPoolId"]],
        arms: {
          alphaNum4: xdr2.lookup("AlphaNum4"),
          alphaNum12: xdr2.lookup("AlphaNum12"),
          liquidityPoolId: xdr2.lookup("PoolId")
        }
      });
      xdr2.union("TrustLineEntryExtensionV2Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("TrustLineEntryExtensionV2", [["liquidityPoolUseCount", xdr2.lookup("Int32")], ["ext", xdr2.lookup("TrustLineEntryExtensionV2Ext")]]);
      xdr2.union("TrustLineEntryV1Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [2, "v2"]],
        arms: {
          v2: xdr2.lookup("TrustLineEntryExtensionV2")
        }
      });
      xdr2.struct("TrustLineEntryV1", [["liabilities", xdr2.lookup("Liabilities")], ["ext", xdr2.lookup("TrustLineEntryV1Ext")]]);
      xdr2.union("TrustLineEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("TrustLineEntryV1")
        }
      });
      xdr2.struct("TrustLineEntry", [["accountId", xdr2.lookup("AccountId")], ["asset", xdr2.lookup("TrustLineAsset")], ["balance", xdr2.lookup("Int64")], ["limit", xdr2.lookup("Int64")], ["flags", xdr2.lookup("Uint32")], ["ext", xdr2.lookup("TrustLineEntryExt")]]);
      xdr2["enum"]("OfferEntryFlags", {
        passiveFlag: 1
      });
      xdr2["const"]("MASK_OFFERENTRY_FLAGS", 1);
      xdr2.union("OfferEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("OfferEntry", [["sellerId", xdr2.lookup("AccountId")], ["offerId", xdr2.lookup("Int64")], ["selling", xdr2.lookup("Asset")], ["buying", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")], ["price", xdr2.lookup("Price")], ["flags", xdr2.lookup("Uint32")], ["ext", xdr2.lookup("OfferEntryExt")]]);
      xdr2.union("DataEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("DataEntry", [["accountId", xdr2.lookup("AccountId")], ["dataName", xdr2.lookup("String64")], ["dataValue", xdr2.lookup("DataValue")], ["ext", xdr2.lookup("DataEntryExt")]]);
      xdr2["enum"]("ClaimPredicateType", {
        claimPredicateUnconditional: 0,
        claimPredicateAnd: 1,
        claimPredicateOr: 2,
        claimPredicateNot: 3,
        claimPredicateBeforeAbsoluteTime: 4,
        claimPredicateBeforeRelativeTime: 5
      });
      xdr2.union("ClaimPredicate", {
        switchOn: xdr2.lookup("ClaimPredicateType"),
        switchName: "type",
        switches: [["claimPredicateUnconditional", xdr2["void"]()], ["claimPredicateAnd", "andPredicates"], ["claimPredicateOr", "orPredicates"], ["claimPredicateNot", "notPredicate"], ["claimPredicateBeforeAbsoluteTime", "absBefore"], ["claimPredicateBeforeRelativeTime", "relBefore"]],
        arms: {
          andPredicates: xdr2.varArray(xdr2.lookup("ClaimPredicate"), 2),
          orPredicates: xdr2.varArray(xdr2.lookup("ClaimPredicate"), 2),
          notPredicate: xdr2.option(xdr2.lookup("ClaimPredicate")),
          absBefore: xdr2.lookup("Int64"),
          relBefore: xdr2.lookup("Int64")
        }
      });
      xdr2["enum"]("ClaimantType", {
        claimantTypeV0: 0
      });
      xdr2.struct("ClaimantV0", [["destination", xdr2.lookup("AccountId")], ["predicate", xdr2.lookup("ClaimPredicate")]]);
      xdr2.union("Claimant", {
        switchOn: xdr2.lookup("ClaimantType"),
        switchName: "type",
        switches: [["claimantTypeV0", "v0"]],
        arms: {
          v0: xdr2.lookup("ClaimantV0")
        }
      });
      xdr2["enum"]("ClaimableBalanceIdType", {
        claimableBalanceIdTypeV0: 0
      });
      xdr2.union("ClaimableBalanceId", {
        switchOn: xdr2.lookup("ClaimableBalanceIdType"),
        switchName: "type",
        switches: [["claimableBalanceIdTypeV0", "v0"]],
        arms: {
          v0: xdr2.lookup("Hash")
        }
      });
      xdr2["enum"]("ClaimableBalanceFlags", {
        claimableBalanceClawbackEnabledFlag: 1
      });
      xdr2["const"]("MASK_CLAIMABLE_BALANCE_FLAGS", 1);
      xdr2.union("ClaimableBalanceEntryExtensionV1Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("ClaimableBalanceEntryExtensionV1", [["ext", xdr2.lookup("ClaimableBalanceEntryExtensionV1Ext")], ["flags", xdr2.lookup("Uint32")]]);
      xdr2.union("ClaimableBalanceEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("ClaimableBalanceEntryExtensionV1")
        }
      });
      xdr2.struct("ClaimableBalanceEntry", [["balanceId", xdr2.lookup("ClaimableBalanceId")], ["claimants", xdr2.varArray(xdr2.lookup("Claimant"), 10)], ["asset", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")], ["ext", xdr2.lookup("ClaimableBalanceEntryExt")]]);
      xdr2.struct("LiquidityPoolConstantProductParameters", [["assetA", xdr2.lookup("Asset")], ["assetB", xdr2.lookup("Asset")], ["fee", xdr2.lookup("Int32")]]);
      xdr2.struct("LiquidityPoolEntryConstantProduct", [["params", xdr2.lookup("LiquidityPoolConstantProductParameters")], ["reserveA", xdr2.lookup("Int64")], ["reserveB", xdr2.lookup("Int64")], ["totalPoolShares", xdr2.lookup("Int64")], ["poolSharesTrustLineCount", xdr2.lookup("Int64")]]);
      xdr2.union("LiquidityPoolEntryBody", {
        switchOn: xdr2.lookup("LiquidityPoolType"),
        switchName: "type",
        switches: [["liquidityPoolConstantProduct", "constantProduct"]],
        arms: {
          constantProduct: xdr2.lookup("LiquidityPoolEntryConstantProduct")
        }
      });
      xdr2.struct("LiquidityPoolEntry", [["liquidityPoolId", xdr2.lookup("PoolId")], ["body", xdr2.lookup("LiquidityPoolEntryBody")]]);
      xdr2["enum"]("ContractDataDurability", {
        temporary: 0,
        persistent: 1
      });
      xdr2.struct("ContractDataEntry", [["ext", xdr2.lookup("ExtensionPoint")], ["contract", xdr2.lookup("ScAddress")], ["key", xdr2.lookup("ScVal")], ["durability", xdr2.lookup("ContractDataDurability")], ["val", xdr2.lookup("ScVal")]]);
      xdr2.struct("ContractCodeCostInputs", [["ext", xdr2.lookup("ExtensionPoint")], ["nInstructions", xdr2.lookup("Uint32")], ["nFunctions", xdr2.lookup("Uint32")], ["nGlobals", xdr2.lookup("Uint32")], ["nTableEntries", xdr2.lookup("Uint32")], ["nTypes", xdr2.lookup("Uint32")], ["nDataSegments", xdr2.lookup("Uint32")], ["nElemSegments", xdr2.lookup("Uint32")], ["nImports", xdr2.lookup("Uint32")], ["nExports", xdr2.lookup("Uint32")], ["nDataSegmentBytes", xdr2.lookup("Uint32")]]);
      xdr2.struct("ContractCodeEntryV1", [["ext", xdr2.lookup("ExtensionPoint")], ["costInputs", xdr2.lookup("ContractCodeCostInputs")]]);
      xdr2.union("ContractCodeEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("ContractCodeEntryV1")
        }
      });
      xdr2.struct("ContractCodeEntry", [["ext", xdr2.lookup("ContractCodeEntryExt")], ["hash", xdr2.lookup("Hash")], ["code", xdr2.varOpaque()]]);
      xdr2.struct("TtlEntry", [["keyHash", xdr2.lookup("Hash")], ["liveUntilLedgerSeq", xdr2.lookup("Uint32")]]);
      xdr2.union("LedgerEntryExtensionV1Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("LedgerEntryExtensionV1", [["sponsoringId", xdr2.lookup("SponsorshipDescriptor")], ["ext", xdr2.lookup("LedgerEntryExtensionV1Ext")]]);
      xdr2.union("LedgerEntryData", {
        switchOn: xdr2.lookup("LedgerEntryType"),
        switchName: "type",
        switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]],
        arms: {
          account: xdr2.lookup("AccountEntry"),
          trustLine: xdr2.lookup("TrustLineEntry"),
          offer: xdr2.lookup("OfferEntry"),
          data: xdr2.lookup("DataEntry"),
          claimableBalance: xdr2.lookup("ClaimableBalanceEntry"),
          liquidityPool: xdr2.lookup("LiquidityPoolEntry"),
          contractData: xdr2.lookup("ContractDataEntry"),
          contractCode: xdr2.lookup("ContractCodeEntry"),
          configSetting: xdr2.lookup("ConfigSettingEntry"),
          ttl: xdr2.lookup("TtlEntry")
        }
      });
      xdr2.union("LedgerEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("LedgerEntryExtensionV1")
        }
      });
      xdr2.struct("LedgerEntry", [["lastModifiedLedgerSeq", xdr2.lookup("Uint32")], ["data", xdr2.lookup("LedgerEntryData")], ["ext", xdr2.lookup("LedgerEntryExt")]]);
      xdr2.struct("LedgerKeyAccount", [["accountId", xdr2.lookup("AccountId")]]);
      xdr2.struct("LedgerKeyTrustLine", [["accountId", xdr2.lookup("AccountId")], ["asset", xdr2.lookup("TrustLineAsset")]]);
      xdr2.struct("LedgerKeyOffer", [["sellerId", xdr2.lookup("AccountId")], ["offerId", xdr2.lookup("Int64")]]);
      xdr2.struct("LedgerKeyData", [["accountId", xdr2.lookup("AccountId")], ["dataName", xdr2.lookup("String64")]]);
      xdr2.struct("LedgerKeyClaimableBalance", [["balanceId", xdr2.lookup("ClaimableBalanceId")]]);
      xdr2.struct("LedgerKeyLiquidityPool", [["liquidityPoolId", xdr2.lookup("PoolId")]]);
      xdr2.struct("LedgerKeyContractData", [["contract", xdr2.lookup("ScAddress")], ["key", xdr2.lookup("ScVal")], ["durability", xdr2.lookup("ContractDataDurability")]]);
      xdr2.struct("LedgerKeyContractCode", [["hash", xdr2.lookup("Hash")]]);
      xdr2.struct("LedgerKeyConfigSetting", [["configSettingId", xdr2.lookup("ConfigSettingId")]]);
      xdr2.struct("LedgerKeyTtl", [["keyHash", xdr2.lookup("Hash")]]);
      xdr2.union("LedgerKey", {
        switchOn: xdr2.lookup("LedgerEntryType"),
        switchName: "type",
        switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]],
        arms: {
          account: xdr2.lookup("LedgerKeyAccount"),
          trustLine: xdr2.lookup("LedgerKeyTrustLine"),
          offer: xdr2.lookup("LedgerKeyOffer"),
          data: xdr2.lookup("LedgerKeyData"),
          claimableBalance: xdr2.lookup("LedgerKeyClaimableBalance"),
          liquidityPool: xdr2.lookup("LedgerKeyLiquidityPool"),
          contractData: xdr2.lookup("LedgerKeyContractData"),
          contractCode: xdr2.lookup("LedgerKeyContractCode"),
          configSetting: xdr2.lookup("LedgerKeyConfigSetting"),
          ttl: xdr2.lookup("LedgerKeyTtl")
        }
      });
      xdr2["enum"]("EnvelopeType", {
        envelopeTypeTxV0: 0,
        envelopeTypeScp: 1,
        envelopeTypeTx: 2,
        envelopeTypeAuth: 3,
        envelopeTypeScpvalue: 4,
        envelopeTypeTxFeeBump: 5,
        envelopeTypeOpId: 6,
        envelopeTypePoolRevokeOpId: 7,
        envelopeTypeContractId: 8,
        envelopeTypeSorobanAuthorization: 9
      });
      xdr2.typedef("UpgradeType", xdr2.varOpaque(128));
      xdr2["enum"]("StellarValueType", {
        stellarValueBasic: 0,
        stellarValueSigned: 1
      });
      xdr2.struct("LedgerCloseValueSignature", [["nodeId", xdr2.lookup("NodeId")], ["signature", xdr2.lookup("Signature")]]);
      xdr2.union("StellarValueExt", {
        switchOn: xdr2.lookup("StellarValueType"),
        switchName: "v",
        switches: [["stellarValueBasic", xdr2["void"]()], ["stellarValueSigned", "lcValueSignature"]],
        arms: {
          lcValueSignature: xdr2.lookup("LedgerCloseValueSignature")
        }
      });
      xdr2.struct("StellarValue", [["txSetHash", xdr2.lookup("Hash")], ["closeTime", xdr2.lookup("TimePoint")], ["upgrades", xdr2.varArray(xdr2.lookup("UpgradeType"), 6)], ["ext", xdr2.lookup("StellarValueExt")]]);
      xdr2["const"]("MASK_LEDGER_HEADER_FLAGS", 7);
      xdr2["enum"]("LedgerHeaderFlags", {
        disableLiquidityPoolTradingFlag: 1,
        disableLiquidityPoolDepositFlag: 2,
        disableLiquidityPoolWithdrawalFlag: 4
      });
      xdr2.union("LedgerHeaderExtensionV1Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("LedgerHeaderExtensionV1", [["flags", xdr2.lookup("Uint32")], ["ext", xdr2.lookup("LedgerHeaderExtensionV1Ext")]]);
      xdr2.union("LedgerHeaderExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("LedgerHeaderExtensionV1")
        }
      });
      xdr2.struct("LedgerHeader", [["ledgerVersion", xdr2.lookup("Uint32")], ["previousLedgerHash", xdr2.lookup("Hash")], ["scpValue", xdr2.lookup("StellarValue")], ["txSetResultHash", xdr2.lookup("Hash")], ["bucketListHash", xdr2.lookup("Hash")], ["ledgerSeq", xdr2.lookup("Uint32")], ["totalCoins", xdr2.lookup("Int64")], ["feePool", xdr2.lookup("Int64")], ["inflationSeq", xdr2.lookup("Uint32")], ["idPool", xdr2.lookup("Uint64")], ["baseFee", xdr2.lookup("Uint32")], ["baseReserve", xdr2.lookup("Uint32")], ["maxTxSetSize", xdr2.lookup("Uint32")], ["skipList", xdr2.array(xdr2.lookup("Hash"), 4)], ["ext", xdr2.lookup("LedgerHeaderExt")]]);
      xdr2["enum"]("LedgerUpgradeType", {
        ledgerUpgradeVersion: 1,
        ledgerUpgradeBaseFee: 2,
        ledgerUpgradeMaxTxSetSize: 3,
        ledgerUpgradeBaseReserve: 4,
        ledgerUpgradeFlags: 5,
        ledgerUpgradeConfig: 6,
        ledgerUpgradeMaxSorobanTxSetSize: 7
      });
      xdr2.struct("ConfigUpgradeSetKey", [["contractId", xdr2.lookup("Hash")], ["contentHash", xdr2.lookup("Hash")]]);
      xdr2.union("LedgerUpgrade", {
        switchOn: xdr2.lookup("LedgerUpgradeType"),
        switchName: "type",
        switches: [["ledgerUpgradeVersion", "newLedgerVersion"], ["ledgerUpgradeBaseFee", "newBaseFee"], ["ledgerUpgradeMaxTxSetSize", "newMaxTxSetSize"], ["ledgerUpgradeBaseReserve", "newBaseReserve"], ["ledgerUpgradeFlags", "newFlags"], ["ledgerUpgradeConfig", "newConfig"], ["ledgerUpgradeMaxSorobanTxSetSize", "newMaxSorobanTxSetSize"]],
        arms: {
          newLedgerVersion: xdr2.lookup("Uint32"),
          newBaseFee: xdr2.lookup("Uint32"),
          newMaxTxSetSize: xdr2.lookup("Uint32"),
          newBaseReserve: xdr2.lookup("Uint32"),
          newFlags: xdr2.lookup("Uint32"),
          newConfig: xdr2.lookup("ConfigUpgradeSetKey"),
          newMaxSorobanTxSetSize: xdr2.lookup("Uint32")
        }
      });
      xdr2.struct("ConfigUpgradeSet", [["updatedEntry", xdr2.varArray(xdr2.lookup("ConfigSettingEntry"), 2147483647)]]);
      xdr2["enum"]("BucketEntryType", {
        metaentry: -1,
        liveentry: 0,
        deadentry: 1,
        initentry: 2
      });
      xdr2.union("BucketMetadataExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("BucketMetadata", [["ledgerVersion", xdr2.lookup("Uint32")], ["ext", xdr2.lookup("BucketMetadataExt")]]);
      xdr2.union("BucketEntry", {
        switchOn: xdr2.lookup("BucketEntryType"),
        switchName: "type",
        switches: [["liveentry", "liveEntry"], ["initentry", "liveEntry"], ["deadentry", "deadEntry"], ["metaentry", "metaEntry"]],
        arms: {
          liveEntry: xdr2.lookup("LedgerEntry"),
          deadEntry: xdr2.lookup("LedgerKey"),
          metaEntry: xdr2.lookup("BucketMetadata")
        }
      });
      xdr2["enum"]("TxSetComponentType", {
        txsetCompTxsMaybeDiscountedFee: 0
      });
      xdr2.struct("TxSetComponentTxsMaybeDiscountedFee", [["baseFee", xdr2.option(xdr2.lookup("Int64"))], ["txes", xdr2.varArray(xdr2.lookup("TransactionEnvelope"), 2147483647)]]);
      xdr2.union("TxSetComponent", {
        switchOn: xdr2.lookup("TxSetComponentType"),
        switchName: "type",
        switches: [["txsetCompTxsMaybeDiscountedFee", "txsMaybeDiscountedFee"]],
        arms: {
          txsMaybeDiscountedFee: xdr2.lookup("TxSetComponentTxsMaybeDiscountedFee")
        }
      });
      xdr2.union("TransactionPhase", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, "v0Components"]],
        arms: {
          v0Components: xdr2.varArray(xdr2.lookup("TxSetComponent"), 2147483647)
        }
      });
      xdr2.struct("TransactionSet", [["previousLedgerHash", xdr2.lookup("Hash")], ["txes", xdr2.varArray(xdr2.lookup("TransactionEnvelope"), 2147483647)]]);
      xdr2.struct("TransactionSetV1", [["previousLedgerHash", xdr2.lookup("Hash")], ["phases", xdr2.varArray(xdr2.lookup("TransactionPhase"), 2147483647)]]);
      xdr2.union("GeneralizedTransactionSet", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[1, "v1TxSet"]],
        arms: {
          v1TxSet: xdr2.lookup("TransactionSetV1")
        }
      });
      xdr2.struct("TransactionResultPair", [["transactionHash", xdr2.lookup("Hash")], ["result", xdr2.lookup("TransactionResult")]]);
      xdr2.struct("TransactionResultSet", [["results", xdr2.varArray(xdr2.lookup("TransactionResultPair"), 2147483647)]]);
      xdr2.union("TransactionHistoryEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "generalizedTxSet"]],
        arms: {
          generalizedTxSet: xdr2.lookup("GeneralizedTransactionSet")
        }
      });
      xdr2.struct("TransactionHistoryEntry", [["ledgerSeq", xdr2.lookup("Uint32")], ["txSet", xdr2.lookup("TransactionSet")], ["ext", xdr2.lookup("TransactionHistoryEntryExt")]]);
      xdr2.union("TransactionHistoryResultEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("TransactionHistoryResultEntry", [["ledgerSeq", xdr2.lookup("Uint32")], ["txResultSet", xdr2.lookup("TransactionResultSet")], ["ext", xdr2.lookup("TransactionHistoryResultEntryExt")]]);
      xdr2.union("LedgerHeaderHistoryEntryExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("LedgerHeaderHistoryEntry", [["hash", xdr2.lookup("Hash")], ["header", xdr2.lookup("LedgerHeader")], ["ext", xdr2.lookup("LedgerHeaderHistoryEntryExt")]]);
      xdr2.struct("LedgerScpMessages", [["ledgerSeq", xdr2.lookup("Uint32")], ["messages", xdr2.varArray(xdr2.lookup("ScpEnvelope"), 2147483647)]]);
      xdr2.struct("ScpHistoryEntryV0", [["quorumSets", xdr2.varArray(xdr2.lookup("ScpQuorumSet"), 2147483647)], ["ledgerMessages", xdr2.lookup("LedgerScpMessages")]]);
      xdr2.union("ScpHistoryEntry", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, "v0"]],
        arms: {
          v0: xdr2.lookup("ScpHistoryEntryV0")
        }
      });
      xdr2["enum"]("LedgerEntryChangeType", {
        ledgerEntryCreated: 0,
        ledgerEntryUpdated: 1,
        ledgerEntryRemoved: 2,
        ledgerEntryState: 3
      });
      xdr2.union("LedgerEntryChange", {
        switchOn: xdr2.lookup("LedgerEntryChangeType"),
        switchName: "type",
        switches: [["ledgerEntryCreated", "created"], ["ledgerEntryUpdated", "updated"], ["ledgerEntryRemoved", "removed"], ["ledgerEntryState", "state"]],
        arms: {
          created: xdr2.lookup("LedgerEntry"),
          updated: xdr2.lookup("LedgerEntry"),
          removed: xdr2.lookup("LedgerKey"),
          state: xdr2.lookup("LedgerEntry")
        }
      });
      xdr2.typedef("LedgerEntryChanges", xdr2.varArray(xdr2.lookup("LedgerEntryChange"), 2147483647));
      xdr2.struct("OperationMeta", [["changes", xdr2.lookup("LedgerEntryChanges")]]);
      xdr2.struct("TransactionMetaV1", [["txChanges", xdr2.lookup("LedgerEntryChanges")], ["operations", xdr2.varArray(xdr2.lookup("OperationMeta"), 2147483647)]]);
      xdr2.struct("TransactionMetaV2", [["txChangesBefore", xdr2.lookup("LedgerEntryChanges")], ["operations", xdr2.varArray(xdr2.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", xdr2.lookup("LedgerEntryChanges")]]);
      xdr2["enum"]("ContractEventType", {
        system: 0,
        contract: 1,
        diagnostic: 2
      });
      xdr2.struct("ContractEventV0", [["topics", xdr2.varArray(xdr2.lookup("ScVal"), 2147483647)], ["data", xdr2.lookup("ScVal")]]);
      xdr2.union("ContractEventBody", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, "v0"]],
        arms: {
          v0: xdr2.lookup("ContractEventV0")
        }
      });
      xdr2.struct("ContractEvent", [["ext", xdr2.lookup("ExtensionPoint")], ["contractId", xdr2.option(xdr2.lookup("Hash"))], ["type", xdr2.lookup("ContractEventType")], ["body", xdr2.lookup("ContractEventBody")]]);
      xdr2.struct("DiagnosticEvent", [["inSuccessfulContractCall", xdr2.bool()], ["event", xdr2.lookup("ContractEvent")]]);
      xdr2.struct("SorobanTransactionMetaExtV1", [["ext", xdr2.lookup("ExtensionPoint")], ["totalNonRefundableResourceFeeCharged", xdr2.lookup("Int64")], ["totalRefundableResourceFeeCharged", xdr2.lookup("Int64")], ["rentFeeCharged", xdr2.lookup("Int64")]]);
      xdr2.union("SorobanTransactionMetaExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("SorobanTransactionMetaExtV1")
        }
      });
      xdr2.struct("SorobanTransactionMeta", [["ext", xdr2.lookup("SorobanTransactionMetaExt")], ["events", xdr2.varArray(xdr2.lookup("ContractEvent"), 2147483647)], ["returnValue", xdr2.lookup("ScVal")], ["diagnosticEvents", xdr2.varArray(xdr2.lookup("DiagnosticEvent"), 2147483647)]]);
      xdr2.struct("TransactionMetaV3", [["ext", xdr2.lookup("ExtensionPoint")], ["txChangesBefore", xdr2.lookup("LedgerEntryChanges")], ["operations", xdr2.varArray(xdr2.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", xdr2.lookup("LedgerEntryChanges")], ["sorobanMeta", xdr2.option(xdr2.lookup("SorobanTransactionMeta"))]]);
      xdr2.struct("InvokeHostFunctionSuccessPreImage", [["returnValue", xdr2.lookup("ScVal")], ["events", xdr2.varArray(xdr2.lookup("ContractEvent"), 2147483647)]]);
      xdr2.union("TransactionMeta", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, "operations"], [1, "v1"], [2, "v2"], [3, "v3"]],
        arms: {
          operations: xdr2.varArray(xdr2.lookup("OperationMeta"), 2147483647),
          v1: xdr2.lookup("TransactionMetaV1"),
          v2: xdr2.lookup("TransactionMetaV2"),
          v3: xdr2.lookup("TransactionMetaV3")
        }
      });
      xdr2.struct("TransactionResultMeta", [["result", xdr2.lookup("TransactionResultPair")], ["feeProcessing", xdr2.lookup("LedgerEntryChanges")], ["txApplyProcessing", xdr2.lookup("TransactionMeta")]]);
      xdr2.struct("UpgradeEntryMeta", [["upgrade", xdr2.lookup("LedgerUpgrade")], ["changes", xdr2.lookup("LedgerEntryChanges")]]);
      xdr2.struct("LedgerCloseMetaV0", [["ledgerHeader", xdr2.lookup("LedgerHeaderHistoryEntry")], ["txSet", xdr2.lookup("TransactionSet")], ["txProcessing", xdr2.varArray(xdr2.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", xdr2.varArray(xdr2.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", xdr2.varArray(xdr2.lookup("ScpHistoryEntry"), 2147483647)]]);
      xdr2.struct("LedgerCloseMetaExtV1", [["ext", xdr2.lookup("ExtensionPoint")], ["sorobanFeeWrite1Kb", xdr2.lookup("Int64")]]);
      xdr2.union("LedgerCloseMetaExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "v1"]],
        arms: {
          v1: xdr2.lookup("LedgerCloseMetaExtV1")
        }
      });
      xdr2.struct("LedgerCloseMetaV1", [["ext", xdr2.lookup("LedgerCloseMetaExt")], ["ledgerHeader", xdr2.lookup("LedgerHeaderHistoryEntry")], ["txSet", xdr2.lookup("GeneralizedTransactionSet")], ["txProcessing", xdr2.varArray(xdr2.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", xdr2.varArray(xdr2.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", xdr2.varArray(xdr2.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfBucketList", xdr2.lookup("Uint64")], ["evictedTemporaryLedgerKeys", xdr2.varArray(xdr2.lookup("LedgerKey"), 2147483647)], ["evictedPersistentLedgerEntries", xdr2.varArray(xdr2.lookup("LedgerEntry"), 2147483647)]]);
      xdr2.union("LedgerCloseMeta", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, "v0"], [1, "v1"]],
        arms: {
          v0: xdr2.lookup("LedgerCloseMetaV0"),
          v1: xdr2.lookup("LedgerCloseMetaV1")
        }
      });
      xdr2["enum"]("ErrorCode", {
        errMisc: 0,
        errData: 1,
        errConf: 2,
        errAuth: 3,
        errLoad: 4
      });
      xdr2.struct("Error", [["code", xdr2.lookup("ErrorCode")], ["msg", xdr2.string(100)]]);
      xdr2.struct("SendMore", [["numMessages", xdr2.lookup("Uint32")]]);
      xdr2.struct("SendMoreExtended", [["numMessages", xdr2.lookup("Uint32")], ["numBytes", xdr2.lookup("Uint32")]]);
      xdr2.struct("AuthCert", [["pubkey", xdr2.lookup("Curve25519Public")], ["expiration", xdr2.lookup("Uint64")], ["sig", xdr2.lookup("Signature")]]);
      xdr2.struct("Hello", [["ledgerVersion", xdr2.lookup("Uint32")], ["overlayVersion", xdr2.lookup("Uint32")], ["overlayMinVersion", xdr2.lookup("Uint32")], ["networkId", xdr2.lookup("Hash")], ["versionStr", xdr2.string(100)], ["listeningPort", xdr2["int"]()], ["peerId", xdr2.lookup("NodeId")], ["cert", xdr2.lookup("AuthCert")], ["nonce", xdr2.lookup("Uint256")]]);
      xdr2["const"]("AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED", 200);
      xdr2.struct("Auth", [["flags", xdr2["int"]()]]);
      xdr2["enum"]("IpAddrType", {
        iPv4: 0,
        iPv6: 1
      });
      xdr2.union("PeerAddressIp", {
        switchOn: xdr2.lookup("IpAddrType"),
        switchName: "type",
        switches: [["iPv4", "ipv4"], ["iPv6", "ipv6"]],
        arms: {
          ipv4: xdr2.opaque(4),
          ipv6: xdr2.opaque(16)
        }
      });
      xdr2.struct("PeerAddress", [["ip", xdr2.lookup("PeerAddressIp")], ["port", xdr2.lookup("Uint32")], ["numFailures", xdr2.lookup("Uint32")]]);
      xdr2["enum"]("MessageType", {
        errorMsg: 0,
        auth: 2,
        dontHave: 3,
        getPeers: 4,
        peers: 5,
        getTxSet: 6,
        txSet: 7,
        generalizedTxSet: 17,
        transaction: 8,
        getScpQuorumset: 9,
        scpQuorumset: 10,
        scpMessage: 11,
        getScpState: 12,
        hello: 13,
        surveyRequest: 14,
        surveyResponse: 15,
        sendMore: 16,
        sendMoreExtended: 20,
        floodAdvert: 18,
        floodDemand: 19
      });
      xdr2.struct("DontHave", [["type", xdr2.lookup("MessageType")], ["reqHash", xdr2.lookup("Uint256")]]);
      xdr2["enum"]("SurveyMessageCommandType", {
        surveyTopology: 0
      });
      xdr2["enum"]("SurveyMessageResponseType", {
        surveyTopologyResponseV0: 0,
        surveyTopologyResponseV1: 1
      });
      xdr2.struct("SurveyRequestMessage", [["surveyorPeerId", xdr2.lookup("NodeId")], ["surveyedPeerId", xdr2.lookup("NodeId")], ["ledgerNum", xdr2.lookup("Uint32")], ["encryptionKey", xdr2.lookup("Curve25519Public")], ["commandType", xdr2.lookup("SurveyMessageCommandType")]]);
      xdr2.struct("SignedSurveyRequestMessage", [["requestSignature", xdr2.lookup("Signature")], ["request", xdr2.lookup("SurveyRequestMessage")]]);
      xdr2.typedef("EncryptedBody", xdr2.varOpaque(64e3));
      xdr2.struct("SurveyResponseMessage", [["surveyorPeerId", xdr2.lookup("NodeId")], ["surveyedPeerId", xdr2.lookup("NodeId")], ["ledgerNum", xdr2.lookup("Uint32")], ["commandType", xdr2.lookup("SurveyMessageCommandType")], ["encryptedBody", xdr2.lookup("EncryptedBody")]]);
      xdr2.struct("SignedSurveyResponseMessage", [["responseSignature", xdr2.lookup("Signature")], ["response", xdr2.lookup("SurveyResponseMessage")]]);
      xdr2.struct("PeerStats", [["id", xdr2.lookup("NodeId")], ["versionStr", xdr2.string(100)], ["messagesRead", xdr2.lookup("Uint64")], ["messagesWritten", xdr2.lookup("Uint64")], ["bytesRead", xdr2.lookup("Uint64")], ["bytesWritten", xdr2.lookup("Uint64")], ["secondsConnected", xdr2.lookup("Uint64")], ["uniqueFloodBytesRecv", xdr2.lookup("Uint64")], ["duplicateFloodBytesRecv", xdr2.lookup("Uint64")], ["uniqueFetchBytesRecv", xdr2.lookup("Uint64")], ["duplicateFetchBytesRecv", xdr2.lookup("Uint64")], ["uniqueFloodMessageRecv", xdr2.lookup("Uint64")], ["duplicateFloodMessageRecv", xdr2.lookup("Uint64")], ["uniqueFetchMessageRecv", xdr2.lookup("Uint64")], ["duplicateFetchMessageRecv", xdr2.lookup("Uint64")]]);
      xdr2.typedef("PeerStatList", xdr2.varArray(xdr2.lookup("PeerStats"), 25));
      xdr2.struct("TopologyResponseBodyV0", [["inboundPeers", xdr2.lookup("PeerStatList")], ["outboundPeers", xdr2.lookup("PeerStatList")], ["totalInboundPeerCount", xdr2.lookup("Uint32")], ["totalOutboundPeerCount", xdr2.lookup("Uint32")]]);
      xdr2.struct("TopologyResponseBodyV1", [["inboundPeers", xdr2.lookup("PeerStatList")], ["outboundPeers", xdr2.lookup("PeerStatList")], ["totalInboundPeerCount", xdr2.lookup("Uint32")], ["totalOutboundPeerCount", xdr2.lookup("Uint32")], ["maxInboundPeerCount", xdr2.lookup("Uint32")], ["maxOutboundPeerCount", xdr2.lookup("Uint32")]]);
      xdr2.union("SurveyResponseBody", {
        switchOn: xdr2.lookup("SurveyMessageResponseType"),
        switchName: "type",
        switches: [["surveyTopologyResponseV0", "topologyResponseBodyV0"], ["surveyTopologyResponseV1", "topologyResponseBodyV1"]],
        arms: {
          topologyResponseBodyV0: xdr2.lookup("TopologyResponseBodyV0"),
          topologyResponseBodyV1: xdr2.lookup("TopologyResponseBodyV1")
        }
      });
      xdr2["const"]("TX_ADVERT_VECTOR_MAX_SIZE", 1e3);
      xdr2.typedef("TxAdvertVector", xdr2.varArray(xdr2.lookup("Hash"), xdr2.lookup("TX_ADVERT_VECTOR_MAX_SIZE")));
      xdr2.struct("FloodAdvert", [["txHashes", xdr2.lookup("TxAdvertVector")]]);
      xdr2["const"]("TX_DEMAND_VECTOR_MAX_SIZE", 1e3);
      xdr2.typedef("TxDemandVector", xdr2.varArray(xdr2.lookup("Hash"), xdr2.lookup("TX_DEMAND_VECTOR_MAX_SIZE")));
      xdr2.struct("FloodDemand", [["txHashes", xdr2.lookup("TxDemandVector")]]);
      xdr2.union("StellarMessage", {
        switchOn: xdr2.lookup("MessageType"),
        switchName: "type",
        switches: [["errorMsg", "error"], ["hello", "hello"], ["auth", "auth"], ["dontHave", "dontHave"], ["getPeers", xdr2["void"]()], ["peers", "peers"], ["getTxSet", "txSetHash"], ["txSet", "txSet"], ["generalizedTxSet", "generalizedTxSet"], ["transaction", "transaction"], ["surveyRequest", "signedSurveyRequestMessage"], ["surveyResponse", "signedSurveyResponseMessage"], ["getScpQuorumset", "qSetHash"], ["scpQuorumset", "qSet"], ["scpMessage", "envelope"], ["getScpState", "getScpLedgerSeq"], ["sendMore", "sendMoreMessage"], ["sendMoreExtended", "sendMoreExtendedMessage"], ["floodAdvert", "floodAdvert"], ["floodDemand", "floodDemand"]],
        arms: {
          error: xdr2.lookup("Error"),
          hello: xdr2.lookup("Hello"),
          auth: xdr2.lookup("Auth"),
          dontHave: xdr2.lookup("DontHave"),
          peers: xdr2.varArray(xdr2.lookup("PeerAddress"), 100),
          txSetHash: xdr2.lookup("Uint256"),
          txSet: xdr2.lookup("TransactionSet"),
          generalizedTxSet: xdr2.lookup("GeneralizedTransactionSet"),
          transaction: xdr2.lookup("TransactionEnvelope"),
          signedSurveyRequestMessage: xdr2.lookup("SignedSurveyRequestMessage"),
          signedSurveyResponseMessage: xdr2.lookup("SignedSurveyResponseMessage"),
          qSetHash: xdr2.lookup("Uint256"),
          qSet: xdr2.lookup("ScpQuorumSet"),
          envelope: xdr2.lookup("ScpEnvelope"),
          getScpLedgerSeq: xdr2.lookup("Uint32"),
          sendMoreMessage: xdr2.lookup("SendMore"),
          sendMoreExtendedMessage: xdr2.lookup("SendMoreExtended"),
          floodAdvert: xdr2.lookup("FloodAdvert"),
          floodDemand: xdr2.lookup("FloodDemand")
        }
      });
      xdr2.struct("AuthenticatedMessageV0", [["sequence", xdr2.lookup("Uint64")], ["message", xdr2.lookup("StellarMessage")], ["mac", xdr2.lookup("HmacSha256Mac")]]);
      xdr2.union("AuthenticatedMessage", {
        switchOn: xdr2.lookup("Uint32"),
        switchName: "v",
        switches: [[0, "v0"]],
        arms: {
          v0: xdr2.lookup("AuthenticatedMessageV0")
        }
      });
      xdr2["const"]("MAX_OPS_PER_TX", 100);
      xdr2.union("LiquidityPoolParameters", {
        switchOn: xdr2.lookup("LiquidityPoolType"),
        switchName: "type",
        switches: [["liquidityPoolConstantProduct", "constantProduct"]],
        arms: {
          constantProduct: xdr2.lookup("LiquidityPoolConstantProductParameters")
        }
      });
      xdr2.struct("MuxedAccountMed25519", [["id", xdr2.lookup("Uint64")], ["ed25519", xdr2.lookup("Uint256")]]);
      xdr2.union("MuxedAccount", {
        switchOn: xdr2.lookup("CryptoKeyType"),
        switchName: "type",
        switches: [["keyTypeEd25519", "ed25519"], ["keyTypeMuxedEd25519", "med25519"]],
        arms: {
          ed25519: xdr2.lookup("Uint256"),
          med25519: xdr2.lookup("MuxedAccountMed25519")
        }
      });
      xdr2.struct("DecoratedSignature", [["hint", xdr2.lookup("SignatureHint")], ["signature", xdr2.lookup("Signature")]]);
      xdr2["enum"]("OperationType", {
        createAccount: 0,
        payment: 1,
        pathPaymentStrictReceive: 2,
        manageSellOffer: 3,
        createPassiveSellOffer: 4,
        setOptions: 5,
        changeTrust: 6,
        allowTrust: 7,
        accountMerge: 8,
        inflation: 9,
        manageData: 10,
        bumpSequence: 11,
        manageBuyOffer: 12,
        pathPaymentStrictSend: 13,
        createClaimableBalance: 14,
        claimClaimableBalance: 15,
        beginSponsoringFutureReserves: 16,
        endSponsoringFutureReserves: 17,
        revokeSponsorship: 18,
        clawback: 19,
        clawbackClaimableBalance: 20,
        setTrustLineFlags: 21,
        liquidityPoolDeposit: 22,
        liquidityPoolWithdraw: 23,
        invokeHostFunction: 24,
        extendFootprintTtl: 25,
        restoreFootprint: 26
      });
      xdr2.struct("CreateAccountOp", [["destination", xdr2.lookup("AccountId")], ["startingBalance", xdr2.lookup("Int64")]]);
      xdr2.struct("PaymentOp", [["destination", xdr2.lookup("MuxedAccount")], ["asset", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")]]);
      xdr2.struct("PathPaymentStrictReceiveOp", [["sendAsset", xdr2.lookup("Asset")], ["sendMax", xdr2.lookup("Int64")], ["destination", xdr2.lookup("MuxedAccount")], ["destAsset", xdr2.lookup("Asset")], ["destAmount", xdr2.lookup("Int64")], ["path", xdr2.varArray(xdr2.lookup("Asset"), 5)]]);
      xdr2.struct("PathPaymentStrictSendOp", [["sendAsset", xdr2.lookup("Asset")], ["sendAmount", xdr2.lookup("Int64")], ["destination", xdr2.lookup("MuxedAccount")], ["destAsset", xdr2.lookup("Asset")], ["destMin", xdr2.lookup("Int64")], ["path", xdr2.varArray(xdr2.lookup("Asset"), 5)]]);
      xdr2.struct("ManageSellOfferOp", [["selling", xdr2.lookup("Asset")], ["buying", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")], ["price", xdr2.lookup("Price")], ["offerId", xdr2.lookup("Int64")]]);
      xdr2.struct("ManageBuyOfferOp", [["selling", xdr2.lookup("Asset")], ["buying", xdr2.lookup("Asset")], ["buyAmount", xdr2.lookup("Int64")], ["price", xdr2.lookup("Price")], ["offerId", xdr2.lookup("Int64")]]);
      xdr2.struct("CreatePassiveSellOfferOp", [["selling", xdr2.lookup("Asset")], ["buying", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")], ["price", xdr2.lookup("Price")]]);
      xdr2.struct("SetOptionsOp", [["inflationDest", xdr2.option(xdr2.lookup("AccountId"))], ["clearFlags", xdr2.option(xdr2.lookup("Uint32"))], ["setFlags", xdr2.option(xdr2.lookup("Uint32"))], ["masterWeight", xdr2.option(xdr2.lookup("Uint32"))], ["lowThreshold", xdr2.option(xdr2.lookup("Uint32"))], ["medThreshold", xdr2.option(xdr2.lookup("Uint32"))], ["highThreshold", xdr2.option(xdr2.lookup("Uint32"))], ["homeDomain", xdr2.option(xdr2.lookup("String32"))], ["signer", xdr2.option(xdr2.lookup("Signer"))]]);
      xdr2.union("ChangeTrustAsset", {
        switchOn: xdr2.lookup("AssetType"),
        switchName: "type",
        switches: [["assetTypeNative", xdr2["void"]()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPool"]],
        arms: {
          alphaNum4: xdr2.lookup("AlphaNum4"),
          alphaNum12: xdr2.lookup("AlphaNum12"),
          liquidityPool: xdr2.lookup("LiquidityPoolParameters")
        }
      });
      xdr2.struct("ChangeTrustOp", [["line", xdr2.lookup("ChangeTrustAsset")], ["limit", xdr2.lookup("Int64")]]);
      xdr2.struct("AllowTrustOp", [["trustor", xdr2.lookup("AccountId")], ["asset", xdr2.lookup("AssetCode")], ["authorize", xdr2.lookup("Uint32")]]);
      xdr2.struct("ManageDataOp", [["dataName", xdr2.lookup("String64")], ["dataValue", xdr2.option(xdr2.lookup("DataValue"))]]);
      xdr2.struct("BumpSequenceOp", [["bumpTo", xdr2.lookup("SequenceNumber")]]);
      xdr2.struct("CreateClaimableBalanceOp", [["asset", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")], ["claimants", xdr2.varArray(xdr2.lookup("Claimant"), 10)]]);
      xdr2.struct("ClaimClaimableBalanceOp", [["balanceId", xdr2.lookup("ClaimableBalanceId")]]);
      xdr2.struct("BeginSponsoringFutureReservesOp", [["sponsoredId", xdr2.lookup("AccountId")]]);
      xdr2["enum"]("RevokeSponsorshipType", {
        revokeSponsorshipLedgerEntry: 0,
        revokeSponsorshipSigner: 1
      });
      xdr2.struct("RevokeSponsorshipOpSigner", [["accountId", xdr2.lookup("AccountId")], ["signerKey", xdr2.lookup("SignerKey")]]);
      xdr2.union("RevokeSponsorshipOp", {
        switchOn: xdr2.lookup("RevokeSponsorshipType"),
        switchName: "type",
        switches: [["revokeSponsorshipLedgerEntry", "ledgerKey"], ["revokeSponsorshipSigner", "signer"]],
        arms: {
          ledgerKey: xdr2.lookup("LedgerKey"),
          signer: xdr2.lookup("RevokeSponsorshipOpSigner")
        }
      });
      xdr2.struct("ClawbackOp", [["asset", xdr2.lookup("Asset")], ["from", xdr2.lookup("MuxedAccount")], ["amount", xdr2.lookup("Int64")]]);
      xdr2.struct("ClawbackClaimableBalanceOp", [["balanceId", xdr2.lookup("ClaimableBalanceId")]]);
      xdr2.struct("SetTrustLineFlagsOp", [["trustor", xdr2.lookup("AccountId")], ["asset", xdr2.lookup("Asset")], ["clearFlags", xdr2.lookup("Uint32")], ["setFlags", xdr2.lookup("Uint32")]]);
      xdr2["const"]("LIQUIDITY_POOL_FEE_V18", 30);
      xdr2.struct("LiquidityPoolDepositOp", [["liquidityPoolId", xdr2.lookup("PoolId")], ["maxAmountA", xdr2.lookup("Int64")], ["maxAmountB", xdr2.lookup("Int64")], ["minPrice", xdr2.lookup("Price")], ["maxPrice", xdr2.lookup("Price")]]);
      xdr2.struct("LiquidityPoolWithdrawOp", [["liquidityPoolId", xdr2.lookup("PoolId")], ["amount", xdr2.lookup("Int64")], ["minAmountA", xdr2.lookup("Int64")], ["minAmountB", xdr2.lookup("Int64")]]);
      xdr2["enum"]("HostFunctionType", {
        hostFunctionTypeInvokeContract: 0,
        hostFunctionTypeCreateContract: 1,
        hostFunctionTypeUploadContractWasm: 2
      });
      xdr2["enum"]("ContractIdPreimageType", {
        contractIdPreimageFromAddress: 0,
        contractIdPreimageFromAsset: 1
      });
      xdr2.struct("ContractIdPreimageFromAddress", [["address", xdr2.lookup("ScAddress")], ["salt", xdr2.lookup("Uint256")]]);
      xdr2.union("ContractIdPreimage", {
        switchOn: xdr2.lookup("ContractIdPreimageType"),
        switchName: "type",
        switches: [["contractIdPreimageFromAddress", "fromAddress"], ["contractIdPreimageFromAsset", "fromAsset"]],
        arms: {
          fromAddress: xdr2.lookup("ContractIdPreimageFromAddress"),
          fromAsset: xdr2.lookup("Asset")
        }
      });
      xdr2.struct("CreateContractArgs", [["contractIdPreimage", xdr2.lookup("ContractIdPreimage")], ["executable", xdr2.lookup("ContractExecutable")]]);
      xdr2.struct("InvokeContractArgs", [["contractAddress", xdr2.lookup("ScAddress")], ["functionName", xdr2.lookup("ScSymbol")], ["args", xdr2.varArray(xdr2.lookup("ScVal"), 2147483647)]]);
      xdr2.union("HostFunction", {
        switchOn: xdr2.lookup("HostFunctionType"),
        switchName: "type",
        switches: [["hostFunctionTypeInvokeContract", "invokeContract"], ["hostFunctionTypeCreateContract", "createContract"], ["hostFunctionTypeUploadContractWasm", "wasm"]],
        arms: {
          invokeContract: xdr2.lookup("InvokeContractArgs"),
          createContract: xdr2.lookup("CreateContractArgs"),
          wasm: xdr2.varOpaque()
        }
      });
      xdr2["enum"]("SorobanAuthorizedFunctionType", {
        sorobanAuthorizedFunctionTypeContractFn: 0,
        sorobanAuthorizedFunctionTypeCreateContractHostFn: 1
      });
      xdr2.union("SorobanAuthorizedFunction", {
        switchOn: xdr2.lookup("SorobanAuthorizedFunctionType"),
        switchName: "type",
        switches: [["sorobanAuthorizedFunctionTypeContractFn", "contractFn"], ["sorobanAuthorizedFunctionTypeCreateContractHostFn", "createContractHostFn"]],
        arms: {
          contractFn: xdr2.lookup("InvokeContractArgs"),
          createContractHostFn: xdr2.lookup("CreateContractArgs")
        }
      });
      xdr2.struct("SorobanAuthorizedInvocation", [["function", xdr2.lookup("SorobanAuthorizedFunction")], ["subInvocations", xdr2.varArray(xdr2.lookup("SorobanAuthorizedInvocation"), 2147483647)]]);
      xdr2.struct("SorobanAddressCredentials", [["address", xdr2.lookup("ScAddress")], ["nonce", xdr2.lookup("Int64")], ["signatureExpirationLedger", xdr2.lookup("Uint32")], ["signature", xdr2.lookup("ScVal")]]);
      xdr2["enum"]("SorobanCredentialsType", {
        sorobanCredentialsSourceAccount: 0,
        sorobanCredentialsAddress: 1
      });
      xdr2.union("SorobanCredentials", {
        switchOn: xdr2.lookup("SorobanCredentialsType"),
        switchName: "type",
        switches: [["sorobanCredentialsSourceAccount", xdr2["void"]()], ["sorobanCredentialsAddress", "address"]],
        arms: {
          address: xdr2.lookup("SorobanAddressCredentials")
        }
      });
      xdr2.struct("SorobanAuthorizationEntry", [["credentials", xdr2.lookup("SorobanCredentials")], ["rootInvocation", xdr2.lookup("SorobanAuthorizedInvocation")]]);
      xdr2.struct("InvokeHostFunctionOp", [["hostFunction", xdr2.lookup("HostFunction")], ["auth", xdr2.varArray(xdr2.lookup("SorobanAuthorizationEntry"), 2147483647)]]);
      xdr2.struct("ExtendFootprintTtlOp", [["ext", xdr2.lookup("ExtensionPoint")], ["extendTo", xdr2.lookup("Uint32")]]);
      xdr2.struct("RestoreFootprintOp", [["ext", xdr2.lookup("ExtensionPoint")]]);
      xdr2.union("OperationBody", {
        switchOn: xdr2.lookup("OperationType"),
        switchName: "type",
        switches: [["createAccount", "createAccountOp"], ["payment", "paymentOp"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveOp"], ["manageSellOffer", "manageSellOfferOp"], ["createPassiveSellOffer", "createPassiveSellOfferOp"], ["setOptions", "setOptionsOp"], ["changeTrust", "changeTrustOp"], ["allowTrust", "allowTrustOp"], ["accountMerge", "destination"], ["inflation", xdr2["void"]()], ["manageData", "manageDataOp"], ["bumpSequence", "bumpSequenceOp"], ["manageBuyOffer", "manageBuyOfferOp"], ["pathPaymentStrictSend", "pathPaymentStrictSendOp"], ["createClaimableBalance", "createClaimableBalanceOp"], ["claimClaimableBalance", "claimClaimableBalanceOp"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesOp"], ["endSponsoringFutureReserves", xdr2["void"]()], ["revokeSponsorship", "revokeSponsorshipOp"], ["clawback", "clawbackOp"], ["clawbackClaimableBalance", "clawbackClaimableBalanceOp"], ["setTrustLineFlags", "setTrustLineFlagsOp"], ["liquidityPoolDeposit", "liquidityPoolDepositOp"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawOp"], ["invokeHostFunction", "invokeHostFunctionOp"], ["extendFootprintTtl", "extendFootprintTtlOp"], ["restoreFootprint", "restoreFootprintOp"]],
        arms: {
          createAccountOp: xdr2.lookup("CreateAccountOp"),
          paymentOp: xdr2.lookup("PaymentOp"),
          pathPaymentStrictReceiveOp: xdr2.lookup("PathPaymentStrictReceiveOp"),
          manageSellOfferOp: xdr2.lookup("ManageSellOfferOp"),
          createPassiveSellOfferOp: xdr2.lookup("CreatePassiveSellOfferOp"),
          setOptionsOp: xdr2.lookup("SetOptionsOp"),
          changeTrustOp: xdr2.lookup("ChangeTrustOp"),
          allowTrustOp: xdr2.lookup("AllowTrustOp"),
          destination: xdr2.lookup("MuxedAccount"),
          manageDataOp: xdr2.lookup("ManageDataOp"),
          bumpSequenceOp: xdr2.lookup("BumpSequenceOp"),
          manageBuyOfferOp: xdr2.lookup("ManageBuyOfferOp"),
          pathPaymentStrictSendOp: xdr2.lookup("PathPaymentStrictSendOp"),
          createClaimableBalanceOp: xdr2.lookup("CreateClaimableBalanceOp"),
          claimClaimableBalanceOp: xdr2.lookup("ClaimClaimableBalanceOp"),
          beginSponsoringFutureReservesOp: xdr2.lookup("BeginSponsoringFutureReservesOp"),
          revokeSponsorshipOp: xdr2.lookup("RevokeSponsorshipOp"),
          clawbackOp: xdr2.lookup("ClawbackOp"),
          clawbackClaimableBalanceOp: xdr2.lookup("ClawbackClaimableBalanceOp"),
          setTrustLineFlagsOp: xdr2.lookup("SetTrustLineFlagsOp"),
          liquidityPoolDepositOp: xdr2.lookup("LiquidityPoolDepositOp"),
          liquidityPoolWithdrawOp: xdr2.lookup("LiquidityPoolWithdrawOp"),
          invokeHostFunctionOp: xdr2.lookup("InvokeHostFunctionOp"),
          extendFootprintTtlOp: xdr2.lookup("ExtendFootprintTtlOp"),
          restoreFootprintOp: xdr2.lookup("RestoreFootprintOp")
        }
      });
      xdr2.struct("Operation", [["sourceAccount", xdr2.option(xdr2.lookup("MuxedAccount"))], ["body", xdr2.lookup("OperationBody")]]);
      xdr2.struct("HashIdPreimageOperationId", [["sourceAccount", xdr2.lookup("AccountId")], ["seqNum", xdr2.lookup("SequenceNumber")], ["opNum", xdr2.lookup("Uint32")]]);
      xdr2.struct("HashIdPreimageRevokeId", [["sourceAccount", xdr2.lookup("AccountId")], ["seqNum", xdr2.lookup("SequenceNumber")], ["opNum", xdr2.lookup("Uint32")], ["liquidityPoolId", xdr2.lookup("PoolId")], ["asset", xdr2.lookup("Asset")]]);
      xdr2.struct("HashIdPreimageContractId", [["networkId", xdr2.lookup("Hash")], ["contractIdPreimage", xdr2.lookup("ContractIdPreimage")]]);
      xdr2.struct("HashIdPreimageSorobanAuthorization", [["networkId", xdr2.lookup("Hash")], ["nonce", xdr2.lookup("Int64")], ["signatureExpirationLedger", xdr2.lookup("Uint32")], ["invocation", xdr2.lookup("SorobanAuthorizedInvocation")]]);
      xdr2.union("HashIdPreimage", {
        switchOn: xdr2.lookup("EnvelopeType"),
        switchName: "type",
        switches: [["envelopeTypeOpId", "operationId"], ["envelopeTypePoolRevokeOpId", "revokeId"], ["envelopeTypeContractId", "contractId"], ["envelopeTypeSorobanAuthorization", "sorobanAuthorization"]],
        arms: {
          operationId: xdr2.lookup("HashIdPreimageOperationId"),
          revokeId: xdr2.lookup("HashIdPreimageRevokeId"),
          contractId: xdr2.lookup("HashIdPreimageContractId"),
          sorobanAuthorization: xdr2.lookup("HashIdPreimageSorobanAuthorization")
        }
      });
      xdr2["enum"]("MemoType", {
        memoNone: 0,
        memoText: 1,
        memoId: 2,
        memoHash: 3,
        memoReturn: 4
      });
      xdr2.union("Memo", {
        switchOn: xdr2.lookup("MemoType"),
        switchName: "type",
        switches: [["memoNone", xdr2["void"]()], ["memoText", "text"], ["memoId", "id"], ["memoHash", "hash"], ["memoReturn", "retHash"]],
        arms: {
          text: xdr2.string(28),
          id: xdr2.lookup("Uint64"),
          hash: xdr2.lookup("Hash"),
          retHash: xdr2.lookup("Hash")
        }
      });
      xdr2.struct("TimeBounds", [["minTime", xdr2.lookup("TimePoint")], ["maxTime", xdr2.lookup("TimePoint")]]);
      xdr2.struct("LedgerBounds", [["minLedger", xdr2.lookup("Uint32")], ["maxLedger", xdr2.lookup("Uint32")]]);
      xdr2.struct("PreconditionsV2", [["timeBounds", xdr2.option(xdr2.lookup("TimeBounds"))], ["ledgerBounds", xdr2.option(xdr2.lookup("LedgerBounds"))], ["minSeqNum", xdr2.option(xdr2.lookup("SequenceNumber"))], ["minSeqAge", xdr2.lookup("Duration")], ["minSeqLedgerGap", xdr2.lookup("Uint32")], ["extraSigners", xdr2.varArray(xdr2.lookup("SignerKey"), 2)]]);
      xdr2["enum"]("PreconditionType", {
        precondNone: 0,
        precondTime: 1,
        precondV2: 2
      });
      xdr2.union("Preconditions", {
        switchOn: xdr2.lookup("PreconditionType"),
        switchName: "type",
        switches: [["precondNone", xdr2["void"]()], ["precondTime", "timeBounds"], ["precondV2", "v2"]],
        arms: {
          timeBounds: xdr2.lookup("TimeBounds"),
          v2: xdr2.lookup("PreconditionsV2")
        }
      });
      xdr2.struct("LedgerFootprint", [["readOnly", xdr2.varArray(xdr2.lookup("LedgerKey"), 2147483647)], ["readWrite", xdr2.varArray(xdr2.lookup("LedgerKey"), 2147483647)]]);
      xdr2.struct("SorobanResources", [["footprint", xdr2.lookup("LedgerFootprint")], ["instructions", xdr2.lookup("Uint32")], ["readBytes", xdr2.lookup("Uint32")], ["writeBytes", xdr2.lookup("Uint32")]]);
      xdr2.struct("SorobanTransactionData", [["ext", xdr2.lookup("ExtensionPoint")], ["resources", xdr2.lookup("SorobanResources")], ["resourceFee", xdr2.lookup("Int64")]]);
      xdr2.union("TransactionV0Ext", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("TransactionV0", [["sourceAccountEd25519", xdr2.lookup("Uint256")], ["fee", xdr2.lookup("Uint32")], ["seqNum", xdr2.lookup("SequenceNumber")], ["timeBounds", xdr2.option(xdr2.lookup("TimeBounds"))], ["memo", xdr2.lookup("Memo")], ["operations", xdr2.varArray(xdr2.lookup("Operation"), xdr2.lookup("MAX_OPS_PER_TX"))], ["ext", xdr2.lookup("TransactionV0Ext")]]);
      xdr2.struct("TransactionV0Envelope", [["tx", xdr2.lookup("TransactionV0")], ["signatures", xdr2.varArray(xdr2.lookup("DecoratedSignature"), 20)]]);
      xdr2.union("TransactionExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()], [1, "sorobanData"]],
        arms: {
          sorobanData: xdr2.lookup("SorobanTransactionData")
        }
      });
      xdr2.struct("Transaction", [["sourceAccount", xdr2.lookup("MuxedAccount")], ["fee", xdr2.lookup("Uint32")], ["seqNum", xdr2.lookup("SequenceNumber")], ["cond", xdr2.lookup("Preconditions")], ["memo", xdr2.lookup("Memo")], ["operations", xdr2.varArray(xdr2.lookup("Operation"), xdr2.lookup("MAX_OPS_PER_TX"))], ["ext", xdr2.lookup("TransactionExt")]]);
      xdr2.struct("TransactionV1Envelope", [["tx", xdr2.lookup("Transaction")], ["signatures", xdr2.varArray(xdr2.lookup("DecoratedSignature"), 20)]]);
      xdr2.union("FeeBumpTransactionInnerTx", {
        switchOn: xdr2.lookup("EnvelopeType"),
        switchName: "type",
        switches: [["envelopeTypeTx", "v1"]],
        arms: {
          v1: xdr2.lookup("TransactionV1Envelope")
        }
      });
      xdr2.union("FeeBumpTransactionExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("FeeBumpTransaction", [["feeSource", xdr2.lookup("MuxedAccount")], ["fee", xdr2.lookup("Int64")], ["innerTx", xdr2.lookup("FeeBumpTransactionInnerTx")], ["ext", xdr2.lookup("FeeBumpTransactionExt")]]);
      xdr2.struct("FeeBumpTransactionEnvelope", [["tx", xdr2.lookup("FeeBumpTransaction")], ["signatures", xdr2.varArray(xdr2.lookup("DecoratedSignature"), 20)]]);
      xdr2.union("TransactionEnvelope", {
        switchOn: xdr2.lookup("EnvelopeType"),
        switchName: "type",
        switches: [["envelopeTypeTxV0", "v0"], ["envelopeTypeTx", "v1"], ["envelopeTypeTxFeeBump", "feeBump"]],
        arms: {
          v0: xdr2.lookup("TransactionV0Envelope"),
          v1: xdr2.lookup("TransactionV1Envelope"),
          feeBump: xdr2.lookup("FeeBumpTransactionEnvelope")
        }
      });
      xdr2.union("TransactionSignaturePayloadTaggedTransaction", {
        switchOn: xdr2.lookup("EnvelopeType"),
        switchName: "type",
        switches: [["envelopeTypeTx", "tx"], ["envelopeTypeTxFeeBump", "feeBump"]],
        arms: {
          tx: xdr2.lookup("Transaction"),
          feeBump: xdr2.lookup("FeeBumpTransaction")
        }
      });
      xdr2.struct("TransactionSignaturePayload", [["networkId", xdr2.lookup("Hash")], ["taggedTransaction", xdr2.lookup("TransactionSignaturePayloadTaggedTransaction")]]);
      xdr2["enum"]("ClaimAtomType", {
        claimAtomTypeV0: 0,
        claimAtomTypeOrderBook: 1,
        claimAtomTypeLiquidityPool: 2
      });
      xdr2.struct("ClaimOfferAtomV0", [["sellerEd25519", xdr2.lookup("Uint256")], ["offerId", xdr2.lookup("Int64")], ["assetSold", xdr2.lookup("Asset")], ["amountSold", xdr2.lookup("Int64")], ["assetBought", xdr2.lookup("Asset")], ["amountBought", xdr2.lookup("Int64")]]);
      xdr2.struct("ClaimOfferAtom", [["sellerId", xdr2.lookup("AccountId")], ["offerId", xdr2.lookup("Int64")], ["assetSold", xdr2.lookup("Asset")], ["amountSold", xdr2.lookup("Int64")], ["assetBought", xdr2.lookup("Asset")], ["amountBought", xdr2.lookup("Int64")]]);
      xdr2.struct("ClaimLiquidityAtom", [["liquidityPoolId", xdr2.lookup("PoolId")], ["assetSold", xdr2.lookup("Asset")], ["amountSold", xdr2.lookup("Int64")], ["assetBought", xdr2.lookup("Asset")], ["amountBought", xdr2.lookup("Int64")]]);
      xdr2.union("ClaimAtom", {
        switchOn: xdr2.lookup("ClaimAtomType"),
        switchName: "type",
        switches: [["claimAtomTypeV0", "v0"], ["claimAtomTypeOrderBook", "orderBook"], ["claimAtomTypeLiquidityPool", "liquidityPool"]],
        arms: {
          v0: xdr2.lookup("ClaimOfferAtomV0"),
          orderBook: xdr2.lookup("ClaimOfferAtom"),
          liquidityPool: xdr2.lookup("ClaimLiquidityAtom")
        }
      });
      xdr2["enum"]("CreateAccountResultCode", {
        createAccountSuccess: 0,
        createAccountMalformed: -1,
        createAccountUnderfunded: -2,
        createAccountLowReserve: -3,
        createAccountAlreadyExist: -4
      });
      xdr2.union("CreateAccountResult", {
        switchOn: xdr2.lookup("CreateAccountResultCode"),
        switchName: "code",
        switches: [["createAccountSuccess", xdr2["void"]()], ["createAccountMalformed", xdr2["void"]()], ["createAccountUnderfunded", xdr2["void"]()], ["createAccountLowReserve", xdr2["void"]()], ["createAccountAlreadyExist", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("PaymentResultCode", {
        paymentSuccess: 0,
        paymentMalformed: -1,
        paymentUnderfunded: -2,
        paymentSrcNoTrust: -3,
        paymentSrcNotAuthorized: -4,
        paymentNoDestination: -5,
        paymentNoTrust: -6,
        paymentNotAuthorized: -7,
        paymentLineFull: -8,
        paymentNoIssuer: -9
      });
      xdr2.union("PaymentResult", {
        switchOn: xdr2.lookup("PaymentResultCode"),
        switchName: "code",
        switches: [["paymentSuccess", xdr2["void"]()], ["paymentMalformed", xdr2["void"]()], ["paymentUnderfunded", xdr2["void"]()], ["paymentSrcNoTrust", xdr2["void"]()], ["paymentSrcNotAuthorized", xdr2["void"]()], ["paymentNoDestination", xdr2["void"]()], ["paymentNoTrust", xdr2["void"]()], ["paymentNotAuthorized", xdr2["void"]()], ["paymentLineFull", xdr2["void"]()], ["paymentNoIssuer", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("PathPaymentStrictReceiveResultCode", {
        pathPaymentStrictReceiveSuccess: 0,
        pathPaymentStrictReceiveMalformed: -1,
        pathPaymentStrictReceiveUnderfunded: -2,
        pathPaymentStrictReceiveSrcNoTrust: -3,
        pathPaymentStrictReceiveSrcNotAuthorized: -4,
        pathPaymentStrictReceiveNoDestination: -5,
        pathPaymentStrictReceiveNoTrust: -6,
        pathPaymentStrictReceiveNotAuthorized: -7,
        pathPaymentStrictReceiveLineFull: -8,
        pathPaymentStrictReceiveNoIssuer: -9,
        pathPaymentStrictReceiveTooFewOffers: -10,
        pathPaymentStrictReceiveOfferCrossSelf: -11,
        pathPaymentStrictReceiveOverSendmax: -12
      });
      xdr2.struct("SimplePaymentResult", [["destination", xdr2.lookup("AccountId")], ["asset", xdr2.lookup("Asset")], ["amount", xdr2.lookup("Int64")]]);
      xdr2.struct("PathPaymentStrictReceiveResultSuccess", [["offers", xdr2.varArray(xdr2.lookup("ClaimAtom"), 2147483647)], ["last", xdr2.lookup("SimplePaymentResult")]]);
      xdr2.union("PathPaymentStrictReceiveResult", {
        switchOn: xdr2.lookup("PathPaymentStrictReceiveResultCode"),
        switchName: "code",
        switches: [["pathPaymentStrictReceiveSuccess", "success"], ["pathPaymentStrictReceiveMalformed", xdr2["void"]()], ["pathPaymentStrictReceiveUnderfunded", xdr2["void"]()], ["pathPaymentStrictReceiveSrcNoTrust", xdr2["void"]()], ["pathPaymentStrictReceiveSrcNotAuthorized", xdr2["void"]()], ["pathPaymentStrictReceiveNoDestination", xdr2["void"]()], ["pathPaymentStrictReceiveNoTrust", xdr2["void"]()], ["pathPaymentStrictReceiveNotAuthorized", xdr2["void"]()], ["pathPaymentStrictReceiveLineFull", xdr2["void"]()], ["pathPaymentStrictReceiveNoIssuer", "noIssuer"], ["pathPaymentStrictReceiveTooFewOffers", xdr2["void"]()], ["pathPaymentStrictReceiveOfferCrossSelf", xdr2["void"]()], ["pathPaymentStrictReceiveOverSendmax", xdr2["void"]()]],
        arms: {
          success: xdr2.lookup("PathPaymentStrictReceiveResultSuccess"),
          noIssuer: xdr2.lookup("Asset")
        }
      });
      xdr2["enum"]("PathPaymentStrictSendResultCode", {
        pathPaymentStrictSendSuccess: 0,
        pathPaymentStrictSendMalformed: -1,
        pathPaymentStrictSendUnderfunded: -2,
        pathPaymentStrictSendSrcNoTrust: -3,
        pathPaymentStrictSendSrcNotAuthorized: -4,
        pathPaymentStrictSendNoDestination: -5,
        pathPaymentStrictSendNoTrust: -6,
        pathPaymentStrictSendNotAuthorized: -7,
        pathPaymentStrictSendLineFull: -8,
        pathPaymentStrictSendNoIssuer: -9,
        pathPaymentStrictSendTooFewOffers: -10,
        pathPaymentStrictSendOfferCrossSelf: -11,
        pathPaymentStrictSendUnderDestmin: -12
      });
      xdr2.struct("PathPaymentStrictSendResultSuccess", [["offers", xdr2.varArray(xdr2.lookup("ClaimAtom"), 2147483647)], ["last", xdr2.lookup("SimplePaymentResult")]]);
      xdr2.union("PathPaymentStrictSendResult", {
        switchOn: xdr2.lookup("PathPaymentStrictSendResultCode"),
        switchName: "code",
        switches: [["pathPaymentStrictSendSuccess", "success"], ["pathPaymentStrictSendMalformed", xdr2["void"]()], ["pathPaymentStrictSendUnderfunded", xdr2["void"]()], ["pathPaymentStrictSendSrcNoTrust", xdr2["void"]()], ["pathPaymentStrictSendSrcNotAuthorized", xdr2["void"]()], ["pathPaymentStrictSendNoDestination", xdr2["void"]()], ["pathPaymentStrictSendNoTrust", xdr2["void"]()], ["pathPaymentStrictSendNotAuthorized", xdr2["void"]()], ["pathPaymentStrictSendLineFull", xdr2["void"]()], ["pathPaymentStrictSendNoIssuer", "noIssuer"], ["pathPaymentStrictSendTooFewOffers", xdr2["void"]()], ["pathPaymentStrictSendOfferCrossSelf", xdr2["void"]()], ["pathPaymentStrictSendUnderDestmin", xdr2["void"]()]],
        arms: {
          success: xdr2.lookup("PathPaymentStrictSendResultSuccess"),
          noIssuer: xdr2.lookup("Asset")
        }
      });
      xdr2["enum"]("ManageSellOfferResultCode", {
        manageSellOfferSuccess: 0,
        manageSellOfferMalformed: -1,
        manageSellOfferSellNoTrust: -2,
        manageSellOfferBuyNoTrust: -3,
        manageSellOfferSellNotAuthorized: -4,
        manageSellOfferBuyNotAuthorized: -5,
        manageSellOfferLineFull: -6,
        manageSellOfferUnderfunded: -7,
        manageSellOfferCrossSelf: -8,
        manageSellOfferSellNoIssuer: -9,
        manageSellOfferBuyNoIssuer: -10,
        manageSellOfferNotFound: -11,
        manageSellOfferLowReserve: -12
      });
      xdr2["enum"]("ManageOfferEffect", {
        manageOfferCreated: 0,
        manageOfferUpdated: 1,
        manageOfferDeleted: 2
      });
      xdr2.union("ManageOfferSuccessResultOffer", {
        switchOn: xdr2.lookup("ManageOfferEffect"),
        switchName: "effect",
        switches: [["manageOfferCreated", "offer"], ["manageOfferUpdated", "offer"], ["manageOfferDeleted", xdr2["void"]()]],
        arms: {
          offer: xdr2.lookup("OfferEntry")
        }
      });
      xdr2.struct("ManageOfferSuccessResult", [["offersClaimed", xdr2.varArray(xdr2.lookup("ClaimAtom"), 2147483647)], ["offer", xdr2.lookup("ManageOfferSuccessResultOffer")]]);
      xdr2.union("ManageSellOfferResult", {
        switchOn: xdr2.lookup("ManageSellOfferResultCode"),
        switchName: "code",
        switches: [["manageSellOfferSuccess", "success"], ["manageSellOfferMalformed", xdr2["void"]()], ["manageSellOfferSellNoTrust", xdr2["void"]()], ["manageSellOfferBuyNoTrust", xdr2["void"]()], ["manageSellOfferSellNotAuthorized", xdr2["void"]()], ["manageSellOfferBuyNotAuthorized", xdr2["void"]()], ["manageSellOfferLineFull", xdr2["void"]()], ["manageSellOfferUnderfunded", xdr2["void"]()], ["manageSellOfferCrossSelf", xdr2["void"]()], ["manageSellOfferSellNoIssuer", xdr2["void"]()], ["manageSellOfferBuyNoIssuer", xdr2["void"]()], ["manageSellOfferNotFound", xdr2["void"]()], ["manageSellOfferLowReserve", xdr2["void"]()]],
        arms: {
          success: xdr2.lookup("ManageOfferSuccessResult")
        }
      });
      xdr2["enum"]("ManageBuyOfferResultCode", {
        manageBuyOfferSuccess: 0,
        manageBuyOfferMalformed: -1,
        manageBuyOfferSellNoTrust: -2,
        manageBuyOfferBuyNoTrust: -3,
        manageBuyOfferSellNotAuthorized: -4,
        manageBuyOfferBuyNotAuthorized: -5,
        manageBuyOfferLineFull: -6,
        manageBuyOfferUnderfunded: -7,
        manageBuyOfferCrossSelf: -8,
        manageBuyOfferSellNoIssuer: -9,
        manageBuyOfferBuyNoIssuer: -10,
        manageBuyOfferNotFound: -11,
        manageBuyOfferLowReserve: -12
      });
      xdr2.union("ManageBuyOfferResult", {
        switchOn: xdr2.lookup("ManageBuyOfferResultCode"),
        switchName: "code",
        switches: [["manageBuyOfferSuccess", "success"], ["manageBuyOfferMalformed", xdr2["void"]()], ["manageBuyOfferSellNoTrust", xdr2["void"]()], ["manageBuyOfferBuyNoTrust", xdr2["void"]()], ["manageBuyOfferSellNotAuthorized", xdr2["void"]()], ["manageBuyOfferBuyNotAuthorized", xdr2["void"]()], ["manageBuyOfferLineFull", xdr2["void"]()], ["manageBuyOfferUnderfunded", xdr2["void"]()], ["manageBuyOfferCrossSelf", xdr2["void"]()], ["manageBuyOfferSellNoIssuer", xdr2["void"]()], ["manageBuyOfferBuyNoIssuer", xdr2["void"]()], ["manageBuyOfferNotFound", xdr2["void"]()], ["manageBuyOfferLowReserve", xdr2["void"]()]],
        arms: {
          success: xdr2.lookup("ManageOfferSuccessResult")
        }
      });
      xdr2["enum"]("SetOptionsResultCode", {
        setOptionsSuccess: 0,
        setOptionsLowReserve: -1,
        setOptionsTooManySigners: -2,
        setOptionsBadFlags: -3,
        setOptionsInvalidInflation: -4,
        setOptionsCantChange: -5,
        setOptionsUnknownFlag: -6,
        setOptionsThresholdOutOfRange: -7,
        setOptionsBadSigner: -8,
        setOptionsInvalidHomeDomain: -9,
        setOptionsAuthRevocableRequired: -10
      });
      xdr2.union("SetOptionsResult", {
        switchOn: xdr2.lookup("SetOptionsResultCode"),
        switchName: "code",
        switches: [["setOptionsSuccess", xdr2["void"]()], ["setOptionsLowReserve", xdr2["void"]()], ["setOptionsTooManySigners", xdr2["void"]()], ["setOptionsBadFlags", xdr2["void"]()], ["setOptionsInvalidInflation", xdr2["void"]()], ["setOptionsCantChange", xdr2["void"]()], ["setOptionsUnknownFlag", xdr2["void"]()], ["setOptionsThresholdOutOfRange", xdr2["void"]()], ["setOptionsBadSigner", xdr2["void"]()], ["setOptionsInvalidHomeDomain", xdr2["void"]()], ["setOptionsAuthRevocableRequired", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("ChangeTrustResultCode", {
        changeTrustSuccess: 0,
        changeTrustMalformed: -1,
        changeTrustNoIssuer: -2,
        changeTrustInvalidLimit: -3,
        changeTrustLowReserve: -4,
        changeTrustSelfNotAllowed: -5,
        changeTrustTrustLineMissing: -6,
        changeTrustCannotDelete: -7,
        changeTrustNotAuthMaintainLiabilities: -8
      });
      xdr2.union("ChangeTrustResult", {
        switchOn: xdr2.lookup("ChangeTrustResultCode"),
        switchName: "code",
        switches: [["changeTrustSuccess", xdr2["void"]()], ["changeTrustMalformed", xdr2["void"]()], ["changeTrustNoIssuer", xdr2["void"]()], ["changeTrustInvalidLimit", xdr2["void"]()], ["changeTrustLowReserve", xdr2["void"]()], ["changeTrustSelfNotAllowed", xdr2["void"]()], ["changeTrustTrustLineMissing", xdr2["void"]()], ["changeTrustCannotDelete", xdr2["void"]()], ["changeTrustNotAuthMaintainLiabilities", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("AllowTrustResultCode", {
        allowTrustSuccess: 0,
        allowTrustMalformed: -1,
        allowTrustNoTrustLine: -2,
        allowTrustTrustNotRequired: -3,
        allowTrustCantRevoke: -4,
        allowTrustSelfNotAllowed: -5,
        allowTrustLowReserve: -6
      });
      xdr2.union("AllowTrustResult", {
        switchOn: xdr2.lookup("AllowTrustResultCode"),
        switchName: "code",
        switches: [["allowTrustSuccess", xdr2["void"]()], ["allowTrustMalformed", xdr2["void"]()], ["allowTrustNoTrustLine", xdr2["void"]()], ["allowTrustTrustNotRequired", xdr2["void"]()], ["allowTrustCantRevoke", xdr2["void"]()], ["allowTrustSelfNotAllowed", xdr2["void"]()], ["allowTrustLowReserve", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("AccountMergeResultCode", {
        accountMergeSuccess: 0,
        accountMergeMalformed: -1,
        accountMergeNoAccount: -2,
        accountMergeImmutableSet: -3,
        accountMergeHasSubEntries: -4,
        accountMergeSeqnumTooFar: -5,
        accountMergeDestFull: -6,
        accountMergeIsSponsor: -7
      });
      xdr2.union("AccountMergeResult", {
        switchOn: xdr2.lookup("AccountMergeResultCode"),
        switchName: "code",
        switches: [["accountMergeSuccess", "sourceAccountBalance"], ["accountMergeMalformed", xdr2["void"]()], ["accountMergeNoAccount", xdr2["void"]()], ["accountMergeImmutableSet", xdr2["void"]()], ["accountMergeHasSubEntries", xdr2["void"]()], ["accountMergeSeqnumTooFar", xdr2["void"]()], ["accountMergeDestFull", xdr2["void"]()], ["accountMergeIsSponsor", xdr2["void"]()]],
        arms: {
          sourceAccountBalance: xdr2.lookup("Int64")
        }
      });
      xdr2["enum"]("InflationResultCode", {
        inflationSuccess: 0,
        inflationNotTime: -1
      });
      xdr2.struct("InflationPayout", [["destination", xdr2.lookup("AccountId")], ["amount", xdr2.lookup("Int64")]]);
      xdr2.union("InflationResult", {
        switchOn: xdr2.lookup("InflationResultCode"),
        switchName: "code",
        switches: [["inflationSuccess", "payouts"], ["inflationNotTime", xdr2["void"]()]],
        arms: {
          payouts: xdr2.varArray(xdr2.lookup("InflationPayout"), 2147483647)
        }
      });
      xdr2["enum"]("ManageDataResultCode", {
        manageDataSuccess: 0,
        manageDataNotSupportedYet: -1,
        manageDataNameNotFound: -2,
        manageDataLowReserve: -3,
        manageDataInvalidName: -4
      });
      xdr2.union("ManageDataResult", {
        switchOn: xdr2.lookup("ManageDataResultCode"),
        switchName: "code",
        switches: [["manageDataSuccess", xdr2["void"]()], ["manageDataNotSupportedYet", xdr2["void"]()], ["manageDataNameNotFound", xdr2["void"]()], ["manageDataLowReserve", xdr2["void"]()], ["manageDataInvalidName", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("BumpSequenceResultCode", {
        bumpSequenceSuccess: 0,
        bumpSequenceBadSeq: -1
      });
      xdr2.union("BumpSequenceResult", {
        switchOn: xdr2.lookup("BumpSequenceResultCode"),
        switchName: "code",
        switches: [["bumpSequenceSuccess", xdr2["void"]()], ["bumpSequenceBadSeq", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("CreateClaimableBalanceResultCode", {
        createClaimableBalanceSuccess: 0,
        createClaimableBalanceMalformed: -1,
        createClaimableBalanceLowReserve: -2,
        createClaimableBalanceNoTrust: -3,
        createClaimableBalanceNotAuthorized: -4,
        createClaimableBalanceUnderfunded: -5
      });
      xdr2.union("CreateClaimableBalanceResult", {
        switchOn: xdr2.lookup("CreateClaimableBalanceResultCode"),
        switchName: "code",
        switches: [["createClaimableBalanceSuccess", "balanceId"], ["createClaimableBalanceMalformed", xdr2["void"]()], ["createClaimableBalanceLowReserve", xdr2["void"]()], ["createClaimableBalanceNoTrust", xdr2["void"]()], ["createClaimableBalanceNotAuthorized", xdr2["void"]()], ["createClaimableBalanceUnderfunded", xdr2["void"]()]],
        arms: {
          balanceId: xdr2.lookup("ClaimableBalanceId")
        }
      });
      xdr2["enum"]("ClaimClaimableBalanceResultCode", {
        claimClaimableBalanceSuccess: 0,
        claimClaimableBalanceDoesNotExist: -1,
        claimClaimableBalanceCannotClaim: -2,
        claimClaimableBalanceLineFull: -3,
        claimClaimableBalanceNoTrust: -4,
        claimClaimableBalanceNotAuthorized: -5
      });
      xdr2.union("ClaimClaimableBalanceResult", {
        switchOn: xdr2.lookup("ClaimClaimableBalanceResultCode"),
        switchName: "code",
        switches: [["claimClaimableBalanceSuccess", xdr2["void"]()], ["claimClaimableBalanceDoesNotExist", xdr2["void"]()], ["claimClaimableBalanceCannotClaim", xdr2["void"]()], ["claimClaimableBalanceLineFull", xdr2["void"]()], ["claimClaimableBalanceNoTrust", xdr2["void"]()], ["claimClaimableBalanceNotAuthorized", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("BeginSponsoringFutureReservesResultCode", {
        beginSponsoringFutureReservesSuccess: 0,
        beginSponsoringFutureReservesMalformed: -1,
        beginSponsoringFutureReservesAlreadySponsored: -2,
        beginSponsoringFutureReservesRecursive: -3
      });
      xdr2.union("BeginSponsoringFutureReservesResult", {
        switchOn: xdr2.lookup("BeginSponsoringFutureReservesResultCode"),
        switchName: "code",
        switches: [["beginSponsoringFutureReservesSuccess", xdr2["void"]()], ["beginSponsoringFutureReservesMalformed", xdr2["void"]()], ["beginSponsoringFutureReservesAlreadySponsored", xdr2["void"]()], ["beginSponsoringFutureReservesRecursive", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("EndSponsoringFutureReservesResultCode", {
        endSponsoringFutureReservesSuccess: 0,
        endSponsoringFutureReservesNotSponsored: -1
      });
      xdr2.union("EndSponsoringFutureReservesResult", {
        switchOn: xdr2.lookup("EndSponsoringFutureReservesResultCode"),
        switchName: "code",
        switches: [["endSponsoringFutureReservesSuccess", xdr2["void"]()], ["endSponsoringFutureReservesNotSponsored", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("RevokeSponsorshipResultCode", {
        revokeSponsorshipSuccess: 0,
        revokeSponsorshipDoesNotExist: -1,
        revokeSponsorshipNotSponsor: -2,
        revokeSponsorshipLowReserve: -3,
        revokeSponsorshipOnlyTransferable: -4,
        revokeSponsorshipMalformed: -5
      });
      xdr2.union("RevokeSponsorshipResult", {
        switchOn: xdr2.lookup("RevokeSponsorshipResultCode"),
        switchName: "code",
        switches: [["revokeSponsorshipSuccess", xdr2["void"]()], ["revokeSponsorshipDoesNotExist", xdr2["void"]()], ["revokeSponsorshipNotSponsor", xdr2["void"]()], ["revokeSponsorshipLowReserve", xdr2["void"]()], ["revokeSponsorshipOnlyTransferable", xdr2["void"]()], ["revokeSponsorshipMalformed", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("ClawbackResultCode", {
        clawbackSuccess: 0,
        clawbackMalformed: -1,
        clawbackNotClawbackEnabled: -2,
        clawbackNoTrust: -3,
        clawbackUnderfunded: -4
      });
      xdr2.union("ClawbackResult", {
        switchOn: xdr2.lookup("ClawbackResultCode"),
        switchName: "code",
        switches: [["clawbackSuccess", xdr2["void"]()], ["clawbackMalformed", xdr2["void"]()], ["clawbackNotClawbackEnabled", xdr2["void"]()], ["clawbackNoTrust", xdr2["void"]()], ["clawbackUnderfunded", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("ClawbackClaimableBalanceResultCode", {
        clawbackClaimableBalanceSuccess: 0,
        clawbackClaimableBalanceDoesNotExist: -1,
        clawbackClaimableBalanceNotIssuer: -2,
        clawbackClaimableBalanceNotClawbackEnabled: -3
      });
      xdr2.union("ClawbackClaimableBalanceResult", {
        switchOn: xdr2.lookup("ClawbackClaimableBalanceResultCode"),
        switchName: "code",
        switches: [["clawbackClaimableBalanceSuccess", xdr2["void"]()], ["clawbackClaimableBalanceDoesNotExist", xdr2["void"]()], ["clawbackClaimableBalanceNotIssuer", xdr2["void"]()], ["clawbackClaimableBalanceNotClawbackEnabled", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("SetTrustLineFlagsResultCode", {
        setTrustLineFlagsSuccess: 0,
        setTrustLineFlagsMalformed: -1,
        setTrustLineFlagsNoTrustLine: -2,
        setTrustLineFlagsCantRevoke: -3,
        setTrustLineFlagsInvalidState: -4,
        setTrustLineFlagsLowReserve: -5
      });
      xdr2.union("SetTrustLineFlagsResult", {
        switchOn: xdr2.lookup("SetTrustLineFlagsResultCode"),
        switchName: "code",
        switches: [["setTrustLineFlagsSuccess", xdr2["void"]()], ["setTrustLineFlagsMalformed", xdr2["void"]()], ["setTrustLineFlagsNoTrustLine", xdr2["void"]()], ["setTrustLineFlagsCantRevoke", xdr2["void"]()], ["setTrustLineFlagsInvalidState", xdr2["void"]()], ["setTrustLineFlagsLowReserve", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("LiquidityPoolDepositResultCode", {
        liquidityPoolDepositSuccess: 0,
        liquidityPoolDepositMalformed: -1,
        liquidityPoolDepositNoTrust: -2,
        liquidityPoolDepositNotAuthorized: -3,
        liquidityPoolDepositUnderfunded: -4,
        liquidityPoolDepositLineFull: -5,
        liquidityPoolDepositBadPrice: -6,
        liquidityPoolDepositPoolFull: -7
      });
      xdr2.union("LiquidityPoolDepositResult", {
        switchOn: xdr2.lookup("LiquidityPoolDepositResultCode"),
        switchName: "code",
        switches: [["liquidityPoolDepositSuccess", xdr2["void"]()], ["liquidityPoolDepositMalformed", xdr2["void"]()], ["liquidityPoolDepositNoTrust", xdr2["void"]()], ["liquidityPoolDepositNotAuthorized", xdr2["void"]()], ["liquidityPoolDepositUnderfunded", xdr2["void"]()], ["liquidityPoolDepositLineFull", xdr2["void"]()], ["liquidityPoolDepositBadPrice", xdr2["void"]()], ["liquidityPoolDepositPoolFull", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("LiquidityPoolWithdrawResultCode", {
        liquidityPoolWithdrawSuccess: 0,
        liquidityPoolWithdrawMalformed: -1,
        liquidityPoolWithdrawNoTrust: -2,
        liquidityPoolWithdrawUnderfunded: -3,
        liquidityPoolWithdrawLineFull: -4,
        liquidityPoolWithdrawUnderMinimum: -5
      });
      xdr2.union("LiquidityPoolWithdrawResult", {
        switchOn: xdr2.lookup("LiquidityPoolWithdrawResultCode"),
        switchName: "code",
        switches: [["liquidityPoolWithdrawSuccess", xdr2["void"]()], ["liquidityPoolWithdrawMalformed", xdr2["void"]()], ["liquidityPoolWithdrawNoTrust", xdr2["void"]()], ["liquidityPoolWithdrawUnderfunded", xdr2["void"]()], ["liquidityPoolWithdrawLineFull", xdr2["void"]()], ["liquidityPoolWithdrawUnderMinimum", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("InvokeHostFunctionResultCode", {
        invokeHostFunctionSuccess: 0,
        invokeHostFunctionMalformed: -1,
        invokeHostFunctionTrapped: -2,
        invokeHostFunctionResourceLimitExceeded: -3,
        invokeHostFunctionEntryArchived: -4,
        invokeHostFunctionInsufficientRefundableFee: -5
      });
      xdr2.union("InvokeHostFunctionResult", {
        switchOn: xdr2.lookup("InvokeHostFunctionResultCode"),
        switchName: "code",
        switches: [["invokeHostFunctionSuccess", "success"], ["invokeHostFunctionMalformed", xdr2["void"]()], ["invokeHostFunctionTrapped", xdr2["void"]()], ["invokeHostFunctionResourceLimitExceeded", xdr2["void"]()], ["invokeHostFunctionEntryArchived", xdr2["void"]()], ["invokeHostFunctionInsufficientRefundableFee", xdr2["void"]()]],
        arms: {
          success: xdr2.lookup("Hash")
        }
      });
      xdr2["enum"]("ExtendFootprintTtlResultCode", {
        extendFootprintTtlSuccess: 0,
        extendFootprintTtlMalformed: -1,
        extendFootprintTtlResourceLimitExceeded: -2,
        extendFootprintTtlInsufficientRefundableFee: -3
      });
      xdr2.union("ExtendFootprintTtlResult", {
        switchOn: xdr2.lookup("ExtendFootprintTtlResultCode"),
        switchName: "code",
        switches: [["extendFootprintTtlSuccess", xdr2["void"]()], ["extendFootprintTtlMalformed", xdr2["void"]()], ["extendFootprintTtlResourceLimitExceeded", xdr2["void"]()], ["extendFootprintTtlInsufficientRefundableFee", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("RestoreFootprintResultCode", {
        restoreFootprintSuccess: 0,
        restoreFootprintMalformed: -1,
        restoreFootprintResourceLimitExceeded: -2,
        restoreFootprintInsufficientRefundableFee: -3
      });
      xdr2.union("RestoreFootprintResult", {
        switchOn: xdr2.lookup("RestoreFootprintResultCode"),
        switchName: "code",
        switches: [["restoreFootprintSuccess", xdr2["void"]()], ["restoreFootprintMalformed", xdr2["void"]()], ["restoreFootprintResourceLimitExceeded", xdr2["void"]()], ["restoreFootprintInsufficientRefundableFee", xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("OperationResultCode", {
        opInner: 0,
        opBadAuth: -1,
        opNoAccount: -2,
        opNotSupported: -3,
        opTooManySubentries: -4,
        opExceededWorkLimit: -5,
        opTooManySponsoring: -6
      });
      xdr2.union("OperationResultTr", {
        switchOn: xdr2.lookup("OperationType"),
        switchName: "type",
        switches: [["createAccount", "createAccountResult"], ["payment", "paymentResult"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveResult"], ["manageSellOffer", "manageSellOfferResult"], ["createPassiveSellOffer", "createPassiveSellOfferResult"], ["setOptions", "setOptionsResult"], ["changeTrust", "changeTrustResult"], ["allowTrust", "allowTrustResult"], ["accountMerge", "accountMergeResult"], ["inflation", "inflationResult"], ["manageData", "manageDataResult"], ["bumpSequence", "bumpSeqResult"], ["manageBuyOffer", "manageBuyOfferResult"], ["pathPaymentStrictSend", "pathPaymentStrictSendResult"], ["createClaimableBalance", "createClaimableBalanceResult"], ["claimClaimableBalance", "claimClaimableBalanceResult"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesResult"], ["endSponsoringFutureReserves", "endSponsoringFutureReservesResult"], ["revokeSponsorship", "revokeSponsorshipResult"], ["clawback", "clawbackResult"], ["clawbackClaimableBalance", "clawbackClaimableBalanceResult"], ["setTrustLineFlags", "setTrustLineFlagsResult"], ["liquidityPoolDeposit", "liquidityPoolDepositResult"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawResult"], ["invokeHostFunction", "invokeHostFunctionResult"], ["extendFootprintTtl", "extendFootprintTtlResult"], ["restoreFootprint", "restoreFootprintResult"]],
        arms: {
          createAccountResult: xdr2.lookup("CreateAccountResult"),
          paymentResult: xdr2.lookup("PaymentResult"),
          pathPaymentStrictReceiveResult: xdr2.lookup("PathPaymentStrictReceiveResult"),
          manageSellOfferResult: xdr2.lookup("ManageSellOfferResult"),
          createPassiveSellOfferResult: xdr2.lookup("ManageSellOfferResult"),
          setOptionsResult: xdr2.lookup("SetOptionsResult"),
          changeTrustResult: xdr2.lookup("ChangeTrustResult"),
          allowTrustResult: xdr2.lookup("AllowTrustResult"),
          accountMergeResult: xdr2.lookup("AccountMergeResult"),
          inflationResult: xdr2.lookup("InflationResult"),
          manageDataResult: xdr2.lookup("ManageDataResult"),
          bumpSeqResult: xdr2.lookup("BumpSequenceResult"),
          manageBuyOfferResult: xdr2.lookup("ManageBuyOfferResult"),
          pathPaymentStrictSendResult: xdr2.lookup("PathPaymentStrictSendResult"),
          createClaimableBalanceResult: xdr2.lookup("CreateClaimableBalanceResult"),
          claimClaimableBalanceResult: xdr2.lookup("ClaimClaimableBalanceResult"),
          beginSponsoringFutureReservesResult: xdr2.lookup("BeginSponsoringFutureReservesResult"),
          endSponsoringFutureReservesResult: xdr2.lookup("EndSponsoringFutureReservesResult"),
          revokeSponsorshipResult: xdr2.lookup("RevokeSponsorshipResult"),
          clawbackResult: xdr2.lookup("ClawbackResult"),
          clawbackClaimableBalanceResult: xdr2.lookup("ClawbackClaimableBalanceResult"),
          setTrustLineFlagsResult: xdr2.lookup("SetTrustLineFlagsResult"),
          liquidityPoolDepositResult: xdr2.lookup("LiquidityPoolDepositResult"),
          liquidityPoolWithdrawResult: xdr2.lookup("LiquidityPoolWithdrawResult"),
          invokeHostFunctionResult: xdr2.lookup("InvokeHostFunctionResult"),
          extendFootprintTtlResult: xdr2.lookup("ExtendFootprintTtlResult"),
          restoreFootprintResult: xdr2.lookup("RestoreFootprintResult")
        }
      });
      xdr2.union("OperationResult", {
        switchOn: xdr2.lookup("OperationResultCode"),
        switchName: "code",
        switches: [["opInner", "tr"], ["opBadAuth", xdr2["void"]()], ["opNoAccount", xdr2["void"]()], ["opNotSupported", xdr2["void"]()], ["opTooManySubentries", xdr2["void"]()], ["opExceededWorkLimit", xdr2["void"]()], ["opTooManySponsoring", xdr2["void"]()]],
        arms: {
          tr: xdr2.lookup("OperationResultTr")
        }
      });
      xdr2["enum"]("TransactionResultCode", {
        txFeeBumpInnerSuccess: 1,
        txSuccess: 0,
        txFailed: -1,
        txTooEarly: -2,
        txTooLate: -3,
        txMissingOperation: -4,
        txBadSeq: -5,
        txBadAuth: -6,
        txInsufficientBalance: -7,
        txNoAccount: -8,
        txInsufficientFee: -9,
        txBadAuthExtra: -10,
        txInternalError: -11,
        txNotSupported: -12,
        txFeeBumpInnerFailed: -13,
        txBadSponsorship: -14,
        txBadMinSeqAgeOrGap: -15,
        txMalformed: -16,
        txSorobanInvalid: -17
      });
      xdr2.union("InnerTransactionResultResult", {
        switchOn: xdr2.lookup("TransactionResultCode"),
        switchName: "code",
        switches: [["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", xdr2["void"]()], ["txTooLate", xdr2["void"]()], ["txMissingOperation", xdr2["void"]()], ["txBadSeq", xdr2["void"]()], ["txBadAuth", xdr2["void"]()], ["txInsufficientBalance", xdr2["void"]()], ["txNoAccount", xdr2["void"]()], ["txInsufficientFee", xdr2["void"]()], ["txBadAuthExtra", xdr2["void"]()], ["txInternalError", xdr2["void"]()], ["txNotSupported", xdr2["void"]()], ["txBadSponsorship", xdr2["void"]()], ["txBadMinSeqAgeOrGap", xdr2["void"]()], ["txMalformed", xdr2["void"]()], ["txSorobanInvalid", xdr2["void"]()]],
        arms: {
          results: xdr2.varArray(xdr2.lookup("OperationResult"), 2147483647)
        }
      });
      xdr2.union("InnerTransactionResultExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("InnerTransactionResult", [["feeCharged", xdr2.lookup("Int64")], ["result", xdr2.lookup("InnerTransactionResultResult")], ["ext", xdr2.lookup("InnerTransactionResultExt")]]);
      xdr2.struct("InnerTransactionResultPair", [["transactionHash", xdr2.lookup("Hash")], ["result", xdr2.lookup("InnerTransactionResult")]]);
      xdr2.union("TransactionResultResult", {
        switchOn: xdr2.lookup("TransactionResultCode"),
        switchName: "code",
        switches: [["txFeeBumpInnerSuccess", "innerResultPair"], ["txFeeBumpInnerFailed", "innerResultPair"], ["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", xdr2["void"]()], ["txTooLate", xdr2["void"]()], ["txMissingOperation", xdr2["void"]()], ["txBadSeq", xdr2["void"]()], ["txBadAuth", xdr2["void"]()], ["txInsufficientBalance", xdr2["void"]()], ["txNoAccount", xdr2["void"]()], ["txInsufficientFee", xdr2["void"]()], ["txBadAuthExtra", xdr2["void"]()], ["txInternalError", xdr2["void"]()], ["txNotSupported", xdr2["void"]()], ["txBadSponsorship", xdr2["void"]()], ["txBadMinSeqAgeOrGap", xdr2["void"]()], ["txMalformed", xdr2["void"]()], ["txSorobanInvalid", xdr2["void"]()]],
        arms: {
          innerResultPair: xdr2.lookup("InnerTransactionResultPair"),
          results: xdr2.varArray(xdr2.lookup("OperationResult"), 2147483647)
        }
      });
      xdr2.union("TransactionResultExt", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2.struct("TransactionResult", [["feeCharged", xdr2.lookup("Int64")], ["result", xdr2.lookup("TransactionResultResult")], ["ext", xdr2.lookup("TransactionResultExt")]]);
      xdr2.typedef("Hash", xdr2.opaque(32));
      xdr2.typedef("Uint256", xdr2.opaque(32));
      xdr2.typedef("Uint32", xdr2.uint());
      xdr2.typedef("Int32", xdr2["int"]());
      xdr2.typedef("Uint64", xdr2.uhyper());
      xdr2.typedef("Int64", xdr2.hyper());
      xdr2.typedef("TimePoint", xdr2.lookup("Uint64"));
      xdr2.typedef("Duration", xdr2.lookup("Uint64"));
      xdr2.union("ExtensionPoint", {
        switchOn: xdr2["int"](),
        switchName: "v",
        switches: [[0, xdr2["void"]()]],
        arms: {}
      });
      xdr2["enum"]("CryptoKeyType", {
        keyTypeEd25519: 0,
        keyTypePreAuthTx: 1,
        keyTypeHashX: 2,
        keyTypeEd25519SignedPayload: 3,
        keyTypeMuxedEd25519: 256
      });
      xdr2["enum"]("PublicKeyType", {
        publicKeyTypeEd25519: 0
      });
      xdr2["enum"]("SignerKeyType", {
        signerKeyTypeEd25519: 0,
        signerKeyTypePreAuthTx: 1,
        signerKeyTypeHashX: 2,
        signerKeyTypeEd25519SignedPayload: 3
      });
      xdr2.union("PublicKey", {
        switchOn: xdr2.lookup("PublicKeyType"),
        switchName: "type",
        switches: [["publicKeyTypeEd25519", "ed25519"]],
        arms: {
          ed25519: xdr2.lookup("Uint256")
        }
      });
      xdr2.struct("SignerKeyEd25519SignedPayload", [["ed25519", xdr2.lookup("Uint256")], ["payload", xdr2.varOpaque(64)]]);
      xdr2.union("SignerKey", {
        switchOn: xdr2.lookup("SignerKeyType"),
        switchName: "type",
        switches: [["signerKeyTypeEd25519", "ed25519"], ["signerKeyTypePreAuthTx", "preAuthTx"], ["signerKeyTypeHashX", "hashX"], ["signerKeyTypeEd25519SignedPayload", "ed25519SignedPayload"]],
        arms: {
          ed25519: xdr2.lookup("Uint256"),
          preAuthTx: xdr2.lookup("Uint256"),
          hashX: xdr2.lookup("Uint256"),
          ed25519SignedPayload: xdr2.lookup("SignerKeyEd25519SignedPayload")
        }
      });
      xdr2.typedef("Signature", xdr2.varOpaque(64));
      xdr2.typedef("SignatureHint", xdr2.opaque(4));
      xdr2.typedef("NodeId", xdr2.lookup("PublicKey"));
      xdr2.typedef("AccountId", xdr2.lookup("PublicKey"));
      xdr2.struct("Curve25519Secret", [["key", xdr2.opaque(32)]]);
      xdr2.struct("Curve25519Public", [["key", xdr2.opaque(32)]]);
      xdr2.struct("HmacSha256Key", [["key", xdr2.opaque(32)]]);
      xdr2.struct("HmacSha256Mac", [["mac", xdr2.opaque(32)]]);
      xdr2["enum"]("ScValType", {
        scvBool: 0,
        scvVoid: 1,
        scvError: 2,
        scvU32: 3,
        scvI32: 4,
        scvU64: 5,
        scvI64: 6,
        scvTimepoint: 7,
        scvDuration: 8,
        scvU128: 9,
        scvI128: 10,
        scvU256: 11,
        scvI256: 12,
        scvBytes: 13,
        scvString: 14,
        scvSymbol: 15,
        scvVec: 16,
        scvMap: 17,
        scvAddress: 18,
        scvContractInstance: 19,
        scvLedgerKeyContractInstance: 20,
        scvLedgerKeyNonce: 21
      });
      xdr2["enum"]("ScErrorType", {
        sceContract: 0,
        sceWasmVm: 1,
        sceContext: 2,
        sceStorage: 3,
        sceObject: 4,
        sceCrypto: 5,
        sceEvents: 6,
        sceBudget: 7,
        sceValue: 8,
        sceAuth: 9
      });
      xdr2["enum"]("ScErrorCode", {
        scecArithDomain: 0,
        scecIndexBounds: 1,
        scecInvalidInput: 2,
        scecMissingValue: 3,
        scecExistingValue: 4,
        scecExceededLimit: 5,
        scecInvalidAction: 6,
        scecInternalError: 7,
        scecUnexpectedType: 8,
        scecUnexpectedSize: 9
      });
      xdr2.union("ScError", {
        switchOn: xdr2.lookup("ScErrorType"),
        switchName: "type",
        switches: [["sceContract", "contractCode"], ["sceWasmVm", "code"], ["sceContext", "code"], ["sceStorage", "code"], ["sceObject", "code"], ["sceCrypto", "code"], ["sceEvents", "code"], ["sceBudget", "code"], ["sceValue", "code"], ["sceAuth", "code"]],
        arms: {
          contractCode: xdr2.lookup("Uint32"),
          code: xdr2.lookup("ScErrorCode")
        }
      });
      xdr2.struct("UInt128Parts", [["hi", xdr2.lookup("Uint64")], ["lo", xdr2.lookup("Uint64")]]);
      xdr2.struct("Int128Parts", [["hi", xdr2.lookup("Int64")], ["lo", xdr2.lookup("Uint64")]]);
      xdr2.struct("UInt256Parts", [["hiHi", xdr2.lookup("Uint64")], ["hiLo", xdr2.lookup("Uint64")], ["loHi", xdr2.lookup("Uint64")], ["loLo", xdr2.lookup("Uint64")]]);
      xdr2.struct("Int256Parts", [["hiHi", xdr2.lookup("Int64")], ["hiLo", xdr2.lookup("Uint64")], ["loHi", xdr2.lookup("Uint64")], ["loLo", xdr2.lookup("Uint64")]]);
      xdr2["enum"]("ContractExecutableType", {
        contractExecutableWasm: 0,
        contractExecutableStellarAsset: 1
      });
      xdr2.union("ContractExecutable", {
        switchOn: xdr2.lookup("ContractExecutableType"),
        switchName: "type",
        switches: [["contractExecutableWasm", "wasmHash"], ["contractExecutableStellarAsset", xdr2["void"]()]],
        arms: {
          wasmHash: xdr2.lookup("Hash")
        }
      });
      xdr2["enum"]("ScAddressType", {
        scAddressTypeAccount: 0,
        scAddressTypeContract: 1
      });
      xdr2.union("ScAddress", {
        switchOn: xdr2.lookup("ScAddressType"),
        switchName: "type",
        switches: [["scAddressTypeAccount", "accountId"], ["scAddressTypeContract", "contractId"]],
        arms: {
          accountId: xdr2.lookup("AccountId"),
          contractId: xdr2.lookup("Hash")
        }
      });
      xdr2["const"]("SCSYMBOL_LIMIT", 32);
      xdr2.typedef("ScVec", xdr2.varArray(xdr2.lookup("ScVal"), 2147483647));
      xdr2.typedef("ScMap", xdr2.varArray(xdr2.lookup("ScMapEntry"), 2147483647));
      xdr2.typedef("ScBytes", xdr2.varOpaque());
      xdr2.typedef("ScString", xdr2.string());
      xdr2.typedef("ScSymbol", xdr2.string(SCSYMBOL_LIMIT));
      xdr2.struct("ScNonceKey", [["nonce", xdr2.lookup("Int64")]]);
      xdr2.struct("ScContractInstance", [["executable", xdr2.lookup("ContractExecutable")], ["storage", xdr2.option(xdr2.lookup("ScMap"))]]);
      xdr2.union("ScVal", {
        switchOn: xdr2.lookup("ScValType"),
        switchName: "type",
        switches: [["scvBool", "b"], ["scvVoid", xdr2["void"]()], ["scvError", "error"], ["scvU32", "u32"], ["scvI32", "i32"], ["scvU64", "u64"], ["scvI64", "i64"], ["scvTimepoint", "timepoint"], ["scvDuration", "duration"], ["scvU128", "u128"], ["scvI128", "i128"], ["scvU256", "u256"], ["scvI256", "i256"], ["scvBytes", "bytes"], ["scvString", "str"], ["scvSymbol", "sym"], ["scvVec", "vec"], ["scvMap", "map"], ["scvAddress", "address"], ["scvLedgerKeyContractInstance", xdr2["void"]()], ["scvLedgerKeyNonce", "nonceKey"], ["scvContractInstance", "instance"]],
        arms: {
          b: xdr2.bool(),
          error: xdr2.lookup("ScError"),
          u32: xdr2.lookup("Uint32"),
          i32: xdr2.lookup("Int32"),
          u64: xdr2.lookup("Uint64"),
          i64: xdr2.lookup("Int64"),
          timepoint: xdr2.lookup("TimePoint"),
          duration: xdr2.lookup("Duration"),
          u128: xdr2.lookup("UInt128Parts"),
          i128: xdr2.lookup("Int128Parts"),
          u256: xdr2.lookup("UInt256Parts"),
          i256: xdr2.lookup("Int256Parts"),
          bytes: xdr2.lookup("ScBytes"),
          str: xdr2.lookup("ScString"),
          sym: xdr2.lookup("ScSymbol"),
          vec: xdr2.option(xdr2.lookup("ScVec")),
          map: xdr2.option(xdr2.lookup("ScMap")),
          address: xdr2.lookup("ScAddress"),
          nonceKey: xdr2.lookup("ScNonceKey"),
          instance: xdr2.lookup("ScContractInstance")
        }
      });
      xdr2.struct("ScMapEntry", [["key", xdr2.lookup("ScVal")], ["val", xdr2.lookup("ScVal")]]);
      xdr2["enum"]("ScEnvMetaKind", {
        scEnvMetaKindInterfaceVersion: 0
      });
      xdr2.union("ScEnvMetaEntry", {
        switchOn: xdr2.lookup("ScEnvMetaKind"),
        switchName: "kind",
        switches: [["scEnvMetaKindInterfaceVersion", "interfaceVersion"]],
        arms: {
          interfaceVersion: xdr2.lookup("Uint64")
        }
      });
      xdr2.struct("ScMetaV0", [["key", xdr2.string()], ["val", xdr2.string()]]);
      xdr2["enum"]("ScMetaKind", {
        scMetaV0: 0
      });
      xdr2.union("ScMetaEntry", {
        switchOn: xdr2.lookup("ScMetaKind"),
        switchName: "kind",
        switches: [["scMetaV0", "v0"]],
        arms: {
          v0: xdr2.lookup("ScMetaV0")
        }
      });
      xdr2["const"]("SC_SPEC_DOC_LIMIT", 1024);
      xdr2["enum"]("ScSpecType", {
        scSpecTypeVal: 0,
        scSpecTypeBool: 1,
        scSpecTypeVoid: 2,
        scSpecTypeError: 3,
        scSpecTypeU32: 4,
        scSpecTypeI32: 5,
        scSpecTypeU64: 6,
        scSpecTypeI64: 7,
        scSpecTypeTimepoint: 8,
        scSpecTypeDuration: 9,
        scSpecTypeU128: 10,
        scSpecTypeI128: 11,
        scSpecTypeU256: 12,
        scSpecTypeI256: 13,
        scSpecTypeBytes: 14,
        scSpecTypeString: 16,
        scSpecTypeSymbol: 17,
        scSpecTypeAddress: 19,
        scSpecTypeOption: 1e3,
        scSpecTypeResult: 1001,
        scSpecTypeVec: 1002,
        scSpecTypeMap: 1004,
        scSpecTypeTuple: 1005,
        scSpecTypeBytesN: 1006,
        scSpecTypeUdt: 2e3
      });
      xdr2.struct("ScSpecTypeOption", [["valueType", xdr2.lookup("ScSpecTypeDef")]]);
      xdr2.struct("ScSpecTypeResult", [["okType", xdr2.lookup("ScSpecTypeDef")], ["errorType", xdr2.lookup("ScSpecTypeDef")]]);
      xdr2.struct("ScSpecTypeVec", [["elementType", xdr2.lookup("ScSpecTypeDef")]]);
      xdr2.struct("ScSpecTypeMap", [["keyType", xdr2.lookup("ScSpecTypeDef")], ["valueType", xdr2.lookup("ScSpecTypeDef")]]);
      xdr2.struct("ScSpecTypeTuple", [["valueTypes", xdr2.varArray(xdr2.lookup("ScSpecTypeDef"), 12)]]);
      xdr2.struct("ScSpecTypeBytesN", [["n", xdr2.lookup("Uint32")]]);
      xdr2.struct("ScSpecTypeUdt", [["name", xdr2.string(60)]]);
      xdr2.union("ScSpecTypeDef", {
        switchOn: xdr2.lookup("ScSpecType"),
        switchName: "type",
        switches: [["scSpecTypeVal", xdr2["void"]()], ["scSpecTypeBool", xdr2["void"]()], ["scSpecTypeVoid", xdr2["void"]()], ["scSpecTypeError", xdr2["void"]()], ["scSpecTypeU32", xdr2["void"]()], ["scSpecTypeI32", xdr2["void"]()], ["scSpecTypeU64", xdr2["void"]()], ["scSpecTypeI64", xdr2["void"]()], ["scSpecTypeTimepoint", xdr2["void"]()], ["scSpecTypeDuration", xdr2["void"]()], ["scSpecTypeU128", xdr2["void"]()], ["scSpecTypeI128", xdr2["void"]()], ["scSpecTypeU256", xdr2["void"]()], ["scSpecTypeI256", xdr2["void"]()], ["scSpecTypeBytes", xdr2["void"]()], ["scSpecTypeString", xdr2["void"]()], ["scSpecTypeSymbol", xdr2["void"]()], ["scSpecTypeAddress", xdr2["void"]()], ["scSpecTypeOption", "option"], ["scSpecTypeResult", "result"], ["scSpecTypeVec", "vec"], ["scSpecTypeMap", "map"], ["scSpecTypeTuple", "tuple"], ["scSpecTypeBytesN", "bytesN"], ["scSpecTypeUdt", "udt"]],
        arms: {
          option: xdr2.lookup("ScSpecTypeOption"),
          result: xdr2.lookup("ScSpecTypeResult"),
          vec: xdr2.lookup("ScSpecTypeVec"),
          map: xdr2.lookup("ScSpecTypeMap"),
          tuple: xdr2.lookup("ScSpecTypeTuple"),
          bytesN: xdr2.lookup("ScSpecTypeBytesN"),
          udt: xdr2.lookup("ScSpecTypeUdt")
        }
      });
      xdr2.struct("ScSpecUdtStructFieldV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.string(30)], ["type", xdr2.lookup("ScSpecTypeDef")]]);
      xdr2.struct("ScSpecUdtStructV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["lib", xdr2.string(80)], ["name", xdr2.string(60)], ["fields", xdr2.varArray(xdr2.lookup("ScSpecUdtStructFieldV0"), 40)]]);
      xdr2.struct("ScSpecUdtUnionCaseVoidV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.string(60)]]);
      xdr2.struct("ScSpecUdtUnionCaseTupleV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.string(60)], ["type", xdr2.varArray(xdr2.lookup("ScSpecTypeDef"), 12)]]);
      xdr2["enum"]("ScSpecUdtUnionCaseV0Kind", {
        scSpecUdtUnionCaseVoidV0: 0,
        scSpecUdtUnionCaseTupleV0: 1
      });
      xdr2.union("ScSpecUdtUnionCaseV0", {
        switchOn: xdr2.lookup("ScSpecUdtUnionCaseV0Kind"),
        switchName: "kind",
        switches: [["scSpecUdtUnionCaseVoidV0", "voidCase"], ["scSpecUdtUnionCaseTupleV0", "tupleCase"]],
        arms: {
          voidCase: xdr2.lookup("ScSpecUdtUnionCaseVoidV0"),
          tupleCase: xdr2.lookup("ScSpecUdtUnionCaseTupleV0")
        }
      });
      xdr2.struct("ScSpecUdtUnionV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["lib", xdr2.string(80)], ["name", xdr2.string(60)], ["cases", xdr2.varArray(xdr2.lookup("ScSpecUdtUnionCaseV0"), 50)]]);
      xdr2.struct("ScSpecUdtEnumCaseV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.string(60)], ["value", xdr2.lookup("Uint32")]]);
      xdr2.struct("ScSpecUdtEnumV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["lib", xdr2.string(80)], ["name", xdr2.string(60)], ["cases", xdr2.varArray(xdr2.lookup("ScSpecUdtEnumCaseV0"), 50)]]);
      xdr2.struct("ScSpecUdtErrorEnumCaseV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.string(60)], ["value", xdr2.lookup("Uint32")]]);
      xdr2.struct("ScSpecUdtErrorEnumV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["lib", xdr2.string(80)], ["name", xdr2.string(60)], ["cases", xdr2.varArray(xdr2.lookup("ScSpecUdtErrorEnumCaseV0"), 50)]]);
      xdr2.struct("ScSpecFunctionInputV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.string(30)], ["type", xdr2.lookup("ScSpecTypeDef")]]);
      xdr2.struct("ScSpecFunctionV0", [["doc", xdr2.string(SC_SPEC_DOC_LIMIT)], ["name", xdr2.lookup("ScSymbol")], ["inputs", xdr2.varArray(xdr2.lookup("ScSpecFunctionInputV0"), 10)], ["outputs", xdr2.varArray(xdr2.lookup("ScSpecTypeDef"), 1)]]);
      xdr2["enum"]("ScSpecEntryKind", {
        scSpecEntryFunctionV0: 0,
        scSpecEntryUdtStructV0: 1,
        scSpecEntryUdtUnionV0: 2,
        scSpecEntryUdtEnumV0: 3,
        scSpecEntryUdtErrorEnumV0: 4
      });
      xdr2.union("ScSpecEntry", {
        switchOn: xdr2.lookup("ScSpecEntryKind"),
        switchName: "kind",
        switches: [["scSpecEntryFunctionV0", "functionV0"], ["scSpecEntryUdtStructV0", "udtStructV0"], ["scSpecEntryUdtUnionV0", "udtUnionV0"], ["scSpecEntryUdtEnumV0", "udtEnumV0"], ["scSpecEntryUdtErrorEnumV0", "udtErrorEnumV0"]],
        arms: {
          functionV0: xdr2.lookup("ScSpecFunctionV0"),
          udtStructV0: xdr2.lookup("ScSpecUdtStructV0"),
          udtUnionV0: xdr2.lookup("ScSpecUdtUnionV0"),
          udtEnumV0: xdr2.lookup("ScSpecUdtEnumV0"),
          udtErrorEnumV0: xdr2.lookup("ScSpecUdtErrorEnumV0")
        }
      });
      xdr2.struct("ConfigSettingContractExecutionLanesV0", [["ledgerMaxTxCount", xdr2.lookup("Uint32")]]);
      xdr2.struct("ConfigSettingContractComputeV0", [["ledgerMaxInstructions", xdr2.lookup("Int64")], ["txMaxInstructions", xdr2.lookup("Int64")], ["feeRatePerInstructionsIncrement", xdr2.lookup("Int64")], ["txMemoryLimit", xdr2.lookup("Uint32")]]);
      xdr2.struct("ConfigSettingContractLedgerCostV0", [["ledgerMaxReadLedgerEntries", xdr2.lookup("Uint32")], ["ledgerMaxReadBytes", xdr2.lookup("Uint32")], ["ledgerMaxWriteLedgerEntries", xdr2.lookup("Uint32")], ["ledgerMaxWriteBytes", xdr2.lookup("Uint32")], ["txMaxReadLedgerEntries", xdr2.lookup("Uint32")], ["txMaxReadBytes", xdr2.lookup("Uint32")], ["txMaxWriteLedgerEntries", xdr2.lookup("Uint32")], ["txMaxWriteBytes", xdr2.lookup("Uint32")], ["feeReadLedgerEntry", xdr2.lookup("Int64")], ["feeWriteLedgerEntry", xdr2.lookup("Int64")], ["feeRead1Kb", xdr2.lookup("Int64")], ["bucketListTargetSizeBytes", xdr2.lookup("Int64")], ["writeFee1KbBucketListLow", xdr2.lookup("Int64")], ["writeFee1KbBucketListHigh", xdr2.lookup("Int64")], ["bucketListWriteFeeGrowthFactor", xdr2.lookup("Uint32")]]);
      xdr2.struct("ConfigSettingContractHistoricalDataV0", [["feeHistorical1Kb", xdr2.lookup("Int64")]]);
      xdr2.struct("ConfigSettingContractEventsV0", [["txMaxContractEventsSizeBytes", xdr2.lookup("Uint32")], ["feeContractEvents1Kb", xdr2.lookup("Int64")]]);
      xdr2.struct("ConfigSettingContractBandwidthV0", [["ledgerMaxTxsSizeBytes", xdr2.lookup("Uint32")], ["txMaxSizeBytes", xdr2.lookup("Uint32")], ["feeTxSize1Kb", xdr2.lookup("Int64")]]);
      xdr2["enum"]("ContractCostType", {
        wasmInsnExec: 0,
        memAlloc: 1,
        memCpy: 2,
        memCmp: 3,
        dispatchHostFunction: 4,
        visitObject: 5,
        valSer: 6,
        valDeser: 7,
        computeSha256Hash: 8,
        computeEd25519PubKey: 9,
        verifyEd25519Sig: 10,
        vmInstantiation: 11,
        vmCachedInstantiation: 12,
        invokeVmFunction: 13,
        computeKeccak256Hash: 14,
        decodeEcdsaCurve256Sig: 15,
        recoverEcdsaSecp256k1Key: 16,
        int256AddSub: 17,
        int256Mul: 18,
        int256Div: 19,
        int256Pow: 20,
        int256Shift: 21,
        chaCha20DrawBytes: 22,
        parseWasmInstructions: 23,
        parseWasmFunctions: 24,
        parseWasmGlobals: 25,
        parseWasmTableEntries: 26,
        parseWasmTypes: 27,
        parseWasmDataSegments: 28,
        parseWasmElemSegments: 29,
        parseWasmImports: 30,
        parseWasmExports: 31,
        parseWasmDataSegmentBytes: 32,
        instantiateWasmInstructions: 33,
        instantiateWasmFunctions: 34,
        instantiateWasmGlobals: 35,
        instantiateWasmTableEntries: 36,
        instantiateWasmTypes: 37,
        instantiateWasmDataSegments: 38,
        instantiateWasmElemSegments: 39,
        instantiateWasmImports: 40,
        instantiateWasmExports: 41,
        instantiateWasmDataSegmentBytes: 42,
        sec1DecodePointUncompressed: 43,
        verifyEcdsaSecp256r1Sig: 44
      });
      xdr2.struct("ContractCostParamEntry", [["ext", xdr2.lookup("ExtensionPoint")], ["constTerm", xdr2.lookup("Int64")], ["linearTerm", xdr2.lookup("Int64")]]);
      xdr2.struct("StateArchivalSettings", [["maxEntryTtl", xdr2.lookup("Uint32")], ["minTemporaryTtl", xdr2.lookup("Uint32")], ["minPersistentTtl", xdr2.lookup("Uint32")], ["persistentRentRateDenominator", xdr2.lookup("Int64")], ["tempRentRateDenominator", xdr2.lookup("Int64")], ["maxEntriesToArchive", xdr2.lookup("Uint32")], ["bucketListSizeWindowSampleSize", xdr2.lookup("Uint32")], ["bucketListWindowSamplePeriod", xdr2.lookup("Uint32")], ["evictionScanSize", xdr2.lookup("Uint32")], ["startingEvictionScanLevel", xdr2.lookup("Uint32")]]);
      xdr2.struct("EvictionIterator", [["bucketListLevel", xdr2.lookup("Uint32")], ["isCurrBucket", xdr2.bool()], ["bucketFileOffset", xdr2.lookup("Uint64")]]);
      xdr2["const"]("CONTRACT_COST_COUNT_LIMIT", 1024);
      xdr2.typedef("ContractCostParams", xdr2.varArray(xdr2.lookup("ContractCostParamEntry"), xdr2.lookup("CONTRACT_COST_COUNT_LIMIT")));
      xdr2["enum"]("ConfigSettingId", {
        configSettingContractMaxSizeBytes: 0,
        configSettingContractComputeV0: 1,
        configSettingContractLedgerCostV0: 2,
        configSettingContractHistoricalDataV0: 3,
        configSettingContractEventsV0: 4,
        configSettingContractBandwidthV0: 5,
        configSettingContractCostParamsCpuInstructions: 6,
        configSettingContractCostParamsMemoryBytes: 7,
        configSettingContractDataKeySizeBytes: 8,
        configSettingContractDataEntrySizeBytes: 9,
        configSettingStateArchival: 10,
        configSettingContractExecutionLanes: 11,
        configSettingBucketlistSizeWindow: 12,
        configSettingEvictionIterator: 13
      });
      xdr2.union("ConfigSettingEntry", {
        switchOn: xdr2.lookup("ConfigSettingId"),
        switchName: "configSettingId",
        switches: [["configSettingContractMaxSizeBytes", "contractMaxSizeBytes"], ["configSettingContractComputeV0", "contractCompute"], ["configSettingContractLedgerCostV0", "contractLedgerCost"], ["configSettingContractHistoricalDataV0", "contractHistoricalData"], ["configSettingContractEventsV0", "contractEvents"], ["configSettingContractBandwidthV0", "contractBandwidth"], ["configSettingContractCostParamsCpuInstructions", "contractCostParamsCpuInsns"], ["configSettingContractCostParamsMemoryBytes", "contractCostParamsMemBytes"], ["configSettingContractDataKeySizeBytes", "contractDataKeySizeBytes"], ["configSettingContractDataEntrySizeBytes", "contractDataEntrySizeBytes"], ["configSettingStateArchival", "stateArchivalSettings"], ["configSettingContractExecutionLanes", "contractExecutionLanes"], ["configSettingBucketlistSizeWindow", "bucketListSizeWindow"], ["configSettingEvictionIterator", "evictionIterator"]],
        arms: {
          contractMaxSizeBytes: xdr2.lookup("Uint32"),
          contractCompute: xdr2.lookup("ConfigSettingContractComputeV0"),
          contractLedgerCost: xdr2.lookup("ConfigSettingContractLedgerCostV0"),
          contractHistoricalData: xdr2.lookup("ConfigSettingContractHistoricalDataV0"),
          contractEvents: xdr2.lookup("ConfigSettingContractEventsV0"),
          contractBandwidth: xdr2.lookup("ConfigSettingContractBandwidthV0"),
          contractCostParamsCpuInsns: xdr2.lookup("ContractCostParams"),
          contractCostParamsMemBytes: xdr2.lookup("ContractCostParams"),
          contractDataKeySizeBytes: xdr2.lookup("Uint32"),
          contractDataEntrySizeBytes: xdr2.lookup("Uint32"),
          stateArchivalSettings: xdr2.lookup("StateArchivalSettings"),
          contractExecutionLanes: xdr2.lookup("ConfigSettingContractExecutionLanesV0"),
          bucketListSizeWindow: xdr2.varArray(xdr2.lookup("Uint64"), 2147483647),
          evictionIterator: xdr2.lookup("EvictionIterator")
        }
      });
    });
    var _default = exports["default"] = types;
  }
});

// node_modules/@stellar/stellar-base/lib/xdr.js
var require_xdr2 = __commonJS({
  "node_modules/@stellar/stellar-base/lib/xdr.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _curr_generated = _interopRequireDefault(require_curr_generated());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    var _default = exports["default"] = _curr_generated["default"];
  }
});

// node_modules/@stellar/stellar-base/lib/jsxdr.js
var require_jsxdr = __commonJS({
  "node_modules/@stellar/stellar-base/lib/jsxdr.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _jsXdr = require_xdr();
    var cereal = {
      XdrWriter: _jsXdr.XdrWriter,
      XdrReader: _jsXdr.XdrReader
    };
    var _default = exports["default"] = cereal;
  }
});

// node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS({
  "node_modules/inherits/inherits_browser.js"(exports, module) {
    if (typeof Object.create === "function") {
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  }
});

// node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  "node_modules/safe-buffer/index.js"(exports, module) {
    var buffer = require_buffer();
    var Buffer5 = buffer.Buffer;
    function copyProps(src2, dst) {
      for (var key in src2) {
        dst[key] = src2[key];
      }
    }
    if (Buffer5.from && Buffer5.alloc && Buffer5.allocUnsafe && Buffer5.allocUnsafeSlow) {
      module.exports = buffer;
    } else {
      copyProps(buffer, exports);
      exports.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer5(arg, encodingOrOffset, length);
    }
    SafeBuffer.prototype = Object.create(Buffer5.prototype);
    copyProps(Buffer5, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer5(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer5(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer5(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node_modules/isarray/index.js
var require_isarray = __commonJS({
  "node_modules/isarray/index.js"(exports, module) {
    var toString = {}.toString;
    module.exports = Array.isArray || function(arr) {
      return toString.call(arr) == "[object Array]";
    };
  }
});

// node_modules/es-errors/type.js
var require_type = __commonJS({
  "node_modules/es-errors/type.js"(exports, module) {
    "use strict";
    module.exports = TypeError;
  }
});

// node_modules/es-object-atoms/index.js
var require_es_object_atoms = __commonJS({
  "node_modules/es-object-atoms/index.js"(exports, module) {
    "use strict";
    module.exports = Object;
  }
});

// node_modules/es-errors/index.js
var require_es_errors = __commonJS({
  "node_modules/es-errors/index.js"(exports, module) {
    "use strict";
    module.exports = Error;
  }
});

// node_modules/es-errors/eval.js
var require_eval = __commonJS({
  "node_modules/es-errors/eval.js"(exports, module) {
    "use strict";
    module.exports = EvalError;
  }
});

// node_modules/es-errors/range.js
var require_range = __commonJS({
  "node_modules/es-errors/range.js"(exports, module) {
    "use strict";
    module.exports = RangeError;
  }
});

// node_modules/es-errors/ref.js
var require_ref = __commonJS({
  "node_modules/es-errors/ref.js"(exports, module) {
    "use strict";
    module.exports = ReferenceError;
  }
});

// node_modules/es-errors/syntax.js
var require_syntax = __commonJS({
  "node_modules/es-errors/syntax.js"(exports, module) {
    "use strict";
    module.exports = SyntaxError;
  }
});

// node_modules/es-errors/uri.js
var require_uri = __commonJS({
  "node_modules/es-errors/uri.js"(exports, module) {
    "use strict";
    module.exports = URIError;
  }
});

// node_modules/math-intrinsics/abs.js
var require_abs = __commonJS({
  "node_modules/math-intrinsics/abs.js"(exports, module) {
    "use strict";
    module.exports = Math.abs;
  }
});

// node_modules/math-intrinsics/floor.js
var require_floor = __commonJS({
  "node_modules/math-intrinsics/floor.js"(exports, module) {
    "use strict";
    module.exports = Math.floor;
  }
});

// node_modules/math-intrinsics/max.js
var require_max = __commonJS({
  "node_modules/math-intrinsics/max.js"(exports, module) {
    "use strict";
    module.exports = Math.max;
  }
});

// node_modules/math-intrinsics/min.js
var require_min = __commonJS({
  "node_modules/math-intrinsics/min.js"(exports, module) {
    "use strict";
    module.exports = Math.min;
  }
});

// node_modules/math-intrinsics/pow.js
var require_pow = __commonJS({
  "node_modules/math-intrinsics/pow.js"(exports, module) {
    "use strict";
    module.exports = Math.pow;
  }
});

// node_modules/math-intrinsics/round.js
var require_round = __commonJS({
  "node_modules/math-intrinsics/round.js"(exports, module) {
    "use strict";
    module.exports = Math.round;
  }
});

// node_modules/math-intrinsics/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/math-intrinsics/isNaN.js"(exports, module) {
    "use strict";
    module.exports = Number.isNaN || function isNaN2(a) {
      return a !== a;
    };
  }
});

// node_modules/math-intrinsics/sign.js
var require_sign = __commonJS({
  "node_modules/math-intrinsics/sign.js"(exports, module) {
    "use strict";
    var $isNaN = require_isNaN();
    module.exports = function sign(number) {
      if ($isNaN(number) || number === 0) {
        return number;
      }
      return number < 0 ? -1 : 1;
    };
  }
});

// node_modules/gopd/gOPD.js
var require_gOPD = __commonJS({
  "node_modules/gopd/gOPD.js"(exports, module) {
    "use strict";
    module.exports = Object.getOwnPropertyDescriptor;
  }
});

// node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/gopd/index.js"(exports, module) {
    "use strict";
    var $gOPD = require_gOPD();
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e2) {
        $gOPD = null;
      }
    }
    module.exports = $gOPD;
  }
});

// node_modules/es-define-property/index.js
var require_es_define_property = __commonJS({
  "node_modules/es-define-property/index.js"(exports, module) {
    "use strict";
    var $defineProperty = Object.defineProperty || false;
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e2) {
        $defineProperty = false;
      }
    }
    module.exports = $defineProperty;
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (var _ in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = (
          /** @type {PropertyDescriptor} */
          Object.getOwnPropertyDescriptor(obj, sym)
        );
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/get-proto/Reflect.getPrototypeOf.js
var require_Reflect_getPrototypeOf = __commonJS({
  "node_modules/get-proto/Reflect.getPrototypeOf.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect.getPrototypeOf || null;
  }
});

// node_modules/get-proto/Object.getPrototypeOf.js
var require_Object_getPrototypeOf = __commonJS({
  "node_modules/get-proto/Object.getPrototypeOf.js"(exports, module) {
    "use strict";
    var $Object = require_es_object_atoms();
    module.exports = $Object.getPrototypeOf || null;
  }
});

// node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a, b) {
      var arr = [];
      for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
      }
      for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset) {
      var arr = [];
      for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = "$" + i;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    var implementation = require_implementation();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/call-bind-apply-helpers/functionCall.js
var require_functionCall = __commonJS({
  "node_modules/call-bind-apply-helpers/functionCall.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.call;
  }
});

// node_modules/call-bind-apply-helpers/functionApply.js
var require_functionApply = __commonJS({
  "node_modules/call-bind-apply-helpers/functionApply.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.apply;
  }
});

// node_modules/call-bind-apply-helpers/reflectApply.js
var require_reflectApply = __commonJS({
  "node_modules/call-bind-apply-helpers/reflectApply.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect && Reflect.apply;
  }
});

// node_modules/call-bind-apply-helpers/actualApply.js
var require_actualApply = __commonJS({
  "node_modules/call-bind-apply-helpers/actualApply.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var $reflectApply = require_reflectApply();
    module.exports = $reflectApply || bind.call($call, $apply);
  }
});

// node_modules/call-bind-apply-helpers/index.js
var require_call_bind_apply_helpers = __commonJS({
  "node_modules/call-bind-apply-helpers/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $TypeError = require_type();
    var $call = require_functionCall();
    var $actualApply = require_actualApply();
    module.exports = function callBindBasic(args) {
      if (args.length < 1 || typeof args[0] !== "function") {
        throw new $TypeError("a function is required");
      }
      return $actualApply(bind, $call, args);
    };
  }
});

// node_modules/dunder-proto/get.js
var require_get = __commonJS({
  "node_modules/dunder-proto/get.js"(exports, module) {
    "use strict";
    var callBind = require_call_bind_apply_helpers();
    var gOPD = require_gopd();
    var hasProtoAccessor;
    try {
      hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */
      [].__proto__ === Array.prototype;
    } catch (e2) {
      if (!e2 || typeof e2 !== "object" || !("code" in e2) || e2.code !== "ERR_PROTO_ACCESS") {
        throw e2;
      }
    }
    var desc = !!hasProtoAccessor && gOPD && gOPD(
      Object.prototype,
      /** @type {keyof typeof Object.prototype} */
      "__proto__"
    );
    var $Object = Object;
    var $getPrototypeOf = $Object.getPrototypeOf;
    module.exports = desc && typeof desc.get === "function" ? callBind([desc.get]) : typeof $getPrototypeOf === "function" ? (
      /** @type {import('./get')} */
      function getDunder(value) {
        return $getPrototypeOf(value == null ? value : $Object(value));
      }
    ) : false;
  }
});

// node_modules/get-proto/index.js
var require_get_proto = __commonJS({
  "node_modules/get-proto/index.js"(exports, module) {
    "use strict";
    var reflectGetProto = require_Reflect_getPrototypeOf();
    var originalGetProto = require_Object_getPrototypeOf();
    var getDunderProto = require_get();
    module.exports = reflectGetProto ? function getProto(O) {
      return reflectGetProto(O);
    } : originalGetProto ? function getProto(O) {
      if (!O || typeof O !== "object" && typeof O !== "function") {
        throw new TypeError("getProto: not an object");
      }
      return originalGetProto(O);
    } : getDunderProto ? function getProto(O) {
      return getDunderProto(O);
    } : null;
  }
});

// node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/hasown/index.js"(exports, module) {
    "use strict";
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind = require_function_bind();
    module.exports = bind.call(call, $hasOwn);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    var undefined2;
    var $Object = require_es_object_atoms();
    var $Error = require_es_errors();
    var $EvalError = require_eval();
    var $RangeError = require_range();
    var $ReferenceError = require_ref();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var $URIError = require_uri();
    var abs = require_abs();
    var floor = require_floor();
    var max = require_max();
    var min = require_min();
    var pow = require_pow();
    var round = require_round();
    var sign = require_sign();
    var $Function = Function;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e2) {
      }
    };
    var $gOPD = require_gopd();
    var $defineProperty = require_es_define_property();
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = require_get_proto();
    var $ObjectGPO = require_Object_getPrototypeOf();
    var $ReflectGPO = require_Reflect_getPrototypeOf();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": $Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": $EvalError,
      "%Float16Array%": typeof Float16Array === "undefined" ? undefined2 : Float16Array,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": $Object,
      "%Object.getOwnPropertyDescriptor%": $gOPD,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": $RangeError,
      "%ReferenceError%": $ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": $URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet,
      "%Function.prototype.call%": $call,
      "%Function.prototype.apply%": $apply,
      "%Object.defineProperty%": $defineProperty,
      "%Object.getPrototypeOf%": $ObjectGPO,
      "%Math.abs%": abs,
      "%Math.floor%": floor,
      "%Math.max%": max,
      "%Math.min%": min,
      "%Math.pow%": pow,
      "%Math.round%": round,
      "%Math.sign%": sign,
      "%Reflect.getPrototypeOf%": $ReflectGPO
    };
    if (getProto) {
      try {
        null.error;
      } catch (e2) {
        errorProto = getProto(getProto(e2));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind.call($call, Array.prototype.concat);
    var $spliceApply = bind.call($apply, Array.prototype.splice);
    var $replace = bind.call($call, String.prototype.replace);
    var $strSlice = bind.call($call, String.prototype.slice);
    var $exec = bind.call($call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/call-bound/index.js
var require_call_bound = __commonJS({
  "node_modules/call-bound/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBindBasic = require_call_bind_apply_helpers();
    var $indexOf = callBindBasic([GetIntrinsic("%String.prototype.indexOf%")]);
    module.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = (
        /** @type {(this: unknown, ...args: unknown[]) => unknown} */
        GetIntrinsic(name, !!allowMissing)
      );
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBindBasic(
          /** @type {const} */
          [intrinsic]
        );
      }
      return intrinsic;
    };
  }
});

// node_modules/is-callable/index.js
var require_is_callable = __commonJS({
  "node_modules/is-callable/index.js"(exports, module) {
    "use strict";
    var fnToStr = Function.prototype.toString;
    var reflectApply = typeof Reflect === "object" && Reflect !== null && Reflect.apply;
    var badArrayLike;
    var isCallableMarker;
    if (typeof reflectApply === "function" && typeof Object.defineProperty === "function") {
      try {
        badArrayLike = Object.defineProperty({}, "length", {
          get: function() {
            throw isCallableMarker;
          }
        });
        isCallableMarker = {};
        reflectApply(function() {
          throw 42;
        }, null, badArrayLike);
      } catch (_) {
        if (_ !== isCallableMarker) {
          reflectApply = null;
        }
      }
    } else {
      reflectApply = null;
    }
    var constructorRegex = /^\s*class\b/;
    var isES6ClassFn = function isES6ClassFunction(value) {
      try {
        var fnStr = fnToStr.call(value);
        return constructorRegex.test(fnStr);
      } catch (e2) {
        return false;
      }
    };
    var tryFunctionObject = function tryFunctionToStr(value) {
      try {
        if (isES6ClassFn(value)) {
          return false;
        }
        fnToStr.call(value);
        return true;
      } catch (e2) {
        return false;
      }
    };
    var toStr = Object.prototype.toString;
    var objectClass = "[object Object]";
    var fnClass = "[object Function]";
    var genClass = "[object GeneratorFunction]";
    var ddaClass = "[object HTMLAllCollection]";
    var ddaClass2 = "[object HTML document.all class]";
    var ddaClass3 = "[object HTMLCollection]";
    var hasToStringTag = typeof Symbol === "function" && !!Symbol.toStringTag;
    var isIE68 = !(0 in [,]);
    var isDDA = function isDocumentDotAll() {
      return false;
    };
    if (typeof document === "object") {
      all = document.all;
      if (toStr.call(all) === toStr.call(document.all)) {
        isDDA = function isDocumentDotAll(value) {
          if ((isIE68 || !value) && (typeof value === "undefined" || typeof value === "object")) {
            try {
              var str = toStr.call(value);
              return (str === ddaClass || str === ddaClass2 || str === ddaClass3 || str === objectClass) && value("") == null;
            } catch (e2) {
            }
          }
          return false;
        };
      }
    }
    var all;
    module.exports = reflectApply ? function isCallable(value) {
      if (isDDA(value)) {
        return true;
      }
      if (!value) {
        return false;
      }
      if (typeof value !== "function" && typeof value !== "object") {
        return false;
      }
      try {
        reflectApply(value, null, badArrayLike);
      } catch (e2) {
        if (e2 !== isCallableMarker) {
          return false;
        }
      }
      return !isES6ClassFn(value) && tryFunctionObject(value);
    } : function isCallable(value) {
      if (isDDA(value)) {
        return true;
      }
      if (!value) {
        return false;
      }
      if (typeof value !== "function" && typeof value !== "object") {
        return false;
      }
      if (hasToStringTag) {
        return tryFunctionObject(value);
      }
      if (isES6ClassFn(value)) {
        return false;
      }
      var strClass = toStr.call(value);
      if (strClass !== fnClass && strClass !== genClass && !/^\[object HTML/.test(strClass)) {
        return false;
      }
      return tryFunctionObject(value);
    };
  }
});

// node_modules/for-each/index.js
var require_for_each = __commonJS({
  "node_modules/for-each/index.js"(exports, module) {
    "use strict";
    var isCallable = require_is_callable();
    var toStr = Object.prototype.toString;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var forEachArray = function forEachArray2(array, iterator, receiver) {
      for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
          if (receiver == null) {
            iterator(array[i], i, array);
          } else {
            iterator.call(receiver, array[i], i, array);
          }
        }
      }
    };
    var forEachString = function forEachString2(string, iterator, receiver) {
      for (var i = 0, len = string.length; i < len; i++) {
        if (receiver == null) {
          iterator(string.charAt(i), i, string);
        } else {
          iterator.call(receiver, string.charAt(i), i, string);
        }
      }
    };
    var forEachObject = function forEachObject2(object, iterator, receiver) {
      for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
          if (receiver == null) {
            iterator(object[k], k, object);
          } else {
            iterator.call(receiver, object[k], k, object);
          }
        }
      }
    };
    function isArray(x) {
      return toStr.call(x) === "[object Array]";
    }
    module.exports = function forEach(list, iterator, thisArg) {
      if (!isCallable(iterator)) {
        throw new TypeError("iterator must be a function");
      }
      var receiver;
      if (arguments.length >= 3) {
        receiver = thisArg;
      }
      if (isArray(list)) {
        forEachArray(list, iterator, receiver);
      } else if (typeof list === "string") {
        forEachString(list, iterator, receiver);
      } else {
        forEachObject(list, iterator, receiver);
      }
    };
  }
});

// node_modules/possible-typed-array-names/index.js
var require_possible_typed_array_names = __commonJS({
  "node_modules/possible-typed-array-names/index.js"(exports, module) {
    "use strict";
    module.exports = [
      "Float16Array",
      "Float32Array",
      "Float64Array",
      "Int8Array",
      "Int16Array",
      "Int32Array",
      "Uint8Array",
      "Uint8ClampedArray",
      "Uint16Array",
      "Uint32Array",
      "BigInt64Array",
      "BigUint64Array"
    ];
  }
});

// node_modules/available-typed-arrays/index.js
var require_available_typed_arrays = __commonJS({
  "node_modules/available-typed-arrays/index.js"(exports, module) {
    "use strict";
    var possibleNames = require_possible_typed_array_names();
    var g = typeof globalThis === "undefined" ? global : globalThis;
    module.exports = function availableTypedArrays() {
      var out = [];
      for (var i = 0; i < possibleNames.length; i++) {
        if (typeof g[possibleNames[i]] === "function") {
          out[out.length] = possibleNames[i];
        }
      }
      return out;
    };
  }
});

// node_modules/define-data-property/index.js
var require_define_data_property = __commonJS({
  "node_modules/define-data-property/index.js"(exports, module) {
    "use strict";
    var $defineProperty = require_es_define_property();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var gopd = require_gopd();
    module.exports = function defineDataProperty(obj, property, value) {
      if (!obj || typeof obj !== "object" && typeof obj !== "function") {
        throw new $TypeError("`obj` must be an object or a function`");
      }
      if (typeof property !== "string" && typeof property !== "symbol") {
        throw new $TypeError("`property` must be a string or a symbol`");
      }
      if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
        throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
        throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
        throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
        throw new $TypeError("`loose`, if provided, must be a boolean");
      }
      var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
      var nonWritable = arguments.length > 4 ? arguments[4] : null;
      var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
      var loose = arguments.length > 6 ? arguments[6] : false;
      var desc = !!gopd && gopd(obj, property);
      if ($defineProperty) {
        $defineProperty(obj, property, {
          configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
          enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
          value,
          writable: nonWritable === null && desc ? desc.writable : !nonWritable
        });
      } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {
        obj[property] = value;
      } else {
        throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
      }
    };
  }
});

// node_modules/has-property-descriptors/index.js
var require_has_property_descriptors = __commonJS({
  "node_modules/has-property-descriptors/index.js"(exports, module) {
    "use strict";
    var $defineProperty = require_es_define_property();
    var hasPropertyDescriptors = function hasPropertyDescriptors2() {
      return !!$defineProperty;
    };
    hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
      if (!$defineProperty) {
        return null;
      }
      try {
        return $defineProperty([], "length", { value: 1 }).length !== 1;
      } catch (e2) {
        return true;
      }
    };
    module.exports = hasPropertyDescriptors;
  }
});

// node_modules/set-function-length/index.js
var require_set_function_length = __commonJS({
  "node_modules/set-function-length/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var define2 = require_define_data_property();
    var hasDescriptors = require_has_property_descriptors()();
    var gOPD = require_gopd();
    var $TypeError = require_type();
    var $floor = GetIntrinsic("%Math.floor%");
    module.exports = function setFunctionLength(fn, length) {
      if (typeof fn !== "function") {
        throw new $TypeError("`fn` is not a function");
      }
      if (typeof length !== "number" || length < 0 || length > 4294967295 || $floor(length) !== length) {
        throw new $TypeError("`length` must be a positive 32-bit integer");
      }
      var loose = arguments.length > 2 && !!arguments[2];
      var functionLengthIsConfigurable = true;
      var functionLengthIsWritable = true;
      if ("length" in fn && gOPD) {
        var desc = gOPD(fn, "length");
        if (desc && !desc.configurable) {
          functionLengthIsConfigurable = false;
        }
        if (desc && !desc.writable) {
          functionLengthIsWritable = false;
        }
      }
      if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
        if (hasDescriptors) {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "length",
            length,
            true,
            true
          );
        } else {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "length",
            length
          );
        }
      }
      return fn;
    };
  }
});

// node_modules/call-bind-apply-helpers/applyBind.js
var require_applyBind = __commonJS({
  "node_modules/call-bind-apply-helpers/applyBind.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $apply = require_functionApply();
    var actualApply = require_actualApply();
    module.exports = function applyBind() {
      return actualApply(bind, $apply, arguments);
    };
  }
});

// node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  "node_modules/call-bind/index.js"(exports, module) {
    "use strict";
    var setFunctionLength = require_set_function_length();
    var $defineProperty = require_es_define_property();
    var callBindBasic = require_call_bind_apply_helpers();
    var applyBind = require_applyBind();
    module.exports = function callBind(originalFunction) {
      var func = callBindBasic(arguments);
      var adjustedLength = originalFunction.length - (arguments.length - 1);
      return setFunctionLength(
        func,
        1 + (adjustedLength > 0 ? adjustedLength : 0),
        true
      );
    };
    if ($defineProperty) {
      $defineProperty(module.exports, "apply", { value: applyBind });
    } else {
      module.exports.apply = applyBind;
    }
  }
});

// node_modules/has-tostringtag/shams.js
var require_shams2 = __commonJS({
  "node_modules/has-tostringtag/shams.js"(exports, module) {
    "use strict";
    var hasSymbols = require_shams();
    module.exports = function hasToStringTagShams() {
      return hasSymbols() && !!Symbol.toStringTag;
    };
  }
});

// node_modules/which-typed-array/index.js
var require_which_typed_array = __commonJS({
  "node_modules/which-typed-array/index.js"(exports, module) {
    "use strict";
    var forEach = require_for_each();
    var availableTypedArrays = require_available_typed_arrays();
    var callBind = require_call_bind();
    var callBound = require_call_bound();
    var gOPD = require_gopd();
    var getProto = require_get_proto();
    var $toString = callBound("Object.prototype.toString");
    var hasToStringTag = require_shams2()();
    var g = typeof globalThis === "undefined" ? global : globalThis;
    var typedArrays2 = availableTypedArrays();
    var $slice = callBound("String.prototype.slice");
    var $indexOf = callBound("Array.prototype.indexOf", true) || function indexOf(array, value) {
      for (var i = 0; i < array.length; i += 1) {
        if (array[i] === value) {
          return i;
        }
      }
      return -1;
    };
    var cache = { __proto__: null };
    if (hasToStringTag && gOPD && getProto) {
      forEach(typedArrays2, function(typedArray) {
        var arr = new g[typedArray]();
        if (Symbol.toStringTag in arr && getProto) {
          var proto = getProto(arr);
          var descriptor = gOPD(proto, Symbol.toStringTag);
          if (!descriptor && proto) {
            var superProto = getProto(proto);
            descriptor = gOPD(superProto, Symbol.toStringTag);
          }
          cache["$" + typedArray] = callBind(descriptor.get);
        }
      });
    } else {
      forEach(typedArrays2, function(typedArray) {
        var arr = new g[typedArray]();
        var fn = arr.slice || arr.set;
        if (fn) {
          cache[
            /** @type {`$${import('.').TypedArrayName}`} */
            "$" + typedArray
          ] = /** @type {import('./types').BoundSlice | import('./types').BoundSet} */
          // @ts-expect-error TODO FIXME
          callBind(fn);
        }
      });
    }
    var tryTypedArrays = function tryAllTypedArrays(value) {
      var found = false;
      forEach(
        /** @type {Record<`\$${import('.').TypedArrayName}`, Getter>} */
        cache,
        /** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */
        function(getter, typedArray) {
          if (!found) {
            try {
              if ("$" + getter(value) === typedArray) {
                found = /** @type {import('.').TypedArrayName} */
                $slice(typedArray, 1);
              }
            } catch (e2) {
            }
          }
        }
      );
      return found;
    };
    var trySlices = function tryAllSlices(value) {
      var found = false;
      forEach(
        /** @type {Record<`\$${import('.').TypedArrayName}`, Getter>} */
        cache,
        /** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */
        function(getter, name) {
          if (!found) {
            try {
              getter(value);
              found = /** @type {import('.').TypedArrayName} */
              $slice(name, 1);
            } catch (e2) {
            }
          }
        }
      );
      return found;
    };
    module.exports = function whichTypedArray(value) {
      if (!value || typeof value !== "object") {
        return false;
      }
      if (!hasToStringTag) {
        var tag = $slice($toString(value), 8, -1);
        if ($indexOf(typedArrays2, tag) > -1) {
          return tag;
        }
        if (tag !== "Object") {
          return false;
        }
        return trySlices(value);
      }
      if (!gOPD) {
        return null;
      }
      return tryTypedArrays(value);
    };
  }
});

// node_modules/is-typed-array/index.js
var require_is_typed_array = __commonJS({
  "node_modules/is-typed-array/index.js"(exports, module) {
    "use strict";
    var whichTypedArray = require_which_typed_array();
    module.exports = function isTypedArray(value) {
      return !!whichTypedArray(value);
    };
  }
});

// node_modules/typed-array-buffer/index.js
var require_typed_array_buffer = __commonJS({
  "node_modules/typed-array-buffer/index.js"(exports, module) {
    "use strict";
    var $TypeError = require_type();
    var callBound = require_call_bound();
    var $typedArrayBuffer = callBound("TypedArray.prototype.buffer", true);
    var isTypedArray = require_is_typed_array();
    module.exports = $typedArrayBuffer || function typedArrayBuffer(x) {
      if (!isTypedArray(x)) {
        throw new $TypeError("Not a Typed Array");
      }
      return x.buffer;
    };
  }
});

// node_modules/to-buffer/index.js
var require_to_buffer = __commonJS({
  "node_modules/to-buffer/index.js"(exports, module) {
    "use strict";
    var Buffer5 = require_safe_buffer().Buffer;
    var isArray = require_isarray();
    var typedArrayBuffer = require_typed_array_buffer();
    var isView = ArrayBuffer.isView || function isView2(obj) {
      try {
        typedArrayBuffer(obj);
        return true;
      } catch (e2) {
        return false;
      }
    };
    var useUint8Array = typeof Uint8Array !== "undefined";
    var useArrayBuffer = typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined";
    var useFromArrayBuffer = useArrayBuffer && (Buffer5.prototype instanceof Uint8Array || Buffer5.TYPED_ARRAY_SUPPORT);
    module.exports = function toBuffer(data, encoding) {
      if (data instanceof Buffer5) {
        return data;
      }
      if (typeof data === "string") {
        return Buffer5.from(data, encoding);
      }
      if (useArrayBuffer && isView(data)) {
        if (data.byteLength === 0) {
          return Buffer5.alloc(0);
        }
        if (useFromArrayBuffer) {
          var res = Buffer5.from(data.buffer, data.byteOffset, data.byteLength);
          if (res.byteLength === data.byteLength) {
            return res;
          }
        }
        var uint8 = data instanceof Uint8Array ? data : new Uint8Array(data.buffer, data.byteOffset, data.byteLength);
        var result = Buffer5.from(uint8);
        if (result.length === data.byteLength) {
          return result;
        }
      }
      if (useUint8Array && data instanceof Uint8Array) {
        return Buffer5.from(data);
      }
      var isArr = isArray(data);
      if (isArr) {
        for (var i = 0; i < data.length; i += 1) {
          var x = data[i];
          if (typeof x !== "number" || x < 0 || x > 255 || ~~x !== x) {
            throw new RangeError("Array items must be numbers in the range 0-255.");
          }
        }
      }
      if (isArr || Buffer5.isBuffer(data) && data.constructor && typeof data.constructor.isBuffer === "function" && data.constructor.isBuffer(data)) {
        return Buffer5.from(data);
      }
      throw new TypeError('The "data" argument must be a string, an Array, a Buffer, a Uint8Array, or a DataView.');
    };
  }
});

// node_modules/sha.js/hash.js
var require_hash = __commonJS({
  "node_modules/sha.js/hash.js"(exports, module) {
    "use strict";
    var Buffer5 = require_safe_buffer().Buffer;
    var toBuffer = require_to_buffer();
    function Hash(blockSize, finalSize) {
      this._block = Buffer5.alloc(blockSize);
      this._finalSize = finalSize;
      this._blockSize = blockSize;
      this._len = 0;
    }
    Hash.prototype.update = function(data, enc) {
      data = toBuffer(data, enc || "utf8");
      var block = this._block;
      var blockSize = this._blockSize;
      var length = data.length;
      var accum = this._len;
      for (var offset = 0; offset < length; ) {
        var assigned = accum % blockSize;
        var remainder = Math.min(length - offset, blockSize - assigned);
        for (var i = 0; i < remainder; i++) {
          block[assigned + i] = data[offset + i];
        }
        accum += remainder;
        offset += remainder;
        if (accum % blockSize === 0) {
          this._update(block);
        }
      }
      this._len += length;
      return this;
    };
    Hash.prototype.digest = function(enc) {
      var rem = this._len % this._blockSize;
      this._block[rem] = 128;
      this._block.fill(0, rem + 1);
      if (rem >= this._finalSize) {
        this._update(this._block);
        this._block.fill(0);
      }
      var bits = this._len * 8;
      if (bits <= 4294967295) {
        this._block.writeUInt32BE(bits, this._blockSize - 4);
      } else {
        var lowBits = (bits & 4294967295) >>> 0;
        var highBits = (bits - lowBits) / 4294967296;
        this._block.writeUInt32BE(highBits, this._blockSize - 8);
        this._block.writeUInt32BE(lowBits, this._blockSize - 4);
      }
      this._update(this._block);
      var hash2 = this._hash();
      return enc ? hash2.toString(enc) : hash2;
    };
    Hash.prototype._update = function() {
      throw new Error("_update must be implemented by subclass");
    };
    module.exports = Hash;
  }
});

// node_modules/sha.js/sha.js
var require_sha = __commonJS({
  "node_modules/sha.js/sha.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer5 = require_safe_buffer().Buffer;
    var K = [
      1518500249,
      1859775393,
      2400959708 | 0,
      3395469782 | 0
    ];
    var W = new Array(80);
    function Sha() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha, Hash);
    Sha.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (s === 0) {
        return b & c | ~b & d;
      }
      if (s === 2) {
        return b & c | b & d | c & d;
      }
      return b ^ c ^ d;
    }
    Sha.prototype._update = function(M) {
      var w = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e2 = this._e | 0;
      for (var i = 0; i < 16; ++i) {
        w[i] = M.readInt32BE(i * 4);
      }
      for (; i < 80; ++i) {
        w[i] = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];
      }
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t2 = rotl5(a) + ft(s, b, c, d) + e2 + w[j] + K[s] | 0;
        e2 = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t2;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e2 + this._e | 0;
    };
    Sha.prototype._hash = function() {
      var H = Buffer5.allocUnsafe(20);
      H.writeInt32BE(this._a | 0, 0);
      H.writeInt32BE(this._b | 0, 4);
      H.writeInt32BE(this._c | 0, 8);
      H.writeInt32BE(this._d | 0, 12);
      H.writeInt32BE(this._e | 0, 16);
      return H;
    };
    module.exports = Sha;
  }
});

// node_modules/sha.js/sha1.js
var require_sha1 = __commonJS({
  "node_modules/sha.js/sha1.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer5 = require_safe_buffer().Buffer;
    var K = [
      1518500249,
      1859775393,
      2400959708 | 0,
      3395469782 | 0
    ];
    var W = new Array(80);
    function Sha1() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha1, Hash);
    Sha1.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl1(num) {
      return num << 1 | num >>> 31;
    }
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (s === 0) {
        return b & c | ~b & d;
      }
      if (s === 2) {
        return b & c | b & d | c & d;
      }
      return b ^ c ^ d;
    }
    Sha1.prototype._update = function(M) {
      var w = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e2 = this._e | 0;
      for (var i = 0; i < 16; ++i) {
        w[i] = M.readInt32BE(i * 4);
      }
      for (; i < 80; ++i) {
        w[i] = rotl1(w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);
      }
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t2 = rotl5(a) + ft(s, b, c, d) + e2 + w[j] + K[s] | 0;
        e2 = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t2;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e2 + this._e | 0;
    };
    Sha1.prototype._hash = function() {
      var H = Buffer5.allocUnsafe(20);
      H.writeInt32BE(this._a | 0, 0);
      H.writeInt32BE(this._b | 0, 4);
      H.writeInt32BE(this._c | 0, 8);
      H.writeInt32BE(this._d | 0, 12);
      H.writeInt32BE(this._e | 0, 16);
      return H;
    };
    module.exports = Sha1;
  }
});

// node_modules/sha.js/sha256.js
var require_sha256 = __commonJS({
  "node_modules/sha.js/sha256.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer5 = require_safe_buffer().Buffer;
    var K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ];
    var W = new Array(64);
    function Sha256() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha256, Hash);
    Sha256.prototype.init = function() {
      this._a = 1779033703;
      this._b = 3144134277;
      this._c = 1013904242;
      this._d = 2773480762;
      this._e = 1359893119;
      this._f = 2600822924;
      this._g = 528734635;
      this._h = 1541459225;
      return this;
    };
    function ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x) {
      return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
    }
    function sigma1(x) {
      return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
    }
    function gamma0(x) {
      return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;
    }
    function gamma1(x) {
      return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
    }
    Sha256.prototype._update = function(M) {
      var w = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e2 = this._e | 0;
      var f = this._f | 0;
      var g = this._g | 0;
      var h = this._h | 0;
      for (var i = 0; i < 16; ++i) {
        w[i] = M.readInt32BE(i * 4);
      }
      for (; i < 64; ++i) {
        w[i] = gamma1(w[i - 2]) + w[i - 7] + gamma0(w[i - 15]) + w[i - 16] | 0;
      }
      for (var j = 0; j < 64; ++j) {
        var T1 = h + sigma1(e2) + ch(e2, f, g) + K[j] + w[j] | 0;
        var T2 = sigma0(a) + maj(a, b, c) | 0;
        h = g;
        g = f;
        f = e2;
        e2 = d + T1 | 0;
        d = c;
        c = b;
        b = a;
        a = T1 + T2 | 0;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e2 + this._e | 0;
      this._f = f + this._f | 0;
      this._g = g + this._g | 0;
      this._h = h + this._h | 0;
    };
    Sha256.prototype._hash = function() {
      var H = Buffer5.allocUnsafe(32);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      H.writeInt32BE(this._h, 28);
      return H;
    };
    module.exports = Sha256;
  }
});

// node_modules/sha.js/sha224.js
var require_sha224 = __commonJS({
  "node_modules/sha.js/sha224.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Sha256 = require_sha256();
    var Hash = require_hash();
    var Buffer5 = require_safe_buffer().Buffer;
    var W = new Array(64);
    function Sha224() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha224, Sha256);
    Sha224.prototype.init = function() {
      this._a = 3238371032;
      this._b = 914150663;
      this._c = 812702999;
      this._d = 4144912697;
      this._e = 4290775857;
      this._f = 1750603025;
      this._g = 1694076839;
      this._h = 3204075428;
      return this;
    };
    Sha224.prototype._hash = function() {
      var H = Buffer5.allocUnsafe(28);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      return H;
    };
    module.exports = Sha224;
  }
});

// node_modules/sha.js/sha512.js
var require_sha512 = __commonJS({
  "node_modules/sha.js/sha512.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer5 = require_safe_buffer().Buffer;
    var K = [
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ];
    var W = new Array(160);
    function Sha512() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha512, Hash);
    Sha512.prototype.init = function() {
      this._ah = 1779033703;
      this._bh = 3144134277;
      this._ch = 1013904242;
      this._dh = 2773480762;
      this._eh = 1359893119;
      this._fh = 2600822924;
      this._gh = 528734635;
      this._hh = 1541459225;
      this._al = 4089235720;
      this._bl = 2227873595;
      this._cl = 4271175723;
      this._dl = 1595750129;
      this._el = 2917565137;
      this._fl = 725511199;
      this._gl = 4215389547;
      this._hl = 327033209;
      return this;
    };
    function Ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x, xl) {
      return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
    }
    function sigma1(x, xl) {
      return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
    }
    function Gamma0(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;
    }
    function Gamma0l(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
    }
    function Gamma1(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;
    }
    function Gamma1l(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
    }
    function getCarry(a, b) {
      return a >>> 0 < b >>> 0 ? 1 : 0;
    }
    Sha512.prototype._update = function(M) {
      var w = this._w;
      var ah = this._ah | 0;
      var bh = this._bh | 0;
      var ch = this._ch | 0;
      var dh = this._dh | 0;
      var eh = this._eh | 0;
      var fh = this._fh | 0;
      var gh = this._gh | 0;
      var hh = this._hh | 0;
      var al = this._al | 0;
      var bl = this._bl | 0;
      var cl = this._cl | 0;
      var dl = this._dl | 0;
      var el = this._el | 0;
      var fl = this._fl | 0;
      var gl = this._gl | 0;
      var hl = this._hl | 0;
      for (var i = 0; i < 32; i += 2) {
        w[i] = M.readInt32BE(i * 4);
        w[i + 1] = M.readInt32BE(i * 4 + 4);
      }
      for (; i < 160; i += 2) {
        var xh = w[i - 15 * 2];
        var xl = w[i - 15 * 2 + 1];
        var gamma0 = Gamma0(xh, xl);
        var gamma0l = Gamma0l(xl, xh);
        xh = w[i - 2 * 2];
        xl = w[i - 2 * 2 + 1];
        var gamma1 = Gamma1(xh, xl);
        var gamma1l = Gamma1l(xl, xh);
        var Wi7h = w[i - 7 * 2];
        var Wi7l = w[i - 7 * 2 + 1];
        var Wi16h = w[i - 16 * 2];
        var Wi16l = w[i - 16 * 2 + 1];
        var Wil = gamma0l + Wi7l | 0;
        var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;
        Wil = Wil + gamma1l | 0;
        Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;
        Wil = Wil + Wi16l | 0;
        Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;
        w[i] = Wih;
        w[i + 1] = Wil;
      }
      for (var j = 0; j < 160; j += 2) {
        Wih = w[j];
        Wil = w[j + 1];
        var majh = maj(ah, bh, ch);
        var majl = maj(al, bl, cl);
        var sigma0h = sigma0(ah, al);
        var sigma0l = sigma0(al, ah);
        var sigma1h = sigma1(eh, el);
        var sigma1l = sigma1(el, eh);
        var Kih = K[j];
        var Kil = K[j + 1];
        var chh = Ch(eh, fh, gh);
        var chl = Ch(el, fl, gl);
        var t1l = hl + sigma1l | 0;
        var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;
        t1l = t1l + chl | 0;
        t1h = t1h + chh + getCarry(t1l, chl) | 0;
        t1l = t1l + Kil | 0;
        t1h = t1h + Kih + getCarry(t1l, Kil) | 0;
        t1l = t1l + Wil | 0;
        t1h = t1h + Wih + getCarry(t1l, Wil) | 0;
        var t2l = sigma0l + majl | 0;
        var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        el = dl + t1l | 0;
        eh = dh + t1h + getCarry(el, dl) | 0;
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        al = t1l + t2l | 0;
        ah = t1h + t2h + getCarry(al, t1l) | 0;
      }
      this._al = this._al + al | 0;
      this._bl = this._bl + bl | 0;
      this._cl = this._cl + cl | 0;
      this._dl = this._dl + dl | 0;
      this._el = this._el + el | 0;
      this._fl = this._fl + fl | 0;
      this._gl = this._gl + gl | 0;
      this._hl = this._hl + hl | 0;
      this._ah = this._ah + ah + getCarry(this._al, al) | 0;
      this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;
      this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;
      this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;
      this._eh = this._eh + eh + getCarry(this._el, el) | 0;
      this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;
      this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;
      this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;
    };
    Sha512.prototype._hash = function() {
      var H = Buffer5.allocUnsafe(64);
      function writeInt64BE(h, l2, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l2, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      writeInt64BE(this._gh, this._gl, 48);
      writeInt64BE(this._hh, this._hl, 56);
      return H;
    };
    module.exports = Sha512;
  }
});

// node_modules/sha.js/sha384.js
var require_sha384 = __commonJS({
  "node_modules/sha.js/sha384.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var SHA512 = require_sha512();
    var Hash = require_hash();
    var Buffer5 = require_safe_buffer().Buffer;
    var W = new Array(160);
    function Sha384() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha384, SHA512);
    Sha384.prototype.init = function() {
      this._ah = 3418070365;
      this._bh = 1654270250;
      this._ch = 2438529370;
      this._dh = 355462360;
      this._eh = 1731405415;
      this._fh = 2394180231;
      this._gh = 3675008525;
      this._hh = 1203062813;
      this._al = 3238371032;
      this._bl = 914150663;
      this._cl = 812702999;
      this._dl = 4144912697;
      this._el = 4290775857;
      this._fl = 1750603025;
      this._gl = 1694076839;
      this._hl = 3204075428;
      return this;
    };
    Sha384.prototype._hash = function() {
      var H = Buffer5.allocUnsafe(48);
      function writeInt64BE(h, l2, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l2, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      return H;
    };
    module.exports = Sha384;
  }
});

// node_modules/sha.js/index.js
var require_sha2 = __commonJS({
  "node_modules/sha.js/index.js"(exports, module) {
    "use strict";
    module.exports = function SHA(algorithm) {
      var alg = algorithm.toLowerCase();
      var Algorithm = module.exports[alg];
      if (!Algorithm) {
        throw new Error(alg + " is not supported (we accept pull requests)");
      }
      return new Algorithm();
    };
    module.exports.sha = require_sha();
    module.exports.sha1 = require_sha1();
    module.exports.sha224 = require_sha224();
    module.exports.sha256 = require_sha256();
    module.exports.sha384 = require_sha384();
    module.exports.sha512 = require_sha512();
  }
});

// node_modules/@stellar/stellar-base/lib/hashing.js
var require_hashing = __commonJS({
  "node_modules/@stellar/stellar-base/lib/hashing.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hash = hash2;
    var _sha = require_sha2();
    function hash2(data) {
      var hasher = new _sha.sha256();
      hasher.update(data, "utf8");
      return hasher.digest();
    }
  }
});

// browser-external:sodium-native
var require_sodium_native = __commonJS({
  "browser-external:sodium-native"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "sodium-native" has been externalized for browser compatibility. Cannot access "sodium-native.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/tweetnacl/nacl-fast.js
var require_nacl_fast = __commonJS({
  "node_modules/tweetnacl/nacl-fast.js"(exports, module) {
    (function(nacl) {
      "use strict";
      var gf = function(init) {
        var i, r3 = new Float64Array(16);
        if (init) for (i = 0; i < init.length; i++) r3[i] = init[i];
        return r3;
      };
      var randombytes = function() {
        throw new Error("no PRNG");
      };
      var _0 = new Uint8Array(16);
      var _9 = new Uint8Array(32);
      _9[0] = 9;
      var gf0 = gf(), gf1 = gf([1]), _121665 = gf([56129, 1]), D = gf([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), D2 = gf([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), X = gf([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), Y = gf([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), I = gf([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
      function ts64(x, i, h, l2) {
        x[i] = h >> 24 & 255;
        x[i + 1] = h >> 16 & 255;
        x[i + 2] = h >> 8 & 255;
        x[i + 3] = h & 255;
        x[i + 4] = l2 >> 24 & 255;
        x[i + 5] = l2 >> 16 & 255;
        x[i + 6] = l2 >> 8 & 255;
        x[i + 7] = l2 & 255;
      }
      function vn(x, xi, y, yi, n2) {
        var i, d = 0;
        for (i = 0; i < n2; i++) d |= x[xi + i] ^ y[yi + i];
        return (1 & d - 1 >>> 8) - 1;
      }
      function crypto_verify_16(x, xi, y, yi) {
        return vn(x, xi, y, yi, 16);
      }
      function crypto_verify_32(x, xi, y, yi) {
        return vn(x, xi, y, yi, 32);
      }
      function core_salsa20(o2, p, k, c) {
        var j0 = c[0] & 255 | (c[1] & 255) << 8 | (c[2] & 255) << 16 | (c[3] & 255) << 24, j1 = k[0] & 255 | (k[1] & 255) << 8 | (k[2] & 255) << 16 | (k[3] & 255) << 24, j2 = k[4] & 255 | (k[5] & 255) << 8 | (k[6] & 255) << 16 | (k[7] & 255) << 24, j3 = k[8] & 255 | (k[9] & 255) << 8 | (k[10] & 255) << 16 | (k[11] & 255) << 24, j4 = k[12] & 255 | (k[13] & 255) << 8 | (k[14] & 255) << 16 | (k[15] & 255) << 24, j5 = c[4] & 255 | (c[5] & 255) << 8 | (c[6] & 255) << 16 | (c[7] & 255) << 24, j6 = p[0] & 255 | (p[1] & 255) << 8 | (p[2] & 255) << 16 | (p[3] & 255) << 24, j7 = p[4] & 255 | (p[5] & 255) << 8 | (p[6] & 255) << 16 | (p[7] & 255) << 24, j8 = p[8] & 255 | (p[9] & 255) << 8 | (p[10] & 255) << 16 | (p[11] & 255) << 24, j9 = p[12] & 255 | (p[13] & 255) << 8 | (p[14] & 255) << 16 | (p[15] & 255) << 24, j10 = c[8] & 255 | (c[9] & 255) << 8 | (c[10] & 255) << 16 | (c[11] & 255) << 24, j11 = k[16] & 255 | (k[17] & 255) << 8 | (k[18] & 255) << 16 | (k[19] & 255) << 24, j12 = k[20] & 255 | (k[21] & 255) << 8 | (k[22] & 255) << 16 | (k[23] & 255) << 24, j13 = k[24] & 255 | (k[25] & 255) << 8 | (k[26] & 255) << 16 | (k[27] & 255) << 24, j14 = k[28] & 255 | (k[29] & 255) << 8 | (k[30] & 255) << 16 | (k[31] & 255) << 24, j15 = c[12] & 255 | (c[13] & 255) << 8 | (c[14] & 255) << 16 | (c[15] & 255) << 24;
        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;
        for (var i = 0; i < 20; i += 2) {
          u = x0 + x12 | 0;
          x4 ^= u << 7 | u >>> 32 - 7;
          u = x4 + x0 | 0;
          x8 ^= u << 9 | u >>> 32 - 9;
          u = x8 + x4 | 0;
          x12 ^= u << 13 | u >>> 32 - 13;
          u = x12 + x8 | 0;
          x0 ^= u << 18 | u >>> 32 - 18;
          u = x5 + x1 | 0;
          x9 ^= u << 7 | u >>> 32 - 7;
          u = x9 + x5 | 0;
          x13 ^= u << 9 | u >>> 32 - 9;
          u = x13 + x9 | 0;
          x1 ^= u << 13 | u >>> 32 - 13;
          u = x1 + x13 | 0;
          x5 ^= u << 18 | u >>> 32 - 18;
          u = x10 + x6 | 0;
          x14 ^= u << 7 | u >>> 32 - 7;
          u = x14 + x10 | 0;
          x2 ^= u << 9 | u >>> 32 - 9;
          u = x2 + x14 | 0;
          x6 ^= u << 13 | u >>> 32 - 13;
          u = x6 + x2 | 0;
          x10 ^= u << 18 | u >>> 32 - 18;
          u = x15 + x11 | 0;
          x3 ^= u << 7 | u >>> 32 - 7;
          u = x3 + x15 | 0;
          x7 ^= u << 9 | u >>> 32 - 9;
          u = x7 + x3 | 0;
          x11 ^= u << 13 | u >>> 32 - 13;
          u = x11 + x7 | 0;
          x15 ^= u << 18 | u >>> 32 - 18;
          u = x0 + x3 | 0;
          x1 ^= u << 7 | u >>> 32 - 7;
          u = x1 + x0 | 0;
          x2 ^= u << 9 | u >>> 32 - 9;
          u = x2 + x1 | 0;
          x3 ^= u << 13 | u >>> 32 - 13;
          u = x3 + x2 | 0;
          x0 ^= u << 18 | u >>> 32 - 18;
          u = x5 + x4 | 0;
          x6 ^= u << 7 | u >>> 32 - 7;
          u = x6 + x5 | 0;
          x7 ^= u << 9 | u >>> 32 - 9;
          u = x7 + x6 | 0;
          x4 ^= u << 13 | u >>> 32 - 13;
          u = x4 + x7 | 0;
          x5 ^= u << 18 | u >>> 32 - 18;
          u = x10 + x9 | 0;
          x11 ^= u << 7 | u >>> 32 - 7;
          u = x11 + x10 | 0;
          x8 ^= u << 9 | u >>> 32 - 9;
          u = x8 + x11 | 0;
          x9 ^= u << 13 | u >>> 32 - 13;
          u = x9 + x8 | 0;
          x10 ^= u << 18 | u >>> 32 - 18;
          u = x15 + x14 | 0;
          x12 ^= u << 7 | u >>> 32 - 7;
          u = x12 + x15 | 0;
          x13 ^= u << 9 | u >>> 32 - 9;
          u = x13 + x12 | 0;
          x14 ^= u << 13 | u >>> 32 - 13;
          u = x14 + x13 | 0;
          x15 ^= u << 18 | u >>> 32 - 18;
        }
        x0 = x0 + j0 | 0;
        x1 = x1 + j1 | 0;
        x2 = x2 + j2 | 0;
        x3 = x3 + j3 | 0;
        x4 = x4 + j4 | 0;
        x5 = x5 + j5 | 0;
        x6 = x6 + j6 | 0;
        x7 = x7 + j7 | 0;
        x8 = x8 + j8 | 0;
        x9 = x9 + j9 | 0;
        x10 = x10 + j10 | 0;
        x11 = x11 + j11 | 0;
        x12 = x12 + j12 | 0;
        x13 = x13 + j13 | 0;
        x14 = x14 + j14 | 0;
        x15 = x15 + j15 | 0;
        o2[0] = x0 >>> 0 & 255;
        o2[1] = x0 >>> 8 & 255;
        o2[2] = x0 >>> 16 & 255;
        o2[3] = x0 >>> 24 & 255;
        o2[4] = x1 >>> 0 & 255;
        o2[5] = x1 >>> 8 & 255;
        o2[6] = x1 >>> 16 & 255;
        o2[7] = x1 >>> 24 & 255;
        o2[8] = x2 >>> 0 & 255;
        o2[9] = x2 >>> 8 & 255;
        o2[10] = x2 >>> 16 & 255;
        o2[11] = x2 >>> 24 & 255;
        o2[12] = x3 >>> 0 & 255;
        o2[13] = x3 >>> 8 & 255;
        o2[14] = x3 >>> 16 & 255;
        o2[15] = x3 >>> 24 & 255;
        o2[16] = x4 >>> 0 & 255;
        o2[17] = x4 >>> 8 & 255;
        o2[18] = x4 >>> 16 & 255;
        o2[19] = x4 >>> 24 & 255;
        o2[20] = x5 >>> 0 & 255;
        o2[21] = x5 >>> 8 & 255;
        o2[22] = x5 >>> 16 & 255;
        o2[23] = x5 >>> 24 & 255;
        o2[24] = x6 >>> 0 & 255;
        o2[25] = x6 >>> 8 & 255;
        o2[26] = x6 >>> 16 & 255;
        o2[27] = x6 >>> 24 & 255;
        o2[28] = x7 >>> 0 & 255;
        o2[29] = x7 >>> 8 & 255;
        o2[30] = x7 >>> 16 & 255;
        o2[31] = x7 >>> 24 & 255;
        o2[32] = x8 >>> 0 & 255;
        o2[33] = x8 >>> 8 & 255;
        o2[34] = x8 >>> 16 & 255;
        o2[35] = x8 >>> 24 & 255;
        o2[36] = x9 >>> 0 & 255;
        o2[37] = x9 >>> 8 & 255;
        o2[38] = x9 >>> 16 & 255;
        o2[39] = x9 >>> 24 & 255;
        o2[40] = x10 >>> 0 & 255;
        o2[41] = x10 >>> 8 & 255;
        o2[42] = x10 >>> 16 & 255;
        o2[43] = x10 >>> 24 & 255;
        o2[44] = x11 >>> 0 & 255;
        o2[45] = x11 >>> 8 & 255;
        o2[46] = x11 >>> 16 & 255;
        o2[47] = x11 >>> 24 & 255;
        o2[48] = x12 >>> 0 & 255;
        o2[49] = x12 >>> 8 & 255;
        o2[50] = x12 >>> 16 & 255;
        o2[51] = x12 >>> 24 & 255;
        o2[52] = x13 >>> 0 & 255;
        o2[53] = x13 >>> 8 & 255;
        o2[54] = x13 >>> 16 & 255;
        o2[55] = x13 >>> 24 & 255;
        o2[56] = x14 >>> 0 & 255;
        o2[57] = x14 >>> 8 & 255;
        o2[58] = x14 >>> 16 & 255;
        o2[59] = x14 >>> 24 & 255;
        o2[60] = x15 >>> 0 & 255;
        o2[61] = x15 >>> 8 & 255;
        o2[62] = x15 >>> 16 & 255;
        o2[63] = x15 >>> 24 & 255;
      }
      function core_hsalsa20(o2, p, k, c) {
        var j0 = c[0] & 255 | (c[1] & 255) << 8 | (c[2] & 255) << 16 | (c[3] & 255) << 24, j1 = k[0] & 255 | (k[1] & 255) << 8 | (k[2] & 255) << 16 | (k[3] & 255) << 24, j2 = k[4] & 255 | (k[5] & 255) << 8 | (k[6] & 255) << 16 | (k[7] & 255) << 24, j3 = k[8] & 255 | (k[9] & 255) << 8 | (k[10] & 255) << 16 | (k[11] & 255) << 24, j4 = k[12] & 255 | (k[13] & 255) << 8 | (k[14] & 255) << 16 | (k[15] & 255) << 24, j5 = c[4] & 255 | (c[5] & 255) << 8 | (c[6] & 255) << 16 | (c[7] & 255) << 24, j6 = p[0] & 255 | (p[1] & 255) << 8 | (p[2] & 255) << 16 | (p[3] & 255) << 24, j7 = p[4] & 255 | (p[5] & 255) << 8 | (p[6] & 255) << 16 | (p[7] & 255) << 24, j8 = p[8] & 255 | (p[9] & 255) << 8 | (p[10] & 255) << 16 | (p[11] & 255) << 24, j9 = p[12] & 255 | (p[13] & 255) << 8 | (p[14] & 255) << 16 | (p[15] & 255) << 24, j10 = c[8] & 255 | (c[9] & 255) << 8 | (c[10] & 255) << 16 | (c[11] & 255) << 24, j11 = k[16] & 255 | (k[17] & 255) << 8 | (k[18] & 255) << 16 | (k[19] & 255) << 24, j12 = k[20] & 255 | (k[21] & 255) << 8 | (k[22] & 255) << 16 | (k[23] & 255) << 24, j13 = k[24] & 255 | (k[25] & 255) << 8 | (k[26] & 255) << 16 | (k[27] & 255) << 24, j14 = k[28] & 255 | (k[29] & 255) << 8 | (k[30] & 255) << 16 | (k[31] & 255) << 24, j15 = c[12] & 255 | (c[13] & 255) << 8 | (c[14] & 255) << 16 | (c[15] & 255) << 24;
        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;
        for (var i = 0; i < 20; i += 2) {
          u = x0 + x12 | 0;
          x4 ^= u << 7 | u >>> 32 - 7;
          u = x4 + x0 | 0;
          x8 ^= u << 9 | u >>> 32 - 9;
          u = x8 + x4 | 0;
          x12 ^= u << 13 | u >>> 32 - 13;
          u = x12 + x8 | 0;
          x0 ^= u << 18 | u >>> 32 - 18;
          u = x5 + x1 | 0;
          x9 ^= u << 7 | u >>> 32 - 7;
          u = x9 + x5 | 0;
          x13 ^= u << 9 | u >>> 32 - 9;
          u = x13 + x9 | 0;
          x1 ^= u << 13 | u >>> 32 - 13;
          u = x1 + x13 | 0;
          x5 ^= u << 18 | u >>> 32 - 18;
          u = x10 + x6 | 0;
          x14 ^= u << 7 | u >>> 32 - 7;
          u = x14 + x10 | 0;
          x2 ^= u << 9 | u >>> 32 - 9;
          u = x2 + x14 | 0;
          x6 ^= u << 13 | u >>> 32 - 13;
          u = x6 + x2 | 0;
          x10 ^= u << 18 | u >>> 32 - 18;
          u = x15 + x11 | 0;
          x3 ^= u << 7 | u >>> 32 - 7;
          u = x3 + x15 | 0;
          x7 ^= u << 9 | u >>> 32 - 9;
          u = x7 + x3 | 0;
          x11 ^= u << 13 | u >>> 32 - 13;
          u = x11 + x7 | 0;
          x15 ^= u << 18 | u >>> 32 - 18;
          u = x0 + x3 | 0;
          x1 ^= u << 7 | u >>> 32 - 7;
          u = x1 + x0 | 0;
          x2 ^= u << 9 | u >>> 32 - 9;
          u = x2 + x1 | 0;
          x3 ^= u << 13 | u >>> 32 - 13;
          u = x3 + x2 | 0;
          x0 ^= u << 18 | u >>> 32 - 18;
          u = x5 + x4 | 0;
          x6 ^= u << 7 | u >>> 32 - 7;
          u = x6 + x5 | 0;
          x7 ^= u << 9 | u >>> 32 - 9;
          u = x7 + x6 | 0;
          x4 ^= u << 13 | u >>> 32 - 13;
          u = x4 + x7 | 0;
          x5 ^= u << 18 | u >>> 32 - 18;
          u = x10 + x9 | 0;
          x11 ^= u << 7 | u >>> 32 - 7;
          u = x11 + x10 | 0;
          x8 ^= u << 9 | u >>> 32 - 9;
          u = x8 + x11 | 0;
          x9 ^= u << 13 | u >>> 32 - 13;
          u = x9 + x8 | 0;
          x10 ^= u << 18 | u >>> 32 - 18;
          u = x15 + x14 | 0;
          x12 ^= u << 7 | u >>> 32 - 7;
          u = x12 + x15 | 0;
          x13 ^= u << 9 | u >>> 32 - 9;
          u = x13 + x12 | 0;
          x14 ^= u << 13 | u >>> 32 - 13;
          u = x14 + x13 | 0;
          x15 ^= u << 18 | u >>> 32 - 18;
        }
        o2[0] = x0 >>> 0 & 255;
        o2[1] = x0 >>> 8 & 255;
        o2[2] = x0 >>> 16 & 255;
        o2[3] = x0 >>> 24 & 255;
        o2[4] = x5 >>> 0 & 255;
        o2[5] = x5 >>> 8 & 255;
        o2[6] = x5 >>> 16 & 255;
        o2[7] = x5 >>> 24 & 255;
        o2[8] = x10 >>> 0 & 255;
        o2[9] = x10 >>> 8 & 255;
        o2[10] = x10 >>> 16 & 255;
        o2[11] = x10 >>> 24 & 255;
        o2[12] = x15 >>> 0 & 255;
        o2[13] = x15 >>> 8 & 255;
        o2[14] = x15 >>> 16 & 255;
        o2[15] = x15 >>> 24 & 255;
        o2[16] = x6 >>> 0 & 255;
        o2[17] = x6 >>> 8 & 255;
        o2[18] = x6 >>> 16 & 255;
        o2[19] = x6 >>> 24 & 255;
        o2[20] = x7 >>> 0 & 255;
        o2[21] = x7 >>> 8 & 255;
        o2[22] = x7 >>> 16 & 255;
        o2[23] = x7 >>> 24 & 255;
        o2[24] = x8 >>> 0 & 255;
        o2[25] = x8 >>> 8 & 255;
        o2[26] = x8 >>> 16 & 255;
        o2[27] = x8 >>> 24 & 255;
        o2[28] = x9 >>> 0 & 255;
        o2[29] = x9 >>> 8 & 255;
        o2[30] = x9 >>> 16 & 255;
        o2[31] = x9 >>> 24 & 255;
      }
      function crypto_core_salsa20(out, inp, k, c) {
        core_salsa20(out, inp, k, c);
      }
      function crypto_core_hsalsa20(out, inp, k, c) {
        core_hsalsa20(out, inp, k, c);
      }
      var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
      function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n2, k) {
        var z = new Uint8Array(16), x = new Uint8Array(64);
        var u, i;
        for (i = 0; i < 16; i++) z[i] = 0;
        for (i = 0; i < 8; i++) z[i] = n2[i];
        while (b >= 64) {
          crypto_core_salsa20(x, z, k, sigma);
          for (i = 0; i < 64; i++) c[cpos + i] = m[mpos + i] ^ x[i];
          u = 1;
          for (i = 8; i < 16; i++) {
            u = u + (z[i] & 255) | 0;
            z[i] = u & 255;
            u >>>= 8;
          }
          b -= 64;
          cpos += 64;
          mpos += 64;
        }
        if (b > 0) {
          crypto_core_salsa20(x, z, k, sigma);
          for (i = 0; i < b; i++) c[cpos + i] = m[mpos + i] ^ x[i];
        }
        return 0;
      }
      function crypto_stream_salsa20(c, cpos, b, n2, k) {
        var z = new Uint8Array(16), x = new Uint8Array(64);
        var u, i;
        for (i = 0; i < 16; i++) z[i] = 0;
        for (i = 0; i < 8; i++) z[i] = n2[i];
        while (b >= 64) {
          crypto_core_salsa20(x, z, k, sigma);
          for (i = 0; i < 64; i++) c[cpos + i] = x[i];
          u = 1;
          for (i = 8; i < 16; i++) {
            u = u + (z[i] & 255) | 0;
            z[i] = u & 255;
            u >>>= 8;
          }
          b -= 64;
          cpos += 64;
        }
        if (b > 0) {
          crypto_core_salsa20(x, z, k, sigma);
          for (i = 0; i < b; i++) c[cpos + i] = x[i];
        }
        return 0;
      }
      function crypto_stream(c, cpos, d, n2, k) {
        var s = new Uint8Array(32);
        crypto_core_hsalsa20(s, n2, k, sigma);
        var sn = new Uint8Array(8);
        for (var i = 0; i < 8; i++) sn[i] = n2[i + 16];
        return crypto_stream_salsa20(c, cpos, d, sn, s);
      }
      function crypto_stream_xor(c, cpos, m, mpos, d, n2, k) {
        var s = new Uint8Array(32);
        crypto_core_hsalsa20(s, n2, k, sigma);
        var sn = new Uint8Array(8);
        for (var i = 0; i < 8; i++) sn[i] = n2[i + 16];
        return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);
      }
      var poly1305 = function(key) {
        this.buffer = new Uint8Array(16);
        this.r = new Uint16Array(10);
        this.h = new Uint16Array(10);
        this.pad = new Uint16Array(8);
        this.leftover = 0;
        this.fin = 0;
        var t0, t1, t2, t3, t4, t5, t6, t7;
        t0 = key[0] & 255 | (key[1] & 255) << 8;
        this.r[0] = t0 & 8191;
        t1 = key[2] & 255 | (key[3] & 255) << 8;
        this.r[1] = (t0 >>> 13 | t1 << 3) & 8191;
        t2 = key[4] & 255 | (key[5] & 255) << 8;
        this.r[2] = (t1 >>> 10 | t2 << 6) & 7939;
        t3 = key[6] & 255 | (key[7] & 255) << 8;
        this.r[3] = (t2 >>> 7 | t3 << 9) & 8191;
        t4 = key[8] & 255 | (key[9] & 255) << 8;
        this.r[4] = (t3 >>> 4 | t4 << 12) & 255;
        this.r[5] = t4 >>> 1 & 8190;
        t5 = key[10] & 255 | (key[11] & 255) << 8;
        this.r[6] = (t4 >>> 14 | t5 << 2) & 8191;
        t6 = key[12] & 255 | (key[13] & 255) << 8;
        this.r[7] = (t5 >>> 11 | t6 << 5) & 8065;
        t7 = key[14] & 255 | (key[15] & 255) << 8;
        this.r[8] = (t6 >>> 8 | t7 << 8) & 8191;
        this.r[9] = t7 >>> 5 & 127;
        this.pad[0] = key[16] & 255 | (key[17] & 255) << 8;
        this.pad[1] = key[18] & 255 | (key[19] & 255) << 8;
        this.pad[2] = key[20] & 255 | (key[21] & 255) << 8;
        this.pad[3] = key[22] & 255 | (key[23] & 255) << 8;
        this.pad[4] = key[24] & 255 | (key[25] & 255) << 8;
        this.pad[5] = key[26] & 255 | (key[27] & 255) << 8;
        this.pad[6] = key[28] & 255 | (key[29] & 255) << 8;
        this.pad[7] = key[30] & 255 | (key[31] & 255) << 8;
      };
      poly1305.prototype.blocks = function(m, mpos, bytes) {
        var hibit = this.fin ? 0 : 1 << 11;
        var t0, t1, t2, t3, t4, t5, t6, t7, c;
        var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;
        var h0 = this.h[0], h1 = this.h[1], h2 = this.h[2], h3 = this.h[3], h4 = this.h[4], h5 = this.h[5], h6 = this.h[6], h7 = this.h[7], h8 = this.h[8], h9 = this.h[9];
        var r0 = this.r[0], r1 = this.r[1], r22 = this.r[2], r3 = this.r[3], r4 = this.r[4], r5 = this.r[5], r6 = this.r[6], r7 = this.r[7], r8 = this.r[8], r9 = this.r[9];
        while (bytes >= 16) {
          t0 = m[mpos + 0] & 255 | (m[mpos + 1] & 255) << 8;
          h0 += t0 & 8191;
          t1 = m[mpos + 2] & 255 | (m[mpos + 3] & 255) << 8;
          h1 += (t0 >>> 13 | t1 << 3) & 8191;
          t2 = m[mpos + 4] & 255 | (m[mpos + 5] & 255) << 8;
          h2 += (t1 >>> 10 | t2 << 6) & 8191;
          t3 = m[mpos + 6] & 255 | (m[mpos + 7] & 255) << 8;
          h3 += (t2 >>> 7 | t3 << 9) & 8191;
          t4 = m[mpos + 8] & 255 | (m[mpos + 9] & 255) << 8;
          h4 += (t3 >>> 4 | t4 << 12) & 8191;
          h5 += t4 >>> 1 & 8191;
          t5 = m[mpos + 10] & 255 | (m[mpos + 11] & 255) << 8;
          h6 += (t4 >>> 14 | t5 << 2) & 8191;
          t6 = m[mpos + 12] & 255 | (m[mpos + 13] & 255) << 8;
          h7 += (t5 >>> 11 | t6 << 5) & 8191;
          t7 = m[mpos + 14] & 255 | (m[mpos + 15] & 255) << 8;
          h8 += (t6 >>> 8 | t7 << 8) & 8191;
          h9 += t7 >>> 5 | hibit;
          c = 0;
          d0 = c;
          d0 += h0 * r0;
          d0 += h1 * (5 * r9);
          d0 += h2 * (5 * r8);
          d0 += h3 * (5 * r7);
          d0 += h4 * (5 * r6);
          c = d0 >>> 13;
          d0 &= 8191;
          d0 += h5 * (5 * r5);
          d0 += h6 * (5 * r4);
          d0 += h7 * (5 * r3);
          d0 += h8 * (5 * r22);
          d0 += h9 * (5 * r1);
          c += d0 >>> 13;
          d0 &= 8191;
          d1 = c;
          d1 += h0 * r1;
          d1 += h1 * r0;
          d1 += h2 * (5 * r9);
          d1 += h3 * (5 * r8);
          d1 += h4 * (5 * r7);
          c = d1 >>> 13;
          d1 &= 8191;
          d1 += h5 * (5 * r6);
          d1 += h6 * (5 * r5);
          d1 += h7 * (5 * r4);
          d1 += h8 * (5 * r3);
          d1 += h9 * (5 * r22);
          c += d1 >>> 13;
          d1 &= 8191;
          d2 = c;
          d2 += h0 * r22;
          d2 += h1 * r1;
          d2 += h2 * r0;
          d2 += h3 * (5 * r9);
          d2 += h4 * (5 * r8);
          c = d2 >>> 13;
          d2 &= 8191;
          d2 += h5 * (5 * r7);
          d2 += h6 * (5 * r6);
          d2 += h7 * (5 * r5);
          d2 += h8 * (5 * r4);
          d2 += h9 * (5 * r3);
          c += d2 >>> 13;
          d2 &= 8191;
          d3 = c;
          d3 += h0 * r3;
          d3 += h1 * r22;
          d3 += h2 * r1;
          d3 += h3 * r0;
          d3 += h4 * (5 * r9);
          c = d3 >>> 13;
          d3 &= 8191;
          d3 += h5 * (5 * r8);
          d3 += h6 * (5 * r7);
          d3 += h7 * (5 * r6);
          d3 += h8 * (5 * r5);
          d3 += h9 * (5 * r4);
          c += d3 >>> 13;
          d3 &= 8191;
          d4 = c;
          d4 += h0 * r4;
          d4 += h1 * r3;
          d4 += h2 * r22;
          d4 += h3 * r1;
          d4 += h4 * r0;
          c = d4 >>> 13;
          d4 &= 8191;
          d4 += h5 * (5 * r9);
          d4 += h6 * (5 * r8);
          d4 += h7 * (5 * r7);
          d4 += h8 * (5 * r6);
          d4 += h9 * (5 * r5);
          c += d4 >>> 13;
          d4 &= 8191;
          d5 = c;
          d5 += h0 * r5;
          d5 += h1 * r4;
          d5 += h2 * r3;
          d5 += h3 * r22;
          d5 += h4 * r1;
          c = d5 >>> 13;
          d5 &= 8191;
          d5 += h5 * r0;
          d5 += h6 * (5 * r9);
          d5 += h7 * (5 * r8);
          d5 += h8 * (5 * r7);
          d5 += h9 * (5 * r6);
          c += d5 >>> 13;
          d5 &= 8191;
          d6 = c;
          d6 += h0 * r6;
          d6 += h1 * r5;
          d6 += h2 * r4;
          d6 += h3 * r3;
          d6 += h4 * r22;
          c = d6 >>> 13;
          d6 &= 8191;
          d6 += h5 * r1;
          d6 += h6 * r0;
          d6 += h7 * (5 * r9);
          d6 += h8 * (5 * r8);
          d6 += h9 * (5 * r7);
          c += d6 >>> 13;
          d6 &= 8191;
          d7 = c;
          d7 += h0 * r7;
          d7 += h1 * r6;
          d7 += h2 * r5;
          d7 += h3 * r4;
          d7 += h4 * r3;
          c = d7 >>> 13;
          d7 &= 8191;
          d7 += h5 * r22;
          d7 += h6 * r1;
          d7 += h7 * r0;
          d7 += h8 * (5 * r9);
          d7 += h9 * (5 * r8);
          c += d7 >>> 13;
          d7 &= 8191;
          d8 = c;
          d8 += h0 * r8;
          d8 += h1 * r7;
          d8 += h2 * r6;
          d8 += h3 * r5;
          d8 += h4 * r4;
          c = d8 >>> 13;
          d8 &= 8191;
          d8 += h5 * r3;
          d8 += h6 * r22;
          d8 += h7 * r1;
          d8 += h8 * r0;
          d8 += h9 * (5 * r9);
          c += d8 >>> 13;
          d8 &= 8191;
          d9 = c;
          d9 += h0 * r9;
          d9 += h1 * r8;
          d9 += h2 * r7;
          d9 += h3 * r6;
          d9 += h4 * r5;
          c = d9 >>> 13;
          d9 &= 8191;
          d9 += h5 * r4;
          d9 += h6 * r3;
          d9 += h7 * r22;
          d9 += h8 * r1;
          d9 += h9 * r0;
          c += d9 >>> 13;
          d9 &= 8191;
          c = (c << 2) + c | 0;
          c = c + d0 | 0;
          d0 = c & 8191;
          c = c >>> 13;
          d1 += c;
          h0 = d0;
          h1 = d1;
          h2 = d2;
          h3 = d3;
          h4 = d4;
          h5 = d5;
          h6 = d6;
          h7 = d7;
          h8 = d8;
          h9 = d9;
          mpos += 16;
          bytes -= 16;
        }
        this.h[0] = h0;
        this.h[1] = h1;
        this.h[2] = h2;
        this.h[3] = h3;
        this.h[4] = h4;
        this.h[5] = h5;
        this.h[6] = h6;
        this.h[7] = h7;
        this.h[8] = h8;
        this.h[9] = h9;
      };
      poly1305.prototype.finish = function(mac, macpos) {
        var g = new Uint16Array(10);
        var c, mask, f, i;
        if (this.leftover) {
          i = this.leftover;
          this.buffer[i++] = 1;
          for (; i < 16; i++) this.buffer[i] = 0;
          this.fin = 1;
          this.blocks(this.buffer, 0, 16);
        }
        c = this.h[1] >>> 13;
        this.h[1] &= 8191;
        for (i = 2; i < 10; i++) {
          this.h[i] += c;
          c = this.h[i] >>> 13;
          this.h[i] &= 8191;
        }
        this.h[0] += c * 5;
        c = this.h[0] >>> 13;
        this.h[0] &= 8191;
        this.h[1] += c;
        c = this.h[1] >>> 13;
        this.h[1] &= 8191;
        this.h[2] += c;
        g[0] = this.h[0] + 5;
        c = g[0] >>> 13;
        g[0] &= 8191;
        for (i = 1; i < 10; i++) {
          g[i] = this.h[i] + c;
          c = g[i] >>> 13;
          g[i] &= 8191;
        }
        g[9] -= 1 << 13;
        mask = (c ^ 1) - 1;
        for (i = 0; i < 10; i++) g[i] &= mask;
        mask = ~mask;
        for (i = 0; i < 10; i++) this.h[i] = this.h[i] & mask | g[i];
        this.h[0] = (this.h[0] | this.h[1] << 13) & 65535;
        this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 65535;
        this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 65535;
        this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 65535;
        this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 65535;
        this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 65535;
        this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 65535;
        this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 65535;
        f = this.h[0] + this.pad[0];
        this.h[0] = f & 65535;
        for (i = 1; i < 8; i++) {
          f = (this.h[i] + this.pad[i] | 0) + (f >>> 16) | 0;
          this.h[i] = f & 65535;
        }
        mac[macpos + 0] = this.h[0] >>> 0 & 255;
        mac[macpos + 1] = this.h[0] >>> 8 & 255;
        mac[macpos + 2] = this.h[1] >>> 0 & 255;
        mac[macpos + 3] = this.h[1] >>> 8 & 255;
        mac[macpos + 4] = this.h[2] >>> 0 & 255;
        mac[macpos + 5] = this.h[2] >>> 8 & 255;
        mac[macpos + 6] = this.h[3] >>> 0 & 255;
        mac[macpos + 7] = this.h[3] >>> 8 & 255;
        mac[macpos + 8] = this.h[4] >>> 0 & 255;
        mac[macpos + 9] = this.h[4] >>> 8 & 255;
        mac[macpos + 10] = this.h[5] >>> 0 & 255;
        mac[macpos + 11] = this.h[5] >>> 8 & 255;
        mac[macpos + 12] = this.h[6] >>> 0 & 255;
        mac[macpos + 13] = this.h[6] >>> 8 & 255;
        mac[macpos + 14] = this.h[7] >>> 0 & 255;
        mac[macpos + 15] = this.h[7] >>> 8 & 255;
      };
      poly1305.prototype.update = function(m, mpos, bytes) {
        var i, want;
        if (this.leftover) {
          want = 16 - this.leftover;
          if (want > bytes)
            want = bytes;
          for (i = 0; i < want; i++)
            this.buffer[this.leftover + i] = m[mpos + i];
          bytes -= want;
          mpos += want;
          this.leftover += want;
          if (this.leftover < 16)
            return;
          this.blocks(this.buffer, 0, 16);
          this.leftover = 0;
        }
        if (bytes >= 16) {
          want = bytes - bytes % 16;
          this.blocks(m, mpos, want);
          mpos += want;
          bytes -= want;
        }
        if (bytes) {
          for (i = 0; i < bytes; i++)
            this.buffer[this.leftover + i] = m[mpos + i];
          this.leftover += bytes;
        }
      };
      function crypto_onetimeauth(out, outpos, m, mpos, n2, k) {
        var s = new poly1305(k);
        s.update(m, mpos, n2);
        s.finish(out, outpos);
        return 0;
      }
      function crypto_onetimeauth_verify(h, hpos, m, mpos, n2, k) {
        var x = new Uint8Array(16);
        crypto_onetimeauth(x, 0, m, mpos, n2, k);
        return crypto_verify_16(h, hpos, x, 0);
      }
      function crypto_secretbox(c, m, d, n2, k) {
        var i;
        if (d < 32) return -1;
        crypto_stream_xor(c, 0, m, 0, d, n2, k);
        crypto_onetimeauth(c, 16, c, 32, d - 32, c);
        for (i = 0; i < 16; i++) c[i] = 0;
        return 0;
      }
      function crypto_secretbox_open(m, c, d, n2, k) {
        var i;
        var x = new Uint8Array(32);
        if (d < 32) return -1;
        crypto_stream(x, 0, 32, n2, k);
        if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;
        crypto_stream_xor(m, 0, c, 0, d, n2, k);
        for (i = 0; i < 32; i++) m[i] = 0;
        return 0;
      }
      function set25519(r3, a) {
        var i;
        for (i = 0; i < 16; i++) r3[i] = a[i] | 0;
      }
      function car25519(o2) {
        var i, v, c = 1;
        for (i = 0; i < 16; i++) {
          v = o2[i] + c + 65535;
          c = Math.floor(v / 65536);
          o2[i] = v - c * 65536;
        }
        o2[0] += c - 1 + 37 * (c - 1);
      }
      function sel25519(p, q, b) {
        var t2, c = ~(b - 1);
        for (var i = 0; i < 16; i++) {
          t2 = c & (p[i] ^ q[i]);
          p[i] ^= t2;
          q[i] ^= t2;
        }
      }
      function pack25519(o2, n2) {
        var i, j, b;
        var m = gf(), t2 = gf();
        for (i = 0; i < 16; i++) t2[i] = n2[i];
        car25519(t2);
        car25519(t2);
        car25519(t2);
        for (j = 0; j < 2; j++) {
          m[0] = t2[0] - 65517;
          for (i = 1; i < 15; i++) {
            m[i] = t2[i] - 65535 - (m[i - 1] >> 16 & 1);
            m[i - 1] &= 65535;
          }
          m[15] = t2[15] - 32767 - (m[14] >> 16 & 1);
          b = m[15] >> 16 & 1;
          m[14] &= 65535;
          sel25519(t2, m, 1 - b);
        }
        for (i = 0; i < 16; i++) {
          o2[2 * i] = t2[i] & 255;
          o2[2 * i + 1] = t2[i] >> 8;
        }
      }
      function neq25519(a, b) {
        var c = new Uint8Array(32), d = new Uint8Array(32);
        pack25519(c, a);
        pack25519(d, b);
        return crypto_verify_32(c, 0, d, 0);
      }
      function par25519(a) {
        var d = new Uint8Array(32);
        pack25519(d, a);
        return d[0] & 1;
      }
      function unpack25519(o2, n2) {
        var i;
        for (i = 0; i < 16; i++) o2[i] = n2[2 * i] + (n2[2 * i + 1] << 8);
        o2[15] &= 32767;
      }
      function A(o2, a, b) {
        for (var i = 0; i < 16; i++) o2[i] = a[i] + b[i];
      }
      function Z(o2, a, b) {
        for (var i = 0; i < 16; i++) o2[i] = a[i] - b[i];
      }
      function M(o2, a, b) {
        var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];
        v = a[0];
        t0 += v * b0;
        t1 += v * b1;
        t2 += v * b2;
        t3 += v * b3;
        t4 += v * b4;
        t5 += v * b5;
        t6 += v * b6;
        t7 += v * b7;
        t8 += v * b8;
        t9 += v * b9;
        t10 += v * b10;
        t11 += v * b11;
        t12 += v * b12;
        t13 += v * b13;
        t14 += v * b14;
        t15 += v * b15;
        v = a[1];
        t1 += v * b0;
        t2 += v * b1;
        t3 += v * b2;
        t4 += v * b3;
        t5 += v * b4;
        t6 += v * b5;
        t7 += v * b6;
        t8 += v * b7;
        t9 += v * b8;
        t10 += v * b9;
        t11 += v * b10;
        t12 += v * b11;
        t13 += v * b12;
        t14 += v * b13;
        t15 += v * b14;
        t16 += v * b15;
        v = a[2];
        t2 += v * b0;
        t3 += v * b1;
        t4 += v * b2;
        t5 += v * b3;
        t6 += v * b4;
        t7 += v * b5;
        t8 += v * b6;
        t9 += v * b7;
        t10 += v * b8;
        t11 += v * b9;
        t12 += v * b10;
        t13 += v * b11;
        t14 += v * b12;
        t15 += v * b13;
        t16 += v * b14;
        t17 += v * b15;
        v = a[3];
        t3 += v * b0;
        t4 += v * b1;
        t5 += v * b2;
        t6 += v * b3;
        t7 += v * b4;
        t8 += v * b5;
        t9 += v * b6;
        t10 += v * b7;
        t11 += v * b8;
        t12 += v * b9;
        t13 += v * b10;
        t14 += v * b11;
        t15 += v * b12;
        t16 += v * b13;
        t17 += v * b14;
        t18 += v * b15;
        v = a[4];
        t4 += v * b0;
        t5 += v * b1;
        t6 += v * b2;
        t7 += v * b3;
        t8 += v * b4;
        t9 += v * b5;
        t10 += v * b6;
        t11 += v * b7;
        t12 += v * b8;
        t13 += v * b9;
        t14 += v * b10;
        t15 += v * b11;
        t16 += v * b12;
        t17 += v * b13;
        t18 += v * b14;
        t19 += v * b15;
        v = a[5];
        t5 += v * b0;
        t6 += v * b1;
        t7 += v * b2;
        t8 += v * b3;
        t9 += v * b4;
        t10 += v * b5;
        t11 += v * b6;
        t12 += v * b7;
        t13 += v * b8;
        t14 += v * b9;
        t15 += v * b10;
        t16 += v * b11;
        t17 += v * b12;
        t18 += v * b13;
        t19 += v * b14;
        t20 += v * b15;
        v = a[6];
        t6 += v * b0;
        t7 += v * b1;
        t8 += v * b2;
        t9 += v * b3;
        t10 += v * b4;
        t11 += v * b5;
        t12 += v * b6;
        t13 += v * b7;
        t14 += v * b8;
        t15 += v * b9;
        t16 += v * b10;
        t17 += v * b11;
        t18 += v * b12;
        t19 += v * b13;
        t20 += v * b14;
        t21 += v * b15;
        v = a[7];
        t7 += v * b0;
        t8 += v * b1;
        t9 += v * b2;
        t10 += v * b3;
        t11 += v * b4;
        t12 += v * b5;
        t13 += v * b6;
        t14 += v * b7;
        t15 += v * b8;
        t16 += v * b9;
        t17 += v * b10;
        t18 += v * b11;
        t19 += v * b12;
        t20 += v * b13;
        t21 += v * b14;
        t22 += v * b15;
        v = a[8];
        t8 += v * b0;
        t9 += v * b1;
        t10 += v * b2;
        t11 += v * b3;
        t12 += v * b4;
        t13 += v * b5;
        t14 += v * b6;
        t15 += v * b7;
        t16 += v * b8;
        t17 += v * b9;
        t18 += v * b10;
        t19 += v * b11;
        t20 += v * b12;
        t21 += v * b13;
        t22 += v * b14;
        t23 += v * b15;
        v = a[9];
        t9 += v * b0;
        t10 += v * b1;
        t11 += v * b2;
        t12 += v * b3;
        t13 += v * b4;
        t14 += v * b5;
        t15 += v * b6;
        t16 += v * b7;
        t17 += v * b8;
        t18 += v * b9;
        t19 += v * b10;
        t20 += v * b11;
        t21 += v * b12;
        t22 += v * b13;
        t23 += v * b14;
        t24 += v * b15;
        v = a[10];
        t10 += v * b0;
        t11 += v * b1;
        t12 += v * b2;
        t13 += v * b3;
        t14 += v * b4;
        t15 += v * b5;
        t16 += v * b6;
        t17 += v * b7;
        t18 += v * b8;
        t19 += v * b9;
        t20 += v * b10;
        t21 += v * b11;
        t22 += v * b12;
        t23 += v * b13;
        t24 += v * b14;
        t25 += v * b15;
        v = a[11];
        t11 += v * b0;
        t12 += v * b1;
        t13 += v * b2;
        t14 += v * b3;
        t15 += v * b4;
        t16 += v * b5;
        t17 += v * b6;
        t18 += v * b7;
        t19 += v * b8;
        t20 += v * b9;
        t21 += v * b10;
        t22 += v * b11;
        t23 += v * b12;
        t24 += v * b13;
        t25 += v * b14;
        t26 += v * b15;
        v = a[12];
        t12 += v * b0;
        t13 += v * b1;
        t14 += v * b2;
        t15 += v * b3;
        t16 += v * b4;
        t17 += v * b5;
        t18 += v * b6;
        t19 += v * b7;
        t20 += v * b8;
        t21 += v * b9;
        t22 += v * b10;
        t23 += v * b11;
        t24 += v * b12;
        t25 += v * b13;
        t26 += v * b14;
        t27 += v * b15;
        v = a[13];
        t13 += v * b0;
        t14 += v * b1;
        t15 += v * b2;
        t16 += v * b3;
        t17 += v * b4;
        t18 += v * b5;
        t19 += v * b6;
        t20 += v * b7;
        t21 += v * b8;
        t22 += v * b9;
        t23 += v * b10;
        t24 += v * b11;
        t25 += v * b12;
        t26 += v * b13;
        t27 += v * b14;
        t28 += v * b15;
        v = a[14];
        t14 += v * b0;
        t15 += v * b1;
        t16 += v * b2;
        t17 += v * b3;
        t18 += v * b4;
        t19 += v * b5;
        t20 += v * b6;
        t21 += v * b7;
        t22 += v * b8;
        t23 += v * b9;
        t24 += v * b10;
        t25 += v * b11;
        t26 += v * b12;
        t27 += v * b13;
        t28 += v * b14;
        t29 += v * b15;
        v = a[15];
        t15 += v * b0;
        t16 += v * b1;
        t17 += v * b2;
        t18 += v * b3;
        t19 += v * b4;
        t20 += v * b5;
        t21 += v * b6;
        t22 += v * b7;
        t23 += v * b8;
        t24 += v * b9;
        t25 += v * b10;
        t26 += v * b11;
        t27 += v * b12;
        t28 += v * b13;
        t29 += v * b14;
        t30 += v * b15;
        t0 += 38 * t16;
        t1 += 38 * t17;
        t2 += 38 * t18;
        t3 += 38 * t19;
        t4 += 38 * t20;
        t5 += 38 * t21;
        t6 += 38 * t22;
        t7 += 38 * t23;
        t8 += 38 * t24;
        t9 += 38 * t25;
        t10 += 38 * t26;
        t11 += 38 * t27;
        t12 += 38 * t28;
        t13 += 38 * t29;
        t14 += 38 * t30;
        c = 1;
        v = t0 + c + 65535;
        c = Math.floor(v / 65536);
        t0 = v - c * 65536;
        v = t1 + c + 65535;
        c = Math.floor(v / 65536);
        t1 = v - c * 65536;
        v = t2 + c + 65535;
        c = Math.floor(v / 65536);
        t2 = v - c * 65536;
        v = t3 + c + 65535;
        c = Math.floor(v / 65536);
        t3 = v - c * 65536;
        v = t4 + c + 65535;
        c = Math.floor(v / 65536);
        t4 = v - c * 65536;
        v = t5 + c + 65535;
        c = Math.floor(v / 65536);
        t5 = v - c * 65536;
        v = t6 + c + 65535;
        c = Math.floor(v / 65536);
        t6 = v - c * 65536;
        v = t7 + c + 65535;
        c = Math.floor(v / 65536);
        t7 = v - c * 65536;
        v = t8 + c + 65535;
        c = Math.floor(v / 65536);
        t8 = v - c * 65536;
        v = t9 + c + 65535;
        c = Math.floor(v / 65536);
        t9 = v - c * 65536;
        v = t10 + c + 65535;
        c = Math.floor(v / 65536);
        t10 = v - c * 65536;
        v = t11 + c + 65535;
        c = Math.floor(v / 65536);
        t11 = v - c * 65536;
        v = t12 + c + 65535;
        c = Math.floor(v / 65536);
        t12 = v - c * 65536;
        v = t13 + c + 65535;
        c = Math.floor(v / 65536);
        t13 = v - c * 65536;
        v = t14 + c + 65535;
        c = Math.floor(v / 65536);
        t14 = v - c * 65536;
        v = t15 + c + 65535;
        c = Math.floor(v / 65536);
        t15 = v - c * 65536;
        t0 += c - 1 + 37 * (c - 1);
        c = 1;
        v = t0 + c + 65535;
        c = Math.floor(v / 65536);
        t0 = v - c * 65536;
        v = t1 + c + 65535;
        c = Math.floor(v / 65536);
        t1 = v - c * 65536;
        v = t2 + c + 65535;
        c = Math.floor(v / 65536);
        t2 = v - c * 65536;
        v = t3 + c + 65535;
        c = Math.floor(v / 65536);
        t3 = v - c * 65536;
        v = t4 + c + 65535;
        c = Math.floor(v / 65536);
        t4 = v - c * 65536;
        v = t5 + c + 65535;
        c = Math.floor(v / 65536);
        t5 = v - c * 65536;
        v = t6 + c + 65535;
        c = Math.floor(v / 65536);
        t6 = v - c * 65536;
        v = t7 + c + 65535;
        c = Math.floor(v / 65536);
        t7 = v - c * 65536;
        v = t8 + c + 65535;
        c = Math.floor(v / 65536);
        t8 = v - c * 65536;
        v = t9 + c + 65535;
        c = Math.floor(v / 65536);
        t9 = v - c * 65536;
        v = t10 + c + 65535;
        c = Math.floor(v / 65536);
        t10 = v - c * 65536;
        v = t11 + c + 65535;
        c = Math.floor(v / 65536);
        t11 = v - c * 65536;
        v = t12 + c + 65535;
        c = Math.floor(v / 65536);
        t12 = v - c * 65536;
        v = t13 + c + 65535;
        c = Math.floor(v / 65536);
        t13 = v - c * 65536;
        v = t14 + c + 65535;
        c = Math.floor(v / 65536);
        t14 = v - c * 65536;
        v = t15 + c + 65535;
        c = Math.floor(v / 65536);
        t15 = v - c * 65536;
        t0 += c - 1 + 37 * (c - 1);
        o2[0] = t0;
        o2[1] = t1;
        o2[2] = t2;
        o2[3] = t3;
        o2[4] = t4;
        o2[5] = t5;
        o2[6] = t6;
        o2[7] = t7;
        o2[8] = t8;
        o2[9] = t9;
        o2[10] = t10;
        o2[11] = t11;
        o2[12] = t12;
        o2[13] = t13;
        o2[14] = t14;
        o2[15] = t15;
      }
      function S(o2, a) {
        M(o2, a, a);
      }
      function inv25519(o2, i) {
        var c = gf();
        var a;
        for (a = 0; a < 16; a++) c[a] = i[a];
        for (a = 253; a >= 0; a--) {
          S(c, c);
          if (a !== 2 && a !== 4) M(c, c, i);
        }
        for (a = 0; a < 16; a++) o2[a] = c[a];
      }
      function pow2523(o2, i) {
        var c = gf();
        var a;
        for (a = 0; a < 16; a++) c[a] = i[a];
        for (a = 250; a >= 0; a--) {
          S(c, c);
          if (a !== 1) M(c, c, i);
        }
        for (a = 0; a < 16; a++) o2[a] = c[a];
      }
      function crypto_scalarmult(q, n2, p) {
        var z = new Uint8Array(32);
        var x = new Float64Array(80), r3, i;
        var a = gf(), b = gf(), c = gf(), d = gf(), e2 = gf(), f = gf();
        for (i = 0; i < 31; i++) z[i] = n2[i];
        z[31] = n2[31] & 127 | 64;
        z[0] &= 248;
        unpack25519(x, p);
        for (i = 0; i < 16; i++) {
          b[i] = x[i];
          d[i] = a[i] = c[i] = 0;
        }
        a[0] = d[0] = 1;
        for (i = 254; i >= 0; --i) {
          r3 = z[i >>> 3] >>> (i & 7) & 1;
          sel25519(a, b, r3);
          sel25519(c, d, r3);
          A(e2, a, c);
          Z(a, a, c);
          A(c, b, d);
          Z(b, b, d);
          S(d, e2);
          S(f, a);
          M(a, c, a);
          M(c, b, e2);
          A(e2, a, c);
          Z(a, a, c);
          S(b, a);
          Z(c, d, f);
          M(a, c, _121665);
          A(a, a, d);
          M(c, c, a);
          M(a, d, f);
          M(d, b, x);
          S(b, e2);
          sel25519(a, b, r3);
          sel25519(c, d, r3);
        }
        for (i = 0; i < 16; i++) {
          x[i + 16] = a[i];
          x[i + 32] = c[i];
          x[i + 48] = b[i];
          x[i + 64] = d[i];
        }
        var x32 = x.subarray(32);
        var x16 = x.subarray(16);
        inv25519(x32, x32);
        M(x16, x16, x32);
        pack25519(q, x16);
        return 0;
      }
      function crypto_scalarmult_base(q, n2) {
        return crypto_scalarmult(q, n2, _9);
      }
      function crypto_box_keypair(y, x) {
        randombytes(x, 32);
        return crypto_scalarmult_base(y, x);
      }
      function crypto_box_beforenm(k, y, x) {
        var s = new Uint8Array(32);
        crypto_scalarmult(s, x, y);
        return crypto_core_hsalsa20(k, _0, s, sigma);
      }
      var crypto_box_afternm = crypto_secretbox;
      var crypto_box_open_afternm = crypto_secretbox_open;
      function crypto_box(c, m, d, n2, y, x) {
        var k = new Uint8Array(32);
        crypto_box_beforenm(k, y, x);
        return crypto_box_afternm(c, m, d, n2, k);
      }
      function crypto_box_open(m, c, d, n2, y, x) {
        var k = new Uint8Array(32);
        crypto_box_beforenm(k, y, x);
        return crypto_box_open_afternm(m, c, d, n2, k);
      }
      var K = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
      function crypto_hashblocks_hl(hh, hl, m, n2) {
        var wh = new Int32Array(16), wl = new Int32Array(16), bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7, bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7, th, tl, i, j, h, l2, a, b, c, d;
        var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
        var pos = 0;
        while (n2 >= 128) {
          for (i = 0; i < 16; i++) {
            j = 8 * i + pos;
            wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];
            wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];
          }
          for (i = 0; i < 80; i++) {
            bh0 = ah0;
            bh1 = ah1;
            bh2 = ah2;
            bh3 = ah3;
            bh4 = ah4;
            bh5 = ah5;
            bh6 = ah6;
            bh7 = ah7;
            bl0 = al0;
            bl1 = al1;
            bl2 = al2;
            bl3 = al3;
            bl4 = al4;
            bl5 = al5;
            bl6 = al6;
            bl7 = al7;
            h = ah7;
            l2 = al7;
            a = l2 & 65535;
            b = l2 >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
            l2 = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            h = ah4 & ah5 ^ ~ah4 & ah6;
            l2 = al4 & al5 ^ ~al4 & al6;
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            h = K[i * 2];
            l2 = K[i * 2 + 1];
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            h = wh[i % 16];
            l2 = wl[i % 16];
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            th = c & 65535 | d << 16;
            tl = a & 65535 | b << 16;
            h = th;
            l2 = tl;
            a = l2 & 65535;
            b = l2 >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
            l2 = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
            l2 = al0 & al1 ^ al0 & al2 ^ al1 & al2;
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            bh7 = c & 65535 | d << 16;
            bl7 = a & 65535 | b << 16;
            h = bh3;
            l2 = bl3;
            a = l2 & 65535;
            b = l2 >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = th;
            l2 = tl;
            a += l2 & 65535;
            b += l2 >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            bh3 = c & 65535 | d << 16;
            bl3 = a & 65535 | b << 16;
            ah1 = bh0;
            ah2 = bh1;
            ah3 = bh2;
            ah4 = bh3;
            ah5 = bh4;
            ah6 = bh5;
            ah7 = bh6;
            ah0 = bh7;
            al1 = bl0;
            al2 = bl1;
            al3 = bl2;
            al4 = bl3;
            al5 = bl4;
            al6 = bl5;
            al7 = bl6;
            al0 = bl7;
            if (i % 16 === 15) {
              for (j = 0; j < 16; j++) {
                h = wh[j];
                l2 = wl[j];
                a = l2 & 65535;
                b = l2 >>> 16;
                c = h & 65535;
                d = h >>> 16;
                h = wh[(j + 9) % 16];
                l2 = wl[(j + 9) % 16];
                a += l2 & 65535;
                b += l2 >>> 16;
                c += h & 65535;
                d += h >>> 16;
                th = wh[(j + 1) % 16];
                tl = wl[(j + 1) % 16];
                h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
                l2 = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
                a += l2 & 65535;
                b += l2 >>> 16;
                c += h & 65535;
                d += h >>> 16;
                th = wh[(j + 14) % 16];
                tl = wl[(j + 14) % 16];
                h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
                l2 = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
                a += l2 & 65535;
                b += l2 >>> 16;
                c += h & 65535;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                wh[j] = c & 65535 | d << 16;
                wl[j] = a & 65535 | b << 16;
              }
            }
          }
          h = ah0;
          l2 = al0;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[0];
          l2 = hl[0];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[0] = ah0 = c & 65535 | d << 16;
          hl[0] = al0 = a & 65535 | b << 16;
          h = ah1;
          l2 = al1;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[1];
          l2 = hl[1];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[1] = ah1 = c & 65535 | d << 16;
          hl[1] = al1 = a & 65535 | b << 16;
          h = ah2;
          l2 = al2;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[2];
          l2 = hl[2];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[2] = ah2 = c & 65535 | d << 16;
          hl[2] = al2 = a & 65535 | b << 16;
          h = ah3;
          l2 = al3;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[3];
          l2 = hl[3];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[3] = ah3 = c & 65535 | d << 16;
          hl[3] = al3 = a & 65535 | b << 16;
          h = ah4;
          l2 = al4;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[4];
          l2 = hl[4];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[4] = ah4 = c & 65535 | d << 16;
          hl[4] = al4 = a & 65535 | b << 16;
          h = ah5;
          l2 = al5;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[5];
          l2 = hl[5];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[5] = ah5 = c & 65535 | d << 16;
          hl[5] = al5 = a & 65535 | b << 16;
          h = ah6;
          l2 = al6;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[6];
          l2 = hl[6];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[6] = ah6 = c & 65535 | d << 16;
          hl[6] = al6 = a & 65535 | b << 16;
          h = ah7;
          l2 = al7;
          a = l2 & 65535;
          b = l2 >>> 16;
          c = h & 65535;
          d = h >>> 16;
          h = hh[7];
          l2 = hl[7];
          a += l2 & 65535;
          b += l2 >>> 16;
          c += h & 65535;
          d += h >>> 16;
          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;
          hh[7] = ah7 = c & 65535 | d << 16;
          hl[7] = al7 = a & 65535 | b << 16;
          pos += 128;
          n2 -= 128;
        }
        return n2;
      }
      function crypto_hash(out, m, n2) {
        var hh = new Int32Array(8), hl = new Int32Array(8), x = new Uint8Array(256), i, b = n2;
        hh[0] = 1779033703;
        hh[1] = 3144134277;
        hh[2] = 1013904242;
        hh[3] = 2773480762;
        hh[4] = 1359893119;
        hh[5] = 2600822924;
        hh[6] = 528734635;
        hh[7] = 1541459225;
        hl[0] = 4089235720;
        hl[1] = 2227873595;
        hl[2] = 4271175723;
        hl[3] = 1595750129;
        hl[4] = 2917565137;
        hl[5] = 725511199;
        hl[6] = 4215389547;
        hl[7] = 327033209;
        crypto_hashblocks_hl(hh, hl, m, n2);
        n2 %= 128;
        for (i = 0; i < n2; i++) x[i] = m[b - n2 + i];
        x[n2] = 128;
        n2 = 256 - 128 * (n2 < 112 ? 1 : 0);
        x[n2 - 9] = 0;
        ts64(x, n2 - 8, b / 536870912 | 0, b << 3);
        crypto_hashblocks_hl(hh, hl, x, n2);
        for (i = 0; i < 8; i++) ts64(out, 8 * i, hh[i], hl[i]);
        return 0;
      }
      function add(p, q) {
        var a = gf(), b = gf(), c = gf(), d = gf(), e2 = gf(), f = gf(), g = gf(), h = gf(), t2 = gf();
        Z(a, p[1], p[0]);
        Z(t2, q[1], q[0]);
        M(a, a, t2);
        A(b, p[0], p[1]);
        A(t2, q[0], q[1]);
        M(b, b, t2);
        M(c, p[3], q[3]);
        M(c, c, D2);
        M(d, p[2], q[2]);
        A(d, d, d);
        Z(e2, b, a);
        Z(f, d, c);
        A(g, d, c);
        A(h, b, a);
        M(p[0], e2, f);
        M(p[1], h, g);
        M(p[2], g, f);
        M(p[3], e2, h);
      }
      function cswap(p, q, b) {
        var i;
        for (i = 0; i < 4; i++) {
          sel25519(p[i], q[i], b);
        }
      }
      function pack(r3, p) {
        var tx = gf(), ty = gf(), zi = gf();
        inv25519(zi, p[2]);
        M(tx, p[0], zi);
        M(ty, p[1], zi);
        pack25519(r3, ty);
        r3[31] ^= par25519(tx) << 7;
      }
      function scalarmult(p, q, s) {
        var b, i;
        set25519(p[0], gf0);
        set25519(p[1], gf1);
        set25519(p[2], gf1);
        set25519(p[3], gf0);
        for (i = 255; i >= 0; --i) {
          b = s[i / 8 | 0] >> (i & 7) & 1;
          cswap(p, q, b);
          add(q, p);
          add(p, p);
          cswap(p, q, b);
        }
      }
      function scalarbase(p, s) {
        var q = [gf(), gf(), gf(), gf()];
        set25519(q[0], X);
        set25519(q[1], Y);
        set25519(q[2], gf1);
        M(q[3], X, Y);
        scalarmult(p, q, s);
      }
      function crypto_sign_keypair(pk, sk, seeded) {
        var d = new Uint8Array(64);
        var p = [gf(), gf(), gf(), gf()];
        var i;
        if (!seeded) randombytes(sk, 32);
        crypto_hash(d, sk, 32);
        d[0] &= 248;
        d[31] &= 127;
        d[31] |= 64;
        scalarbase(p, d);
        pack(pk, p);
        for (i = 0; i < 32; i++) sk[i + 32] = pk[i];
        return 0;
      }
      var L = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
      function modL(r3, x) {
        var carry, i, j, k;
        for (i = 63; i >= 32; --i) {
          carry = 0;
          for (j = i - 32, k = i - 12; j < k; ++j) {
            x[j] += carry - 16 * x[i] * L[j - (i - 32)];
            carry = Math.floor((x[j] + 128) / 256);
            x[j] -= carry * 256;
          }
          x[j] += carry;
          x[i] = 0;
        }
        carry = 0;
        for (j = 0; j < 32; j++) {
          x[j] += carry - (x[31] >> 4) * L[j];
          carry = x[j] >> 8;
          x[j] &= 255;
        }
        for (j = 0; j < 32; j++) x[j] -= carry * L[j];
        for (i = 0; i < 32; i++) {
          x[i + 1] += x[i] >> 8;
          r3[i] = x[i] & 255;
        }
      }
      function reduce(r3) {
        var x = new Float64Array(64), i;
        for (i = 0; i < 64; i++) x[i] = r3[i];
        for (i = 0; i < 64; i++) r3[i] = 0;
        modL(r3, x);
      }
      function crypto_sign(sm, m, n2, sk) {
        var d = new Uint8Array(64), h = new Uint8Array(64), r3 = new Uint8Array(64);
        var i, j, x = new Float64Array(64);
        var p = [gf(), gf(), gf(), gf()];
        crypto_hash(d, sk, 32);
        d[0] &= 248;
        d[31] &= 127;
        d[31] |= 64;
        var smlen = n2 + 64;
        for (i = 0; i < n2; i++) sm[64 + i] = m[i];
        for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];
        crypto_hash(r3, sm.subarray(32), n2 + 32);
        reduce(r3);
        scalarbase(p, r3);
        pack(sm, p);
        for (i = 32; i < 64; i++) sm[i] = sk[i];
        crypto_hash(h, sm, n2 + 64);
        reduce(h);
        for (i = 0; i < 64; i++) x[i] = 0;
        for (i = 0; i < 32; i++) x[i] = r3[i];
        for (i = 0; i < 32; i++) {
          for (j = 0; j < 32; j++) {
            x[i + j] += h[i] * d[j];
          }
        }
        modL(sm.subarray(32), x);
        return smlen;
      }
      function unpackneg(r3, p) {
        var t2 = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();
        set25519(r3[2], gf1);
        unpack25519(r3[1], p);
        S(num, r3[1]);
        M(den, num, D);
        Z(num, num, r3[2]);
        A(den, r3[2], den);
        S(den2, den);
        S(den4, den2);
        M(den6, den4, den2);
        M(t2, den6, num);
        M(t2, t2, den);
        pow2523(t2, t2);
        M(t2, t2, num);
        M(t2, t2, den);
        M(t2, t2, den);
        M(r3[0], t2, den);
        S(chk, r3[0]);
        M(chk, chk, den);
        if (neq25519(chk, num)) M(r3[0], r3[0], I);
        S(chk, r3[0]);
        M(chk, chk, den);
        if (neq25519(chk, num)) return -1;
        if (par25519(r3[0]) === p[31] >> 7) Z(r3[0], gf0, r3[0]);
        M(r3[3], r3[0], r3[1]);
        return 0;
      }
      function crypto_sign_open(m, sm, n2, pk) {
        var i;
        var t2 = new Uint8Array(32), h = new Uint8Array(64);
        var p = [gf(), gf(), gf(), gf()], q = [gf(), gf(), gf(), gf()];
        if (n2 < 64) return -1;
        if (unpackneg(q, pk)) return -1;
        for (i = 0; i < n2; i++) m[i] = sm[i];
        for (i = 0; i < 32; i++) m[i + 32] = pk[i];
        crypto_hash(h, m, n2);
        reduce(h);
        scalarmult(p, q, h);
        scalarbase(q, sm.subarray(32));
        add(p, q);
        pack(t2, p);
        n2 -= 64;
        if (crypto_verify_32(sm, 0, t2, 0)) {
          for (i = 0; i < n2; i++) m[i] = 0;
          return -1;
        }
        for (i = 0; i < n2; i++) m[i] = sm[i + 64];
        return n2;
      }
      var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;
      nacl.lowlevel = {
        crypto_core_hsalsa20,
        crypto_stream_xor,
        crypto_stream,
        crypto_stream_salsa20_xor,
        crypto_stream_salsa20,
        crypto_onetimeauth,
        crypto_onetimeauth_verify,
        crypto_verify_16,
        crypto_verify_32,
        crypto_secretbox,
        crypto_secretbox_open,
        crypto_scalarmult,
        crypto_scalarmult_base,
        crypto_box_beforenm,
        crypto_box_afternm,
        crypto_box,
        crypto_box_open,
        crypto_box_keypair,
        crypto_hash,
        crypto_sign,
        crypto_sign_keypair,
        crypto_sign_open,
        crypto_secretbox_KEYBYTES,
        crypto_secretbox_NONCEBYTES,
        crypto_secretbox_ZEROBYTES,
        crypto_secretbox_BOXZEROBYTES,
        crypto_scalarmult_BYTES,
        crypto_scalarmult_SCALARBYTES,
        crypto_box_PUBLICKEYBYTES,
        crypto_box_SECRETKEYBYTES,
        crypto_box_BEFORENMBYTES,
        crypto_box_NONCEBYTES,
        crypto_box_ZEROBYTES,
        crypto_box_BOXZEROBYTES,
        crypto_sign_BYTES,
        crypto_sign_PUBLICKEYBYTES,
        crypto_sign_SECRETKEYBYTES,
        crypto_sign_SEEDBYTES,
        crypto_hash_BYTES,
        gf,
        D,
        L,
        pack25519,
        unpack25519,
        M,
        A,
        S,
        Z,
        pow2523,
        add,
        set25519,
        modL,
        scalarmult,
        scalarbase
      };
      function checkLengths(k, n2) {
        if (k.length !== crypto_secretbox_KEYBYTES) throw new Error("bad key size");
        if (n2.length !== crypto_secretbox_NONCEBYTES) throw new Error("bad nonce size");
      }
      function checkBoxLengths(pk, sk) {
        if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error("bad public key size");
        if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error("bad secret key size");
      }
      function checkArrayTypes() {
        for (var i = 0; i < arguments.length; i++) {
          if (!(arguments[i] instanceof Uint8Array))
            throw new TypeError("unexpected type, use Uint8Array");
        }
      }
      function cleanup(arr) {
        for (var i = 0; i < arr.length; i++) arr[i] = 0;
      }
      nacl.randomBytes = function(n2) {
        var b = new Uint8Array(n2);
        randombytes(b, n2);
        return b;
      };
      nacl.secretbox = function(msg, nonce, key) {
        checkArrayTypes(msg, nonce, key);
        checkLengths(key, nonce);
        var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
        var c = new Uint8Array(m.length);
        for (var i = 0; i < msg.length; i++) m[i + crypto_secretbox_ZEROBYTES] = msg[i];
        crypto_secretbox(c, m, m.length, nonce, key);
        return c.subarray(crypto_secretbox_BOXZEROBYTES);
      };
      nacl.secretbox.open = function(box, nonce, key) {
        checkArrayTypes(box, nonce, key);
        checkLengths(key, nonce);
        var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
        var m = new Uint8Array(c.length);
        for (var i = 0; i < box.length; i++) c[i + crypto_secretbox_BOXZEROBYTES] = box[i];
        if (c.length < 32) return null;
        if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
        return m.subarray(crypto_secretbox_ZEROBYTES);
      };
      nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
      nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
      nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;
      nacl.scalarMult = function(n2, p) {
        checkArrayTypes(n2, p);
        if (n2.length !== crypto_scalarmult_SCALARBYTES) throw new Error("bad n size");
        if (p.length !== crypto_scalarmult_BYTES) throw new Error("bad p size");
        var q = new Uint8Array(crypto_scalarmult_BYTES);
        crypto_scalarmult(q, n2, p);
        return q;
      };
      nacl.scalarMult.base = function(n2) {
        checkArrayTypes(n2);
        if (n2.length !== crypto_scalarmult_SCALARBYTES) throw new Error("bad n size");
        var q = new Uint8Array(crypto_scalarmult_BYTES);
        crypto_scalarmult_base(q, n2);
        return q;
      };
      nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
      nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;
      nacl.box = function(msg, nonce, publicKey, secretKey) {
        var k = nacl.box.before(publicKey, secretKey);
        return nacl.secretbox(msg, nonce, k);
      };
      nacl.box.before = function(publicKey, secretKey) {
        checkArrayTypes(publicKey, secretKey);
        checkBoxLengths(publicKey, secretKey);
        var k = new Uint8Array(crypto_box_BEFORENMBYTES);
        crypto_box_beforenm(k, publicKey, secretKey);
        return k;
      };
      nacl.box.after = nacl.secretbox;
      nacl.box.open = function(msg, nonce, publicKey, secretKey) {
        var k = nacl.box.before(publicKey, secretKey);
        return nacl.secretbox.open(msg, nonce, k);
      };
      nacl.box.open.after = nacl.secretbox.open;
      nacl.box.keyPair = function() {
        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
        var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
        crypto_box_keypair(pk, sk);
        return { publicKey: pk, secretKey: sk };
      };
      nacl.box.keyPair.fromSecretKey = function(secretKey) {
        checkArrayTypes(secretKey);
        if (secretKey.length !== crypto_box_SECRETKEYBYTES)
          throw new Error("bad secret key size");
        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
        crypto_scalarmult_base(pk, secretKey);
        return { publicKey: pk, secretKey: new Uint8Array(secretKey) };
      };
      nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
      nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
      nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
      nacl.box.nonceLength = crypto_box_NONCEBYTES;
      nacl.box.overheadLength = nacl.secretbox.overheadLength;
      nacl.sign = function(msg, secretKey) {
        checkArrayTypes(msg, secretKey);
        if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
          throw new Error("bad secret key size");
        var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);
        crypto_sign(signedMsg, msg, msg.length, secretKey);
        return signedMsg;
      };
      nacl.sign.open = function(signedMsg, publicKey) {
        checkArrayTypes(signedMsg, publicKey);
        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
          throw new Error("bad public key size");
        var tmp = new Uint8Array(signedMsg.length);
        var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
        if (mlen < 0) return null;
        var m = new Uint8Array(mlen);
        for (var i = 0; i < m.length; i++) m[i] = tmp[i];
        return m;
      };
      nacl.sign.detached = function(msg, secretKey) {
        var signedMsg = nacl.sign(msg, secretKey);
        var sig = new Uint8Array(crypto_sign_BYTES);
        for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
        return sig;
      };
      nacl.sign.detached.verify = function(msg, sig, publicKey) {
        checkArrayTypes(msg, sig, publicKey);
        if (sig.length !== crypto_sign_BYTES)
          throw new Error("bad signature size");
        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
          throw new Error("bad public key size");
        var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
        var m = new Uint8Array(crypto_sign_BYTES + msg.length);
        var i;
        for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
        for (i = 0; i < msg.length; i++) sm[i + crypto_sign_BYTES] = msg[i];
        return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;
      };
      nacl.sign.keyPair = function() {
        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
        crypto_sign_keypair(pk, sk);
        return { publicKey: pk, secretKey: sk };
      };
      nacl.sign.keyPair.fromSecretKey = function(secretKey) {
        checkArrayTypes(secretKey);
        if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
          throw new Error("bad secret key size");
        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
        for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32 + i];
        return { publicKey: pk, secretKey: new Uint8Array(secretKey) };
      };
      nacl.sign.keyPair.fromSeed = function(seed) {
        checkArrayTypes(seed);
        if (seed.length !== crypto_sign_SEEDBYTES)
          throw new Error("bad seed size");
        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
        for (var i = 0; i < 32; i++) sk[i] = seed[i];
        crypto_sign_keypair(pk, sk, true);
        return { publicKey: pk, secretKey: sk };
      };
      nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
      nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
      nacl.sign.seedLength = crypto_sign_SEEDBYTES;
      nacl.sign.signatureLength = crypto_sign_BYTES;
      nacl.hash = function(msg) {
        checkArrayTypes(msg);
        var h = new Uint8Array(crypto_hash_BYTES);
        crypto_hash(h, msg, msg.length);
        return h;
      };
      nacl.hash.hashLength = crypto_hash_BYTES;
      nacl.verify = function(x, y) {
        checkArrayTypes(x, y);
        if (x.length === 0 || y.length === 0) return false;
        if (x.length !== y.length) return false;
        return vn(x, 0, y, 0, x.length) === 0 ? true : false;
      };
      nacl.setPRNG = function(fn) {
        randombytes = fn;
      };
      (function() {
        var crypto2 = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (crypto2 && crypto2.getRandomValues) {
          var QUOTA = 65536;
          nacl.setPRNG(function(x, n2) {
            var i, v = new Uint8Array(n2);
            for (i = 0; i < n2; i += QUOTA) {
              crypto2.getRandomValues(v.subarray(i, i + Math.min(n2 - i, QUOTA)));
            }
            for (i = 0; i < n2; i++) x[i] = v[i];
            cleanup(v);
          });
        } else if (typeof __require !== "undefined") {
          crypto2 = require_crypto();
          if (crypto2 && crypto2.randomBytes) {
            nacl.setPRNG(function(x, n2) {
              var i, v = crypto2.randomBytes(n2);
              for (i = 0; i < n2; i++) x[i] = v[i];
              cleanup(v);
            });
          }
        }
      })();
    })(typeof module !== "undefined" && module.exports ? module.exports : self.nacl = self.nacl || {});
  }
});

// node_modules/@stellar/stellar-base/lib/signing.js
var require_signing = __commonJS({
  "node_modules/@stellar/stellar-base/lib/signing.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FastSigning = void 0;
    exports.generate = generate;
    exports.sign = sign;
    exports.verify = verify;
    var actualMethods = {};
    var FastSigning = exports.FastSigning = checkFastSigning();
    function sign(data, secretKey) {
      return actualMethods.sign(data, secretKey);
    }
    function verify(data, signature, publicKey) {
      return actualMethods.verify(data, signature, publicKey);
    }
    function generate(secretKey) {
      return actualMethods.generate(secretKey);
    }
    function checkFastSigning() {
      return typeof window === "undefined" ? checkFastSigningNode() : checkFastSigningBrowser();
    }
    function checkFastSigningNode() {
      var sodium;
      try {
        sodium = require_sodium_native();
      } catch (err) {
        return checkFastSigningBrowser();
      }
      if (!Object.keys(sodium).length) {
        return checkFastSigningBrowser();
      }
      actualMethods.generate = function(secretKey) {
        var pk = Buffer.alloc(sodium.crypto_sign_PUBLICKEYBYTES);
        var sk = Buffer.alloc(sodium.crypto_sign_SECRETKEYBYTES);
        sodium.crypto_sign_seed_keypair(pk, sk, secretKey);
        return pk;
      };
      actualMethods.sign = function(data, secretKey) {
        data = Buffer.from(data);
        var signature = Buffer.alloc(sodium.crypto_sign_BYTES);
        sodium.crypto_sign_detached(signature, data, secretKey);
        return signature;
      };
      actualMethods.verify = function(data, signature, publicKey) {
        data = Buffer.from(data);
        try {
          return sodium.crypto_sign_verify_detached(signature, data, publicKey);
        } catch (e2) {
          return false;
        }
      };
      return true;
    }
    function checkFastSigningBrowser() {
      var nacl = require_nacl_fast();
      actualMethods.generate = function(secretKey) {
        var secretKeyUint8 = new Uint8Array(secretKey);
        var naclKeys = nacl.sign.keyPair.fromSeed(secretKeyUint8);
        return Buffer.from(naclKeys.publicKey);
      };
      actualMethods.sign = function(data, secretKey) {
        data = Buffer.from(data);
        data = new Uint8Array(data.toJSON().data);
        secretKey = new Uint8Array(secretKey.toJSON().data);
        var signature = nacl.sign.detached(data, secretKey);
        return Buffer.from(signature);
      };
      actualMethods.verify = function(data, signature, publicKey) {
        data = Buffer.from(data);
        data = new Uint8Array(data.toJSON().data);
        signature = new Uint8Array(signature.toJSON().data);
        publicKey = new Uint8Array(publicKey.toJSON().data);
        return nacl.sign.detached.verify(data, signature, publicKey);
      };
      return false;
    }
  }
});

// node_modules/@stellar/stellar-base/lib/util/util.js
var require_util = __commonJS({
  "node_modules/@stellar/stellar-base/lib/util/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.trimEnd = void 0;
    var trimEnd = exports.trimEnd = function trimEnd2(input, _char) {
      var isNumber = typeof input === "number";
      var str = String(input);
      while (str.endsWith(_char)) {
        str = str.slice(0, -1);
      }
      return isNumber ? Number(str) : str;
    };
  }
});

// node_modules/base32.js/base32.js
var require_base32 = __commonJS({
  "node_modules/base32.js/base32.js"(exports) {
    "use strict";
    var charmap = function(alphabet, mappings) {
      mappings || (mappings = {});
      alphabet.split("").forEach(function(c, i) {
        if (!(c in mappings)) mappings[c] = i;
      });
      return mappings;
    };
    var rfc4648 = {
      alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
      charmap: {
        0: 14,
        1: 8
      }
    };
    rfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);
    var crockford = {
      alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ",
      charmap: {
        O: 0,
        I: 1,
        L: 1
      }
    };
    crockford.charmap = charmap(crockford.alphabet, crockford.charmap);
    var base32hex = {
      alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
      charmap: {}
    };
    base32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);
    function Decoder2(options) {
      this.buf = [];
      this.shift = 8;
      this.carry = 0;
      if (options) {
        switch (options.type) {
          case "rfc4648":
            this.charmap = exports.rfc4648.charmap;
            break;
          case "crockford":
            this.charmap = exports.crockford.charmap;
            break;
          case "base32hex":
            this.charmap = exports.base32hex.charmap;
            break;
          default:
            throw new Error("invalid type");
        }
        if (options.charmap) this.charmap = options.charmap;
      }
    }
    Decoder2.prototype.charmap = rfc4648.charmap;
    Decoder2.prototype.write = function(str) {
      var charmap2 = this.charmap;
      var buf = this.buf;
      var shift = this.shift;
      var carry = this.carry;
      str.toUpperCase().split("").forEach(function(char) {
        if (char == "=") return;
        var symbol = charmap2[char] & 255;
        shift -= 5;
        if (shift > 0) {
          carry |= symbol << shift;
        } else if (shift < 0) {
          buf.push(carry | symbol >> -shift);
          shift += 8;
          carry = symbol << shift & 255;
        } else {
          buf.push(carry | symbol);
          shift = 8;
          carry = 0;
        }
      });
      this.shift = shift;
      this.carry = carry;
      return this;
    };
    Decoder2.prototype.finalize = function(str) {
      if (str) {
        this.write(str);
      }
      if (this.shift !== 8 && this.carry !== 0) {
        this.buf.push(this.carry);
        this.shift = 8;
        this.carry = 0;
      }
      return this.buf;
    };
    function Encoder(options) {
      this.buf = "";
      this.shift = 3;
      this.carry = 0;
      if (options) {
        switch (options.type) {
          case "rfc4648":
            this.alphabet = exports.rfc4648.alphabet;
            break;
          case "crockford":
            this.alphabet = exports.crockford.alphabet;
            break;
          case "base32hex":
            this.alphabet = exports.base32hex.alphabet;
            break;
          default:
            throw new Error("invalid type");
        }
        if (options.alphabet) this.alphabet = options.alphabet;
        else if (options.lc) this.alphabet = this.alphabet.toLowerCase();
      }
    }
    Encoder.prototype.alphabet = rfc4648.alphabet;
    Encoder.prototype.write = function(buf) {
      var shift = this.shift;
      var carry = this.carry;
      var symbol;
      var byte;
      var i;
      for (i = 0; i < buf.length; i++) {
        byte = buf[i];
        symbol = carry | byte >> shift;
        this.buf += this.alphabet[symbol & 31];
        if (shift > 5) {
          shift -= 5;
          symbol = byte >> shift;
          this.buf += this.alphabet[symbol & 31];
        }
        shift = 5 - shift;
        carry = byte << shift;
        shift = 8 - shift;
      }
      this.shift = shift;
      this.carry = carry;
      return this;
    };
    Encoder.prototype.finalize = function(buf) {
      if (buf) {
        this.write(buf);
      }
      if (this.shift !== 3) {
        this.buf += this.alphabet[this.carry & 31];
        this.shift = 3;
        this.carry = 0;
      }
      return this.buf;
    };
    exports.encode = function(buf, options) {
      return new Encoder(options).finalize(buf);
    };
    exports.decode = function(str, options) {
      return new Decoder2(options).finalize(str);
    };
    exports.Decoder = Decoder2;
    exports.Encoder = Encoder;
    exports.charmap = charmap;
    exports.crockford = crockford;
    exports.rfc4648 = rfc4648;
    exports.base32hex = base32hex;
  }
});

// node_modules/@stellar/stellar-base/lib/util/checksum.js
var require_checksum = __commonJS({
  "node_modules/@stellar/stellar-base/lib/util/checksum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.verifyChecksum = verifyChecksum;
    function verifyChecksum(expected, actual) {
      if (expected.length !== actual.length) {
        return false;
      }
      if (expected.length === 0) {
        return true;
      }
      for (var i = 0; i < expected.length; i += 1) {
        if (expected[i] !== actual[i]) {
          return false;
        }
      }
      return true;
    }
  }
});

// node_modules/@stellar/stellar-base/lib/strkey.js
var require_strkey = __commonJS({
  "node_modules/@stellar/stellar-base/lib/strkey.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StrKey = void 0;
    exports.decodeCheck = decodeCheck;
    exports.encodeCheck = encodeCheck;
    var _base = _interopRequireDefault(require_base32());
    var _checksum = require_checksum();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var versionBytes = {
      ed25519PublicKey: 6 << 3,
      // G (when encoded in base32)
      ed25519SecretSeed: 18 << 3,
      // S
      med25519PublicKey: 12 << 3,
      // M
      preAuthTx: 19 << 3,
      // T
      sha256Hash: 23 << 3,
      // X
      signedPayload: 15 << 3,
      // P
      contract: 2 << 3
      // C
    };
    var strkeyTypes = {
      G: "ed25519PublicKey",
      S: "ed25519SecretSeed",
      M: "med25519PublicKey",
      T: "preAuthTx",
      X: "sha256Hash",
      P: "signedPayload",
      C: "contract"
    };
    var StrKey2 = exports.StrKey = function() {
      function StrKey3() {
        _classCallCheck(this, StrKey3);
      }
      return _createClass(StrKey3, null, [{
        key: "encodeEd25519PublicKey",
        value: (
          /**
           * Encodes `data` to strkey ed25519 public key.
           *
           * @param   {Buffer} data   raw data to encode
           * @returns {string}        "G..." representation of the key
           */
          function encodeEd25519PublicKey(data) {
            return encodeCheck("ed25519PublicKey", data);
          }
        )
        /**
         * Decodes strkey ed25519 public key to raw data.
         *
         * If the parameter is a muxed account key ("M..."), this will only encode it
         * as a basic Ed25519 key (as if in "G..." format).
         *
         * @param   {string} data   "G..." (or "M...") key representation to decode
         * @returns {Buffer}        raw key
         */
      }, {
        key: "decodeEd25519PublicKey",
        value: function decodeEd25519PublicKey(data) {
          return decodeCheck("ed25519PublicKey", data);
        }
        /**
         * Returns true if the given Stellar public key is a valid ed25519 public key.
         * @param {string} publicKey public key to check
         * @returns {boolean}
         */
      }, {
        key: "isValidEd25519PublicKey",
        value: function isValidEd25519PublicKey(publicKey) {
          return isValid("ed25519PublicKey", publicKey);
        }
        /**
         * Encodes data to strkey ed25519 seed.
         * @param {Buffer} data data to encode
         * @returns {string}
         */
      }, {
        key: "encodeEd25519SecretSeed",
        value: function encodeEd25519SecretSeed(data) {
          return encodeCheck("ed25519SecretSeed", data);
        }
        /**
         * Decodes strkey ed25519 seed to raw data.
         * @param {string} address data to decode
         * @returns {Buffer}
         */
      }, {
        key: "decodeEd25519SecretSeed",
        value: function decodeEd25519SecretSeed(address) {
          return decodeCheck("ed25519SecretSeed", address);
        }
        /**
         * Returns true if the given Stellar secret key is a valid ed25519 secret seed.
         * @param {string} seed seed to check
         * @returns {boolean}
         */
      }, {
        key: "isValidEd25519SecretSeed",
        value: function isValidEd25519SecretSeed(seed) {
          return isValid("ed25519SecretSeed", seed);
        }
        /**
         * Encodes data to strkey med25519 public key.
         * @param {Buffer} data data to encode
         * @returns {string}
         */
      }, {
        key: "encodeMed25519PublicKey",
        value: function encodeMed25519PublicKey(data) {
          return encodeCheck("med25519PublicKey", data);
        }
        /**
         * Decodes strkey med25519 public key to raw data.
         * @param {string} address data to decode
         * @returns {Buffer}
         */
      }, {
        key: "decodeMed25519PublicKey",
        value: function decodeMed25519PublicKey(address) {
          return decodeCheck("med25519PublicKey", address);
        }
        /**
         * Returns true if the given Stellar public key is a valid med25519 public key.
         * @param {string} publicKey public key to check
         * @returns {boolean}
         */
      }, {
        key: "isValidMed25519PublicKey",
        value: function isValidMed25519PublicKey(publicKey) {
          return isValid("med25519PublicKey", publicKey);
        }
        /**
         * Encodes data to strkey preAuthTx.
         * @param {Buffer} data data to encode
         * @returns {string}
         */
      }, {
        key: "encodePreAuthTx",
        value: function encodePreAuthTx(data) {
          return encodeCheck("preAuthTx", data);
        }
        /**
         * Decodes strkey PreAuthTx to raw data.
         * @param {string} address data to decode
         * @returns {Buffer}
         */
      }, {
        key: "decodePreAuthTx",
        value: function decodePreAuthTx(address) {
          return decodeCheck("preAuthTx", address);
        }
        /**
         * Encodes data to strkey sha256 hash.
         * @param {Buffer} data data to encode
         * @returns {string}
         */
      }, {
        key: "encodeSha256Hash",
        value: function encodeSha256Hash(data) {
          return encodeCheck("sha256Hash", data);
        }
        /**
         * Decodes strkey sha256 hash to raw data.
         * @param {string} address data to decode
         * @returns {Buffer}
         */
      }, {
        key: "decodeSha256Hash",
        value: function decodeSha256Hash(address) {
          return decodeCheck("sha256Hash", address);
        }
        /**
         * Encodes raw data to strkey signed payload (P...).
         * @param   {Buffer} data  data to encode
         * @returns {string}
         */
      }, {
        key: "encodeSignedPayload",
        value: function encodeSignedPayload(data) {
          return encodeCheck("signedPayload", data);
        }
        /**
         * Decodes strkey signed payload (P...) to raw data.
         * @param   {string} address  address to decode
         * @returns {Buffer}
         */
      }, {
        key: "decodeSignedPayload",
        value: function decodeSignedPayload(address) {
          return decodeCheck("signedPayload", address);
        }
        /**
         * Checks validity of alleged signed payload (P...) strkey address.
         * @param   {string} address  signer key to check
         * @returns {boolean}
         */
      }, {
        key: "isValidSignedPayload",
        value: function isValidSignedPayload(address) {
          return isValid("signedPayload", address);
        }
        /**
         * Encodes raw data to strkey contract (C...).
         * @param   {Buffer} data  data to encode
         * @returns {string}
         */
      }, {
        key: "encodeContract",
        value: function encodeContract(data) {
          return encodeCheck("contract", data);
        }
        /**
         * Decodes strkey contract (C...) to raw data.
         * @param   {string} address  address to decode
         * @returns {Buffer}
         */
      }, {
        key: "decodeContract",
        value: function decodeContract(address) {
          return decodeCheck("contract", address);
        }
        /**
         * Checks validity of alleged contract (C...) strkey address.
         * @param   {string} address  signer key to check
         * @returns {boolean}
         */
      }, {
        key: "isValidContract",
        value: function isValidContract(address) {
          return isValid("contract", address);
        }
      }, {
        key: "getVersionByteForPrefix",
        value: function getVersionByteForPrefix(address) {
          return strkeyTypes[address[0]];
        }
      }]);
    }();
    function isValid(versionByteName, encoded) {
      if (typeof encoded !== "string") {
        return false;
      }
      switch (versionByteName) {
        case "ed25519PublicKey":
        case "ed25519SecretSeed":
        case "preAuthTx":
        case "sha256Hash":
        case "contract":
          if (encoded.length !== 56) {
            return false;
          }
          break;
        case "med25519PublicKey":
          if (encoded.length !== 69) {
            return false;
          }
          break;
        case "signedPayload":
          if (encoded.length < 56 || encoded.length > 165) {
            return false;
          }
          break;
        default:
          return false;
      }
      var decoded = "";
      try {
        decoded = decodeCheck(versionByteName, encoded);
      } catch (err) {
        return false;
      }
      switch (versionByteName) {
        case "ed25519PublicKey":
        case "ed25519SecretSeed":
        case "preAuthTx":
        case "sha256Hash":
        case "contract":
          return decoded.length === 32;
        case "med25519PublicKey":
          return decoded.length === 40;
        case "signedPayload":
          return (
            // 32 for the signer, +4 for the payload size, then either +4 for the
            // min or +64 for the max payload
            decoded.length >= 32 + 4 + 4 && decoded.length <= 32 + 4 + 64
          );
        default:
          return false;
      }
    }
    function decodeCheck(versionByteName, encoded) {
      if (typeof encoded !== "string") {
        throw new TypeError("encoded argument must be of type String");
      }
      var decoded = _base["default"].decode(encoded);
      var versionByte = decoded[0];
      var payload = decoded.slice(0, -2);
      var data = payload.slice(1);
      var checksum = decoded.slice(-2);
      if (encoded !== _base["default"].encode(decoded)) {
        throw new Error("invalid encoded string");
      }
      var expectedVersion = versionBytes[versionByteName];
      if (expectedVersion === void 0) {
        throw new Error("".concat(versionByteName, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(versionBytes).join(", ")));
      }
      if (versionByte !== expectedVersion) {
        throw new Error("invalid version byte. expected ".concat(expectedVersion, ", got ").concat(versionByte));
      }
      var expectedChecksum = calculateChecksum(payload);
      if (!(0, _checksum.verifyChecksum)(expectedChecksum, checksum)) {
        throw new Error("invalid checksum");
      }
      return Buffer.from(data);
    }
    function encodeCheck(versionByteName, data) {
      if (data === null || data === void 0) {
        throw new Error("cannot encode null data");
      }
      var versionByte = versionBytes[versionByteName];
      if (versionByte === void 0) {
        throw new Error("".concat(versionByteName, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(versionBytes).join(", ")));
      }
      data = Buffer.from(data);
      var versionBuffer = Buffer.from([versionByte]);
      var payload = Buffer.concat([versionBuffer, data]);
      var checksum = Buffer.from(calculateChecksum(payload));
      var unencoded = Buffer.concat([payload, checksum]);
      return _base["default"].encode(unencoded);
    }
    function calculateChecksum(payload) {
      var crcTable = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920];
      var crc16 = 0;
      for (var i = 0; i < payload.length; i += 1) {
        var _byte = payload[i];
        var lookupIndex = crc16 >> 8 ^ _byte;
        crc16 = crc16 << 8 ^ crcTable[lookupIndex];
        crc16 &= 65535;
      }
      var checksum = new Uint8Array(2);
      checksum[0] = crc16 & 255;
      checksum[1] = crc16 >> 8 & 255;
      return checksum;
    }
  }
});

// node_modules/@stellar/stellar-base/lib/keypair.js
var require_keypair = __commonJS({
  "node_modules/@stellar/stellar-base/lib/keypair.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Keypair = void 0;
    var _tweetnacl = _interopRequireDefault(require_nacl_fast());
    var _signing = require_signing();
    var _strkey = require_strkey();
    var _hashing = require_hashing();
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Keypair = exports.Keypair = function() {
      function Keypair2(keys) {
        _classCallCheck(this, Keypair2);
        if (keys.type !== "ed25519") {
          throw new Error("Invalid keys type");
        }
        this.type = keys.type;
        if (keys.secretKey) {
          keys.secretKey = Buffer.from(keys.secretKey);
          if (keys.secretKey.length !== 32) {
            throw new Error("secretKey length is invalid");
          }
          this._secretSeed = keys.secretKey;
          this._publicKey = (0, _signing.generate)(keys.secretKey);
          this._secretKey = Buffer.concat([keys.secretKey, this._publicKey]);
          if (keys.publicKey && !this._publicKey.equals(Buffer.from(keys.publicKey))) {
            throw new Error("secretKey does not match publicKey");
          }
        } else {
          this._publicKey = Buffer.from(keys.publicKey);
          if (this._publicKey.length !== 32) {
            throw new Error("publicKey length is invalid");
          }
        }
      }
      return _createClass(Keypair2, [{
        key: "xdrAccountId",
        value: function xdrAccountId() {
          return new _xdr["default"].AccountId.publicKeyTypeEd25519(this._publicKey);
        }
      }, {
        key: "xdrPublicKey",
        value: function xdrPublicKey() {
          return new _xdr["default"].PublicKey.publicKeyTypeEd25519(this._publicKey);
        }
        /**
         * Creates a {@link xdr.MuxedAccount} object from the public key.
         *
         * You will get a different type of muxed account depending on whether or not
         * you pass an ID.
         *
         * @param  {string} [id] - stringified integer indicating the underlying muxed
         *     ID of the new account object
         *
         * @return {xdr.MuxedAccount}
         */
      }, {
        key: "xdrMuxedAccount",
        value: function xdrMuxedAccount(id) {
          if (typeof id !== "undefined") {
            if (typeof id !== "string") {
              throw new TypeError("expected string for ID, got ".concat(_typeof(id)));
            }
            return _xdr["default"].MuxedAccount.keyTypeMuxedEd25519(new _xdr["default"].MuxedAccountMed25519({
              id: _xdr["default"].Uint64.fromString(id),
              ed25519: this._publicKey
            }));
          }
          return new _xdr["default"].MuxedAccount.keyTypeEd25519(this._publicKey);
        }
        /**
         * Returns raw public key
         * @returns {Buffer}
         */
      }, {
        key: "rawPublicKey",
        value: function rawPublicKey() {
          return this._publicKey;
        }
      }, {
        key: "signatureHint",
        value: function signatureHint() {
          var a = this.xdrAccountId().toXDR();
          return a.slice(a.length - 4);
        }
        /**
         * Returns public key associated with this `Keypair` object.
         * @returns {string}
         */
      }, {
        key: "publicKey",
        value: function publicKey() {
          return _strkey.StrKey.encodeEd25519PublicKey(this._publicKey);
        }
        /**
         * Returns secret key associated with this `Keypair` object
         * @returns {string}
         */
      }, {
        key: "secret",
        value: function secret() {
          if (!this._secretSeed) {
            throw new Error("no secret key available");
          }
          if (this.type === "ed25519") {
            return _strkey.StrKey.encodeEd25519SecretSeed(this._secretSeed);
          }
          throw new Error("Invalid Keypair type");
        }
        /**
         * Returns raw secret key.
         * @returns {Buffer}
         */
      }, {
        key: "rawSecretKey",
        value: function rawSecretKey() {
          return this._secretSeed;
        }
        /**
         * Returns `true` if this `Keypair` object contains secret key and can sign.
         * @returns {boolean}
         */
      }, {
        key: "canSign",
        value: function canSign() {
          return !!this._secretKey;
        }
        /**
         * Signs data.
         * @param {Buffer} data Data to sign
         * @returns {Buffer}
         */
      }, {
        key: "sign",
        value: function sign(data) {
          if (!this.canSign()) {
            throw new Error("cannot sign: no secret key available");
          }
          return (0, _signing.sign)(data, this._secretKey);
        }
        /**
         * Verifies if `signature` for `data` is valid.
         * @param {Buffer} data Signed data
         * @param {Buffer} signature Signature
         * @returns {boolean}
         */
      }, {
        key: "verify",
        value: function verify(data, signature) {
          return (0, _signing.verify)(data, signature, this._publicKey);
        }
        /**
         * Returns the decorated signature (hint+sig) for arbitrary data.
         *
         * @param  {Buffer} data  arbitrary data to sign
         * @return {xdr.DecoratedSignature}   the raw signature structure which can be
         *     added directly to a transaction envelope
         *
         * @see TransactionBase.addDecoratedSignature
         */
      }, {
        key: "signDecorated",
        value: function signDecorated(data) {
          var signature = this.sign(data);
          var hint = this.signatureHint();
          return new _xdr["default"].DecoratedSignature({
            hint,
            signature
          });
        }
        /**
         * Returns the raw decorated signature (hint+sig) for a signed payload signer.
         *
         *  The hint is defined as the last 4 bytes of the signer key XORed with last
         *  4 bytes of the payload (zero-left-padded if necessary).
         *
         * @param  {Buffer} data    data to both sign and treat as the payload
         * @return {xdr.DecoratedSignature}
         *
         * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0040.md#signature-hint
         * @see TransactionBase.addDecoratedSignature
         */
      }, {
        key: "signPayloadDecorated",
        value: function signPayloadDecorated(data) {
          var signature = this.sign(data);
          var keyHint = this.signatureHint();
          var hint = Buffer.from(data.slice(-4));
          if (hint.length < 4) {
            hint = Buffer.concat([hint, Buffer.alloc(4 - data.length, 0)]);
          }
          return new _xdr["default"].DecoratedSignature({
            hint: hint.map(function(_byte, i) {
              return _byte ^ keyHint[i];
            }),
            signature
          });
        }
      }], [{
        key: "fromSecret",
        value: function fromSecret(secret) {
          var rawSecret = _strkey.StrKey.decodeEd25519SecretSeed(secret);
          return this.fromRawEd25519Seed(rawSecret);
        }
        /**
         * Creates a new `Keypair` object from ed25519 secret key seed raw bytes.
         *
         * @param {Buffer} rawSeed Raw 32-byte ed25519 secret key seed
         * @returns {Keypair}
         */
      }, {
        key: "fromRawEd25519Seed",
        value: function fromRawEd25519Seed(rawSeed) {
          return new this({
            type: "ed25519",
            secretKey: rawSeed
          });
        }
        /**
         * Returns `Keypair` object representing network master key.
         * @param {string} networkPassphrase passphrase of the target stellar network (e.g. "Public Global Stellar Network ; September 2015").
         * @returns {Keypair}
         */
      }, {
        key: "master",
        value: function master(networkPassphrase) {
          if (!networkPassphrase) {
            throw new Error("No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.");
          }
          return this.fromRawEd25519Seed((0, _hashing.hash)(networkPassphrase));
        }
        /**
         * Creates a new `Keypair` object from public key.
         * @param {string} publicKey public key (ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`)
         * @returns {Keypair}
         */
      }, {
        key: "fromPublicKey",
        value: function fromPublicKey(publicKey) {
          publicKey = _strkey.StrKey.decodeEd25519PublicKey(publicKey);
          if (publicKey.length !== 32) {
            throw new Error("Invalid Stellar public key");
          }
          return new this({
            type: "ed25519",
            publicKey
          });
        }
        /**
         * Create a random `Keypair` object.
         * @returns {Keypair}
         */
      }, {
        key: "random",
        value: function random() {
          var secret = _tweetnacl["default"].randomBytes(32);
          return this.fromRawEd25519Seed(secret);
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/asset.js
var require_asset = __commonJS({
  "node_modules/@stellar/stellar-base/lib/asset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Asset = void 0;
    var _util = require_util();
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _strkey = require_strkey();
    var _hashing = require_hashing();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Asset = exports.Asset = function() {
      function Asset2(code, issuer) {
        _classCallCheck(this, Asset2);
        if (!/^[a-zA-Z0-9]{1,12}$/.test(code)) {
          throw new Error("Asset code is invalid (maximum alphanumeric, 12 characters at max)");
        }
        if (String(code).toLowerCase() !== "xlm" && !issuer) {
          throw new Error("Issuer cannot be null");
        }
        if (issuer && !_strkey.StrKey.isValidEd25519PublicKey(issuer)) {
          throw new Error("Issuer is invalid");
        }
        if (String(code).toLowerCase() === "xlm") {
          this.code = "XLM";
        } else {
          this.code = code;
        }
        this.issuer = issuer;
      }
      return _createClass(Asset2, [{
        key: "toXDRObject",
        value: (
          /**
           * Returns the xdr.Asset object for this asset.
           * @returns {xdr.Asset} XDR asset object
           */
          function toXDRObject() {
            return this._toXDRObject(_xdr["default"].Asset);
          }
        )
        /**
         * Returns the xdr.ChangeTrustAsset object for this asset.
         * @returns {xdr.ChangeTrustAsset} XDR asset object
         */
      }, {
        key: "toChangeTrustXDRObject",
        value: function toChangeTrustXDRObject() {
          return this._toXDRObject(_xdr["default"].ChangeTrustAsset);
        }
        /**
         * Returns the xdr.TrustLineAsset object for this asset.
         * @returns {xdr.TrustLineAsset} XDR asset object
         */
      }, {
        key: "toTrustLineXDRObject",
        value: function toTrustLineXDRObject() {
          return this._toXDRObject(_xdr["default"].TrustLineAsset);
        }
        /**
         * Returns the would-be contract ID (`C...` format) for this asset on a given
         * network.
         *
         * @param {string}    networkPassphrase   indicates which network the contract
         *    ID should refer to, since every network will have a unique ID for the
         *    same contract (see {@link Networks} for options)
         *
         * @returns {string}  the strkey-encoded (`C...`) contract ID for this asset
         *
         * @warning This makes no guarantee that this contract actually *exists*.
         */
      }, {
        key: "contractId",
        value: function contractId(networkPassphrase) {
          var networkId = (0, _hashing.hash)(Buffer.from(networkPassphrase));
          var preimage = _xdr["default"].HashIdPreimage.envelopeTypeContractId(new _xdr["default"].HashIdPreimageContractId({
            networkId,
            contractIdPreimage: _xdr["default"].ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject())
          }));
          return _strkey.StrKey.encodeContract((0, _hashing.hash)(preimage.toXDR()));
        }
        /**
         * Returns the xdr object for this asset.
         * @param {xdr.Asset | xdr.ChangeTrustAsset} xdrAsset - The asset xdr object.
         * @returns {xdr.Asset | xdr.ChangeTrustAsset | xdr.TrustLineAsset} XDR Asset object
         */
      }, {
        key: "_toXDRObject",
        value: function _toXDRObject() {
          var xdrAsset = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _xdr["default"].Asset;
          if (this.isNative()) {
            return xdrAsset.assetTypeNative();
          }
          var xdrType;
          var xdrTypeString;
          if (this.code.length <= 4) {
            xdrType = _xdr["default"].AlphaNum4;
            xdrTypeString = "assetTypeCreditAlphanum4";
          } else {
            xdrType = _xdr["default"].AlphaNum12;
            xdrTypeString = "assetTypeCreditAlphanum12";
          }
          var padLength = this.code.length <= 4 ? 4 : 12;
          var paddedCode = this.code.padEnd(padLength, "\0");
          var assetType = new xdrType({
            assetCode: paddedCode,
            issuer: _keypair.Keypair.fromPublicKey(this.issuer).xdrAccountId()
          });
          return new xdrAsset(xdrTypeString, assetType);
        }
        /**
         * @returns {string} Asset code
         */
      }, {
        key: "getCode",
        value: function getCode() {
          if (this.code === void 0) {
            return void 0;
          }
          return String(this.code);
        }
        /**
         * @returns {string} Asset issuer
         */
      }, {
        key: "getIssuer",
        value: function getIssuer() {
          if (this.issuer === void 0) {
            return void 0;
          }
          return String(this.issuer);
        }
        /**
         * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)
         * @returns {string} Asset type. Can be one of following types:
         *
         *  - `native`,
         *  - `credit_alphanum4`,
         *  - `credit_alphanum12`, or
         *  - `unknown` as the error case (which should never occur)
         */
      }, {
        key: "getAssetType",
        value: function getAssetType() {
          switch (this.getRawAssetType().value) {
            case _xdr["default"].AssetType.assetTypeNative().value:
              return "native";
            case _xdr["default"].AssetType.assetTypeCreditAlphanum4().value:
              return "credit_alphanum4";
            case _xdr["default"].AssetType.assetTypeCreditAlphanum12().value:
              return "credit_alphanum12";
            default:
              return "unknown";
          }
        }
        /**
         * @returns {xdr.AssetType}  the raw XDR representation of the asset type
         */
      }, {
        key: "getRawAssetType",
        value: function getRawAssetType() {
          if (this.isNative()) {
            return _xdr["default"].AssetType.assetTypeNative();
          }
          if (this.code.length <= 4) {
            return _xdr["default"].AssetType.assetTypeCreditAlphanum4();
          }
          return _xdr["default"].AssetType.assetTypeCreditAlphanum12();
        }
        /**
         * @returns {boolean}  true if this asset object is the native asset.
         */
      }, {
        key: "isNative",
        value: function isNative() {
          return !this.issuer;
        }
        /**
         * @param {Asset} asset Asset to compare
         * @returns {boolean} true if this asset equals the given asset.
         */
      }, {
        key: "equals",
        value: function equals(asset) {
          return this.code === asset.getCode() && this.issuer === asset.getIssuer();
        }
      }, {
        key: "toString",
        value: function toString() {
          if (this.isNative()) {
            return "native";
          }
          return "".concat(this.getCode(), ":").concat(this.getIssuer());
        }
        /**
         * Compares two assets according to the criteria:
         *
         *  1. First compare the type (native < alphanum4 < alphanum12).
         *  2. If the types are equal, compare the assets codes.
         *  3. If the asset codes are equal, compare the issuers.
         *
         * @param   {Asset} assetA - the first asset
         * @param   {Asset} assetB - the second asset
         * @returns {number} `-1` if assetA < assetB, `0` if assetA == assetB, `1` if assetA > assetB.
         *
         * @static
         * @memberof Asset
         */
      }], [{
        key: "native",
        value: function _native() {
          return new Asset2("XLM");
        }
        /**
         * Returns an asset object from its XDR object representation.
         * @param {xdr.Asset} assetXdr - The asset xdr object.
         * @returns {Asset}
         */
      }, {
        key: "fromOperation",
        value: function fromOperation(assetXdr) {
          var anum;
          var code;
          var issuer;
          switch (assetXdr["switch"]()) {
            case _xdr["default"].AssetType.assetTypeNative():
              return this["native"]();
            case _xdr["default"].AssetType.assetTypeCreditAlphanum4():
              anum = assetXdr.alphaNum4();
            case _xdr["default"].AssetType.assetTypeCreditAlphanum12():
              anum = anum || assetXdr.alphaNum12();
              issuer = _strkey.StrKey.encodeEd25519PublicKey(anum.issuer().ed25519());
              code = (0, _util.trimEnd)(anum.assetCode(), "\0");
              return new this(code, issuer);
            default:
              throw new Error("Invalid asset type: ".concat(assetXdr["switch"]().name));
          }
        }
      }, {
        key: "compare",
        value: function compare(assetA, assetB) {
          if (!assetA || !(assetA instanceof Asset2)) {
            throw new Error("assetA is invalid");
          }
          if (!assetB || !(assetB instanceof Asset2)) {
            throw new Error("assetB is invalid");
          }
          if (assetA.equals(assetB)) {
            return 0;
          }
          var xdrAtype = assetA.getRawAssetType().value;
          var xdrBtype = assetB.getRawAssetType().value;
          if (xdrAtype !== xdrBtype) {
            return xdrAtype < xdrBtype ? -1 : 1;
          }
          var result = asciiCompare(assetA.getCode(), assetB.getCode());
          if (result !== 0) {
            return result;
          }
          return asciiCompare(assetA.getIssuer(), assetB.getIssuer());
        }
      }]);
    }();
    function asciiCompare(a, b) {
      return Buffer.compare(Buffer.from(a, "ascii"), Buffer.from(b, "ascii"));
    }
  }
});

// node_modules/@stellar/stellar-base/lib/get_liquidity_pool_id.js
var require_get_liquidity_pool_id = __commonJS({
  "node_modules/@stellar/stellar-base/lib/get_liquidity_pool_id.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LiquidityPoolFeeV18 = void 0;
    exports.getLiquidityPoolId = getLiquidityPoolId;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _asset = require_asset();
    var _hashing = require_hashing();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    var LiquidityPoolFeeV18 = exports.LiquidityPoolFeeV18 = 30;
    function getLiquidityPoolId(liquidityPoolType) {
      var liquidityPoolParameters = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (liquidityPoolType !== "constant_product") {
        throw new Error("liquidityPoolType is invalid");
      }
      var assetA = liquidityPoolParameters.assetA, assetB = liquidityPoolParameters.assetB, fee = liquidityPoolParameters.fee;
      if (!assetA || !(assetA instanceof _asset.Asset)) {
        throw new Error("assetA is invalid");
      }
      if (!assetB || !(assetB instanceof _asset.Asset)) {
        throw new Error("assetB is invalid");
      }
      if (!fee || fee !== LiquidityPoolFeeV18) {
        throw new Error("fee is invalid");
      }
      if (_asset.Asset.compare(assetA, assetB) !== -1) {
        throw new Error("Assets are not in lexicographic order");
      }
      var lpTypeData = _xdr["default"].LiquidityPoolType.liquidityPoolConstantProduct().toXDR();
      var lpParamsData = new _xdr["default"].LiquidityPoolConstantProductParameters({
        assetA: assetA.toXDRObject(),
        assetB: assetB.toXDRObject(),
        fee
      }).toXDR();
      var payload = Buffer.concat([lpTypeData, lpParamsData]);
      return (0, _hashing.hash)(payload);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/transaction_base.js
var require_transaction_base = __commonJS({
  "node_modules/@stellar/stellar-base/lib/transaction_base.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TransactionBase = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _hashing = require_hashing();
    var _keypair = require_keypair();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var TransactionBase = exports.TransactionBase = function() {
      function TransactionBase2(tx, signatures, fee, networkPassphrase) {
        _classCallCheck(this, TransactionBase2);
        if (typeof networkPassphrase !== "string") {
          throw new Error("Invalid passphrase provided to Transaction: expected a string but got a ".concat(_typeof(networkPassphrase)));
        }
        this._networkPassphrase = networkPassphrase;
        this._tx = tx;
        this._signatures = signatures;
        this._fee = fee;
      }
      return _createClass(TransactionBase2, [{
        key: "signatures",
        get: function get() {
          return this._signatures;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
      }, {
        key: "tx",
        get: function get() {
          return this._tx;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "fee",
        get: function get() {
          return this._fee;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "networkPassphrase",
        get: function get() {
          return this._networkPassphrase;
        },
        set: function set(networkPassphrase) {
          this._networkPassphrase = networkPassphrase;
        }
        /**
         * Signs the transaction with the given {@link Keypair}.
         * @param {...Keypair} keypairs Keypairs of signers
         * @returns {void}
         */
      }, {
        key: "sign",
        value: function sign() {
          var _this = this;
          var txHash = this.hash();
          for (var _len = arguments.length, keypairs = new Array(_len), _key = 0; _key < _len; _key++) {
            keypairs[_key] = arguments[_key];
          }
          keypairs.forEach(function(kp) {
            var sig = kp.signDecorated(txHash);
            _this.signatures.push(sig);
          });
        }
        /**
         * Signs a transaction with the given {@link Keypair}. Useful if someone sends
         * you a transaction XDR for you to sign and return (see
         * [addSignature](#addSignature) for more information).
         *
         * When you get a transaction XDR to sign....
         * - Instantiate a `Transaction` object with the XDR
         * - Use {@link Keypair} to generate a keypair object for your Stellar seed.
         * - Run `getKeypairSignature` with that keypair
         * - Send back the signature along with your publicKey (not your secret seed!)
         *
         * Example:
         * ```javascript
         * // `transactionXDR` is a string from the person generating the transaction
         * const transaction = new Transaction(transactionXDR, networkPassphrase);
         * const keypair = Keypair.fromSecret(myStellarSeed);
         * return transaction.getKeypairSignature(keypair);
         * ```
         *
         * @param {Keypair} keypair Keypair of signer
         * @returns {string} Signature string
         */
      }, {
        key: "getKeypairSignature",
        value: function getKeypairSignature(keypair) {
          return keypair.sign(this.hash()).toString("base64");
        }
        /**
         * Add a signature to the transaction. Useful when a party wants to pre-sign
         * a transaction but doesn't want to give access to their secret keys.
         * This will also verify whether the signature is valid.
         *
         * Here's how you would use this feature to solicit multiple signatures.
         * - Use `TransactionBuilder` to build a new transaction.
         * - Make sure to set a long enough timeout on that transaction to give your
         * signers enough time to sign!
         * - Once you build the transaction, use `transaction.toXDR()` to get the
         * base64-encoded XDR string.
         * - _Warning!_ Once you've built this transaction, don't submit any other
         * transactions onto your account! Doing so will invalidate this pre-compiled
         * transaction!
         * - Send this XDR string to your other parties. They can use the instructions
         * for [getKeypairSignature](#getKeypairSignature) to sign the transaction.
         * - They should send you back their `publicKey` and the `signature` string
         * from [getKeypairSignature](#getKeypairSignature), both of which you pass to
         * this function.
         *
         * @param {string} publicKey The public key of the signer
         * @param {string} signature The base64 value of the signature XDR
         * @returns {void}
         */
      }, {
        key: "addSignature",
        value: function addSignature() {
          var publicKey = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
          var signature = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          if (!signature || typeof signature !== "string") {
            throw new Error("Invalid signature");
          }
          if (!publicKey || typeof publicKey !== "string") {
            throw new Error("Invalid publicKey");
          }
          var keypair;
          var hint;
          var signatureBuffer = Buffer.from(signature, "base64");
          try {
            keypair = _keypair.Keypair.fromPublicKey(publicKey);
            hint = keypair.signatureHint();
          } catch (e2) {
            throw new Error("Invalid publicKey");
          }
          if (!keypair.verify(this.hash(), signatureBuffer)) {
            throw new Error("Invalid signature");
          }
          this.signatures.push(new _xdr["default"].DecoratedSignature({
            hint,
            signature: signatureBuffer
          }));
        }
        /**
         * Add a decorated signature directly to the transaction envelope.
         *
         * @param {xdr.DecoratedSignature} signature    raw signature to add
         * @returns {void}
         *
         * @see Keypair.signDecorated
         * @see Keypair.signPayloadDecorated
         */
      }, {
        key: "addDecoratedSignature",
        value: function addDecoratedSignature(signature) {
          this.signatures.push(signature);
        }
        /**
         * Add `hashX` signer preimage as signature.
         * @param {Buffer|String} preimage Preimage of hash used as signer
         * @returns {void}
         */
      }, {
        key: "signHashX",
        value: function signHashX(preimage) {
          if (typeof preimage === "string") {
            preimage = Buffer.from(preimage, "hex");
          }
          if (preimage.length > 64) {
            throw new Error("preimage cannnot be longer than 64 bytes");
          }
          var signature = preimage;
          var hashX = (0, _hashing.hash)(preimage);
          var hint = hashX.slice(hashX.length - 4);
          this.signatures.push(new _xdr["default"].DecoratedSignature({
            hint,
            signature
          }));
        }
        /**
         * Returns a hash for this transaction, suitable for signing.
         * @returns {Buffer}
         */
      }, {
        key: "hash",
        value: function hash2() {
          return (0, _hashing.hash)(this.signatureBase());
        }
      }, {
        key: "signatureBase",
        value: function signatureBase() {
          throw new Error("Implement in subclass");
        }
      }, {
        key: "toEnvelope",
        value: function toEnvelope() {
          throw new Error("Implement in subclass");
        }
        /**
         * Get the transaction envelope as a base64-encoded string
         * @returns {string} XDR string
         */
      }, {
        key: "toXDR",
        value: function toXDR() {
          return this.toEnvelope().toXDR().toString("base64");
        }
      }]);
    }();
  }
});

// node_modules/bignumber.js/bignumber.js
var require_bignumber = __commonJS({
  "node_modules/bignumber.js/bignumber.js"(exports, module) {
    (function(globalObject) {
      "use strict";
      var BigNumber, isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, mathceil = Math.ceil, mathfloor = Math.floor, bignumberError = "[BigNumber Error] ", tooManyDigits = bignumberError + "Number primitive has more than 15 significant digits: ", BASE = 1e14, LOG_BASE = 14, MAX_SAFE_INTEGER = 9007199254740991, POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], SQRT_BASE = 1e7, MAX = 1e9;
      function clone(configObject) {
        var div, convertBase, parseNumeric, P = BigNumber2.prototype = { constructor: BigNumber2, toString: null, valueOf: null }, ONE = new BigNumber2(1), DECIMAL_PLACES = 20, ROUNDING_MODE = 4, TO_EXP_NEG = -7, TO_EXP_POS = 21, MIN_EXP = -1e7, MAX_EXP = 1e7, CRYPTO = false, MODULO_MODE = 1, POW_PRECISION = 0, FORMAT = {
          prefix: "",
          groupSize: 3,
          secondaryGroupSize: 0,
          groupSeparator: ",",
          decimalSeparator: ".",
          fractionGroupSize: 0,
          fractionGroupSeparator: " ",
          // non-breaking space
          suffix: ""
        }, ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz", alphabetHasNormalDecimalDigits = true;
        function BigNumber2(v, b) {
          var alphabet, c, caseChanged, e2, i, isNum, len, str, x = this;
          if (!(x instanceof BigNumber2)) return new BigNumber2(v, b);
          if (b == null) {
            if (v && v._isBigNumber === true) {
              x.s = v.s;
              if (!v.c || v.e > MAX_EXP) {
                x.c = x.e = null;
              } else if (v.e < MIN_EXP) {
                x.c = [x.e = 0];
              } else {
                x.e = v.e;
                x.c = v.c.slice();
              }
              return;
            }
            if ((isNum = typeof v == "number") && v * 0 == 0) {
              x.s = 1 / v < 0 ? (v = -v, -1) : 1;
              if (v === ~~v) {
                for (e2 = 0, i = v; i >= 10; i /= 10, e2++) ;
                if (e2 > MAX_EXP) {
                  x.c = x.e = null;
                } else {
                  x.e = e2;
                  x.c = [v];
                }
                return;
              }
              str = String(v);
            } else {
              if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
              x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
            }
            if ((e2 = str.indexOf(".")) > -1) str = str.replace(".", "");
            if ((i = str.search(/e/i)) > 0) {
              if (e2 < 0) e2 = i;
              e2 += +str.slice(i + 1);
              str = str.substring(0, i);
            } else if (e2 < 0) {
              e2 = str.length;
            }
          } else {
            intCheck(b, 2, ALPHABET.length, "Base");
            if (b == 10 && alphabetHasNormalDecimalDigits) {
              x = new BigNumber2(v);
              return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
            }
            str = String(v);
            if (isNum = typeof v == "number") {
              if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
              x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;
              if (BigNumber2.DEBUG && str.replace(/^0\.0*|\./, "").length > 15) {
                throw Error(tooManyDigits + v);
              }
            } else {
              x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
            }
            alphabet = ALPHABET.slice(0, b);
            e2 = i = 0;
            for (len = str.length; i < len; i++) {
              if (alphabet.indexOf(c = str.charAt(i)) < 0) {
                if (c == ".") {
                  if (i > e2) {
                    e2 = len;
                    continue;
                  }
                } else if (!caseChanged) {
                  if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                    caseChanged = true;
                    i = -1;
                    e2 = 0;
                    continue;
                  }
                }
                return parseNumeric(x, String(v), isNum, b);
              }
            }
            isNum = false;
            str = convertBase(str, b, 10, x.s);
            if ((e2 = str.indexOf(".")) > -1) str = str.replace(".", "");
            else e2 = str.length;
          }
          for (i = 0; str.charCodeAt(i) === 48; i++) ;
          for (len = str.length; str.charCodeAt(--len) === 48; ) ;
          if (str = str.slice(i, ++len)) {
            len -= i;
            if (isNum && BigNumber2.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
              throw Error(tooManyDigits + x.s * v);
            }
            if ((e2 = e2 - i - 1) > MAX_EXP) {
              x.c = x.e = null;
            } else if (e2 < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = e2;
              x.c = [];
              i = (e2 + 1) % LOG_BASE;
              if (e2 < 0) i += LOG_BASE;
              if (i < len) {
                if (i) x.c.push(+str.slice(0, i));
                for (len -= LOG_BASE; i < len; ) {
                  x.c.push(+str.slice(i, i += LOG_BASE));
                }
                i = LOG_BASE - (str = str.slice(i)).length;
              } else {
                i -= len;
              }
              for (; i--; str += "0") ;
              x.c.push(+str);
            }
          } else {
            x.c = [x.e = 0];
          }
        }
        BigNumber2.clone = clone;
        BigNumber2.ROUND_UP = 0;
        BigNumber2.ROUND_DOWN = 1;
        BigNumber2.ROUND_CEIL = 2;
        BigNumber2.ROUND_FLOOR = 3;
        BigNumber2.ROUND_HALF_UP = 4;
        BigNumber2.ROUND_HALF_DOWN = 5;
        BigNumber2.ROUND_HALF_EVEN = 6;
        BigNumber2.ROUND_HALF_CEIL = 7;
        BigNumber2.ROUND_HALF_FLOOR = 8;
        BigNumber2.EUCLID = 9;
        BigNumber2.config = BigNumber2.set = function(obj) {
          var p, v;
          if (obj != null) {
            if (typeof obj == "object") {
              if (obj.hasOwnProperty(p = "DECIMAL_PLACES")) {
                v = obj[p];
                intCheck(v, 0, MAX, p);
                DECIMAL_PLACES = v;
              }
              if (obj.hasOwnProperty(p = "ROUNDING_MODE")) {
                v = obj[p];
                intCheck(v, 0, 8, p);
                ROUNDING_MODE = v;
              }
              if (obj.hasOwnProperty(p = "EXPONENTIAL_AT")) {
                v = obj[p];
                if (v && v.pop) {
                  intCheck(v[0], -MAX, 0, p);
                  intCheck(v[1], 0, MAX, p);
                  TO_EXP_NEG = v[0];
                  TO_EXP_POS = v[1];
                } else {
                  intCheck(v, -MAX, MAX, p);
                  TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
                }
              }
              if (obj.hasOwnProperty(p = "RANGE")) {
                v = obj[p];
                if (v && v.pop) {
                  intCheck(v[0], -MAX, -1, p);
                  intCheck(v[1], 1, MAX, p);
                  MIN_EXP = v[0];
                  MAX_EXP = v[1];
                } else {
                  intCheck(v, -MAX, MAX, p);
                  if (v) {
                    MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                  } else {
                    throw Error(bignumberError + p + " cannot be zero: " + v);
                  }
                }
              }
              if (obj.hasOwnProperty(p = "CRYPTO")) {
                v = obj[p];
                if (v === !!v) {
                  if (v) {
                    if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                      CRYPTO = v;
                    } else {
                      CRYPTO = !v;
                      throw Error(bignumberError + "crypto unavailable");
                    }
                  } else {
                    CRYPTO = v;
                  }
                } else {
                  throw Error(bignumberError + p + " not true or false: " + v);
                }
              }
              if (obj.hasOwnProperty(p = "MODULO_MODE")) {
                v = obj[p];
                intCheck(v, 0, 9, p);
                MODULO_MODE = v;
              }
              if (obj.hasOwnProperty(p = "POW_PRECISION")) {
                v = obj[p];
                intCheck(v, 0, MAX, p);
                POW_PRECISION = v;
              }
              if (obj.hasOwnProperty(p = "FORMAT")) {
                v = obj[p];
                if (typeof v == "object") FORMAT = v;
                else throw Error(bignumberError + p + " not an object: " + v);
              }
              if (obj.hasOwnProperty(p = "ALPHABET")) {
                v = obj[p];
                if (typeof v == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(v)) {
                  alphabetHasNormalDecimalDigits = v.slice(0, 10) == "0123456789";
                  ALPHABET = v;
                } else {
                  throw Error(bignumberError + p + " invalid: " + v);
                }
              }
            } else {
              throw Error(bignumberError + "Object expected: " + obj);
            }
          }
          return {
            DECIMAL_PLACES,
            ROUNDING_MODE,
            EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
            RANGE: [MIN_EXP, MAX_EXP],
            CRYPTO,
            MODULO_MODE,
            POW_PRECISION,
            FORMAT,
            ALPHABET
          };
        };
        BigNumber2.isBigNumber = function(v) {
          if (!v || v._isBigNumber !== true) return false;
          if (!BigNumber2.DEBUG) return true;
          var i, n2, c = v.c, e2 = v.e, s = v.s;
          out: if ({}.toString.call(c) == "[object Array]") {
            if ((s === 1 || s === -1) && e2 >= -MAX && e2 <= MAX && e2 === mathfloor(e2)) {
              if (c[0] === 0) {
                if (e2 === 0 && c.length === 1) return true;
                break out;
              }
              i = (e2 + 1) % LOG_BASE;
              if (i < 1) i += LOG_BASE;
              if (String(c[0]).length == i) {
                for (i = 0; i < c.length; i++) {
                  n2 = c[i];
                  if (n2 < 0 || n2 >= BASE || n2 !== mathfloor(n2)) break out;
                }
                if (n2 !== 0) return true;
              }
            }
          } else if (c === null && e2 === null && (s === null || s === 1 || s === -1)) {
            return true;
          }
          throw Error(bignumberError + "Invalid BigNumber: " + v);
        };
        BigNumber2.maximum = BigNumber2.max = function() {
          return maxOrMin(arguments, -1);
        };
        BigNumber2.minimum = BigNumber2.min = function() {
          return maxOrMin(arguments, 1);
        };
        BigNumber2.random = function() {
          var pow2_53 = 9007199254740992;
          var random53bitInt = Math.random() * pow2_53 & 2097151 ? function() {
            return mathfloor(Math.random() * pow2_53);
          } : function() {
            return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
          };
          return function(dp) {
            var a, b, e2, k, v, i = 0, c = [], rand = new BigNumber2(ONE);
            if (dp == null) dp = DECIMAL_PLACES;
            else intCheck(dp, 0, MAX);
            k = mathceil(dp / LOG_BASE);
            if (CRYPTO) {
              if (crypto.getRandomValues) {
                a = crypto.getRandomValues(new Uint32Array(k *= 2));
                for (; i < k; ) {
                  v = a[i] * 131072 + (a[i + 1] >>> 11);
                  if (v >= 9e15) {
                    b = crypto.getRandomValues(new Uint32Array(2));
                    a[i] = b[0];
                    a[i + 1] = b[1];
                  } else {
                    c.push(v % 1e14);
                    i += 2;
                  }
                }
                i = k / 2;
              } else if (crypto.randomBytes) {
                a = crypto.randomBytes(k *= 7);
                for (; i < k; ) {
                  v = (a[i] & 31) * 281474976710656 + a[i + 1] * 1099511627776 + a[i + 2] * 4294967296 + a[i + 3] * 16777216 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];
                  if (v >= 9e15) {
                    crypto.randomBytes(7).copy(a, i);
                  } else {
                    c.push(v % 1e14);
                    i += 7;
                  }
                }
                i = k / 7;
              } else {
                CRYPTO = false;
                throw Error(bignumberError + "crypto unavailable");
              }
            }
            if (!CRYPTO) {
              for (; i < k; ) {
                v = random53bitInt();
                if (v < 9e15) c[i++] = v % 1e14;
              }
            }
            k = c[--i];
            dp %= LOG_BASE;
            if (k && dp) {
              v = POWS_TEN[LOG_BASE - dp];
              c[i] = mathfloor(k / v) * v;
            }
            for (; c[i] === 0; c.pop(), i--) ;
            if (i < 0) {
              c = [e2 = 0];
            } else {
              for (e2 = -1; c[0] === 0; c.splice(0, 1), e2 -= LOG_BASE) ;
              for (i = 1, v = c[0]; v >= 10; v /= 10, i++) ;
              if (i < LOG_BASE) e2 -= LOG_BASE - i;
            }
            rand.e = e2;
            rand.c = c;
            return rand;
          };
        }();
        BigNumber2.sum = function() {
          var i = 1, args = arguments, sum = new BigNumber2(args[0]);
          for (; i < args.length; ) sum = sum.plus(args[i++]);
          return sum;
        };
        convertBase = /* @__PURE__ */ function() {
          var decimal = "0123456789";
          function toBaseOut(str, baseIn, baseOut, alphabet) {
            var j, arr = [0], arrL, i = 0, len = str.length;
            for (; i < len; ) {
              for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) ;
              arr[0] += alphabet.indexOf(str.charAt(i++));
              for (j = 0; j < arr.length; j++) {
                if (arr[j] > baseOut - 1) {
                  if (arr[j + 1] == null) arr[j + 1] = 0;
                  arr[j + 1] += arr[j] / baseOut | 0;
                  arr[j] %= baseOut;
                }
              }
            }
            return arr.reverse();
          }
          return function(str, baseIn, baseOut, sign, callerIsToString) {
            var alphabet, d, e2, k, r3, x, xc, y, i = str.indexOf("."), dp = DECIMAL_PLACES, rm = ROUNDING_MODE;
            if (i >= 0) {
              k = POW_PRECISION;
              POW_PRECISION = 0;
              str = str.replace(".", "");
              y = new BigNumber2(baseIn);
              x = y.pow(str.length - i);
              POW_PRECISION = k;
              y.c = toBaseOut(
                toFixedPoint(coeffToString(x.c), x.e, "0"),
                10,
                baseOut,
                decimal
              );
              y.e = y.c.length;
            }
            xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
            e2 = k = xc.length;
            for (; xc[--k] == 0; xc.pop()) ;
            if (!xc[0]) return alphabet.charAt(0);
            if (i < 0) {
              --e2;
            } else {
              x.c = xc;
              x.e = e2;
              x.s = sign;
              x = div(x, y, dp, rm, baseOut);
              xc = x.c;
              r3 = x.r;
              e2 = x.e;
            }
            d = e2 + dp + 1;
            i = xc[d];
            k = baseOut / 2;
            r3 = r3 || d < 0 || xc[d + 1] != null;
            r3 = rm < 4 ? (i != null || r3) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r3 || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));
            if (d < 1 || !xc[0]) {
              str = r3 ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
            } else {
              xc.length = d;
              if (r3) {
                for (--baseOut; ++xc[--d] > baseOut; ) {
                  xc[d] = 0;
                  if (!d) {
                    ++e2;
                    xc = [1].concat(xc);
                  }
                }
              }
              for (k = xc.length; !xc[--k]; ) ;
              for (i = 0, str = ""; i <= k; str += alphabet.charAt(xc[i++])) ;
              str = toFixedPoint(str, e2, alphabet.charAt(0));
            }
            return str;
          };
        }();
        div = /* @__PURE__ */ function() {
          function multiply(x, k, base) {
            var m, temp, xlo, xhi, carry = 0, i = x.length, klo = k % SQRT_BASE, khi = k / SQRT_BASE | 0;
            for (x = x.slice(); i--; ) {
              xlo = x[i] % SQRT_BASE;
              xhi = x[i] / SQRT_BASE | 0;
              m = khi * xlo + xhi * klo;
              temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
              carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
              x[i] = temp % base;
            }
            if (carry) x = [carry].concat(x);
            return x;
          }
          function compare2(a, b, aL, bL) {
            var i, cmp;
            if (aL != bL) {
              cmp = aL > bL ? 1 : -1;
            } else {
              for (i = cmp = 0; i < aL; i++) {
                if (a[i] != b[i]) {
                  cmp = a[i] > b[i] ? 1 : -1;
                  break;
                }
              }
            }
            return cmp;
          }
          function subtract(a, b, aL, base) {
            var i = 0;
            for (; aL--; ) {
              a[aL] -= i;
              i = a[aL] < b[aL] ? 1 : 0;
              a[aL] = i * base + a[aL] - b[aL];
            }
            for (; !a[0] && a.length > 1; a.splice(0, 1)) ;
          }
          return function(x, y, dp, rm, base) {
            var cmp, e2, i, more, n2, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0, yL, yz, s = x.s == y.s ? 1 : -1, xc = x.c, yc = y.c;
            if (!xc || !xc[0] || !yc || !yc[0]) {
              return new BigNumber2(
                // Return NaN if either NaN, or both Infinity or 0.
                !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : (
                  // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
                  xc && xc[0] == 0 || !yc ? s * 0 : s / 0
                )
              );
            }
            q = new BigNumber2(s);
            qc = q.c = [];
            e2 = x.e - y.e;
            s = dp + e2 + 1;
            if (!base) {
              base = BASE;
              e2 = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
              s = s / LOG_BASE | 0;
            }
            for (i = 0; yc[i] == (xc[i] || 0); i++) ;
            if (yc[i] > (xc[i] || 0)) e2--;
            if (s < 0) {
              qc.push(1);
              more = true;
            } else {
              xL = xc.length;
              yL = yc.length;
              i = 0;
              s += 2;
              n2 = mathfloor(base / (yc[0] + 1));
              if (n2 > 1) {
                yc = multiply(yc, n2, base);
                xc = multiply(xc, n2, base);
                yL = yc.length;
                xL = xc.length;
              }
              xi = yL;
              rem = xc.slice(0, yL);
              remL = rem.length;
              for (; remL < yL; rem[remL++] = 0) ;
              yz = yc.slice();
              yz = [0].concat(yz);
              yc0 = yc[0];
              if (yc[1] >= base / 2) yc0++;
              do {
                n2 = 0;
                cmp = compare2(yc, rem, yL, remL);
                if (cmp < 0) {
                  rem0 = rem[0];
                  if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                  n2 = mathfloor(rem0 / yc0);
                  if (n2 > 1) {
                    if (n2 >= base) n2 = base - 1;
                    prod = multiply(yc, n2, base);
                    prodL = prod.length;
                    remL = rem.length;
                    while (compare2(prod, rem, prodL, remL) == 1) {
                      n2--;
                      subtract(prod, yL < prodL ? yz : yc, prodL, base);
                      prodL = prod.length;
                      cmp = 1;
                    }
                  } else {
                    if (n2 == 0) {
                      cmp = n2 = 1;
                    }
                    prod = yc.slice();
                    prodL = prod.length;
                  }
                  if (prodL < remL) prod = [0].concat(prod);
                  subtract(rem, prod, remL, base);
                  remL = rem.length;
                  if (cmp == -1) {
                    while (compare2(yc, rem, yL, remL) < 1) {
                      n2++;
                      subtract(rem, yL < remL ? yz : yc, remL, base);
                      remL = rem.length;
                    }
                  }
                } else if (cmp === 0) {
                  n2++;
                  rem = [0];
                }
                qc[i++] = n2;
                if (rem[0]) {
                  rem[remL++] = xc[xi] || 0;
                } else {
                  rem = [xc[xi]];
                  remL = 1;
                }
              } while ((xi++ < xL || rem[0] != null) && s--);
              more = rem[0] != null;
              if (!qc[0]) qc.splice(0, 1);
            }
            if (base == BASE) {
              for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) ;
              round(q, dp + (q.e = i + e2 * LOG_BASE - 1) + 1, rm, more);
            } else {
              q.e = e2;
              q.r = +more;
            }
            return q;
          };
        }();
        function format(n2, i, rm, id) {
          var c0, e2, ne, len, str;
          if (rm == null) rm = ROUNDING_MODE;
          else intCheck(rm, 0, 8);
          if (!n2.c) return n2.toString();
          c0 = n2.c[0];
          ne = n2.e;
          if (i == null) {
            str = coeffToString(n2.c);
            str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, "0");
          } else {
            n2 = round(new BigNumber2(n2), i, rm);
            e2 = n2.e;
            str = coeffToString(n2.c);
            len = str.length;
            if (id == 1 || id == 2 && (i <= e2 || e2 <= TO_EXP_NEG)) {
              for (; len < i; str += "0", len++) ;
              str = toExponential(str, e2);
            } else {
              i -= ne + (id === 2 && e2 > ne);
              str = toFixedPoint(str, e2, "0");
              if (e2 + 1 > len) {
                if (--i > 0) for (str += "."; i--; str += "0") ;
              } else {
                i += e2 - len;
                if (i > 0) {
                  if (e2 + 1 == len) str += ".";
                  for (; i--; str += "0") ;
                }
              }
            }
          }
          return n2.s < 0 && c0 ? "-" + str : str;
        }
        function maxOrMin(args, n2) {
          var k, y, i = 1, x = new BigNumber2(args[0]);
          for (; i < args.length; i++) {
            y = new BigNumber2(args[i]);
            if (!y.s || (k = compare(x, y)) === n2 || k === 0 && x.s === n2) {
              x = y;
            }
          }
          return x;
        }
        function normalise(n2, c, e2) {
          var i = 1, j = c.length;
          for (; !c[--j]; c.pop()) ;
          for (j = c[0]; j >= 10; j /= 10, i++) ;
          if ((e2 = i + e2 * LOG_BASE - 1) > MAX_EXP) {
            n2.c = n2.e = null;
          } else if (e2 < MIN_EXP) {
            n2.c = [n2.e = 0];
          } else {
            n2.e = e2;
            n2.c = c;
          }
          return n2;
        }
        parseNumeric = /* @__PURE__ */ function() {
          var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i, dotAfter = /^([^.]+)\.$/, dotBefore = /^\.([^.]+)$/, isInfinityOrNaN = /^-?(Infinity|NaN)$/, whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
          return function(x, str, isNum, b) {
            var base, s = isNum ? str : str.replace(whitespaceOrPlus, "");
            if (isInfinityOrNaN.test(s)) {
              x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
            } else {
              if (!isNum) {
                s = s.replace(basePrefix, function(m, p1, p2) {
                  base = (p2 = p2.toLowerCase()) == "x" ? 16 : p2 == "b" ? 2 : 8;
                  return !b || b == base ? p1 : m;
                });
                if (b) {
                  base = b;
                  s = s.replace(dotAfter, "$1").replace(dotBefore, "0.$1");
                }
                if (str != s) return new BigNumber2(s, base);
              }
              if (BigNumber2.DEBUG) {
                throw Error(bignumberError + "Not a" + (b ? " base " + b : "") + " number: " + str);
              }
              x.s = null;
            }
            x.c = x.e = null;
          };
        }();
        function round(x, sd, rm, r3) {
          var d, i, j, k, n2, ni, rd, xc = x.c, pows10 = POWS_TEN;
          if (xc) {
            out: {
              for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) ;
              i = sd - d;
              if (i < 0) {
                i += LOG_BASE;
                j = sd;
                n2 = xc[ni = 0];
                rd = mathfloor(n2 / pows10[d - j - 1] % 10);
              } else {
                ni = mathceil((i + 1) / LOG_BASE);
                if (ni >= xc.length) {
                  if (r3) {
                    for (; xc.length <= ni; xc.push(0)) ;
                    n2 = rd = 0;
                    d = 1;
                    i %= LOG_BASE;
                    j = i - LOG_BASE + 1;
                  } else {
                    break out;
                  }
                } else {
                  n2 = k = xc[ni];
                  for (d = 1; k >= 10; k /= 10, d++) ;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + d;
                  rd = j < 0 ? 0 : mathfloor(n2 / pows10[d - j - 1] % 10);
                }
              }
              r3 = r3 || sd < 0 || // Are there any non-zero digits after the rounding digit?
              // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
              // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
              xc[ni + 1] != null || (j < 0 ? n2 : n2 % pows10[d - j - 1]);
              r3 = rm < 4 ? (rd || r3) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r3 || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
              (i > 0 ? j > 0 ? n2 / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
              if (sd < 1 || !xc[0]) {
                xc.length = 0;
                if (r3) {
                  sd -= x.e + 1;
                  xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                  x.e = -sd || 0;
                } else {
                  xc[0] = x.e = 0;
                }
                return x;
              }
              if (i == 0) {
                xc.length = ni;
                k = 1;
                ni--;
              } else {
                xc.length = ni + 1;
                k = pows10[LOG_BASE - i];
                xc[ni] = j > 0 ? mathfloor(n2 / pows10[d - j] % pows10[j]) * k : 0;
              }
              if (r3) {
                for (; ; ) {
                  if (ni == 0) {
                    for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) ;
                    j = xc[0] += k;
                    for (k = 1; j >= 10; j /= 10, k++) ;
                    if (i != k) {
                      x.e++;
                      if (xc[0] == BASE) xc[0] = 1;
                    }
                    break;
                  } else {
                    xc[ni] += k;
                    if (xc[ni] != BASE) break;
                    xc[ni--] = 0;
                    k = 1;
                  }
                }
              }
              for (i = xc.length; xc[--i] === 0; xc.pop()) ;
            }
            if (x.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (x.e < MIN_EXP) {
              x.c = [x.e = 0];
            }
          }
          return x;
        }
        function valueOf(n2) {
          var str, e2 = n2.e;
          if (e2 === null) return n2.toString();
          str = coeffToString(n2.c);
          str = e2 <= TO_EXP_NEG || e2 >= TO_EXP_POS ? toExponential(str, e2) : toFixedPoint(str, e2, "0");
          return n2.s < 0 ? "-" + str : str;
        }
        P.absoluteValue = P.abs = function() {
          var x = new BigNumber2(this);
          if (x.s < 0) x.s = 1;
          return x;
        };
        P.comparedTo = function(y, b) {
          return compare(this, new BigNumber2(y, b));
        };
        P.decimalPlaces = P.dp = function(dp, rm) {
          var c, n2, v, x = this;
          if (dp != null) {
            intCheck(dp, 0, MAX);
            if (rm == null) rm = ROUNDING_MODE;
            else intCheck(rm, 0, 8);
            return round(new BigNumber2(x), dp + x.e + 1, rm);
          }
          if (!(c = x.c)) return null;
          n2 = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
          if (v = c[v]) for (; v % 10 == 0; v /= 10, n2--) ;
          if (n2 < 0) n2 = 0;
          return n2;
        };
        P.dividedBy = P.div = function(y, b) {
          return div(this, new BigNumber2(y, b), DECIMAL_PLACES, ROUNDING_MODE);
        };
        P.dividedToIntegerBy = P.idiv = function(y, b) {
          return div(this, new BigNumber2(y, b), 0, 1);
        };
        P.exponentiatedBy = P.pow = function(n2, m) {
          var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y, x = this;
          n2 = new BigNumber2(n2);
          if (n2.c && !n2.isInteger()) {
            throw Error(bignumberError + "Exponent not an integer: " + valueOf(n2));
          }
          if (m != null) m = new BigNumber2(m);
          nIsBig = n2.e > 14;
          if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n2.c || !n2.c[0]) {
            y = new BigNumber2(Math.pow(+valueOf(x), nIsBig ? n2.s * (2 - isOdd(n2)) : +valueOf(n2)));
            return m ? y.mod(m) : y;
          }
          nIsNeg = n2.s < 0;
          if (m) {
            if (m.c ? !m.c[0] : !m.s) return new BigNumber2(NaN);
            isModExp = !nIsNeg && x.isInteger() && m.isInteger();
            if (isModExp) x = x.mod(m);
          } else if (n2.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
            k = x.s < 0 && isOdd(n2) ? -0 : 0;
            if (x.e > -1) k = 1 / k;
            return new BigNumber2(nIsNeg ? 1 / k : k);
          } else if (POW_PRECISION) {
            k = mathceil(POW_PRECISION / LOG_BASE + 2);
          }
          if (nIsBig) {
            half = new BigNumber2(0.5);
            if (nIsNeg) n2.s = 1;
            nIsOdd = isOdd(n2);
          } else {
            i = Math.abs(+valueOf(n2));
            nIsOdd = i % 2;
          }
          y = new BigNumber2(ONE);
          for (; ; ) {
            if (nIsOdd) {
              y = y.times(x);
              if (!y.c) break;
              if (k) {
                if (y.c.length > k) y.c.length = k;
              } else if (isModExp) {
                y = y.mod(m);
              }
            }
            if (i) {
              i = mathfloor(i / 2);
              if (i === 0) break;
              nIsOdd = i % 2;
            } else {
              n2 = n2.times(half);
              round(n2, n2.e + 1, 1);
              if (n2.e > 14) {
                nIsOdd = isOdd(n2);
              } else {
                i = +valueOf(n2);
                if (i === 0) break;
                nIsOdd = i % 2;
              }
            }
            x = x.times(x);
            if (k) {
              if (x.c && x.c.length > k) x.c.length = k;
            } else if (isModExp) {
              x = x.mod(m);
            }
          }
          if (isModExp) return y;
          if (nIsNeg) y = ONE.div(y);
          return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
        };
        P.integerValue = function(rm) {
          var n2 = new BigNumber2(this);
          if (rm == null) rm = ROUNDING_MODE;
          else intCheck(rm, 0, 8);
          return round(n2, n2.e + 1, rm);
        };
        P.isEqualTo = P.eq = function(y, b) {
          return compare(this, new BigNumber2(y, b)) === 0;
        };
        P.isFinite = function() {
          return !!this.c;
        };
        P.isGreaterThan = P.gt = function(y, b) {
          return compare(this, new BigNumber2(y, b)) > 0;
        };
        P.isGreaterThanOrEqualTo = P.gte = function(y, b) {
          return (b = compare(this, new BigNumber2(y, b))) === 1 || b === 0;
        };
        P.isInteger = function() {
          return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
        };
        P.isLessThan = P.lt = function(y, b) {
          return compare(this, new BigNumber2(y, b)) < 0;
        };
        P.isLessThanOrEqualTo = P.lte = function(y, b) {
          return (b = compare(this, new BigNumber2(y, b))) === -1 || b === 0;
        };
        P.isNaN = function() {
          return !this.s;
        };
        P.isNegative = function() {
          return this.s < 0;
        };
        P.isPositive = function() {
          return this.s > 0;
        };
        P.isZero = function() {
          return !!this.c && this.c[0] == 0;
        };
        P.minus = function(y, b) {
          var i, j, t2, xLTy, x = this, a = x.s;
          y = new BigNumber2(y, b);
          b = y.s;
          if (!a || !b) return new BigNumber2(NaN);
          if (a != b) {
            y.s = -b;
            return x.plus(y);
          }
          var xe = x.e / LOG_BASE, ye = y.e / LOG_BASE, xc = x.c, yc = y.c;
          if (!xe || !ye) {
            if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber2(yc ? x : NaN);
            if (!xc[0] || !yc[0]) {
              return yc[0] ? (y.s = -b, y) : new BigNumber2(xc[0] ? x : (
                // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
                ROUNDING_MODE == 3 ? -0 : 0
              ));
            }
          }
          xe = bitFloor(xe);
          ye = bitFloor(ye);
          xc = xc.slice();
          if (a = xe - ye) {
            if (xLTy = a < 0) {
              a = -a;
              t2 = xc;
            } else {
              ye = xe;
              t2 = yc;
            }
            t2.reverse();
            for (b = a; b--; t2.push(0)) ;
            t2.reverse();
          } else {
            j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;
            for (a = b = 0; b < j; b++) {
              if (xc[b] != yc[b]) {
                xLTy = xc[b] < yc[b];
                break;
              }
            }
          }
          if (xLTy) {
            t2 = xc;
            xc = yc;
            yc = t2;
            y.s = -y.s;
          }
          b = (j = yc.length) - (i = xc.length);
          if (b > 0) for (; b--; xc[i++] = 0) ;
          b = BASE - 1;
          for (; j > a; ) {
            if (xc[--j] < yc[j]) {
              for (i = j; i && !xc[--i]; xc[i] = b) ;
              --xc[i];
              xc[j] += BASE;
            }
            xc[j] -= yc[j];
          }
          for (; xc[0] == 0; xc.splice(0, 1), --ye) ;
          if (!xc[0]) {
            y.s = ROUNDING_MODE == 3 ? -1 : 1;
            y.c = [y.e = 0];
            return y;
          }
          return normalise(y, xc, ye);
        };
        P.modulo = P.mod = function(y, b) {
          var q, s, x = this;
          y = new BigNumber2(y, b);
          if (!x.c || !y.s || y.c && !y.c[0]) {
            return new BigNumber2(NaN);
          } else if (!y.c || x.c && !x.c[0]) {
            return new BigNumber2(x);
          }
          if (MODULO_MODE == 9) {
            s = y.s;
            y.s = 1;
            q = div(x, y, 0, 3);
            y.s = s;
            q.s *= s;
          } else {
            q = div(x, y, 0, MODULO_MODE);
          }
          y = x.minus(q.times(y));
          if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
          return y;
        };
        P.multipliedBy = P.times = function(y, b) {
          var c, e2, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc, base, sqrtBase, x = this, xc = x.c, yc = (y = new BigNumber2(y, b)).c;
          if (!xc || !yc || !xc[0] || !yc[0]) {
            if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
              y.c = y.e = y.s = null;
            } else {
              y.s *= x.s;
              if (!xc || !yc) {
                y.c = y.e = null;
              } else {
                y.c = [0];
                y.e = 0;
              }
            }
            return y;
          }
          e2 = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
          y.s *= x.s;
          xcL = xc.length;
          ycL = yc.length;
          if (xcL < ycL) {
            zc = xc;
            xc = yc;
            yc = zc;
            i = xcL;
            xcL = ycL;
            ycL = i;
          }
          for (i = xcL + ycL, zc = []; i--; zc.push(0)) ;
          base = BASE;
          sqrtBase = SQRT_BASE;
          for (i = ycL; --i >= 0; ) {
            c = 0;
            ylo = yc[i] % sqrtBase;
            yhi = yc[i] / sqrtBase | 0;
            for (k = xcL, j = i + k; j > i; ) {
              xlo = xc[--k] % sqrtBase;
              xhi = xc[k] / sqrtBase | 0;
              m = yhi * xlo + xhi * ylo;
              xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
              c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
              zc[j--] = xlo % base;
            }
            zc[j] = c;
          }
          if (c) {
            ++e2;
          } else {
            zc.splice(0, 1);
          }
          return normalise(y, zc, e2);
        };
        P.negated = function() {
          var x = new BigNumber2(this);
          x.s = -x.s || null;
          return x;
        };
        P.plus = function(y, b) {
          var t2, x = this, a = x.s;
          y = new BigNumber2(y, b);
          b = y.s;
          if (!a || !b) return new BigNumber2(NaN);
          if (a != b) {
            y.s = -b;
            return x.minus(y);
          }
          var xe = x.e / LOG_BASE, ye = y.e / LOG_BASE, xc = x.c, yc = y.c;
          if (!xe || !ye) {
            if (!xc || !yc) return new BigNumber2(a / 0);
            if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber2(xc[0] ? x : a * 0);
          }
          xe = bitFloor(xe);
          ye = bitFloor(ye);
          xc = xc.slice();
          if (a = xe - ye) {
            if (a > 0) {
              ye = xe;
              t2 = yc;
            } else {
              a = -a;
              t2 = xc;
            }
            t2.reverse();
            for (; a--; t2.push(0)) ;
            t2.reverse();
          }
          a = xc.length;
          b = yc.length;
          if (a - b < 0) {
            t2 = yc;
            yc = xc;
            xc = t2;
            b = a;
          }
          for (a = 0; b; ) {
            a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
            xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
          }
          if (a) {
            xc = [a].concat(xc);
            ++ye;
          }
          return normalise(y, xc, ye);
        };
        P.precision = P.sd = function(sd, rm) {
          var c, n2, v, x = this;
          if (sd != null && sd !== !!sd) {
            intCheck(sd, 1, MAX);
            if (rm == null) rm = ROUNDING_MODE;
            else intCheck(rm, 0, 8);
            return round(new BigNumber2(x), sd, rm);
          }
          if (!(c = x.c)) return null;
          v = c.length - 1;
          n2 = v * LOG_BASE + 1;
          if (v = c[v]) {
            for (; v % 10 == 0; v /= 10, n2--) ;
            for (v = c[0]; v >= 10; v /= 10, n2++) ;
          }
          if (sd && x.e + 1 > n2) n2 = x.e + 1;
          return n2;
        };
        P.shiftedBy = function(k) {
          intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
          return this.times("1e" + k);
        };
        P.squareRoot = P.sqrt = function() {
          var m, n2, r3, rep, t2, x = this, c = x.c, s = x.s, e2 = x.e, dp = DECIMAL_PLACES + 4, half = new BigNumber2("0.5");
          if (s !== 1 || !c || !c[0]) {
            return new BigNumber2(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
          }
          s = Math.sqrt(+valueOf(x));
          if (s == 0 || s == 1 / 0) {
            n2 = coeffToString(c);
            if ((n2.length + e2) % 2 == 0) n2 += "0";
            s = Math.sqrt(+n2);
            e2 = bitFloor((e2 + 1) / 2) - (e2 < 0 || e2 % 2);
            if (s == 1 / 0) {
              n2 = "5e" + e2;
            } else {
              n2 = s.toExponential();
              n2 = n2.slice(0, n2.indexOf("e") + 1) + e2;
            }
            r3 = new BigNumber2(n2);
          } else {
            r3 = new BigNumber2(s + "");
          }
          if (r3.c[0]) {
            e2 = r3.e;
            s = e2 + dp;
            if (s < 3) s = 0;
            for (; ; ) {
              t2 = r3;
              r3 = half.times(t2.plus(div(x, t2, dp, 1)));
              if (coeffToString(t2.c).slice(0, s) === (n2 = coeffToString(r3.c)).slice(0, s)) {
                if (r3.e < e2) --s;
                n2 = n2.slice(s - 3, s + 1);
                if (n2 == "9999" || !rep && n2 == "4999") {
                  if (!rep) {
                    round(t2, t2.e + DECIMAL_PLACES + 2, 0);
                    if (t2.times(t2).eq(x)) {
                      r3 = t2;
                      break;
                    }
                  }
                  dp += 4;
                  s += 4;
                  rep = 1;
                } else {
                  if (!+n2 || !+n2.slice(1) && n2.charAt(0) == "5") {
                    round(r3, r3.e + DECIMAL_PLACES + 2, 1);
                    m = !r3.times(r3).eq(x);
                  }
                  break;
                }
              }
            }
          }
          return round(r3, r3.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
        };
        P.toExponential = function(dp, rm) {
          if (dp != null) {
            intCheck(dp, 0, MAX);
            dp++;
          }
          return format(this, dp, rm, 1);
        };
        P.toFixed = function(dp, rm) {
          if (dp != null) {
            intCheck(dp, 0, MAX);
            dp = dp + this.e + 1;
          }
          return format(this, dp, rm);
        };
        P.toFormat = function(dp, rm, format2) {
          var str, x = this;
          if (format2 == null) {
            if (dp != null && rm && typeof rm == "object") {
              format2 = rm;
              rm = null;
            } else if (dp && typeof dp == "object") {
              format2 = dp;
              dp = rm = null;
            } else {
              format2 = FORMAT;
            }
          } else if (typeof format2 != "object") {
            throw Error(bignumberError + "Argument not an object: " + format2);
          }
          str = x.toFixed(dp, rm);
          if (x.c) {
            var i, arr = str.split("."), g1 = +format2.groupSize, g2 = +format2.secondaryGroupSize, groupSeparator = format2.groupSeparator || "", intPart = arr[0], fractionPart = arr[1], isNeg = x.s < 0, intDigits = isNeg ? intPart.slice(1) : intPart, len = intDigits.length;
            if (g2) {
              i = g1;
              g1 = g2;
              g2 = i;
              len -= i;
            }
            if (g1 > 0 && len > 0) {
              i = len % g1 || g1;
              intPart = intDigits.substr(0, i);
              for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);
              if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
              if (isNeg) intPart = "-" + intPart;
            }
            str = fractionPart ? intPart + (format2.decimalSeparator || "") + ((g2 = +format2.fractionGroupSize) ? fractionPart.replace(
              new RegExp("\\d{" + g2 + "}\\B", "g"),
              "$&" + (format2.fractionGroupSeparator || "")
            ) : fractionPart) : intPart;
          }
          return (format2.prefix || "") + str + (format2.suffix || "");
        };
        P.toFraction = function(md) {
          var d, d0, d1, d2, e2, exp, n2, n0, n1, q, r3, s, x = this, xc = x.c;
          if (md != null) {
            n2 = new BigNumber2(md);
            if (!n2.isInteger() && (n2.c || n2.s !== 1) || n2.lt(ONE)) {
              throw Error(bignumberError + "Argument " + (n2.isInteger() ? "out of range: " : "not an integer: ") + valueOf(n2));
            }
          }
          if (!xc) return new BigNumber2(x);
          d = new BigNumber2(ONE);
          n1 = d0 = new BigNumber2(ONE);
          d1 = n0 = new BigNumber2(ONE);
          s = coeffToString(xc);
          e2 = d.e = s.length - x.e - 1;
          d.c[0] = POWS_TEN[(exp = e2 % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
          md = !md || n2.comparedTo(d) > 0 ? e2 > 0 ? d : n1 : n2;
          exp = MAX_EXP;
          MAX_EXP = 1 / 0;
          n2 = new BigNumber2(s);
          n0.c[0] = 0;
          for (; ; ) {
            q = div(n2, d, 0, 1);
            d2 = d0.plus(q.times(d1));
            if (d2.comparedTo(md) == 1) break;
            d0 = d1;
            d1 = d2;
            n1 = n0.plus(q.times(d2 = n1));
            n0 = d2;
            d = n2.minus(q.times(d2 = d));
            n2 = d2;
          }
          d2 = div(md.minus(d0), d1, 0, 1);
          n0 = n0.plus(d2.times(n1));
          d0 = d0.plus(d2.times(d1));
          n0.s = n1.s = x.s;
          e2 = e2 * 2;
          r3 = div(n1, d1, e2, ROUNDING_MODE).minus(x).abs().comparedTo(
            div(n0, d0, e2, ROUNDING_MODE).minus(x).abs()
          ) < 1 ? [n1, d1] : [n0, d0];
          MAX_EXP = exp;
          return r3;
        };
        P.toNumber = function() {
          return +valueOf(this);
        };
        P.toPrecision = function(sd, rm) {
          if (sd != null) intCheck(sd, 1, MAX);
          return format(this, sd, rm, 2);
        };
        P.toString = function(b) {
          var str, n2 = this, s = n2.s, e2 = n2.e;
          if (e2 === null) {
            if (s) {
              str = "Infinity";
              if (s < 0) str = "-" + str;
            } else {
              str = "NaN";
            }
          } else {
            if (b == null) {
              str = e2 <= TO_EXP_NEG || e2 >= TO_EXP_POS ? toExponential(coeffToString(n2.c), e2) : toFixedPoint(coeffToString(n2.c), e2, "0");
            } else if (b === 10 && alphabetHasNormalDecimalDigits) {
              n2 = round(new BigNumber2(n2), DECIMAL_PLACES + e2 + 1, ROUNDING_MODE);
              str = toFixedPoint(coeffToString(n2.c), n2.e, "0");
            } else {
              intCheck(b, 2, ALPHABET.length, "Base");
              str = convertBase(toFixedPoint(coeffToString(n2.c), e2, "0"), 10, b, s, true);
            }
            if (s < 0 && n2.c[0]) str = "-" + str;
          }
          return str;
        };
        P.valueOf = P.toJSON = function() {
          return valueOf(this);
        };
        P._isBigNumber = true;
        if (configObject != null) BigNumber2.set(configObject);
        return BigNumber2;
      }
      function bitFloor(n2) {
        var i = n2 | 0;
        return n2 > 0 || n2 === i ? i : i - 1;
      }
      function coeffToString(a) {
        var s, z, i = 1, j = a.length, r3 = a[0] + "";
        for (; i < j; ) {
          s = a[i++] + "";
          z = LOG_BASE - s.length;
          for (; z--; s = "0" + s) ;
          r3 += s;
        }
        for (j = r3.length; r3.charCodeAt(--j) === 48; ) ;
        return r3.slice(0, j + 1 || 1);
      }
      function compare(x, y) {
        var a, b, xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l2 = y.e;
        if (!i || !j) return null;
        a = xc && !xc[0];
        b = yc && !yc[0];
        if (a || b) return a ? b ? 0 : -j : i;
        if (i != j) return i;
        a = i < 0;
        b = k == l2;
        if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
        if (!b) return k > l2 ^ a ? 1 : -1;
        j = (k = xc.length) < (l2 = yc.length) ? k : l2;
        for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
        return k == l2 ? 0 : k > l2 ^ a ? 1 : -1;
      }
      function intCheck(n2, min, max, name) {
        if (n2 < min || n2 > max || n2 !== mathfloor(n2)) {
          throw Error(bignumberError + (name || "Argument") + (typeof n2 == "number" ? n2 < min || n2 > max ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(n2));
        }
      }
      function isOdd(n2) {
        var k = n2.c.length - 1;
        return bitFloor(n2.e / LOG_BASE) == k && n2.c[k] % 2 != 0;
      }
      function toExponential(str, e2) {
        return (str.length > 1 ? str.charAt(0) + "." + str.slice(1) : str) + (e2 < 0 ? "e" : "e+") + e2;
      }
      function toFixedPoint(str, e2, z) {
        var len, zs;
        if (e2 < 0) {
          for (zs = z + "."; ++e2; zs += z) ;
          str = zs + str;
        } else {
          len = str.length;
          if (++e2 > len) {
            for (zs = z, e2 -= len; --e2; zs += z) ;
            str += zs;
          } else if (e2 < len) {
            str = str.slice(0, e2) + "." + str.slice(e2);
          }
        }
        return str;
      }
      BigNumber = clone();
      BigNumber["default"] = BigNumber.BigNumber = BigNumber;
      if (typeof define == "function" && define.amd) {
        define(function() {
          return BigNumber;
        });
      } else if (typeof module != "undefined" && module.exports) {
        module.exports = BigNumber;
      } else {
        if (!globalObject) {
          globalObject = typeof self != "undefined" && self ? self : window;
        }
        globalObject.BigNumber = BigNumber;
      }
    })(exports);
  }
});

// node_modules/@stellar/stellar-base/lib/util/bignumber.js
var require_bignumber2 = __commonJS({
  "node_modules/@stellar/stellar-base/lib/util/bignumber.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _bignumber = _interopRequireDefault(require_bignumber());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    var BigNumber = _bignumber["default"].clone();
    BigNumber.DEBUG = true;
    var _default = exports["default"] = BigNumber;
  }
});

// node_modules/@stellar/stellar-base/lib/util/continued_fraction.js
var require_continued_fraction = __commonJS({
  "node_modules/@stellar/stellar-base/lib/util/continued_fraction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.best_r = best_r;
    var _bignumber = _interopRequireDefault(require_bignumber2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2["return"] && (u = t2["return"](), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    var MAX_INT = (1 << 31 >>> 0) - 1;
    function best_r(rawNumber) {
      var number = new _bignumber["default"](rawNumber);
      var a;
      var f;
      var fractions = [[new _bignumber["default"](0), new _bignumber["default"](1)], [new _bignumber["default"](1), new _bignumber["default"](0)]];
      var i = 2;
      while (true) {
        if (number.gt(MAX_INT)) {
          break;
        }
        a = number.integerValue(_bignumber["default"].ROUND_FLOOR);
        f = number.minus(a);
        var h = a.times(fractions[i - 1][0]).plus(fractions[i - 2][0]);
        var k = a.times(fractions[i - 1][1]).plus(fractions[i - 2][1]);
        if (h.gt(MAX_INT) || k.gt(MAX_INT)) {
          break;
        }
        fractions.push([h, k]);
        if (f.eq(0)) {
          break;
        }
        number = new _bignumber["default"](1).div(f);
        i += 1;
      }
      var _fractions = _slicedToArray(fractions[fractions.length - 1], 2), n2 = _fractions[0], d = _fractions[1];
      if (n2.isZero() || d.isZero()) {
        throw new Error("Couldn't find approximation");
      }
      return [n2.toNumber(), d.toNumber()];
    }
  }
});

// node_modules/@stellar/stellar-base/lib/liquidity_pool_asset.js
var require_liquidity_pool_asset = __commonJS({
  "node_modules/@stellar/stellar-base/lib/liquidity_pool_asset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LiquidityPoolAsset = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _asset = require_asset();
    var _get_liquidity_pool_id = require_get_liquidity_pool_id();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var LiquidityPoolAsset = exports.LiquidityPoolAsset = function() {
      function LiquidityPoolAsset2(assetA, assetB, fee) {
        _classCallCheck(this, LiquidityPoolAsset2);
        if (!assetA || !(assetA instanceof _asset.Asset)) {
          throw new Error("assetA is invalid");
        }
        if (!assetB || !(assetB instanceof _asset.Asset)) {
          throw new Error("assetB is invalid");
        }
        if (_asset.Asset.compare(assetA, assetB) !== -1) {
          throw new Error("Assets are not in lexicographic order");
        }
        if (!fee || fee !== _get_liquidity_pool_id.LiquidityPoolFeeV18) {
          throw new Error("fee is invalid");
        }
        this.assetA = assetA;
        this.assetB = assetB;
        this.fee = fee;
      }
      return _createClass(LiquidityPoolAsset2, [{
        key: "toXDRObject",
        value: (
          /**
           * Returns the `xdr.ChangeTrustAsset` object for this liquidity pool asset.
           *
           * Note: To convert from an {@link Asset `Asset`} to `xdr.ChangeTrustAsset`
           * please refer to the
           * {@link Asset.toChangeTrustXDRObject `Asset.toChangeTrustXDRObject`} method.
           *
           * @returns {xdr.ChangeTrustAsset} XDR ChangeTrustAsset object.
           */
          function toXDRObject() {
            var lpConstantProductParamsXdr = new _xdr["default"].LiquidityPoolConstantProductParameters({
              assetA: this.assetA.toXDRObject(),
              assetB: this.assetB.toXDRObject(),
              fee: this.fee
            });
            var lpParamsXdr = new _xdr["default"].LiquidityPoolParameters("liquidityPoolConstantProduct", lpConstantProductParamsXdr);
            return new _xdr["default"].ChangeTrustAsset("assetTypePoolShare", lpParamsXdr);
          }
        )
        /**
         * @returns {LiquidityPoolParameters} Liquidity pool parameters.
         */
      }, {
        key: "getLiquidityPoolParameters",
        value: function getLiquidityPoolParameters() {
          return _objectSpread(_objectSpread({}, this), {}, {
            assetA: this.assetA,
            assetB: this.assetB,
            fee: this.fee
          });
        }
        /**
         * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)
         * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.
         */
      }, {
        key: "getAssetType",
        value: function getAssetType() {
          return "liquidity_pool_shares";
        }
        /**
         * @param {LiquidityPoolAsset} other the LiquidityPoolAsset to compare
         * @returns {boolean} `true` if this asset equals the given asset.
         */
      }, {
        key: "equals",
        value: function equals(other) {
          return this.assetA.equals(other.assetA) && this.assetB.equals(other.assetB) && this.fee === other.fee;
        }
      }, {
        key: "toString",
        value: function toString() {
          var poolId = (0, _get_liquidity_pool_id.getLiquidityPoolId)("constant_product", this.getLiquidityPoolParameters()).toString("hex");
          return "liquidity_pool:".concat(poolId);
        }
      }], [{
        key: "fromOperation",
        value: function fromOperation(ctAssetXdr) {
          var assetType = ctAssetXdr["switch"]();
          if (assetType === _xdr["default"].AssetType.assetTypePoolShare()) {
            var liquidityPoolParameters = ctAssetXdr.liquidityPool().constantProduct();
            return new this(_asset.Asset.fromOperation(liquidityPoolParameters.assetA()), _asset.Asset.fromOperation(liquidityPoolParameters.assetB()), liquidityPoolParameters.fee());
          }
          throw new Error("Invalid asset type: ".concat(assetType.name));
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/claimant.js
var require_claimant = __commonJS({
  "node_modules/@stellar/stellar-base/lib/claimant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Claimant = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Claimant = exports.Claimant = function() {
      function Claimant2(destination, predicate) {
        _classCallCheck(this, Claimant2);
        if (destination && !_strkey.StrKey.isValidEd25519PublicKey(destination)) {
          throw new Error("Destination is invalid");
        }
        this._destination = destination;
        if (!predicate) {
          this._predicate = _xdr["default"].ClaimPredicate.claimPredicateUnconditional();
        } else if (predicate instanceof _xdr["default"].ClaimPredicate) {
          this._predicate = predicate;
        } else {
          throw new Error("Predicate should be an xdr.ClaimPredicate");
        }
      }
      return _createClass(Claimant2, [{
        key: "toXDRObject",
        value: (
          /**
           * Returns the xdr object for this claimant.
           * @returns {xdr.Claimant} XDR Claimant object
           */
          function toXDRObject() {
            var claimant = new _xdr["default"].ClaimantV0({
              destination: _keypair.Keypair.fromPublicKey(this._destination).xdrAccountId(),
              predicate: this._predicate
            });
            return _xdr["default"].Claimant.claimantTypeV0(claimant);
          }
        )
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "destination",
        get: function get() {
          return this._destination;
        },
        set: function set(value) {
          throw new Error("Claimant is immutable");
        }
        /**
         * @type {xdr.ClaimPredicate}
         * @readonly
         */
      }, {
        key: "predicate",
        get: function get() {
          return this._predicate;
        },
        set: function set(value) {
          throw new Error("Claimant is immutable");
        }
      }], [{
        key: "predicateUnconditional",
        value: function predicateUnconditional() {
          return _xdr["default"].ClaimPredicate.claimPredicateUnconditional();
        }
        /**
         * Returns an `and` claim predicate
         * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate
         * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate
         * @Return {xdr.ClaimPredicate}
         */
      }, {
        key: "predicateAnd",
        value: function predicateAnd(left, right) {
          if (!(left instanceof _xdr["default"].ClaimPredicate)) {
            throw new Error("left Predicate should be an xdr.ClaimPredicate");
          }
          if (!(right instanceof _xdr["default"].ClaimPredicate)) {
            throw new Error("right Predicate should be an xdr.ClaimPredicate");
          }
          return _xdr["default"].ClaimPredicate.claimPredicateAnd([left, right]);
        }
        /**
         * Returns an `or` claim predicate
         * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate
         * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate
         * @Return {xdr.ClaimPredicate}
         */
      }, {
        key: "predicateOr",
        value: function predicateOr(left, right) {
          if (!(left instanceof _xdr["default"].ClaimPredicate)) {
            throw new Error("left Predicate should be an xdr.ClaimPredicate");
          }
          if (!(right instanceof _xdr["default"].ClaimPredicate)) {
            throw new Error("right Predicate should be an xdr.ClaimPredicate");
          }
          return _xdr["default"].ClaimPredicate.claimPredicateOr([left, right]);
        }
        /**
         * Returns a `not` claim predicate
         * @param {xdr.ClaimPredicate} predicate an xdr.ClaimPredicate
         * @Return {xdr.ClaimPredicate}
         */
      }, {
        key: "predicateNot",
        value: function predicateNot(predicate) {
          if (!(predicate instanceof _xdr["default"].ClaimPredicate)) {
            throw new Error("right Predicate should be an xdr.ClaimPredicate");
          }
          return _xdr["default"].ClaimPredicate.claimPredicateNot(predicate);
        }
        /**
         * Returns a `BeforeAbsoluteTime` claim predicate
         *
         * This predicate will be fulfilled if the closing time of the ledger that
         * includes the CreateClaimableBalance operation is less than this (absolute)
         * Unix timestamp (expressed in seconds).
         *
         * @param {string} absBefore Unix epoch (in seconds) as a string
         * @Return {xdr.ClaimPredicate}
         */
      }, {
        key: "predicateBeforeAbsoluteTime",
        value: function predicateBeforeAbsoluteTime(absBefore) {
          return _xdr["default"].ClaimPredicate.claimPredicateBeforeAbsoluteTime(_xdr["default"].Int64.fromString(absBefore));
        }
        /**
         * Returns a `BeforeRelativeTime` claim predicate
         *
         * This predicate will be fulfilled if the closing time of the ledger that
         * includes the CreateClaimableBalance operation plus this relative time delta
         * (in seconds) is less than the current time.
         *
         * @param {strings} seconds seconds since closeTime of the ledger in which the ClaimableBalanceEntry was created (as string)
         * @Return {xdr.ClaimPredicate}
         */
      }, {
        key: "predicateBeforeRelativeTime",
        value: function predicateBeforeRelativeTime(seconds) {
          return _xdr["default"].ClaimPredicate.claimPredicateBeforeRelativeTime(_xdr["default"].Int64.fromString(seconds));
        }
        /**
         * Returns a claimant object from its XDR object representation.
         * @param {xdr.Claimant} claimantXdr - The claimant xdr object.
         * @returns {Claimant}
         */
      }, {
        key: "fromXDR",
        value: function fromXDR(claimantXdr) {
          var value;
          switch (claimantXdr["switch"]()) {
            case _xdr["default"].ClaimantType.claimantTypeV0():
              value = claimantXdr.v0();
              return new this(_strkey.StrKey.encodeEd25519PublicKey(value.destination().ed25519()), value.predicate());
            default:
              throw new Error("Invalid claimant type: ".concat(claimantXdr["switch"]().name));
          }
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/liquidity_pool_id.js
var require_liquidity_pool_id = __commonJS({
  "node_modules/@stellar/stellar-base/lib/liquidity_pool_id.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LiquidityPoolId = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var LiquidityPoolId = exports.LiquidityPoolId = function() {
      function LiquidityPoolId2(liquidityPoolId) {
        _classCallCheck(this, LiquidityPoolId2);
        if (!liquidityPoolId) {
          throw new Error("liquidityPoolId cannot be empty");
        }
        if (!/^[a-f0-9]{64}$/.test(liquidityPoolId)) {
          throw new Error("Liquidity pool ID is not a valid hash");
        }
        this.liquidityPoolId = liquidityPoolId;
      }
      return _createClass(LiquidityPoolId2, [{
        key: "toXDRObject",
        value: (
          /**
           * Returns the `xdr.TrustLineAsset` object for this liquidity pool ID.
           *
           * Note: To convert from {@link Asset `Asset`} to `xdr.TrustLineAsset` please
           * refer to the
           * {@link Asset.toTrustLineXDRObject `Asset.toTrustLineXDRObject`} method.
           *
           * @returns {xdr.TrustLineAsset} XDR LiquidityPoolId object
           */
          function toXDRObject() {
            var xdrPoolId = _xdr["default"].PoolId.fromXDR(this.liquidityPoolId, "hex");
            return new _xdr["default"].TrustLineAsset("assetTypePoolShare", xdrPoolId);
          }
        )
        /**
         * @returns {string} Liquidity pool ID.
         */
      }, {
        key: "getLiquidityPoolId",
        value: function getLiquidityPoolId() {
          return String(this.liquidityPoolId);
        }
        /**
         * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)
         * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.
         */
      }, {
        key: "getAssetType",
        value: function getAssetType() {
          return "liquidity_pool_shares";
        }
        /**
         * @param {LiquidityPoolId} asset LiquidityPoolId to compare.
         * @returns {boolean} `true` if this asset equals the given asset.
         */
      }, {
        key: "equals",
        value: function equals(asset) {
          return this.liquidityPoolId === asset.getLiquidityPoolId();
        }
      }, {
        key: "toString",
        value: function toString() {
          return "liquidity_pool:".concat(this.liquidityPoolId);
        }
      }], [{
        key: "fromOperation",
        value: function fromOperation(tlAssetXdr) {
          var assetType = tlAssetXdr["switch"]();
          if (assetType === _xdr["default"].AssetType.assetTypePoolShare()) {
            var liquidityPoolId = tlAssetXdr.liquidityPoolId().toString("hex");
            return new this(liquidityPoolId);
          }
          throw new Error("Invalid asset type: ".concat(assetType.name));
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/operations/manage_sell_offer.js
var require_manage_sell_offer = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/manage_sell_offer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.manageSellOffer = manageSellOffer;
    var _jsXdr = require_xdr();
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function manageSellOffer(opts) {
      var attributes = {};
      attributes.selling = opts.selling.toXDRObject();
      attributes.buying = opts.buying.toXDRObject();
      if (!this.isValidAmount(opts.amount, true)) {
        throw new TypeError(this.constructAmountRequirementsError("amount"));
      }
      attributes.amount = this._toXDRAmount(opts.amount);
      if (opts.price === void 0) {
        throw new TypeError("price argument is required");
      }
      attributes.price = this._toXDRPrice(opts.price);
      if (opts.offerId !== void 0) {
        opts.offerId = opts.offerId.toString();
      } else {
        opts.offerId = "0";
      }
      attributes.offerId = _jsXdr.Hyper.fromString(opts.offerId);
      var manageSellOfferOp = new _xdr["default"].ManageSellOfferOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.manageSellOffer(manageSellOfferOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/create_passive_sell_offer.js
var require_create_passive_sell_offer = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/create_passive_sell_offer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createPassiveSellOffer = createPassiveSellOffer;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function createPassiveSellOffer(opts) {
      var attributes = {};
      attributes.selling = opts.selling.toXDRObject();
      attributes.buying = opts.buying.toXDRObject();
      if (!this.isValidAmount(opts.amount)) {
        throw new TypeError(this.constructAmountRequirementsError("amount"));
      }
      attributes.amount = this._toXDRAmount(opts.amount);
      if (opts.price === void 0) {
        throw new TypeError("price argument is required");
      }
      attributes.price = this._toXDRPrice(opts.price);
      var createPassiveSellOfferOp = new _xdr["default"].CreatePassiveSellOfferOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.createPassiveSellOffer(createPassiveSellOfferOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/util/decode_encode_muxed_account.js
var require_decode_encode_muxed_account = __commonJS({
  "node_modules/@stellar/stellar-base/lib/util/decode_encode_muxed_account.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.decodeAddressToMuxedAccount = decodeAddressToMuxedAccount;
    exports.encodeMuxedAccount = encodeMuxedAccount;
    exports.encodeMuxedAccountToAddress = encodeMuxedAccountToAddress;
    exports.extractBaseAddress = extractBaseAddress;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function decodeAddressToMuxedAccount(address) {
      if (_strkey.StrKey.isValidMed25519PublicKey(address)) {
        return _decodeAddressFullyToMuxedAccount(address);
      }
      return _xdr["default"].MuxedAccount.keyTypeEd25519(_strkey.StrKey.decodeEd25519PublicKey(address));
    }
    function encodeMuxedAccountToAddress(muxedAccount) {
      if (muxedAccount["switch"]().value === _xdr["default"].CryptoKeyType.keyTypeMuxedEd25519().value) {
        return _encodeMuxedAccountFullyToAddress(muxedAccount);
      }
      return _strkey.StrKey.encodeEd25519PublicKey(muxedAccount.ed25519());
    }
    function encodeMuxedAccount(address, id) {
      if (!_strkey.StrKey.isValidEd25519PublicKey(address)) {
        throw new Error("address should be a Stellar account ID (G...)");
      }
      if (typeof id !== "string") {
        throw new Error("id should be a string representing a number (uint64)");
      }
      return _xdr["default"].MuxedAccount.keyTypeMuxedEd25519(new _xdr["default"].MuxedAccountMed25519({
        id: _xdr["default"].Uint64.fromString(id),
        ed25519: _strkey.StrKey.decodeEd25519PublicKey(address)
      }));
    }
    function extractBaseAddress(address) {
      if (_strkey.StrKey.isValidEd25519PublicKey(address)) {
        return address;
      }
      if (!_strkey.StrKey.isValidMed25519PublicKey(address)) {
        throw new TypeError("expected muxed account (M...), got ".concat(address));
      }
      var muxedAccount = decodeAddressToMuxedAccount(address);
      return _strkey.StrKey.encodeEd25519PublicKey(muxedAccount.med25519().ed25519());
    }
    function _decodeAddressFullyToMuxedAccount(address) {
      var rawBytes = _strkey.StrKey.decodeMed25519PublicKey(address);
      return _xdr["default"].MuxedAccount.keyTypeMuxedEd25519(new _xdr["default"].MuxedAccountMed25519({
        id: _xdr["default"].Uint64.fromXDR(rawBytes.subarray(-8)),
        ed25519: rawBytes.subarray(0, -8)
      }));
    }
    function _encodeMuxedAccountFullyToAddress(muxedAccount) {
      if (muxedAccount["switch"]() === _xdr["default"].CryptoKeyType.keyTypeEd25519()) {
        return encodeMuxedAccountToAddress(muxedAccount);
      }
      var muxed = muxedAccount.med25519();
      return _strkey.StrKey.encodeMed25519PublicKey(Buffer.concat([muxed.ed25519(), muxed.id().toXDR("raw")]));
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/account_merge.js
var require_account_merge = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/account_merge.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.accountMerge = accountMerge;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function accountMerge(opts) {
      var opAttributes = {};
      try {
        opAttributes.body = _xdr["default"].OperationBody.accountMerge((0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination));
      } catch (e2) {
        throw new Error("destination is invalid");
      }
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/allow_trust.js
var require_allow_trust = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/allow_trust.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.allowTrust = allowTrust;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function allowTrust(opts) {
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.trustor)) {
        throw new Error("trustor is invalid");
      }
      var attributes = {};
      attributes.trustor = _keypair.Keypair.fromPublicKey(opts.trustor).xdrAccountId();
      if (opts.assetCode.length <= 4) {
        var code = opts.assetCode.padEnd(4, "\0");
        attributes.asset = _xdr["default"].AssetCode.assetTypeCreditAlphanum4(code);
      } else if (opts.assetCode.length <= 12) {
        var _code = opts.assetCode.padEnd(12, "\0");
        attributes.asset = _xdr["default"].AssetCode.assetTypeCreditAlphanum12(_code);
      } else {
        throw new Error("Asset code must be 12 characters at max.");
      }
      if (typeof opts.authorize === "boolean") {
        if (opts.authorize) {
          attributes.authorize = _xdr["default"].TrustLineFlags.authorizedFlag().value;
        } else {
          attributes.authorize = 0;
        }
      } else {
        attributes.authorize = opts.authorize;
      }
      var allowTrustOp = new _xdr["default"].AllowTrustOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.allowTrust(allowTrustOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/bump_sequence.js
var require_bump_sequence = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/bump_sequence.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bumpSequence = bumpSequence;
    var _jsXdr = require_xdr();
    var _bignumber = _interopRequireDefault(require_bignumber2());
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function bumpSequence(opts) {
      var attributes = {};
      if (typeof opts.bumpTo !== "string") {
        throw new Error("bumpTo must be a string");
      }
      try {
        new _bignumber["default"](opts.bumpTo);
      } catch (e2) {
        throw new Error("bumpTo must be a stringified number");
      }
      attributes.bumpTo = _jsXdr.Hyper.fromString(opts.bumpTo);
      var bumpSequenceOp = new _xdr["default"].BumpSequenceOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.bumpSequence(bumpSequenceOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/change_trust.js
var require_change_trust = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/change_trust.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.changeTrust = changeTrust;
    var _jsXdr = require_xdr();
    var _bignumber = _interopRequireDefault(require_bignumber2());
    var _xdr = _interopRequireDefault(require_xdr2());
    var _asset = require_asset();
    var _liquidity_pool_asset = require_liquidity_pool_asset();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    var MAX_INT64 = "9223372036854775807";
    function changeTrust(opts) {
      var attributes = {};
      if (opts.asset instanceof _asset.Asset) {
        attributes.line = opts.asset.toChangeTrustXDRObject();
      } else if (opts.asset instanceof _liquidity_pool_asset.LiquidityPoolAsset) {
        attributes.line = opts.asset.toXDRObject();
      } else {
        throw new TypeError("asset must be Asset or LiquidityPoolAsset");
      }
      if (opts.limit !== void 0 && !this.isValidAmount(opts.limit, true)) {
        throw new TypeError(this.constructAmountRequirementsError("limit"));
      }
      if (opts.limit) {
        attributes.limit = this._toXDRAmount(opts.limit);
      } else {
        attributes.limit = _jsXdr.Hyper.fromString(new _bignumber["default"](MAX_INT64).toString());
      }
      if (opts.source) {
        attributes.source = opts.source.masterKeypair;
      }
      var changeTrustOP = new _xdr["default"].ChangeTrustOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.changeTrust(changeTrustOP);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/create_account.js
var require_create_account = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/create_account.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createAccount = createAccount;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function createAccount(opts) {
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.destination)) {
        throw new Error("destination is invalid");
      }
      if (!this.isValidAmount(opts.startingBalance, true)) {
        throw new TypeError(this.constructAmountRequirementsError("startingBalance"));
      }
      var attributes = {};
      attributes.destination = _keypair.Keypair.fromPublicKey(opts.destination).xdrAccountId();
      attributes.startingBalance = this._toXDRAmount(opts.startingBalance);
      var createAccountOp = new _xdr["default"].CreateAccountOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.createAccount(createAccountOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/create_claimable_balance.js
var require_create_claimable_balance = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/create_claimable_balance.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createClaimableBalance = createClaimableBalance;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _asset = require_asset();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function createClaimableBalance(opts) {
      if (!(opts.asset instanceof _asset.Asset)) {
        throw new Error("must provide an asset for create claimable balance operation");
      }
      if (!this.isValidAmount(opts.amount)) {
        throw new TypeError(this.constructAmountRequirementsError("amount"));
      }
      if (!Array.isArray(opts.claimants) || opts.claimants.length === 0) {
        throw new Error("must provide at least one claimant");
      }
      var attributes = {};
      attributes.asset = opts.asset.toXDRObject();
      attributes.amount = this._toXDRAmount(opts.amount);
      attributes.claimants = Object.values(opts.claimants).map(function(c) {
        return c.toXDRObject();
      });
      var createClaimableBalanceOp = new _xdr["default"].CreateClaimableBalanceOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.createClaimableBalance(createClaimableBalanceOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/claim_claimable_balance.js
var require_claim_claimable_balance = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/claim_claimable_balance.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.claimClaimableBalance = claimClaimableBalance;
    exports.validateClaimableBalanceId = validateClaimableBalanceId;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function claimClaimableBalance() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      validateClaimableBalanceId(opts.balanceId);
      var attributes = {};
      attributes.balanceId = _xdr["default"].ClaimableBalanceId.fromXDR(opts.balanceId, "hex");
      var claimClaimableBalanceOp = new _xdr["default"].ClaimClaimableBalanceOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.claimClaimableBalance(claimClaimableBalanceOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function validateClaimableBalanceId(balanceId) {
      if (typeof balanceId !== "string" || balanceId.length !== 8 + 64) {
        throw new Error("must provide a valid claimable balance id");
      }
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/clawback_claimable_balance.js
var require_clawback_claimable_balance = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/clawback_claimable_balance.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.clawbackClaimableBalance = clawbackClaimableBalance;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _claim_claimable_balance = require_claim_claimable_balance();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function clawbackClaimableBalance() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      (0, _claim_claimable_balance.validateClaimableBalanceId)(opts.balanceId);
      var attributes = {
        balanceId: _xdr["default"].ClaimableBalanceId.fromXDR(opts.balanceId, "hex")
      };
      var opAttributes = {
        body: _xdr["default"].OperationBody.clawbackClaimableBalance(new _xdr["default"].ClawbackClaimableBalanceOp(attributes))
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/inflation.js
var require_inflation = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/inflation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.inflation = inflation;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function inflation() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.inflation();
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/manage_data.js
var require_manage_data = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/manage_data.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.manageData = manageData;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function manageData(opts) {
      var attributes = {};
      if (!(typeof opts.name === "string" && opts.name.length <= 64)) {
        throw new Error("name must be a string, up to 64 characters");
      }
      attributes.dataName = opts.name;
      if (typeof opts.value !== "string" && !Buffer.isBuffer(opts.value) && opts.value !== null) {
        throw new Error("value must be a string, Buffer or null");
      }
      if (typeof opts.value === "string") {
        attributes.dataValue = Buffer.from(opts.value);
      } else {
        attributes.dataValue = opts.value;
      }
      if (attributes.dataValue !== null && attributes.dataValue.length > 64) {
        throw new Error("value cannot be longer that 64 bytes");
      }
      var manageDataOp = new _xdr["default"].ManageDataOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.manageData(manageDataOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/manage_buy_offer.js
var require_manage_buy_offer = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/manage_buy_offer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.manageBuyOffer = manageBuyOffer;
    var _jsXdr = require_xdr();
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function manageBuyOffer(opts) {
      var attributes = {};
      attributes.selling = opts.selling.toXDRObject();
      attributes.buying = opts.buying.toXDRObject();
      if (!this.isValidAmount(opts.buyAmount, true)) {
        throw new TypeError(this.constructAmountRequirementsError("buyAmount"));
      }
      attributes.buyAmount = this._toXDRAmount(opts.buyAmount);
      if (opts.price === void 0) {
        throw new TypeError("price argument is required");
      }
      attributes.price = this._toXDRPrice(opts.price);
      if (opts.offerId !== void 0) {
        opts.offerId = opts.offerId.toString();
      } else {
        opts.offerId = "0";
      }
      attributes.offerId = _jsXdr.Hyper.fromString(opts.offerId);
      var manageBuyOfferOp = new _xdr["default"].ManageBuyOfferOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.manageBuyOffer(manageBuyOfferOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/path_payment_strict_receive.js
var require_path_payment_strict_receive = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/path_payment_strict_receive.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.pathPaymentStrictReceive = pathPaymentStrictReceive;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function pathPaymentStrictReceive(opts) {
      switch (true) {
        case !opts.sendAsset:
          throw new Error("Must specify a send asset");
        case !this.isValidAmount(opts.sendMax):
          throw new TypeError(this.constructAmountRequirementsError("sendMax"));
        case !opts.destAsset:
          throw new Error("Must provide a destAsset for a payment operation");
        case !this.isValidAmount(opts.destAmount):
          throw new TypeError(this.constructAmountRequirementsError("destAmount"));
        default:
          break;
      }
      var attributes = {};
      attributes.sendAsset = opts.sendAsset.toXDRObject();
      attributes.sendMax = this._toXDRAmount(opts.sendMax);
      try {
        attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);
      } catch (e2) {
        throw new Error("destination is invalid");
      }
      attributes.destAsset = opts.destAsset.toXDRObject();
      attributes.destAmount = this._toXDRAmount(opts.destAmount);
      var path = opts.path ? opts.path : [];
      attributes.path = path.map(function(x) {
        return x.toXDRObject();
      });
      var payment = new _xdr["default"].PathPaymentStrictReceiveOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.pathPaymentStrictReceive(payment);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/path_payment_strict_send.js
var require_path_payment_strict_send = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/path_payment_strict_send.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.pathPaymentStrictSend = pathPaymentStrictSend;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function pathPaymentStrictSend(opts) {
      switch (true) {
        case !opts.sendAsset:
          throw new Error("Must specify a send asset");
        case !this.isValidAmount(opts.sendAmount):
          throw new TypeError(this.constructAmountRequirementsError("sendAmount"));
        case !opts.destAsset:
          throw new Error("Must provide a destAsset for a payment operation");
        case !this.isValidAmount(opts.destMin):
          throw new TypeError(this.constructAmountRequirementsError("destMin"));
        default:
          break;
      }
      var attributes = {};
      attributes.sendAsset = opts.sendAsset.toXDRObject();
      attributes.sendAmount = this._toXDRAmount(opts.sendAmount);
      try {
        attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);
      } catch (e2) {
        throw new Error("destination is invalid");
      }
      attributes.destAsset = opts.destAsset.toXDRObject();
      attributes.destMin = this._toXDRAmount(opts.destMin);
      var path = opts.path ? opts.path : [];
      attributes.path = path.map(function(x) {
        return x.toXDRObject();
      });
      var payment = new _xdr["default"].PathPaymentStrictSendOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.pathPaymentStrictSend(payment);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/payment.js
var require_payment = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/payment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.payment = payment;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function payment(opts) {
      if (!opts.asset) {
        throw new Error("Must provide an asset for a payment operation");
      }
      if (!this.isValidAmount(opts.amount)) {
        throw new TypeError(this.constructAmountRequirementsError("amount"));
      }
      var attributes = {};
      try {
        attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);
      } catch (e2) {
        throw new Error("destination is invalid");
      }
      attributes.asset = opts.asset.toXDRObject();
      attributes.amount = this._toXDRAmount(opts.amount);
      var paymentOp = new _xdr["default"].PaymentOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.payment(paymentOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/set_options.js
var require_set_options = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/set_options.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.setOptions = setOptions;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function weightCheckFunction(value, name) {
      if (value >= 0 && value <= 255) {
        return true;
      }
      throw new Error("".concat(name, " value must be between 0 and 255"));
    }
    function setOptions(opts) {
      var attributes = {};
      if (opts.inflationDest) {
        if (!_strkey.StrKey.isValidEd25519PublicKey(opts.inflationDest)) {
          throw new Error("inflationDest is invalid");
        }
        attributes.inflationDest = _keypair.Keypair.fromPublicKey(opts.inflationDest).xdrAccountId();
      }
      attributes.clearFlags = this._checkUnsignedIntValue("clearFlags", opts.clearFlags);
      attributes.setFlags = this._checkUnsignedIntValue("setFlags", opts.setFlags);
      attributes.masterWeight = this._checkUnsignedIntValue("masterWeight", opts.masterWeight, weightCheckFunction);
      attributes.lowThreshold = this._checkUnsignedIntValue("lowThreshold", opts.lowThreshold, weightCheckFunction);
      attributes.medThreshold = this._checkUnsignedIntValue("medThreshold", opts.medThreshold, weightCheckFunction);
      attributes.highThreshold = this._checkUnsignedIntValue("highThreshold", opts.highThreshold, weightCheckFunction);
      if (opts.homeDomain !== void 0 && typeof opts.homeDomain !== "string") {
        throw new TypeError("homeDomain argument must be of type String");
      }
      attributes.homeDomain = opts.homeDomain;
      if (opts.signer) {
        var weight = this._checkUnsignedIntValue("signer.weight", opts.signer.weight, weightCheckFunction);
        var key;
        var setValues = 0;
        if (opts.signer.ed25519PublicKey) {
          if (!_strkey.StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {
            throw new Error("signer.ed25519PublicKey is invalid.");
          }
          var rawKey = _strkey.StrKey.decodeEd25519PublicKey(opts.signer.ed25519PublicKey);
          key = new _xdr["default"].SignerKey.signerKeyTypeEd25519(rawKey);
          setValues += 1;
        }
        if (opts.signer.preAuthTx) {
          if (typeof opts.signer.preAuthTx === "string") {
            opts.signer.preAuthTx = Buffer.from(opts.signer.preAuthTx, "hex");
          }
          if (!(Buffer.isBuffer(opts.signer.preAuthTx) && opts.signer.preAuthTx.length === 32)) {
            throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
          }
          key = new _xdr["default"].SignerKey.signerKeyTypePreAuthTx(opts.signer.preAuthTx);
          setValues += 1;
        }
        if (opts.signer.sha256Hash) {
          if (typeof opts.signer.sha256Hash === "string") {
            opts.signer.sha256Hash = Buffer.from(opts.signer.sha256Hash, "hex");
          }
          if (!(Buffer.isBuffer(opts.signer.sha256Hash) && opts.signer.sha256Hash.length === 32)) {
            throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
          }
          key = new _xdr["default"].SignerKey.signerKeyTypeHashX(opts.signer.sha256Hash);
          setValues += 1;
        }
        if (opts.signer.ed25519SignedPayload) {
          if (!_strkey.StrKey.isValidSignedPayload(opts.signer.ed25519SignedPayload)) {
            throw new Error("signer.ed25519SignedPayload is invalid.");
          }
          var _rawKey = _strkey.StrKey.decodeSignedPayload(opts.signer.ed25519SignedPayload);
          var signedPayloadXdr = _xdr["default"].SignerKeyEd25519SignedPayload.fromXDR(_rawKey);
          key = _xdr["default"].SignerKey.signerKeyTypeEd25519SignedPayload(signedPayloadXdr);
          setValues += 1;
        }
        if (setValues !== 1) {
          throw new Error("Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.");
        }
        attributes.signer = new _xdr["default"].Signer({
          key,
          weight
        });
      }
      var setOptionsOp = new _xdr["default"].SetOptionsOp(attributes);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.setOptions(setOptionsOp);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/begin_sponsoring_future_reserves.js
var require_begin_sponsoring_future_reserves = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/begin_sponsoring_future_reserves.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.beginSponsoringFutureReserves = beginSponsoringFutureReserves;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _strkey = require_strkey();
    var _keypair = require_keypair();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function beginSponsoringFutureReserves() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.sponsoredId)) {
        throw new Error("sponsoredId is invalid");
      }
      var op = new _xdr["default"].BeginSponsoringFutureReservesOp({
        sponsoredId: _keypair.Keypair.fromPublicKey(opts.sponsoredId).xdrAccountId()
      });
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.beginSponsoringFutureReserves(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/end_sponsoring_future_reserves.js
var require_end_sponsoring_future_reserves = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/end_sponsoring_future_reserves.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.endSponsoringFutureReserves = endSponsoringFutureReserves;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function endSponsoringFutureReserves() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.endSponsoringFutureReserves();
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/revoke_sponsorship.js
var require_revoke_sponsorship = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/revoke_sponsorship.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.revokeAccountSponsorship = revokeAccountSponsorship;
    exports.revokeClaimableBalanceSponsorship = revokeClaimableBalanceSponsorship;
    exports.revokeDataSponsorship = revokeDataSponsorship;
    exports.revokeLiquidityPoolSponsorship = revokeLiquidityPoolSponsorship;
    exports.revokeOfferSponsorship = revokeOfferSponsorship;
    exports.revokeSignerSponsorship = revokeSignerSponsorship;
    exports.revokeTrustlineSponsorship = revokeTrustlineSponsorship;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _strkey = require_strkey();
    var _keypair = require_keypair();
    var _asset = require_asset();
    var _liquidity_pool_id = require_liquidity_pool_id();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function revokeAccountSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.account)) {
        throw new Error("account is invalid");
      }
      var ledgerKey = _xdr["default"].LedgerKey.account(new _xdr["default"].LedgerKeyAccount({
        accountId: _keypair.Keypair.fromPublicKey(opts.account).xdrAccountId()
      }));
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.revokeSponsorship(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function revokeTrustlineSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.account)) {
        throw new Error("account is invalid");
      }
      var asset;
      if (opts.asset instanceof _asset.Asset) {
        asset = opts.asset.toTrustLineXDRObject();
      } else if (opts.asset instanceof _liquidity_pool_id.LiquidityPoolId) {
        asset = opts.asset.toXDRObject();
      } else {
        throw new TypeError("asset must be an Asset or LiquidityPoolId");
      }
      var ledgerKey = _xdr["default"].LedgerKey.trustline(new _xdr["default"].LedgerKeyTrustLine({
        accountId: _keypair.Keypair.fromPublicKey(opts.account).xdrAccountId(),
        asset
      }));
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.revokeSponsorship(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function revokeOfferSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.seller)) {
        throw new Error("seller is invalid");
      }
      if (typeof opts.offerId !== "string") {
        throw new Error("offerId is invalid");
      }
      var ledgerKey = _xdr["default"].LedgerKey.offer(new _xdr["default"].LedgerKeyOffer({
        sellerId: _keypair.Keypair.fromPublicKey(opts.seller).xdrAccountId(),
        offerId: _xdr["default"].Int64.fromString(opts.offerId)
      }));
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.revokeSponsorship(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function revokeDataSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.account)) {
        throw new Error("account is invalid");
      }
      if (typeof opts.name !== "string" || opts.name.length > 64) {
        throw new Error("name must be a string, up to 64 characters");
      }
      var ledgerKey = _xdr["default"].LedgerKey.data(new _xdr["default"].LedgerKeyData({
        accountId: _keypair.Keypair.fromPublicKey(opts.account).xdrAccountId(),
        dataName: opts.name
      }));
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.revokeSponsorship(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function revokeClaimableBalanceSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (typeof opts.balanceId !== "string") {
        throw new Error("balanceId is invalid");
      }
      var ledgerKey = _xdr["default"].LedgerKey.claimableBalance(new _xdr["default"].LedgerKeyClaimableBalance({
        balanceId: _xdr["default"].ClaimableBalanceId.fromXDR(opts.balanceId, "hex")
      }));
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.revokeSponsorship(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function revokeLiquidityPoolSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (typeof opts.liquidityPoolId !== "string") {
        throw new Error("liquidityPoolId is invalid");
      }
      var ledgerKey = _xdr["default"].LedgerKey.liquidityPool(new _xdr["default"].LedgerKeyLiquidityPool({
        liquidityPoolId: _xdr["default"].PoolId.fromXDR(opts.liquidityPoolId, "hex")
      }));
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);
      var opAttributes = {
        body: _xdr["default"].OperationBody.revokeSponsorship(op)
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function revokeSignerSponsorship() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (!_strkey.StrKey.isValidEd25519PublicKey(opts.account)) {
        throw new Error("account is invalid");
      }
      var key;
      if (opts.signer.ed25519PublicKey) {
        if (!_strkey.StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {
          throw new Error("signer.ed25519PublicKey is invalid.");
        }
        var rawKey = _strkey.StrKey.decodeEd25519PublicKey(opts.signer.ed25519PublicKey);
        key = new _xdr["default"].SignerKey.signerKeyTypeEd25519(rawKey);
      } else if (opts.signer.preAuthTx) {
        var buffer;
        if (typeof opts.signer.preAuthTx === "string") {
          buffer = Buffer.from(opts.signer.preAuthTx, "hex");
        } else {
          buffer = opts.signer.preAuthTx;
        }
        if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {
          throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
        }
        key = new _xdr["default"].SignerKey.signerKeyTypePreAuthTx(buffer);
      } else if (opts.signer.sha256Hash) {
        var _buffer;
        if (typeof opts.signer.sha256Hash === "string") {
          _buffer = Buffer.from(opts.signer.sha256Hash, "hex");
        } else {
          _buffer = opts.signer.sha256Hash;
        }
        if (!(Buffer.isBuffer(_buffer) && _buffer.length === 32)) {
          throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
        }
        key = new _xdr["default"].SignerKey.signerKeyTypeHashX(_buffer);
      } else {
        throw new Error("signer is invalid");
      }
      var signer = new _xdr["default"].RevokeSponsorshipOpSigner({
        accountId: _keypair.Keypair.fromPublicKey(opts.account).xdrAccountId(),
        signerKey: key
      });
      var op = _xdr["default"].RevokeSponsorshipOp.revokeSponsorshipSigner(signer);
      var opAttributes = {};
      opAttributes.body = _xdr["default"].OperationBody.revokeSponsorship(op);
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/clawback.js
var require_clawback = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/clawback.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.clawback = clawback;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function clawback(opts) {
      var attributes = {};
      if (!this.isValidAmount(opts.amount)) {
        throw new TypeError(this.constructAmountRequirementsError("amount"));
      }
      attributes.amount = this._toXDRAmount(opts.amount);
      attributes.asset = opts.asset.toXDRObject();
      try {
        attributes.from = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.from);
      } catch (e2) {
        throw new Error("from address is invalid");
      }
      var opAttributes = {
        body: _xdr["default"].OperationBody.clawback(new _xdr["default"].ClawbackOp(attributes))
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/set_trustline_flags.js
var require_set_trustline_flags = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/set_trustline_flags.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.setTrustLineFlags = setTrustLineFlags;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function setTrustLineFlags() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var attributes = {};
      if (_typeof(opts.flags) !== "object" || Object.keys(opts.flags).length === 0) {
        throw new Error("opts.flags must be a map of boolean flags to modify");
      }
      var mapping = {
        authorized: _xdr["default"].TrustLineFlags.authorizedFlag(),
        authorizedToMaintainLiabilities: _xdr["default"].TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),
        clawbackEnabled: _xdr["default"].TrustLineFlags.trustlineClawbackEnabledFlag()
      };
      var clearFlag = 0;
      var setFlag = 0;
      Object.keys(opts.flags).forEach(function(flagName) {
        if (!Object.prototype.hasOwnProperty.call(mapping, flagName)) {
          throw new Error("unsupported flag name specified: ".concat(flagName));
        }
        var flagValue = opts.flags[flagName];
        var bit = mapping[flagName].value;
        if (flagValue === true) {
          setFlag |= bit;
        } else if (flagValue === false) {
          clearFlag |= bit;
        }
      });
      attributes.trustor = _keypair.Keypair.fromPublicKey(opts.trustor).xdrAccountId();
      attributes.asset = opts.asset.toXDRObject();
      attributes.clearFlags = clearFlag;
      attributes.setFlags = setFlag;
      var opAttributes = {
        body: _xdr["default"].OperationBody.setTrustLineFlags(new _xdr["default"].SetTrustLineFlagsOp(attributes))
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/liquidity_pool_deposit.js
var require_liquidity_pool_deposit = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/liquidity_pool_deposit.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.liquidityPoolDeposit = liquidityPoolDeposit;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function liquidityPoolDeposit() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var liquidityPoolId = opts.liquidityPoolId, maxAmountA = opts.maxAmountA, maxAmountB = opts.maxAmountB, minPrice = opts.minPrice, maxPrice = opts.maxPrice;
      var attributes = {};
      if (!liquidityPoolId) {
        throw new TypeError("liquidityPoolId argument is required");
      }
      attributes.liquidityPoolId = _xdr["default"].PoolId.fromXDR(liquidityPoolId, "hex");
      if (!this.isValidAmount(maxAmountA, true)) {
        throw new TypeError(this.constructAmountRequirementsError("maxAmountA"));
      }
      attributes.maxAmountA = this._toXDRAmount(maxAmountA);
      if (!this.isValidAmount(maxAmountB, true)) {
        throw new TypeError(this.constructAmountRequirementsError("maxAmountB"));
      }
      attributes.maxAmountB = this._toXDRAmount(maxAmountB);
      if (minPrice === void 0) {
        throw new TypeError("minPrice argument is required");
      }
      attributes.minPrice = this._toXDRPrice(minPrice);
      if (maxPrice === void 0) {
        throw new TypeError("maxPrice argument is required");
      }
      attributes.maxPrice = this._toXDRPrice(maxPrice);
      var liquidityPoolDepositOp = new _xdr["default"].LiquidityPoolDepositOp(attributes);
      var opAttributes = {
        body: _xdr["default"].OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/liquidity_pool_withdraw.js
var require_liquidity_pool_withdraw = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/liquidity_pool_withdraw.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.liquidityPoolWithdraw = liquidityPoolWithdraw;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function liquidityPoolWithdraw() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var attributes = {};
      if (!opts.liquidityPoolId) {
        throw new TypeError("liquidityPoolId argument is required");
      }
      attributes.liquidityPoolId = _xdr["default"].PoolId.fromXDR(opts.liquidityPoolId, "hex");
      if (!this.isValidAmount(opts.amount)) {
        throw new TypeError(this.constructAmountRequirementsError("amount"));
      }
      attributes.amount = this._toXDRAmount(opts.amount);
      if (!this.isValidAmount(opts.minAmountA, true)) {
        throw new TypeError(this.constructAmountRequirementsError("minAmountA"));
      }
      attributes.minAmountA = this._toXDRAmount(opts.minAmountA);
      if (!this.isValidAmount(opts.minAmountB, true)) {
        throw new TypeError(this.constructAmountRequirementsError("minAmountB"));
      }
      attributes.minAmountB = this._toXDRAmount(opts.minAmountB);
      var liquidityPoolWithdrawOp = new _xdr["default"].LiquidityPoolWithdrawOp(attributes);
      var opAttributes = {
        body: _xdr["default"].OperationBody.liquidityPoolWithdraw(liquidityPoolWithdrawOp)
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/address.js
var require_address = __commonJS({
  "node_modules/@stellar/stellar-base/lib/address.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Address = void 0;
    var _strkey = require_strkey();
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Address2 = exports.Address = function() {
      function Address3(address) {
        _classCallCheck(this, Address3);
        if (_strkey.StrKey.isValidEd25519PublicKey(address)) {
          this._type = "account";
          this._key = _strkey.StrKey.decodeEd25519PublicKey(address);
        } else if (_strkey.StrKey.isValidContract(address)) {
          this._type = "contract";
          this._key = _strkey.StrKey.decodeContract(address);
        } else {
          throw new Error("Unsupported address type: ".concat(address));
        }
      }
      return _createClass(Address3, [{
        key: "toString",
        value: (
          /**
           * Serialize an address to string.
           *
           * @returns {string}
           */
          function toString() {
            switch (this._type) {
              case "account":
                return _strkey.StrKey.encodeEd25519PublicKey(this._key);
              case "contract":
                return _strkey.StrKey.encodeContract(this._key);
              default:
                throw new Error("Unsupported address type");
            }
          }
        )
        /**
         * Convert this Address to an xdr.ScVal type.
         *
         * @returns {xdr.ScVal}
         */
      }, {
        key: "toScVal",
        value: function toScVal() {
          return _xdr["default"].ScVal.scvAddress(this.toScAddress());
        }
        /**
         * Convert this Address to an xdr.ScAddress type.
         *
         * @returns {xdr.ScAddress}
         */
      }, {
        key: "toScAddress",
        value: function toScAddress() {
          switch (this._type) {
            case "account":
              return _xdr["default"].ScAddress.scAddressTypeAccount(_xdr["default"].PublicKey.publicKeyTypeEd25519(this._key));
            case "contract":
              return _xdr["default"].ScAddress.scAddressTypeContract(this._key);
            default:
              throw new Error("Unsupported address type");
          }
        }
        /**
         * Return the raw public key bytes for this address.
         *
         * @returns {Buffer}
         */
      }, {
        key: "toBuffer",
        value: function toBuffer() {
          return this._key;
        }
      }], [{
        key: "fromString",
        value: function fromString(address) {
          return new Address3(address);
        }
        /**
         * Creates a new account Address object from a buffer of raw bytes.
         *
         * @param {Buffer} buffer - The bytes of an address to parse.
         * @returns {Address}
         */
      }, {
        key: "account",
        value: function account(buffer) {
          return new Address3(_strkey.StrKey.encodeEd25519PublicKey(buffer));
        }
        /**
         * Creates a new contract Address object from a buffer of raw bytes.
         *
         * @param {Buffer} buffer - The bytes of an address to parse.
         * @returns {Address}
         */
      }, {
        key: "contract",
        value: function contract(buffer) {
          return new Address3(_strkey.StrKey.encodeContract(buffer));
        }
        /**
         * Convert this from an xdr.ScVal type
         *
         * @param {xdr.ScVal} scVal - The xdr.ScVal type to parse
         * @returns {Address}
         */
      }, {
        key: "fromScVal",
        value: function fromScVal(scVal) {
          return Address3.fromScAddress(scVal.address());
        }
        /**
         * Convert this from an xdr.ScAddress type
         *
         * @param {xdr.ScAddress} scAddress - The xdr.ScAddress type to parse
         * @returns {Address}
         */
      }, {
        key: "fromScAddress",
        value: function fromScAddress(scAddress) {
          switch (scAddress["switch"]()) {
            case _xdr["default"].ScAddressType.scAddressTypeAccount():
              return Address3.account(scAddress.accountId().ed25519());
            case _xdr["default"].ScAddressType.scAddressTypeContract():
              return Address3.contract(scAddress.contractId());
            default:
              throw new Error("Unsupported address type");
          }
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/operations/invoke_host_function.js
var require_invoke_host_function = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/invoke_host_function.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createCustomContract = createCustomContract;
    exports.createStellarAssetContract = createStellarAssetContract;
    exports.invokeContractFunction = invokeContractFunction;
    exports.invokeHostFunction = invokeHostFunction;
    exports.uploadContractWasm = uploadContractWasm;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _address = require_address();
    var _asset = require_asset();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2["return"] && (u = t2["return"](), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function invokeHostFunction(opts) {
      if (!opts.func) {
        throw new TypeError("host function invocation ('func') required (got ".concat(JSON.stringify(opts), ")"));
      }
      var invokeHostFunctionOp = new _xdr["default"].InvokeHostFunctionOp({
        hostFunction: opts.func,
        auth: opts.auth || []
      });
      var opAttributes = {
        body: _xdr["default"].OperationBody.invokeHostFunction(invokeHostFunctionOp)
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
    function invokeContractFunction(opts) {
      var c = new _address.Address(opts.contract);
      if (c._type !== "contract") {
        throw new TypeError("expected contract strkey instance, got ".concat(c));
      }
      return this.invokeHostFunction({
        source: opts.source,
        auth: opts.auth,
        func: _xdr["default"].HostFunction.hostFunctionTypeInvokeContract(new _xdr["default"].InvokeContractArgs({
          contractAddress: c.toScAddress(),
          functionName: opts["function"],
          args: opts.args
        }))
      });
    }
    function createCustomContract(opts) {
      var salt = Buffer.from(opts.salt || getSalty());
      if (!opts.wasmHash || opts.wasmHash.length !== 32) {
        throw new TypeError("expected hash(contract WASM) in 'opts.wasmHash', got ".concat(opts.wasmHash));
      }
      if (salt.length !== 32) {
        throw new TypeError("expected 32-byte salt in 'opts.salt', got ".concat(opts.wasmHash));
      }
      return this.invokeHostFunction({
        source: opts.source,
        auth: opts.auth,
        func: _xdr["default"].HostFunction.hostFunctionTypeCreateContract(new _xdr["default"].CreateContractArgs({
          executable: _xdr["default"].ContractExecutable.contractExecutableWasm(Buffer.from(opts.wasmHash)),
          contractIdPreimage: _xdr["default"].ContractIdPreimage.contractIdPreimageFromAddress(new _xdr["default"].ContractIdPreimageFromAddress({
            address: opts.address.toScAddress(),
            salt
          }))
        }))
      });
    }
    function createStellarAssetContract(opts) {
      var asset = opts.asset;
      if (typeof asset === "string") {
        var _asset$split = asset.split(":"), _asset$split2 = _slicedToArray(_asset$split, 2), code = _asset$split2[0], issuer = _asset$split2[1];
        asset = new _asset.Asset(code, issuer);
      }
      if (!(asset instanceof _asset.Asset)) {
        throw new TypeError("expected Asset in 'opts.asset', got ".concat(asset));
      }
      return this.invokeHostFunction({
        source: opts.source,
        auth: opts.auth,
        func: _xdr["default"].HostFunction.hostFunctionTypeCreateContract(new _xdr["default"].CreateContractArgs({
          executable: _xdr["default"].ContractExecutable.contractExecutableStellarAsset(),
          contractIdPreimage: _xdr["default"].ContractIdPreimage.contractIdPreimageFromAsset(asset.toXDRObject())
        }))
      });
    }
    function uploadContractWasm(opts) {
      return this.invokeHostFunction({
        source: opts.source,
        auth: opts.auth,
        func: _xdr["default"].HostFunction.hostFunctionTypeUploadContractWasm(
          Buffer.from(opts.wasm)
          // coalesce so we can drop `Buffer` someday
        )
      });
    }
    function getSalty() {
      return _keypair.Keypair.random().xdrPublicKey().value();
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/extend_footprint_ttl.js
var require_extend_footprint_ttl = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/extend_footprint_ttl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.extendFootprintTtl = extendFootprintTtl;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function extendFootprintTtl(opts) {
      var _opts$extendTo;
      if (((_opts$extendTo = opts.extendTo) !== null && _opts$extendTo !== void 0 ? _opts$extendTo : -1) <= 0) {
        throw new RangeError("extendTo has to be positive");
      }
      var extendFootprintOp = new _xdr["default"].ExtendFootprintTtlOp({
        ext: new _xdr["default"].ExtensionPoint(0),
        extendTo: opts.extendTo
      });
      var opAttributes = {
        body: _xdr["default"].OperationBody.extendFootprintTtl(extendFootprintOp)
      };
      this.setSourceAccount(opAttributes, opts);
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/restore_footprint.js
var require_restore_footprint = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/restore_footprint.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.restoreFootprint = restoreFootprint;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function restoreFootprint() {
      var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var op = new _xdr["default"].RestoreFootprintOp({
        ext: new _xdr["default"].ExtensionPoint(0)
      });
      var opAttributes = {
        body: _xdr["default"].OperationBody.restoreFootprint(op)
      };
      this.setSourceAccount(opAttributes, opts !== null && opts !== void 0 ? opts : {});
      return new _xdr["default"].Operation(opAttributes);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/operations/index.js
var require_operations = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operations/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "accountMerge", {
      enumerable: true,
      get: function get() {
        return _account_merge.accountMerge;
      }
    });
    Object.defineProperty(exports, "allowTrust", {
      enumerable: true,
      get: function get() {
        return _allow_trust.allowTrust;
      }
    });
    Object.defineProperty(exports, "beginSponsoringFutureReserves", {
      enumerable: true,
      get: function get() {
        return _begin_sponsoring_future_reserves.beginSponsoringFutureReserves;
      }
    });
    Object.defineProperty(exports, "bumpSequence", {
      enumerable: true,
      get: function get() {
        return _bump_sequence.bumpSequence;
      }
    });
    Object.defineProperty(exports, "changeTrust", {
      enumerable: true,
      get: function get() {
        return _change_trust.changeTrust;
      }
    });
    Object.defineProperty(exports, "claimClaimableBalance", {
      enumerable: true,
      get: function get() {
        return _claim_claimable_balance.claimClaimableBalance;
      }
    });
    Object.defineProperty(exports, "clawback", {
      enumerable: true,
      get: function get() {
        return _clawback.clawback;
      }
    });
    Object.defineProperty(exports, "clawbackClaimableBalance", {
      enumerable: true,
      get: function get() {
        return _clawback_claimable_balance.clawbackClaimableBalance;
      }
    });
    Object.defineProperty(exports, "createAccount", {
      enumerable: true,
      get: function get() {
        return _create_account.createAccount;
      }
    });
    Object.defineProperty(exports, "createClaimableBalance", {
      enumerable: true,
      get: function get() {
        return _create_claimable_balance.createClaimableBalance;
      }
    });
    Object.defineProperty(exports, "createCustomContract", {
      enumerable: true,
      get: function get() {
        return _invoke_host_function.createCustomContract;
      }
    });
    Object.defineProperty(exports, "createPassiveSellOffer", {
      enumerable: true,
      get: function get() {
        return _create_passive_sell_offer.createPassiveSellOffer;
      }
    });
    Object.defineProperty(exports, "createStellarAssetContract", {
      enumerable: true,
      get: function get() {
        return _invoke_host_function.createStellarAssetContract;
      }
    });
    Object.defineProperty(exports, "endSponsoringFutureReserves", {
      enumerable: true,
      get: function get() {
        return _end_sponsoring_future_reserves.endSponsoringFutureReserves;
      }
    });
    Object.defineProperty(exports, "extendFootprintTtl", {
      enumerable: true,
      get: function get() {
        return _extend_footprint_ttl.extendFootprintTtl;
      }
    });
    Object.defineProperty(exports, "inflation", {
      enumerable: true,
      get: function get() {
        return _inflation.inflation;
      }
    });
    Object.defineProperty(exports, "invokeContractFunction", {
      enumerable: true,
      get: function get() {
        return _invoke_host_function.invokeContractFunction;
      }
    });
    Object.defineProperty(exports, "invokeHostFunction", {
      enumerable: true,
      get: function get() {
        return _invoke_host_function.invokeHostFunction;
      }
    });
    Object.defineProperty(exports, "liquidityPoolDeposit", {
      enumerable: true,
      get: function get() {
        return _liquidity_pool_deposit.liquidityPoolDeposit;
      }
    });
    Object.defineProperty(exports, "liquidityPoolWithdraw", {
      enumerable: true,
      get: function get() {
        return _liquidity_pool_withdraw.liquidityPoolWithdraw;
      }
    });
    Object.defineProperty(exports, "manageBuyOffer", {
      enumerable: true,
      get: function get() {
        return _manage_buy_offer.manageBuyOffer;
      }
    });
    Object.defineProperty(exports, "manageData", {
      enumerable: true,
      get: function get() {
        return _manage_data.manageData;
      }
    });
    Object.defineProperty(exports, "manageSellOffer", {
      enumerable: true,
      get: function get() {
        return _manage_sell_offer.manageSellOffer;
      }
    });
    Object.defineProperty(exports, "pathPaymentStrictReceive", {
      enumerable: true,
      get: function get() {
        return _path_payment_strict_receive.pathPaymentStrictReceive;
      }
    });
    Object.defineProperty(exports, "pathPaymentStrictSend", {
      enumerable: true,
      get: function get() {
        return _path_payment_strict_send.pathPaymentStrictSend;
      }
    });
    Object.defineProperty(exports, "payment", {
      enumerable: true,
      get: function get() {
        return _payment.payment;
      }
    });
    Object.defineProperty(exports, "restoreFootprint", {
      enumerable: true,
      get: function get() {
        return _restore_footprint.restoreFootprint;
      }
    });
    Object.defineProperty(exports, "revokeAccountSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeAccountSponsorship;
      }
    });
    Object.defineProperty(exports, "revokeClaimableBalanceSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeClaimableBalanceSponsorship;
      }
    });
    Object.defineProperty(exports, "revokeDataSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeDataSponsorship;
      }
    });
    Object.defineProperty(exports, "revokeLiquidityPoolSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeLiquidityPoolSponsorship;
      }
    });
    Object.defineProperty(exports, "revokeOfferSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeOfferSponsorship;
      }
    });
    Object.defineProperty(exports, "revokeSignerSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeSignerSponsorship;
      }
    });
    Object.defineProperty(exports, "revokeTrustlineSponsorship", {
      enumerable: true,
      get: function get() {
        return _revoke_sponsorship.revokeTrustlineSponsorship;
      }
    });
    Object.defineProperty(exports, "setOptions", {
      enumerable: true,
      get: function get() {
        return _set_options.setOptions;
      }
    });
    Object.defineProperty(exports, "setTrustLineFlags", {
      enumerable: true,
      get: function get() {
        return _set_trustline_flags.setTrustLineFlags;
      }
    });
    Object.defineProperty(exports, "uploadContractWasm", {
      enumerable: true,
      get: function get() {
        return _invoke_host_function.uploadContractWasm;
      }
    });
    var _manage_sell_offer = require_manage_sell_offer();
    var _create_passive_sell_offer = require_create_passive_sell_offer();
    var _account_merge = require_account_merge();
    var _allow_trust = require_allow_trust();
    var _bump_sequence = require_bump_sequence();
    var _change_trust = require_change_trust();
    var _create_account = require_create_account();
    var _create_claimable_balance = require_create_claimable_balance();
    var _claim_claimable_balance = require_claim_claimable_balance();
    var _clawback_claimable_balance = require_clawback_claimable_balance();
    var _inflation = require_inflation();
    var _manage_data = require_manage_data();
    var _manage_buy_offer = require_manage_buy_offer();
    var _path_payment_strict_receive = require_path_payment_strict_receive();
    var _path_payment_strict_send = require_path_payment_strict_send();
    var _payment = require_payment();
    var _set_options = require_set_options();
    var _begin_sponsoring_future_reserves = require_begin_sponsoring_future_reserves();
    var _end_sponsoring_future_reserves = require_end_sponsoring_future_reserves();
    var _revoke_sponsorship = require_revoke_sponsorship();
    var _clawback = require_clawback();
    var _set_trustline_flags = require_set_trustline_flags();
    var _liquidity_pool_deposit = require_liquidity_pool_deposit();
    var _liquidity_pool_withdraw = require_liquidity_pool_withdraw();
    var _invoke_host_function = require_invoke_host_function();
    var _extend_footprint_ttl = require_extend_footprint_ttl();
    var _restore_footprint = require_restore_footprint();
  }
});

// node_modules/@stellar/stellar-base/lib/operation.js
var require_operation = __commonJS({
  "node_modules/@stellar/stellar-base/lib/operation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Operation = exports.AuthRevocableFlag = exports.AuthRequiredFlag = exports.AuthImmutableFlag = exports.AuthClawbackEnabledFlag = void 0;
    var _jsXdr = require_xdr();
    var _bignumber = _interopRequireDefault(require_bignumber2());
    var _util = require_util();
    var _continued_fraction = require_continued_fraction();
    var _asset = require_asset();
    var _liquidity_pool_asset = require_liquidity_pool_asset();
    var _claimant = require_claimant();
    var _strkey = require_strkey();
    var _liquidity_pool_id = require_liquidity_pool_id();
    var _xdr = _interopRequireDefault(require_xdr2());
    var ops = _interopRequireWildcard(require_operations());
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _getRequireWildcardCache(e2) {
      if ("function" != typeof WeakMap) return null;
      var r3 = /* @__PURE__ */ new WeakMap(), t2 = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e3) {
        return e3 ? t2 : r3;
      })(e2);
    }
    function _interopRequireWildcard(e2, r3) {
      if (!r3 && e2 && e2.__esModule) return e2;
      if (null === e2 || "object" != _typeof(e2) && "function" != typeof e2) return { "default": e2 };
      var t2 = _getRequireWildcardCache(r3);
      if (t2 && t2.has(e2)) return t2.get(e2);
      var n2 = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e2) if ("default" !== u && {}.hasOwnProperty.call(e2, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e2, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n2, u, i) : n2[u] = e2[u];
      }
      return n2["default"] = e2, t2 && t2.set(e2, n2), n2;
    }
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var ONE = 1e7;
    var MAX_INT64 = "9223372036854775807";
    var AuthRequiredFlag = exports.AuthRequiredFlag = 1 << 0;
    var AuthRevocableFlag = exports.AuthRevocableFlag = 1 << 1;
    var AuthImmutableFlag = exports.AuthImmutableFlag = 1 << 2;
    var AuthClawbackEnabledFlag = exports.AuthClawbackEnabledFlag = 1 << 3;
    var Operation2 = exports.Operation = function() {
      function Operation3() {
        _classCallCheck(this, Operation3);
      }
      return _createClass(Operation3, null, [{
        key: "setSourceAccount",
        value: function setSourceAccount(opAttributes, opts) {
          if (opts.source) {
            try {
              opAttributes.sourceAccount = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.source);
            } catch (e2) {
              throw new Error("Source address is invalid");
            }
          }
        }
        /**
         * Deconstructs the raw XDR operation object into the structured object that
         * was used to create the operation (i.e. the `opts` parameter to most ops).
         *
         * @param {xdr.Operation}   operation - An XDR Operation.
         * @return {Operation}
         */
      }, {
        key: "fromXDRObject",
        value: function fromXDRObject(operation) {
          var result = {};
          if (operation.sourceAccount()) {
            result.source = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(operation.sourceAccount());
          }
          var attrs = operation.body().value();
          var operationName = operation.body()["switch"]().name;
          switch (operationName) {
            case "createAccount": {
              result.type = "createAccount";
              result.destination = accountIdtoAddress(attrs.destination());
              result.startingBalance = this._fromXDRAmount(attrs.startingBalance());
              break;
            }
            case "payment": {
              result.type = "payment";
              result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());
              result.asset = _asset.Asset.fromOperation(attrs.asset());
              result.amount = this._fromXDRAmount(attrs.amount());
              break;
            }
            case "pathPaymentStrictReceive": {
              result.type = "pathPaymentStrictReceive";
              result.sendAsset = _asset.Asset.fromOperation(attrs.sendAsset());
              result.sendMax = this._fromXDRAmount(attrs.sendMax());
              result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());
              result.destAsset = _asset.Asset.fromOperation(attrs.destAsset());
              result.destAmount = this._fromXDRAmount(attrs.destAmount());
              result.path = [];
              var path = attrs.path();
              Object.keys(path).forEach(function(pathKey) {
                result.path.push(_asset.Asset.fromOperation(path[pathKey]));
              });
              break;
            }
            case "pathPaymentStrictSend": {
              result.type = "pathPaymentStrictSend";
              result.sendAsset = _asset.Asset.fromOperation(attrs.sendAsset());
              result.sendAmount = this._fromXDRAmount(attrs.sendAmount());
              result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());
              result.destAsset = _asset.Asset.fromOperation(attrs.destAsset());
              result.destMin = this._fromXDRAmount(attrs.destMin());
              result.path = [];
              var _path = attrs.path();
              Object.keys(_path).forEach(function(pathKey) {
                result.path.push(_asset.Asset.fromOperation(_path[pathKey]));
              });
              break;
            }
            case "changeTrust": {
              result.type = "changeTrust";
              switch (attrs.line()["switch"]()) {
                case _xdr["default"].AssetType.assetTypePoolShare():
                  result.line = _liquidity_pool_asset.LiquidityPoolAsset.fromOperation(attrs.line());
                  break;
                default:
                  result.line = _asset.Asset.fromOperation(attrs.line());
                  break;
              }
              result.limit = this._fromXDRAmount(attrs.limit());
              break;
            }
            case "allowTrust": {
              result.type = "allowTrust";
              result.trustor = accountIdtoAddress(attrs.trustor());
              result.assetCode = attrs.asset().value().toString();
              result.assetCode = (0, _util.trimEnd)(result.assetCode, "\0");
              result.authorize = attrs.authorize();
              break;
            }
            case "setOptions": {
              result.type = "setOptions";
              if (attrs.inflationDest()) {
                result.inflationDest = accountIdtoAddress(attrs.inflationDest());
              }
              result.clearFlags = attrs.clearFlags();
              result.setFlags = attrs.setFlags();
              result.masterWeight = attrs.masterWeight();
              result.lowThreshold = attrs.lowThreshold();
              result.medThreshold = attrs.medThreshold();
              result.highThreshold = attrs.highThreshold();
              result.homeDomain = attrs.homeDomain() !== void 0 ? attrs.homeDomain().toString("ascii") : void 0;
              if (attrs.signer()) {
                var signer = {};
                var arm = attrs.signer().key().arm();
                if (arm === "ed25519") {
                  signer.ed25519PublicKey = accountIdtoAddress(attrs.signer().key());
                } else if (arm === "preAuthTx") {
                  signer.preAuthTx = attrs.signer().key().preAuthTx();
                } else if (arm === "hashX") {
                  signer.sha256Hash = attrs.signer().key().hashX();
                } else if (arm === "ed25519SignedPayload") {
                  var signedPayload = attrs.signer().key().ed25519SignedPayload();
                  signer.ed25519SignedPayload = _strkey.StrKey.encodeSignedPayload(signedPayload.toXDR());
                }
                signer.weight = attrs.signer().weight();
                result.signer = signer;
              }
              break;
            }
            case "manageOffer":
            case "manageSellOffer": {
              result.type = "manageSellOffer";
              result.selling = _asset.Asset.fromOperation(attrs.selling());
              result.buying = _asset.Asset.fromOperation(attrs.buying());
              result.amount = this._fromXDRAmount(attrs.amount());
              result.price = this._fromXDRPrice(attrs.price());
              result.offerId = attrs.offerId().toString();
              break;
            }
            case "manageBuyOffer": {
              result.type = "manageBuyOffer";
              result.selling = _asset.Asset.fromOperation(attrs.selling());
              result.buying = _asset.Asset.fromOperation(attrs.buying());
              result.buyAmount = this._fromXDRAmount(attrs.buyAmount());
              result.price = this._fromXDRPrice(attrs.price());
              result.offerId = attrs.offerId().toString();
              break;
            }
            case "createPassiveOffer":
            case "createPassiveSellOffer": {
              result.type = "createPassiveSellOffer";
              result.selling = _asset.Asset.fromOperation(attrs.selling());
              result.buying = _asset.Asset.fromOperation(attrs.buying());
              result.amount = this._fromXDRAmount(attrs.amount());
              result.price = this._fromXDRPrice(attrs.price());
              break;
            }
            case "accountMerge": {
              result.type = "accountMerge";
              result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs);
              break;
            }
            case "manageData": {
              result.type = "manageData";
              result.name = attrs.dataName().toString("ascii");
              result.value = attrs.dataValue();
              break;
            }
            case "inflation": {
              result.type = "inflation";
              break;
            }
            case "bumpSequence": {
              result.type = "bumpSequence";
              result.bumpTo = attrs.bumpTo().toString();
              break;
            }
            case "createClaimableBalance": {
              result.type = "createClaimableBalance";
              result.asset = _asset.Asset.fromOperation(attrs.asset());
              result.amount = this._fromXDRAmount(attrs.amount());
              result.claimants = [];
              attrs.claimants().forEach(function(claimant) {
                result.claimants.push(_claimant.Claimant.fromXDR(claimant));
              });
              break;
            }
            case "claimClaimableBalance": {
              result.type = "claimClaimableBalance";
              result.balanceId = attrs.toXDR("hex");
              break;
            }
            case "beginSponsoringFutureReserves": {
              result.type = "beginSponsoringFutureReserves";
              result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());
              break;
            }
            case "endSponsoringFutureReserves": {
              result.type = "endSponsoringFutureReserves";
              break;
            }
            case "revokeSponsorship": {
              extractRevokeSponshipDetails(attrs, result);
              break;
            }
            case "clawback": {
              result.type = "clawback";
              result.amount = this._fromXDRAmount(attrs.amount());
              result.from = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.from());
              result.asset = _asset.Asset.fromOperation(attrs.asset());
              break;
            }
            case "clawbackClaimableBalance": {
              result.type = "clawbackClaimableBalance";
              result.balanceId = attrs.toXDR("hex");
              break;
            }
            case "setTrustLineFlags": {
              result.type = "setTrustLineFlags";
              result.asset = _asset.Asset.fromOperation(attrs.asset());
              result.trustor = accountIdtoAddress(attrs.trustor());
              var clears = attrs.clearFlags();
              var sets = attrs.setFlags();
              var mapping = {
                authorized: _xdr["default"].TrustLineFlags.authorizedFlag(),
                authorizedToMaintainLiabilities: _xdr["default"].TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),
                clawbackEnabled: _xdr["default"].TrustLineFlags.trustlineClawbackEnabledFlag()
              };
              var getFlagValue = function getFlagValue2(key) {
                var bit = mapping[key].value;
                if (sets & bit) {
                  return true;
                }
                if (clears & bit) {
                  return false;
                }
                return void 0;
              };
              result.flags = {};
              Object.keys(mapping).forEach(function(flagName) {
                result.flags[flagName] = getFlagValue(flagName);
              });
              break;
            }
            case "liquidityPoolDeposit": {
              result.type = "liquidityPoolDeposit";
              result.liquidityPoolId = attrs.liquidityPoolId().toString("hex");
              result.maxAmountA = this._fromXDRAmount(attrs.maxAmountA());
              result.maxAmountB = this._fromXDRAmount(attrs.maxAmountB());
              result.minPrice = this._fromXDRPrice(attrs.minPrice());
              result.maxPrice = this._fromXDRPrice(attrs.maxPrice());
              break;
            }
            case "liquidityPoolWithdraw": {
              result.type = "liquidityPoolWithdraw";
              result.liquidityPoolId = attrs.liquidityPoolId().toString("hex");
              result.amount = this._fromXDRAmount(attrs.amount());
              result.minAmountA = this._fromXDRAmount(attrs.minAmountA());
              result.minAmountB = this._fromXDRAmount(attrs.minAmountB());
              break;
            }
            case "invokeHostFunction": {
              var _attrs$auth;
              result.type = "invokeHostFunction";
              result.func = attrs.hostFunction();
              result.auth = (_attrs$auth = attrs.auth()) !== null && _attrs$auth !== void 0 ? _attrs$auth : [];
              break;
            }
            case "extendFootprintTtl": {
              result.type = "extendFootprintTtl";
              result.extendTo = attrs.extendTo();
              break;
            }
            case "restoreFootprint": {
              result.type = "restoreFootprint";
              break;
            }
            default: {
              throw new Error("Unknown operation: ".concat(operationName));
            }
          }
          return result;
        }
        /**
         * Validates that a given amount is possible for a Stellar asset.
         *
         * Specifically, this means that the amount is well, a valid number, but also
         * that it is within the int64 range and has no more than 7 decimal levels of
         * precision.
         *
         * Note that while smart contracts allow larger amounts, this is oriented
         * towards validating the standard Stellar operations.
         *
         * @param {string}  value       the amount to validate
         * @param {boolean} allowZero   optionally, whether or not zero is valid (default: no)
         *
         * @returns {boolean}
         */
      }, {
        key: "isValidAmount",
        value: function isValidAmount(value) {
          var allowZero = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
          if (typeof value !== "string") {
            return false;
          }
          var amount;
          try {
            amount = new _bignumber["default"](value);
          } catch (e2) {
            return false;
          }
          if (
            // == 0
            !allowZero && amount.isZero() || // < 0
            amount.isNegative() || // > Max value
            amount.times(ONE).gt(new _bignumber["default"](MAX_INT64).toString()) || // Decimal places (max 7)
            amount.decimalPlaces() > 7 || // NaN or Infinity
            amount.isNaN() || !amount.isFinite()
          ) {
            return false;
          }
          return true;
        }
      }, {
        key: "constructAmountRequirementsError",
        value: function constructAmountRequirementsError(arg) {
          return "".concat(arg, " argument must be of type String, represent a positive number and have at most 7 digits after the decimal");
        }
        /**
         * Returns value converted to uint32 value or undefined.
         * If `value` is not `Number`, `String` or `Undefined` then throws an error.
         * Used in {@link Operation.setOptions}.
         * @private
         * @param {string} name Name of the property (used in error message only)
         * @param {*} value Value to check
         * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)
         * @returns {undefined|Number}
         */
      }, {
        key: "_checkUnsignedIntValue",
        value: function _checkUnsignedIntValue(name, value) {
          var isValidFunction = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (typeof value === "undefined") {
            return void 0;
          }
          if (typeof value === "string") {
            value = parseFloat(value);
          }
          switch (true) {
            case (typeof value !== "number" || !Number.isFinite(value) || value % 1 !== 0):
              throw new Error("".concat(name, " value is invalid"));
            case value < 0:
              throw new Error("".concat(name, " value must be unsigned"));
            case (!isValidFunction || isValidFunction && isValidFunction(value, name)):
              return value;
            default:
              throw new Error("".concat(name, " value is invalid"));
          }
        }
        /**
         * @private
         * @param {string|BigNumber} value Value
         * @returns {Hyper} XDR amount
         */
      }, {
        key: "_toXDRAmount",
        value: function _toXDRAmount(value) {
          var amount = new _bignumber["default"](value).times(ONE);
          return _jsXdr.Hyper.fromString(amount.toString());
        }
        /**
         * @private
         * @param {string|BigNumber} value XDR amount
         * @returns {BigNumber} Number
         */
      }, {
        key: "_fromXDRAmount",
        value: function _fromXDRAmount(value) {
          return new _bignumber["default"](value).div(ONE).toFixed(7);
        }
        /**
         * @private
         * @param {object} price Price object
         * @param {function} price.n numerator function that returns a value
         * @param {function} price.d denominator function that returns a value
         * @returns {BigNumber} Big string
         */
      }, {
        key: "_fromXDRPrice",
        value: function _fromXDRPrice(price) {
          var n2 = new _bignumber["default"](price.n());
          return n2.div(new _bignumber["default"](price.d())).toString();
        }
        /**
         * @private
         * @param {object} price Price object
         * @param {function} price.n numerator function that returns a value
         * @param {function} price.d denominator function that returns a value
         * @returns {object} XDR price object
         */
      }, {
        key: "_toXDRPrice",
        value: function _toXDRPrice(price) {
          var xdrObject;
          if (price.n && price.d) {
            xdrObject = new _xdr["default"].Price(price);
          } else {
            var approx = (0, _continued_fraction.best_r)(price);
            xdrObject = new _xdr["default"].Price({
              n: parseInt(approx[0], 10),
              d: parseInt(approx[1], 10)
            });
          }
          if (xdrObject.n() < 0 || xdrObject.d() < 0) {
            throw new Error("price must be positive");
          }
          return xdrObject;
        }
      }]);
    }();
    function extractRevokeSponshipDetails(attrs, result) {
      switch (attrs["switch"]().name) {
        case "revokeSponsorshipLedgerEntry": {
          var ledgerKey = attrs.ledgerKey();
          switch (ledgerKey["switch"]().name) {
            case _xdr["default"].LedgerEntryType.account().name: {
              result.type = "revokeAccountSponsorship";
              result.account = accountIdtoAddress(ledgerKey.account().accountId());
              break;
            }
            case _xdr["default"].LedgerEntryType.trustline().name: {
              result.type = "revokeTrustlineSponsorship";
              result.account = accountIdtoAddress(ledgerKey.trustLine().accountId());
              var xdrAsset = ledgerKey.trustLine().asset();
              switch (xdrAsset["switch"]()) {
                case _xdr["default"].AssetType.assetTypePoolShare():
                  result.asset = _liquidity_pool_id.LiquidityPoolId.fromOperation(xdrAsset);
                  break;
                default:
                  result.asset = _asset.Asset.fromOperation(xdrAsset);
                  break;
              }
              break;
            }
            case _xdr["default"].LedgerEntryType.offer().name: {
              result.type = "revokeOfferSponsorship";
              result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());
              result.offerId = ledgerKey.offer().offerId().toString();
              break;
            }
            case _xdr["default"].LedgerEntryType.data().name: {
              result.type = "revokeDataSponsorship";
              result.account = accountIdtoAddress(ledgerKey.data().accountId());
              result.name = ledgerKey.data().dataName().toString("ascii");
              break;
            }
            case _xdr["default"].LedgerEntryType.claimableBalance().name: {
              result.type = "revokeClaimableBalanceSponsorship";
              result.balanceId = ledgerKey.claimableBalance().balanceId().toXDR("hex");
              break;
            }
            case _xdr["default"].LedgerEntryType.liquidityPool().name: {
              result.type = "revokeLiquidityPoolSponsorship";
              result.liquidityPoolId = ledgerKey.liquidityPool().liquidityPoolId().toString("hex");
              break;
            }
            default: {
              throw new Error("Unknown ledgerKey: ".concat(attrs["switch"]().name));
            }
          }
          break;
        }
        case "revokeSponsorshipSigner": {
          result.type = "revokeSignerSponsorship";
          result.account = accountIdtoAddress(attrs.signer().accountId());
          result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());
          break;
        }
        default: {
          throw new Error("Unknown revokeSponsorship: ".concat(attrs["switch"]().name));
        }
      }
    }
    function convertXDRSignerKeyToObject(signerKey) {
      var attrs = {};
      switch (signerKey["switch"]().name) {
        case _xdr["default"].SignerKeyType.signerKeyTypeEd25519().name: {
          attrs.ed25519PublicKey = _strkey.StrKey.encodeEd25519PublicKey(signerKey.ed25519());
          break;
        }
        case _xdr["default"].SignerKeyType.signerKeyTypePreAuthTx().name: {
          attrs.preAuthTx = signerKey.preAuthTx().toString("hex");
          break;
        }
        case _xdr["default"].SignerKeyType.signerKeyTypeHashX().name: {
          attrs.sha256Hash = signerKey.hashX().toString("hex");
          break;
        }
        default: {
          throw new Error("Unknown signerKey: ".concat(signerKey["switch"]().name));
        }
      }
      return attrs;
    }
    function accountIdtoAddress(accountId) {
      return _strkey.StrKey.encodeEd25519PublicKey(accountId.ed25519());
    }
    Operation2.accountMerge = ops.accountMerge;
    Operation2.allowTrust = ops.allowTrust;
    Operation2.bumpSequence = ops.bumpSequence;
    Operation2.changeTrust = ops.changeTrust;
    Operation2.createAccount = ops.createAccount;
    Operation2.createClaimableBalance = ops.createClaimableBalance;
    Operation2.claimClaimableBalance = ops.claimClaimableBalance;
    Operation2.clawbackClaimableBalance = ops.clawbackClaimableBalance;
    Operation2.createPassiveSellOffer = ops.createPassiveSellOffer;
    Operation2.inflation = ops.inflation;
    Operation2.manageData = ops.manageData;
    Operation2.manageSellOffer = ops.manageSellOffer;
    Operation2.manageBuyOffer = ops.manageBuyOffer;
    Operation2.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;
    Operation2.pathPaymentStrictSend = ops.pathPaymentStrictSend;
    Operation2.payment = ops.payment;
    Operation2.setOptions = ops.setOptions;
    Operation2.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;
    Operation2.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;
    Operation2.revokeAccountSponsorship = ops.revokeAccountSponsorship;
    Operation2.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;
    Operation2.revokeOfferSponsorship = ops.revokeOfferSponsorship;
    Operation2.revokeDataSponsorship = ops.revokeDataSponsorship;
    Operation2.revokeClaimableBalanceSponsorship = ops.revokeClaimableBalanceSponsorship;
    Operation2.revokeLiquidityPoolSponsorship = ops.revokeLiquidityPoolSponsorship;
    Operation2.revokeSignerSponsorship = ops.revokeSignerSponsorship;
    Operation2.clawback = ops.clawback;
    Operation2.setTrustLineFlags = ops.setTrustLineFlags;
    Operation2.liquidityPoolDeposit = ops.liquidityPoolDeposit;
    Operation2.liquidityPoolWithdraw = ops.liquidityPoolWithdraw;
    Operation2.invokeHostFunction = ops.invokeHostFunction;
    Operation2.extendFootprintTtl = ops.extendFootprintTtl;
    Operation2.restoreFootprint = ops.restoreFootprint;
    Operation2.createStellarAssetContract = ops.createStellarAssetContract;
    Operation2.invokeContractFunction = ops.invokeContractFunction;
    Operation2.createCustomContract = ops.createCustomContract;
    Operation2.uploadContractWasm = ops.uploadContractWasm;
  }
});

// node_modules/@stellar/stellar-base/lib/memo.js
var require_memo = __commonJS({
  "node_modules/@stellar/stellar-base/lib/memo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MemoText = exports.MemoReturn = exports.MemoNone = exports.MemoID = exports.MemoHash = exports.Memo = void 0;
    var _jsXdr = require_xdr();
    var _bignumber = _interopRequireDefault(require_bignumber2());
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var MemoNone = exports.MemoNone = "none";
    var MemoID = exports.MemoID = "id";
    var MemoText = exports.MemoText = "text";
    var MemoHash = exports.MemoHash = "hash";
    var MemoReturn = exports.MemoReturn = "return";
    var Memo = exports.Memo = function() {
      function Memo2(type) {
        var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        _classCallCheck(this, Memo2);
        this._type = type;
        this._value = value;
        switch (this._type) {
          case MemoNone:
            break;
          case MemoID:
            Memo2._validateIdValue(value);
            break;
          case MemoText:
            Memo2._validateTextValue(value);
            break;
          case MemoHash:
          case MemoReturn:
            Memo2._validateHashValue(value);
            if (typeof value === "string") {
              this._value = Buffer.from(value, "hex");
            }
            break;
          default:
            throw new Error("Invalid memo type");
        }
      }
      return _createClass(Memo2, [{
        key: "type",
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          throw new Error("Memo is immutable");
        }
        /**
         * Contains memo value:
         * * `null` for `MemoNone`,
         * * `string` for `MemoID`,
         * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,
         * * `Buffer` for `MemoHash`, `MemoReturn`.
         */
      }, {
        key: "value",
        get: function get() {
          switch (this._type) {
            case MemoNone:
              return null;
            case MemoID:
            case MemoText:
              return this._value;
            case MemoHash:
            case MemoReturn:
              return Buffer.from(this._value);
            default:
              throw new Error("Invalid memo type");
          }
        },
        set: function set(value) {
          throw new Error("Memo is immutable");
        }
      }, {
        key: "toXDRObject",
        value: (
          /**
           * Returns XDR memo object.
           * @returns {xdr.Memo}
           */
          function toXDRObject() {
            switch (this._type) {
              case MemoNone:
                return _xdr["default"].Memo.memoNone();
              case MemoID:
                return _xdr["default"].Memo.memoId(_jsXdr.UnsignedHyper.fromString(this._value));
              case MemoText:
                return _xdr["default"].Memo.memoText(this._value);
              case MemoHash:
                return _xdr["default"].Memo.memoHash(this._value);
              case MemoReturn:
                return _xdr["default"].Memo.memoReturn(this._value);
              default:
                return null;
            }
          }
        )
        /**
         * Returns {@link Memo} from XDR memo object.
         * @param {xdr.Memo} object XDR memo object
         * @returns {Memo}
         */
      }], [{
        key: "_validateIdValue",
        value: function _validateIdValue(value) {
          var error = new Error("Expects a int64 as a string. Got ".concat(value));
          if (typeof value !== "string") {
            throw error;
          }
          var number;
          try {
            number = new _bignumber["default"](value);
          } catch (e2) {
            throw error;
          }
          if (!number.isFinite()) {
            throw error;
          }
          if (number.isNaN()) {
            throw error;
          }
        }
      }, {
        key: "_validateTextValue",
        value: function _validateTextValue(value) {
          if (!_xdr["default"].Memo.armTypeForArm("text").isValid(value)) {
            throw new Error("Expects string, array or buffer, max 28 bytes");
          }
        }
      }, {
        key: "_validateHashValue",
        value: function _validateHashValue(value) {
          var error = new Error("Expects a 32 byte hash value or hex encoded string. Got ".concat(value));
          if (value === null || typeof value === "undefined") {
            throw error;
          }
          var valueBuffer;
          if (typeof value === "string") {
            if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {
              throw error;
            }
            valueBuffer = Buffer.from(value, "hex");
          } else if (Buffer.isBuffer(value)) {
            valueBuffer = Buffer.from(value);
          } else {
            throw error;
          }
          if (!valueBuffer.length || valueBuffer.length !== 32) {
            throw error;
          }
        }
        /**
         * Returns an empty memo (`MemoNone`).
         * @returns {Memo}
         */
      }, {
        key: "none",
        value: function none() {
          return new Memo2(MemoNone);
        }
        /**
         * Creates and returns a `MemoText` memo.
         * @param {string} text - memo text
         * @returns {Memo}
         */
      }, {
        key: "text",
        value: function text(_text) {
          return new Memo2(MemoText, _text);
        }
        /**
         * Creates and returns a `MemoID` memo.
         * @param {string} id - 64-bit number represented as a string
         * @returns {Memo}
         */
      }, {
        key: "id",
        value: function id(_id) {
          return new Memo2(MemoID, _id);
        }
        /**
         * Creates and returns a `MemoHash` memo.
         * @param {array|string} hash - 32 byte hash or hex encoded string
         * @returns {Memo}
         */
      }, {
        key: "hash",
        value: function hash2(_hash) {
          return new Memo2(MemoHash, _hash);
        }
        /**
         * Creates and returns a `MemoReturn` memo.
         * @param {array|string} hash - 32 byte hash or hex encoded string
         * @returns {Memo}
         */
      }, {
        key: "return",
        value: function _return(hash2) {
          return new Memo2(MemoReturn, hash2);
        }
      }, {
        key: "fromXDRObject",
        value: function fromXDRObject(object) {
          switch (object.arm()) {
            case "id":
              return Memo2.id(object.value().toString());
            case "text":
              return Memo2.text(object.value());
            case "hash":
              return Memo2.hash(object.value());
            case "retHash":
              return Memo2["return"](object.value());
            default:
              break;
          }
          if (typeof object.value() === "undefined") {
            return Memo2.none();
          }
          throw new Error("Unknown type");
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/transaction.js
var require_transaction = __commonJS({
  "node_modules/@stellar/stellar-base/lib/transaction.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Transaction = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _hashing = require_hashing();
    var _strkey = require_strkey();
    var _operation = require_operation();
    var _memo = require_memo();
    var _transaction_base = require_transaction_base();
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var Transaction2 = exports.Transaction = function(_TransactionBase) {
      function Transaction3(envelope, networkPassphrase) {
        var _this;
        _classCallCheck(this, Transaction3);
        if (typeof envelope === "string") {
          var buffer = Buffer.from(envelope, "base64");
          envelope = _xdr["default"].TransactionEnvelope.fromXDR(buffer);
        }
        var envelopeType = envelope["switch"]();
        if (!(envelopeType === _xdr["default"].EnvelopeType.envelopeTypeTxV0() || envelopeType === _xdr["default"].EnvelopeType.envelopeTypeTx())) {
          throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(envelopeType.name, "."));
        }
        var txEnvelope = envelope.value();
        var tx = txEnvelope.tx();
        var fee = tx.fee().toString();
        var signatures = (txEnvelope.signatures() || []).slice();
        _this = _callSuper(this, Transaction3, [tx, signatures, fee, networkPassphrase]);
        _this._envelopeType = envelopeType;
        _this._memo = tx.memo();
        _this._sequence = tx.seqNum().toString();
        switch (_this._envelopeType) {
          case _xdr["default"].EnvelopeType.envelopeTypeTxV0():
            _this._source = _strkey.StrKey.encodeEd25519PublicKey(_this.tx.sourceAccountEd25519());
            break;
          default:
            _this._source = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(_this.tx.sourceAccount());
            break;
        }
        var cond = null;
        var timeBounds = null;
        switch (_this._envelopeType) {
          case _xdr["default"].EnvelopeType.envelopeTypeTxV0():
            timeBounds = tx.timeBounds();
            break;
          case _xdr["default"].EnvelopeType.envelopeTypeTx():
            switch (tx.cond()["switch"]()) {
              case _xdr["default"].PreconditionType.precondTime():
                timeBounds = tx.cond().timeBounds();
                break;
              case _xdr["default"].PreconditionType.precondV2():
                cond = tx.cond().v2();
                timeBounds = cond.timeBounds();
                break;
              default:
                break;
            }
            break;
          default:
            break;
        }
        if (timeBounds) {
          _this._timeBounds = {
            minTime: timeBounds.minTime().toString(),
            maxTime: timeBounds.maxTime().toString()
          };
        }
        if (cond) {
          var ledgerBounds = cond.ledgerBounds();
          if (ledgerBounds) {
            _this._ledgerBounds = {
              minLedger: ledgerBounds.minLedger(),
              maxLedger: ledgerBounds.maxLedger()
            };
          }
          var minSeq = cond.minSeqNum();
          if (minSeq) {
            _this._minAccountSequence = minSeq.toString();
          }
          _this._minAccountSequenceAge = cond.minSeqAge();
          _this._minAccountSequenceLedgerGap = cond.minSeqLedgerGap();
          _this._extraSigners = cond.extraSigners();
        }
        var operations = tx.operations() || [];
        _this._operations = operations.map(function(op) {
          return _operation.Operation.fromXDRObject(op);
        });
        return _this;
      }
      _inherits(Transaction3, _TransactionBase);
      return _createClass(Transaction3, [{
        key: "timeBounds",
        get: function get() {
          return this._timeBounds;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {object}
         * @property {number} minLedger - smallest ledger bound (uint32)
         * @property {number} maxLedger - largest ledger bound (or 0 for inf)
         * @readonly
         */
      }, {
        key: "ledgerBounds",
        get: function get() {
          return this._ledgerBounds;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * 64 bit account sequence
         * @readonly
         * @type {string}
         */
      }, {
        key: "minAccountSequence",
        get: function get() {
          return this._minAccountSequence;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * 64 bit number of seconds
         * @type {number}
         * @readonly
         */
      }, {
        key: "minAccountSequenceAge",
        get: function get() {
          return this._minAccountSequenceAge;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * 32 bit number of ledgers
         * @type {number}
         * @readonly
         */
      }, {
        key: "minAccountSequenceLedgerGap",
        get: function get() {
          return this._minAccountSequenceLedgerGap;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * array of extra signers ({@link StrKey}s)
         * @type {string[]}
         * @readonly
         */
      }, {
        key: "extraSigners",
        get: function get() {
          return this._extraSigners;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "sequence",
        get: function get() {
          return this._sequence;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "source",
        get: function get() {
          return this._source;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {Array.<xdr.Operation>}
         * @readonly
         */
      }, {
        key: "operations",
        get: function get() {
          return this._operations;
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "memo",
        get: function get() {
          return _memo.Memo.fromXDRObject(this._memo);
        },
        set: function set(value) {
          throw new Error("Transaction is immutable");
        }
        /**
         * Returns the "signature base" of this transaction, which is the value
         * that, when hashed, should be signed to create a signature that
         * validators on the Stellar Network will accept.
         *
         * It is composed of a 4 prefix bytes followed by the xdr-encoded form
         * of this transaction.
         * @returns {Buffer}
         */
      }, {
        key: "signatureBase",
        value: function signatureBase() {
          var tx = this.tx;
          if (this._envelopeType === _xdr["default"].EnvelopeType.envelopeTypeTxV0()) {
            tx = _xdr["default"].Transaction.fromXDR(Buffer.concat([
              // TransactionV0 is a transaction with the AccountID discriminant
              // stripped off, we need to put it back to build a valid transaction
              // which we can use to build a TransactionSignaturePayloadTaggedTransaction
              _xdr["default"].PublicKeyType.publicKeyTypeEd25519().toXDR(),
              tx.toXDR()
            ]));
          }
          var taggedTransaction = new _xdr["default"].TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(tx);
          var txSignature = new _xdr["default"].TransactionSignaturePayload({
            networkId: _xdr["default"].Hash.fromXDR((0, _hashing.hash)(this.networkPassphrase)),
            taggedTransaction
          });
          return txSignature.toXDR();
        }
        /**
         * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.
         * @returns {xdr.TransactionEnvelope}
         */
      }, {
        key: "toEnvelope",
        value: function toEnvelope() {
          var rawTx = this.tx.toXDR();
          var signatures = this.signatures.slice();
          var envelope;
          switch (this._envelopeType) {
            case _xdr["default"].EnvelopeType.envelopeTypeTxV0():
              envelope = new _xdr["default"].TransactionEnvelope.envelopeTypeTxV0(new _xdr["default"].TransactionV0Envelope({
                tx: _xdr["default"].TransactionV0.fromXDR(rawTx),
                // make a copy of tx
                signatures
              }));
              break;
            case _xdr["default"].EnvelopeType.envelopeTypeTx():
              envelope = new _xdr["default"].TransactionEnvelope.envelopeTypeTx(new _xdr["default"].TransactionV1Envelope({
                tx: _xdr["default"].Transaction.fromXDR(rawTx),
                // make a copy of tx
                signatures
              }));
              break;
            default:
              throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(this._envelopeType.name, "."));
          }
          return envelope;
        }
        /**
         * Calculate the claimable balance ID for an operation within the transaction.
         *
         * @param   {integer}  opIndex   the index of the CreateClaimableBalance op
         * @returns {string}   a hex string representing the claimable balance ID
         *
         * @throws {RangeError}   for invalid `opIndex` value
         * @throws {TypeError}    if op at `opIndex` is not `CreateClaimableBalance`
         * @throws for general XDR un/marshalling failures
         *
         * @see https://github.com/stellar/go/blob/d712346e61e288d450b0c08038c158f8848cc3e4/txnbuild/transaction.go#L392-L435
         *
         */
      }, {
        key: "getClaimableBalanceId",
        value: function getClaimableBalanceId(opIndex) {
          if (!Number.isInteger(opIndex) || opIndex < 0 || opIndex >= this.operations.length) {
            throw new RangeError("invalid operation index");
          }
          var op = this.operations[opIndex];
          try {
            op = _operation.Operation.createClaimableBalance(op);
          } catch (err) {
            throw new TypeError("expected createClaimableBalance, got ".concat(op.type, ": ").concat(err));
          }
          var account = _strkey.StrKey.decodeEd25519PublicKey((0, _decode_encode_muxed_account.extractBaseAddress)(this.source));
          var operationId = _xdr["default"].HashIdPreimage.envelopeTypeOpId(new _xdr["default"].HashIdPreimageOperationId({
            sourceAccount: _xdr["default"].AccountId.publicKeyTypeEd25519(account),
            seqNum: _xdr["default"].SequenceNumber.fromString(this.sequence),
            opNum: opIndex
          }));
          var opIdHash = (0, _hashing.hash)(operationId.toXDR("raw"));
          var balanceId = _xdr["default"].ClaimableBalanceId.claimableBalanceIdTypeV0(opIdHash);
          return balanceId.toXDR("hex");
        }
      }]);
    }(_transaction_base.TransactionBase);
  }
});

// node_modules/@stellar/stellar-base/lib/fee_bump_transaction.js
var require_fee_bump_transaction = __commonJS({
  "node_modules/@stellar/stellar-base/lib/fee_bump_transaction.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FeeBumpTransaction = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _hashing = require_hashing();
    var _transaction = require_transaction();
    var _transaction_base = require_transaction_base();
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var FeeBumpTransaction = exports.FeeBumpTransaction = function(_TransactionBase) {
      function FeeBumpTransaction2(envelope, networkPassphrase) {
        var _this;
        _classCallCheck(this, FeeBumpTransaction2);
        if (typeof envelope === "string") {
          var buffer = Buffer.from(envelope, "base64");
          envelope = _xdr["default"].TransactionEnvelope.fromXDR(buffer);
        }
        var envelopeType = envelope["switch"]();
        if (envelopeType !== _xdr["default"].EnvelopeType.envelopeTypeTxFeeBump()) {
          throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ".concat(envelopeType.name, "."));
        }
        var txEnvelope = envelope.value();
        var tx = txEnvelope.tx();
        var fee = tx.fee().toString();
        var signatures = (txEnvelope.signatures() || []).slice();
        _this = _callSuper(this, FeeBumpTransaction2, [tx, signatures, fee, networkPassphrase]);
        var innerTxEnvelope = _xdr["default"].TransactionEnvelope.envelopeTypeTx(tx.innerTx().v1());
        _this._feeSource = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(_this.tx.feeSource());
        _this._innerTransaction = new _transaction.Transaction(innerTxEnvelope, networkPassphrase);
        return _this;
      }
      _inherits(FeeBumpTransaction2, _TransactionBase);
      return _createClass(FeeBumpTransaction2, [{
        key: "innerTransaction",
        get: function get() {
          return this._innerTransaction;
        }
        /**
         * @type {Operation[]}
         * @readonly
         */
      }, {
        key: "operations",
        get: function get() {
          return this._innerTransaction.operations;
        }
        /**
         * @type {string}
         * @readonly
         */
      }, {
        key: "feeSource",
        get: function get() {
          return this._feeSource;
        }
        /**
         * Returns the "signature base" of this transaction, which is the value
         * that, when hashed, should be signed to create a signature that
         * validators on the Stellar Network will accept.
         *
         * It is composed of a 4 prefix bytes followed by the xdr-encoded form
         * of this transaction.
         * @returns {Buffer}
         */
      }, {
        key: "signatureBase",
        value: function signatureBase() {
          var taggedTransaction = new _xdr["default"].TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);
          var txSignature = new _xdr["default"].TransactionSignaturePayload({
            networkId: _xdr["default"].Hash.fromXDR((0, _hashing.hash)(this.networkPassphrase)),
            taggedTransaction
          });
          return txSignature.toXDR();
        }
        /**
         * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.
         * @returns {xdr.TransactionEnvelope}
         */
      }, {
        key: "toEnvelope",
        value: function toEnvelope() {
          var envelope = new _xdr["default"].FeeBumpTransactionEnvelope({
            tx: _xdr["default"].FeeBumpTransaction.fromXDR(this.tx.toXDR()),
            // make a copy of the tx
            signatures: this.signatures.slice()
            // make a copy of the signatures
          });
          return new _xdr["default"].TransactionEnvelope.envelopeTypeTxFeeBump(envelope);
        }
      }]);
    }(_transaction_base.TransactionBase);
  }
});

// node_modules/@stellar/stellar-base/lib/account.js
var require_account = __commonJS({
  "node_modules/@stellar/stellar-base/lib/account.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Account = void 0;
    var _bignumber = _interopRequireDefault(require_bignumber2());
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Account = exports.Account = function() {
      function Account2(accountId, sequence) {
        _classCallCheck(this, Account2);
        if (_strkey.StrKey.isValidMed25519PublicKey(accountId)) {
          throw new Error("accountId is an M-address; use MuxedAccount instead");
        }
        if (!_strkey.StrKey.isValidEd25519PublicKey(accountId)) {
          throw new Error("accountId is invalid");
        }
        if (!(typeof sequence === "string")) {
          throw new Error("sequence must be of type string");
        }
        this._accountId = accountId;
        this.sequence = new _bignumber["default"](sequence);
      }
      return _createClass(Account2, [{
        key: "accountId",
        value: function accountId() {
          return this._accountId;
        }
        /**
         * @returns {string}  sequence number for the account as a string
         */
      }, {
        key: "sequenceNumber",
        value: function sequenceNumber() {
          return this.sequence.toString();
        }
        /**
         * Increments sequence number in this object by one.
         * @returns {void}
         */
      }, {
        key: "incrementSequenceNumber",
        value: function incrementSequenceNumber() {
          this.sequence = this.sequence.plus(1);
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/muxed_account.js
var require_muxed_account = __commonJS({
  "node_modules/@stellar/stellar-base/lib/muxed_account.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MuxedAccount = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _account = require_account();
    var _strkey = require_strkey();
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var MuxedAccount = exports.MuxedAccount = function() {
      function MuxedAccount2(baseAccount, id) {
        _classCallCheck(this, MuxedAccount2);
        var accountId = baseAccount.accountId();
        if (!_strkey.StrKey.isValidEd25519PublicKey(accountId)) {
          throw new Error("accountId is invalid");
        }
        this.account = baseAccount;
        this._muxedXdr = (0, _decode_encode_muxed_account.encodeMuxedAccount)(accountId, id);
        this._mAddress = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(this._muxedXdr);
        this._id = id;
      }
      return _createClass(MuxedAccount2, [{
        key: "baseAccount",
        value: (
          /**
           * @return {Account} the underlying account object shared among all muxed
           *     accounts with this Stellar address
           */
          function baseAccount() {
            return this.account;
          }
        )
        /**
         * @return {string} the M-address representing this account's (G-address, ID)
         */
      }, {
        key: "accountId",
        value: function accountId() {
          return this._mAddress;
        }
      }, {
        key: "id",
        value: function id() {
          return this._id;
        }
      }, {
        key: "setId",
        value: function setId(id) {
          if (typeof id !== "string") {
            throw new Error("id should be a string representing a number (uint64)");
          }
          this._muxedXdr.med25519().id(_xdr["default"].Uint64.fromString(id));
          this._mAddress = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(this._muxedXdr);
          this._id = id;
          return this;
        }
        /**
         * Accesses the underlying account's sequence number.
         * @return {string}  strigified sequence number for the underlying account
         */
      }, {
        key: "sequenceNumber",
        value: function sequenceNumber() {
          return this.account.sequenceNumber();
        }
        /**
         * Increments the underlying account's sequence number by one.
         * @return {void}
         */
      }, {
        key: "incrementSequenceNumber",
        value: function incrementSequenceNumber() {
          return this.account.incrementSequenceNumber();
        }
        /**
         * @return {xdr.MuxedAccount} the XDR object representing this muxed account's
         *     G-address and uint64 ID
         */
      }, {
        key: "toXDRObject",
        value: function toXDRObject() {
          return this._muxedXdr;
        }
      }, {
        key: "equals",
        value: function equals(otherMuxedAccount) {
          return this.accountId() === otherMuxedAccount.accountId();
        }
      }], [{
        key: "fromAddress",
        value: function fromAddress(mAddress, sequenceNum) {
          var muxedAccount = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(mAddress);
          var gAddress = (0, _decode_encode_muxed_account.extractBaseAddress)(mAddress);
          var id = muxedAccount.med25519().id().toString();
          return new MuxedAccount2(new _account.Account(gAddress, sequenceNum), id);
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/sorobandata_builder.js
var require_sorobandata_builder = __commonJS({
  "node_modules/@stellar/stellar-base/lib/sorobandata_builder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SorobanDataBuilder = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var SorobanDataBuilder = exports.SorobanDataBuilder = function() {
      function SorobanDataBuilder2(sorobanData) {
        _classCallCheck(this, SorobanDataBuilder2);
        _defineProperty(this, "_data", void 0);
        var data;
        if (!sorobanData) {
          data = new _xdr["default"].SorobanTransactionData({
            resources: new _xdr["default"].SorobanResources({
              footprint: new _xdr["default"].LedgerFootprint({
                readOnly: [],
                readWrite: []
              }),
              instructions: 0,
              readBytes: 0,
              writeBytes: 0
            }),
            ext: new _xdr["default"].ExtensionPoint(0),
            resourceFee: new _xdr["default"].Int64(0)
          });
        } else if (typeof sorobanData === "string" || ArrayBuffer.isView(sorobanData)) {
          data = SorobanDataBuilder2.fromXDR(sorobanData);
        } else {
          data = SorobanDataBuilder2.fromXDR(sorobanData.toXDR());
        }
        this._data = data;
      }
      return _createClass(SorobanDataBuilder2, [{
        key: "setResourceFee",
        value: (
          /**
           * Sets the resource fee portion of the Soroban data.
           * @param {number | bigint | string} fee  the resource fee to set (int64)
           * @returns {SorobanDataBuilder}
           */
          function setResourceFee(fee) {
            this._data.resourceFee(new _xdr["default"].Int64(fee));
            return this;
          }
        )
        /**
         * Sets up the resource metrics.
         *
         * You should almost NEVER need this, as its often generated / provided to you
         * by transaction simulation/preflight from a Soroban RPC server.
         *
         * @param {number} cpuInstrs      number of CPU instructions
         * @param {number} readBytes      number of bytes being read
         * @param {number} writeBytes     number of bytes being written
         *
         * @returns {SorobanDataBuilder}
         */
      }, {
        key: "setResources",
        value: function setResources(cpuInstrs, readBytes, writeBytes) {
          this._data.resources().instructions(cpuInstrs);
          this._data.resources().readBytes(readBytes);
          this._data.resources().writeBytes(writeBytes);
          return this;
        }
        /**
         * Appends the given ledger keys to the existing storage access footprint.
         * @param {xdr.LedgerKey[]} readOnly   read-only keys to add
         * @param {xdr.LedgerKey[]} readWrite  read-write keys to add
         * @returns {SorobanDataBuilder} this builder instance
         */
      }, {
        key: "appendFootprint",
        value: function appendFootprint(readOnly, readWrite) {
          return this.setFootprint(this.getReadOnly().concat(readOnly), this.getReadWrite().concat(readWrite));
        }
        /**
         * Sets the storage access footprint to be a certain set of ledger keys.
         *
         * You can also set each field explicitly via
         * {@link SorobanDataBuilder.setReadOnly} and
         * {@link SorobanDataBuilder.setReadWrite} or add to the existing footprint
         * via {@link SorobanDataBuilder.appendFootprint}.
         *
         * Passing `null|undefined` to either parameter will IGNORE the existing
         * values. If you want to clear them, pass `[]`, instead.
         *
         * @param {xdr.LedgerKey[]|null} [readOnly]   the set of ledger keys to set in
         *    the read-only portion of the transaction's `sorobanData`, or `null |
         *    undefined` to keep the existing keys
         * @param {xdr.LedgerKey[]|null} [readWrite]  the set of ledger keys to set in
         *    the read-write portion of the transaction's `sorobanData`, or `null |
         *    undefined` to keep the existing keys
         * @returns {SorobanDataBuilder} this builder instance
         */
      }, {
        key: "setFootprint",
        value: function setFootprint(readOnly, readWrite) {
          if (readOnly !== null) {
            this.setReadOnly(readOnly);
          }
          if (readWrite !== null) {
            this.setReadWrite(readWrite);
          }
          return this;
        }
        /**
         * @param {xdr.LedgerKey[]} readOnly  read-only keys in the access footprint
         * @returns {SorobanDataBuilder}
         */
      }, {
        key: "setReadOnly",
        value: function setReadOnly(readOnly) {
          this._data.resources().footprint().readOnly(readOnly !== null && readOnly !== void 0 ? readOnly : []);
          return this;
        }
        /**
         * @param {xdr.LedgerKey[]} readWrite  read-write keys in the access footprint
         * @returns {SorobanDataBuilder}
         */
      }, {
        key: "setReadWrite",
        value: function setReadWrite(readWrite) {
          this._data.resources().footprint().readWrite(readWrite !== null && readWrite !== void 0 ? readWrite : []);
          return this;
        }
        /**
         * @returns {xdr.SorobanTransactionData} a copy of the final data structure
         */
      }, {
        key: "build",
        value: function build() {
          return _xdr["default"].SorobanTransactionData.fromXDR(this._data.toXDR());
        }
        //
        // getters follow
        //
        /** @returns {xdr.LedgerKey[]} the read-only storage access pattern */
      }, {
        key: "getReadOnly",
        value: function getReadOnly() {
          return this.getFootprint().readOnly();
        }
        /** @returns {xdr.LedgerKey[]} the read-write storage access pattern */
      }, {
        key: "getReadWrite",
        value: function getReadWrite() {
          return this.getFootprint().readWrite();
        }
        /** @returns {xdr.LedgerFootprint} the storage access pattern */
      }, {
        key: "getFootprint",
        value: function getFootprint() {
          return this._data.resources().footprint();
        }
      }], [{
        key: "fromXDR",
        value: function fromXDR(data) {
          return _xdr["default"].SorobanTransactionData.fromXDR(data, typeof data === "string" ? "base64" : "raw");
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/signerkey.js
var require_signerkey = __commonJS({
  "node_modules/@stellar/stellar-base/lib/signerkey.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SignerKey = void 0;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var SignerKey = exports.SignerKey = function() {
      function SignerKey2() {
        _classCallCheck(this, SignerKey2);
      }
      return _createClass(SignerKey2, null, [{
        key: "decodeAddress",
        value: (
          /**
           * Decodes a StrKey address into an xdr.SignerKey instance.
           *
           * Only ED25519 public keys (G...), pre-auth transactions (T...), hashes
           * (H...), and signed payloads (P...) can be signer keys.
           *
           * @param   {string} address  a StrKey-encoded signer address
           * @returns {xdr.SignerKey}
           */
          function decodeAddress(address) {
            var signerKeyMap = {
              ed25519PublicKey: _xdr["default"].SignerKey.signerKeyTypeEd25519,
              preAuthTx: _xdr["default"].SignerKey.signerKeyTypePreAuthTx,
              sha256Hash: _xdr["default"].SignerKey.signerKeyTypeHashX,
              signedPayload: _xdr["default"].SignerKey.signerKeyTypeEd25519SignedPayload
            };
            var vb = _strkey.StrKey.getVersionByteForPrefix(address);
            var encoder = signerKeyMap[vb];
            if (!encoder) {
              throw new Error("invalid signer key type (".concat(vb, ")"));
            }
            var raw = (0, _strkey.decodeCheck)(vb, address);
            switch (vb) {
              case "signedPayload":
                return encoder(new _xdr["default"].SignerKeyEd25519SignedPayload({
                  ed25519: raw.slice(0, 32),
                  payload: raw.slice(32 + 4)
                }));
              case "ed25519PublicKey":
              case "preAuthTx":
              case "sha256Hash":
              default:
                return encoder(raw);
            }
          }
        )
        /**
         * Encodes a signer key into its StrKey equivalent.
         *
         * @param   {xdr.SignerKey} signerKey   the signer
         * @returns {string} the StrKey representation of the signer
         */
      }, {
        key: "encodeSignerKey",
        value: function encodeSignerKey(signerKey) {
          var strkeyType;
          var raw;
          switch (signerKey["switch"]()) {
            case _xdr["default"].SignerKeyType.signerKeyTypeEd25519():
              strkeyType = "ed25519PublicKey";
              raw = signerKey.value();
              break;
            case _xdr["default"].SignerKeyType.signerKeyTypePreAuthTx():
              strkeyType = "preAuthTx";
              raw = signerKey.value();
              break;
            case _xdr["default"].SignerKeyType.signerKeyTypeHashX():
              strkeyType = "sha256Hash";
              raw = signerKey.value();
              break;
            case _xdr["default"].SignerKeyType.signerKeyTypeEd25519SignedPayload():
              strkeyType = "signedPayload";
              raw = signerKey.ed25519SignedPayload().toXDR("raw");
              break;
            default:
              throw new Error("invalid SignerKey (type: ".concat(signerKey["switch"](), ")"));
          }
          return (0, _strkey.encodeCheck)(strkeyType, raw);
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/transaction_builder.js
var require_transaction_builder = __commonJS({
  "node_modules/@stellar/stellar-base/lib/transaction_builder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TransactionBuilder = exports.TimeoutInfinite = exports.BASE_FEE = void 0;
    exports.isValidDate = isValidDate;
    var _jsXdr = require_xdr();
    var _bignumber = _interopRequireDefault(require_bignumber2());
    var _xdr = _interopRequireDefault(require_xdr2());
    var _account = require_account();
    var _muxed_account = require_muxed_account();
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    var _transaction = require_transaction();
    var _fee_bump_transaction = require_fee_bump_transaction();
    var _sorobandata_builder = require_sorobandata_builder();
    var _strkey = require_strkey();
    var _signerkey = require_signerkey();
    var _memo = require_memo();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _toConsumableArray(r3) {
      return _arrayWithoutHoles(r3) || _iterableToArray(r3) || _unsupportedIterableToArray(r3) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _iterableToArray(r3) {
      if ("undefined" != typeof Symbol && null != r3[Symbol.iterator] || null != r3["@@iterator"]) return Array.from(r3);
    }
    function _arrayWithoutHoles(r3) {
      if (Array.isArray(r3)) return _arrayLikeToArray(r3);
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var BASE_FEE = exports.BASE_FEE = "100";
    var TimeoutInfinite = exports.TimeoutInfinite = 0;
    var TransactionBuilder2 = exports.TransactionBuilder = function() {
      function TransactionBuilder3(sourceAccount) {
        var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck(this, TransactionBuilder3);
        if (!sourceAccount) {
          throw new Error("must specify source account for the transaction");
        }
        if (opts.fee === void 0) {
          throw new Error("must specify fee for the transaction (in stroops)");
        }
        this.source = sourceAccount;
        this.operations = [];
        this.baseFee = opts.fee;
        this.timebounds = opts.timebounds ? _objectSpread({}, opts.timebounds) : null;
        this.ledgerbounds = opts.ledgerbounds ? _objectSpread({}, opts.ledgerbounds) : null;
        this.minAccountSequence = opts.minAccountSequence || null;
        this.minAccountSequenceAge = opts.minAccountSequenceAge || null;
        this.minAccountSequenceLedgerGap = opts.minAccountSequenceLedgerGap || null;
        this.extraSigners = opts.extraSigners ? _toConsumableArray(opts.extraSigners) : null;
        this.memo = opts.memo || _memo.Memo.none();
        this.networkPassphrase = opts.networkPassphrase || null;
        this.sorobanData = opts.sorobanData ? new _sorobandata_builder.SorobanDataBuilder(opts.sorobanData).build() : null;
      }
      return _createClass(TransactionBuilder3, [{
        key: "addOperation",
        value: (
          /**
           * Adds an operation to the transaction.
           *
           * @param {xdr.Operation} operation   The xdr operation object, use {@link
           *     Operation} static methods.
           *
           * @returns {TransactionBuilder}
           */
          function addOperation(operation) {
            this.operations.push(operation);
            return this;
          }
        )
        /**
         * Adds an operation to the transaction at a specific index.
         *
         * @param {xdr.Operation} operation - The xdr operation object to add, use {@link Operation} static methods.
         * @param {number} index - The index at which to insert the operation.
         *
         * @returns {TransactionBuilder} - The TransactionBuilder instance for method chaining.
         */
      }, {
        key: "addOperationAt",
        value: function addOperationAt(operation, index) {
          this.operations.splice(index, 0, operation);
          return this;
        }
        /**
         * Removes the operations from the builder (useful when cloning).
         * @returns {TransactionBuilder} this builder instance
         */
      }, {
        key: "clearOperations",
        value: function clearOperations() {
          this.operations = [];
          return this;
        }
        /**
         * Removes the operation at the specified index from the transaction.
         *
         * @param {number} index - The index of the operation to remove.
         *
         * @returns {TransactionBuilder} The TransactionBuilder instance for method chaining.
         */
      }, {
        key: "clearOperationAt",
        value: function clearOperationAt(index) {
          this.operations.splice(index, 1);
          return this;
        }
        /**
         * Adds a memo to the transaction.
         * @param {Memo} memo {@link Memo} object
         * @returns {TransactionBuilder}
         */
      }, {
        key: "addMemo",
        value: function addMemo(memo) {
          this.memo = memo;
          return this;
        }
        /**
         * Sets a timeout precondition on the transaction.
         *
         *  Because of the distributed nature of the Stellar network it is possible
         *  that the status of your transaction will be determined after a long time
         *  if the network is highly congested. If you want to be sure to receive the
         *  status of the transaction within a given period you should set the {@link
         *  TimeBounds} with `maxTime` on the transaction (this is what `setTimeout`
         *  does internally; if there's `minTime` set but no `maxTime` it will be
         *  added).
         *
         *  A call to `TransactionBuilder.setTimeout` is **required** if Transaction
         *  does not have `max_time` set. If you don't want to set timeout, use
         *  `{@link TimeoutInfinite}`. In general you should set `{@link
         *  TimeoutInfinite}` only in smart contracts.
         *
         *  Please note that Horizon may still return <code>504 Gateway Timeout</code>
         *  error, even for short timeouts. In such case you need to resubmit the same
         *  transaction again without making any changes to receive a status. This
         *  method is using the machine system time (UTC), make sure it is set
         *  correctly.
         *
         * @param {number} timeoutSeconds   Number of seconds the transaction is good.
         *     Can't be negative. If the value is {@link TimeoutInfinite}, the
         *     transaction is good indefinitely.
         *
         * @returns {TransactionBuilder}
         *
         * @see {@link TimeoutInfinite}
         * @see https://developers.stellar.org/docs/tutorials/handling-errors/
         */
      }, {
        key: "setTimeout",
        value: function setTimeout2(timeoutSeconds) {
          if (this.timebounds !== null && this.timebounds.maxTime > 0) {
            throw new Error("TimeBounds.max_time has been already set - setting timeout would overwrite it.");
          }
          if (timeoutSeconds < 0) {
            throw new Error("timeout cannot be negative");
          }
          if (timeoutSeconds > 0) {
            var timeoutTimestamp = Math.floor(Date.now() / 1e3) + timeoutSeconds;
            if (this.timebounds === null) {
              this.timebounds = {
                minTime: 0,
                maxTime: timeoutTimestamp
              };
            } else {
              this.timebounds = {
                minTime: this.timebounds.minTime,
                maxTime: timeoutTimestamp
              };
            }
          } else {
            this.timebounds = {
              minTime: 0,
              maxTime: 0
            };
          }
          return this;
        }
        /**
         * If you want to prepare a transaction which will become valid at some point
         * in the future, or be invalid after some time, you can set a timebounds
         * precondition. Internally this will set the `minTime`, and `maxTime`
         * preconditions. Conflicts with `setTimeout`, so use one or the other.
         *
         * @param {Date|number} minEpochOrDate  Either a JS Date object, or a number
         *     of UNIX epoch seconds. The transaction is valid after this timestamp.
         *     Can't be negative. If the value is `0`, the transaction is valid
         *     immediately.
         * @param {Date|number} maxEpochOrDate  Either a JS Date object, or a number
         *     of UNIX epoch seconds. The transaction is valid until this timestamp.
         *     Can't be negative. If the value is `0`, the transaction is valid
         *     indefinitely.
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setTimebounds",
        value: function setTimebounds(minEpochOrDate, maxEpochOrDate) {
          if (typeof minEpochOrDate === "number") {
            minEpochOrDate = new Date(minEpochOrDate * 1e3);
          }
          if (typeof maxEpochOrDate === "number") {
            maxEpochOrDate = new Date(maxEpochOrDate * 1e3);
          }
          if (this.timebounds !== null) {
            throw new Error("TimeBounds has been already set - setting timebounds would overwrite it.");
          }
          var minTime = Math.floor(minEpochOrDate.valueOf() / 1e3);
          var maxTime = Math.floor(maxEpochOrDate.valueOf() / 1e3);
          if (minTime < 0) {
            throw new Error("min_time cannot be negative");
          }
          if (maxTime < 0) {
            throw new Error("max_time cannot be negative");
          }
          if (maxTime > 0 && minTime > maxTime) {
            throw new Error("min_time cannot be greater than max_time");
          }
          this.timebounds = {
            minTime,
            maxTime
          };
          return this;
        }
        /**
         * If you want to prepare a transaction which will only be valid within some
         * range of ledgers, you can set a ledgerbounds precondition.
         * Internally this will set the `minLedger` and `maxLedger` preconditions.
         *
         * @param {number} minLedger  The minimum ledger this transaction is valid at
         *     or after. Cannot be negative. If the value is `0` (the default), the
         *     transaction is valid immediately.
         *
         * @param {number} maxLedger  The maximum ledger this transaction is valid
         *     before. Cannot be negative. If the value is `0`, the transaction is
         *     valid indefinitely.
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setLedgerbounds",
        value: function setLedgerbounds(minLedger, maxLedger) {
          if (this.ledgerbounds !== null) {
            throw new Error("LedgerBounds has been already set - setting ledgerbounds would overwrite it.");
          }
          if (minLedger < 0) {
            throw new Error("min_ledger cannot be negative");
          }
          if (maxLedger < 0) {
            throw new Error("max_ledger cannot be negative");
          }
          if (maxLedger > 0 && minLedger > maxLedger) {
            throw new Error("min_ledger cannot be greater than max_ledger");
          }
          this.ledgerbounds = {
            minLedger,
            maxLedger
          };
          return this;
        }
        /**
         * If you want to prepare a transaction which will be valid only while the
         * account sequence number is
         *
         *     minAccountSequence <= sourceAccountSequence < tx.seqNum
         *
         * Note that after execution the account's sequence number is always raised to
         * `tx.seqNum`. Internally this will set the `minAccountSequence`
         * precondition.
         *
         * @param {string} minAccountSequence   The minimum source account sequence
         *     number this transaction is valid for. If the value is `0` (the
         *     default), the transaction is valid when `sourceAccount's sequence
         *     number == tx.seqNum- 1`.
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setMinAccountSequence",
        value: function setMinAccountSequence(minAccountSequence) {
          if (this.minAccountSequence !== null) {
            throw new Error("min_account_sequence has been already set - setting min_account_sequence would overwrite it.");
          }
          this.minAccountSequence = minAccountSequence;
          return this;
        }
        /**
         * For the transaction to be valid, the current ledger time must be at least
         * `minAccountSequenceAge` greater than sourceAccount's `sequenceTime`.
         * Internally this will set the `minAccountSequenceAge` precondition.
         *
         * @param {number} durationInSeconds  The minimum amount of time between
         *     source account sequence time and the ledger time when this transaction
         *     will become valid. If the value is `0`, the transaction is unrestricted
         *     by the account sequence age. Cannot be negative.
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setMinAccountSequenceAge",
        value: function setMinAccountSequenceAge(durationInSeconds) {
          if (typeof durationInSeconds !== "number") {
            throw new Error("min_account_sequence_age must be a number");
          }
          if (this.minAccountSequenceAge !== null) {
            throw new Error("min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.");
          }
          if (durationInSeconds < 0) {
            throw new Error("min_account_sequence_age cannot be negative");
          }
          this.minAccountSequenceAge = durationInSeconds;
          return this;
        }
        /**
         * For the transaction to be valid, the current ledger number must be at least
         * `minAccountSequenceLedgerGap` greater than sourceAccount's ledger sequence.
         * Internally this will set the `minAccountSequenceLedgerGap` precondition.
         *
         * @param {number} gap  The minimum number of ledgers between source account
         *     sequence and the ledger number when this transaction will become valid.
         *     If the value is `0`, the transaction is unrestricted by the account
         *     sequence ledger. Cannot be negative.
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setMinAccountSequenceLedgerGap",
        value: function setMinAccountSequenceLedgerGap(gap) {
          if (this.minAccountSequenceLedgerGap !== null) {
            throw new Error("min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.");
          }
          if (gap < 0) {
            throw new Error("min_account_sequence_ledger_gap cannot be negative");
          }
          this.minAccountSequenceLedgerGap = gap;
          return this;
        }
        /**
         * For the transaction to be valid, there must be a signature corresponding to
         * every Signer in this array, even if the signature is not otherwise required
         * by the sourceAccount or operations. Internally this will set the
         * `extraSigners` precondition.
         *
         * @param {string[]} extraSigners   required extra signers (as {@link StrKey}s)
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setExtraSigners",
        value: function setExtraSigners(extraSigners) {
          if (!Array.isArray(extraSigners)) {
            throw new Error("extra_signers must be an array of strings.");
          }
          if (this.extraSigners !== null) {
            throw new Error("extra_signers has been already set - setting extra_signers would overwrite it.");
          }
          if (extraSigners.length > 2) {
            throw new Error("extra_signers cannot be longer than 2 elements.");
          }
          this.extraSigners = _toConsumableArray(extraSigners);
          return this;
        }
        /**
         * Set network nassphrase for the Transaction that will be built.
         *
         * @param {string} networkPassphrase    passphrase of the target Stellar
         *     network (e.g. "Public Global Stellar Network ; September 2015").
         *
         * @returns {TransactionBuilder}
         */
      }, {
        key: "setNetworkPassphrase",
        value: function setNetworkPassphrase(networkPassphrase) {
          this.networkPassphrase = networkPassphrase;
          return this;
        }
        /**
         * Sets the transaction's internal Soroban transaction data (resources,
         * footprint, etc.).
         *
         * For non-contract(non-Soroban) transactions, this setting has no effect. In
         * the case of Soroban transactions, this is either an instance of
         * {@link xdr.SorobanTransactionData} or a base64-encoded string of said
         * structure. This is usually obtained from the simulation response based on a
         * transaction with a Soroban operation (e.g.
         * {@link Operation.invokeHostFunction}, providing necessary resource
         * and storage footprint estimations for contract invocation.
         *
         * @param {xdr.SorobanTransactionData | string} sorobanData    the
         *    {@link xdr.SorobanTransactionData} as a raw xdr object or a base64
         *    string to be decoded
         *
         * @returns {TransactionBuilder}
         * @see {SorobanDataBuilder}
         */
      }, {
        key: "setSorobanData",
        value: function setSorobanData(sorobanData) {
          this.sorobanData = new _sorobandata_builder.SorobanDataBuilder(sorobanData).build();
          return this;
        }
        /**
         * This will build the transaction.
         * It will also increment the source account's sequence number by 1.
         * @returns {Transaction} This method will return the built {@link Transaction}.
         */
      }, {
        key: "build",
        value: function build() {
          var sequenceNumber = new _bignumber["default"](this.source.sequenceNumber()).plus(1);
          var fee = new _bignumber["default"](this.baseFee).times(this.operations.length).toNumber();
          var attrs = {
            fee,
            seqNum: _xdr["default"].SequenceNumber.fromString(sequenceNumber.toString()),
            memo: this.memo ? this.memo.toXDRObject() : null
          };
          if (this.timebounds === null || typeof this.timebounds.minTime === "undefined" || typeof this.timebounds.maxTime === "undefined") {
            throw new Error("TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).");
          }
          if (isValidDate(this.timebounds.minTime)) {
            this.timebounds.minTime = this.timebounds.minTime.getTime() / 1e3;
          }
          if (isValidDate(this.timebounds.maxTime)) {
            this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1e3;
          }
          this.timebounds.minTime = _jsXdr.UnsignedHyper.fromString(this.timebounds.minTime.toString());
          this.timebounds.maxTime = _jsXdr.UnsignedHyper.fromString(this.timebounds.maxTime.toString());
          var timeBounds = new _xdr["default"].TimeBounds(this.timebounds);
          if (this.hasV2Preconditions()) {
            var ledgerBounds = null;
            if (this.ledgerbounds !== null) {
              ledgerBounds = new _xdr["default"].LedgerBounds(this.ledgerbounds);
            }
            var minSeqNum = this.minAccountSequence || "0";
            minSeqNum = _xdr["default"].SequenceNumber.fromString(minSeqNum);
            var minSeqAge = _jsXdr.UnsignedHyper.fromString(this.minAccountSequenceAge !== null ? this.minAccountSequenceAge.toString() : "0");
            var minSeqLedgerGap = this.minAccountSequenceLedgerGap || 0;
            var extraSigners = this.extraSigners !== null ? this.extraSigners.map(_signerkey.SignerKey.decodeAddress) : [];
            attrs.cond = _xdr["default"].Preconditions.precondV2(new _xdr["default"].PreconditionsV2({
              timeBounds,
              ledgerBounds,
              minSeqNum,
              minSeqAge,
              minSeqLedgerGap,
              extraSigners
            }));
          } else {
            attrs.cond = _xdr["default"].Preconditions.precondTime(timeBounds);
          }
          attrs.sourceAccount = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(this.source.accountId());
          if (this.sorobanData) {
            attrs.ext = new _xdr["default"].TransactionExt(1, this.sorobanData);
          } else {
            attrs.ext = new _xdr["default"].TransactionExt(0, _xdr["default"].Void);
          }
          var xtx = new _xdr["default"].Transaction(attrs);
          xtx.operations(this.operations);
          var txEnvelope = new _xdr["default"].TransactionEnvelope.envelopeTypeTx(new _xdr["default"].TransactionV1Envelope({
            tx: xtx
          }));
          var tx = new _transaction.Transaction(txEnvelope, this.networkPassphrase);
          this.source.incrementSequenceNumber();
          return tx;
        }
      }, {
        key: "hasV2Preconditions",
        value: function hasV2Preconditions() {
          return this.ledgerbounds !== null || this.minAccountSequence !== null || this.minAccountSequenceAge !== null || this.minAccountSequenceLedgerGap !== null || this.extraSigners !== null && this.extraSigners.length > 0;
        }
        /**
         * Builds a {@link FeeBumpTransaction}, enabling you to resubmit an existing
         * transaction with a higher fee.
         *
         * @param {Keypair|string}  feeSource - account paying for the transaction,
         *     in the form of either a Keypair (only the public key is used) or
         *     an account ID (in G... or M... form, but refer to `withMuxing`)
         * @param {string}          baseFee   - max fee willing to pay per operation
         *     in inner transaction (**in stroops**)
         * @param {Transaction}     innerTx   - {@link Transaction} to be bumped by
         *     the fee bump transaction
         * @param {string}          networkPassphrase - passphrase of the target
         *     Stellar network (e.g. "Public Global Stellar Network ; September 2015",
         *     see {@link Networks})
         *
         * @todo Alongside the next major version bump, this type signature can be
         *       changed to be less awkward: accept a MuxedAccount as the `feeSource`
         *       rather than a keypair or string.
         *
         * @note Your fee-bump amount should be >= 10x the original fee.
         * @see  https://developers.stellar.org/docs/glossary/fee-bumps/#replace-by-fee
         *
         * @returns {FeeBumpTransaction}
         */
      }], [{
        key: "cloneFrom",
        value: function cloneFrom(tx) {
          var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (!(tx instanceof _transaction.Transaction)) {
            throw new TypeError("expected a 'Transaction', got: ".concat(tx));
          }
          var sequenceNum = (BigInt(tx.sequence) - 1n).toString();
          var source;
          if (_strkey.StrKey.isValidMed25519PublicKey(tx.source)) {
            source = _muxed_account.MuxedAccount.fromAddress(tx.source, sequenceNum);
          } else if (_strkey.StrKey.isValidEd25519PublicKey(tx.source)) {
            source = new _account.Account(tx.source, sequenceNum);
          } else {
            throw new TypeError("unsupported tx source account: ".concat(tx.source));
          }
          var unscaledFee = parseInt(tx.fee, 10) / tx.operations.length;
          var builder = new TransactionBuilder3(source, _objectSpread({
            fee: (unscaledFee || BASE_FEE).toString(),
            memo: tx.memo,
            networkPassphrase: tx.networkPassphrase,
            timebounds: tx.timeBounds,
            ledgerbounds: tx.ledgerBounds,
            minAccountSequence: tx.minAccountSequence,
            minAccountSequenceAge: tx.minAccountSequenceAge,
            minAccountSequenceLedgerGap: tx.minAccountSequenceLedgerGap,
            extraSigners: tx.extraSigners
          }, opts));
          tx._tx.operations().forEach(function(op) {
            return builder.addOperation(op);
          });
          return builder;
        }
      }, {
        key: "buildFeeBumpTransaction",
        value: function buildFeeBumpTransaction(feeSource, baseFee, innerTx, networkPassphrase) {
          var innerOps = innerTx.operations.length;
          var innerBaseFeeRate = new _bignumber["default"](innerTx.fee).div(innerOps);
          var base = new _bignumber["default"](baseFee);
          if (base.lt(innerBaseFeeRate)) {
            throw new Error("Invalid baseFee, it should be at least ".concat(innerBaseFeeRate, " stroops."));
          }
          var minBaseFee = new _bignumber["default"](BASE_FEE);
          if (base.lt(minBaseFee)) {
            throw new Error("Invalid baseFee, it should be at least ".concat(minBaseFee, " stroops."));
          }
          var innerTxEnvelope = innerTx.toEnvelope();
          if (innerTxEnvelope["switch"]() === _xdr["default"].EnvelopeType.envelopeTypeTxV0()) {
            var v0Tx = innerTxEnvelope.v0().tx();
            var v1Tx = new _xdr["default"].Transaction({
              sourceAccount: new _xdr["default"].MuxedAccount.keyTypeEd25519(v0Tx.sourceAccountEd25519()),
              fee: v0Tx.fee(),
              seqNum: v0Tx.seqNum(),
              cond: _xdr["default"].Preconditions.precondTime(v0Tx.timeBounds()),
              memo: v0Tx.memo(),
              operations: v0Tx.operations(),
              ext: new _xdr["default"].TransactionExt(0)
            });
            innerTxEnvelope = new _xdr["default"].TransactionEnvelope.envelopeTypeTx(new _xdr["default"].TransactionV1Envelope({
              tx: v1Tx,
              signatures: innerTxEnvelope.v0().signatures()
            }));
          }
          var feeSourceAccount;
          if (typeof feeSource === "string") {
            feeSourceAccount = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(feeSource);
          } else {
            feeSourceAccount = feeSource.xdrMuxedAccount();
          }
          var tx = new _xdr["default"].FeeBumpTransaction({
            feeSource: feeSourceAccount,
            fee: _xdr["default"].Int64.fromString(base.times(innerOps + 1).toString()),
            innerTx: _xdr["default"].FeeBumpTransactionInnerTx.envelopeTypeTx(innerTxEnvelope.v1()),
            ext: new _xdr["default"].FeeBumpTransactionExt(0)
          });
          var feeBumpTxEnvelope = new _xdr["default"].FeeBumpTransactionEnvelope({
            tx,
            signatures: []
          });
          var envelope = new _xdr["default"].TransactionEnvelope.envelopeTypeTxFeeBump(feeBumpTxEnvelope);
          return new _fee_bump_transaction.FeeBumpTransaction(envelope, networkPassphrase);
        }
        /**
         * Build a {@link Transaction} or {@link FeeBumpTransaction} from an
         * xdr.TransactionEnvelope.
         *
         * @param {string|xdr.TransactionEnvelope} envelope - The transaction envelope
         *     object or base64 encoded string.
         * @param {string} networkPassphrase - The network passphrase of the target
         *     Stellar network (e.g. "Public Global Stellar Network ; September
         *     2015"), see {@link Networks}.
         *
         * @returns {Transaction|FeeBumpTransaction}
         */
      }, {
        key: "fromXDR",
        value: function fromXDR(envelope, networkPassphrase) {
          if (typeof envelope === "string") {
            envelope = _xdr["default"].TransactionEnvelope.fromXDR(envelope, "base64");
          }
          if (envelope["switch"]() === _xdr["default"].EnvelopeType.envelopeTypeTxFeeBump()) {
            return new _fee_bump_transaction.FeeBumpTransaction(envelope, networkPassphrase);
          }
          return new _transaction.Transaction(envelope, networkPassphrase);
        }
      }]);
    }();
    function isValidDate(d) {
      return d instanceof Date && !isNaN(d);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/network.js
var require_network = __commonJS({
  "node_modules/@stellar/stellar-base/lib/network.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Networks = void 0;
    var Networks2 = exports.Networks = {
      PUBLIC: "Public Global Stellar Network ; September 2015",
      TESTNET: "Test SDF Network ; September 2015",
      FUTURENET: "Test SDF Future Network ; October 2022",
      SANDBOX: "Local Sandbox Stellar Network ; September 2022",
      STANDALONE: "Standalone Network ; February 2017"
    };
  }
});

// node_modules/@stellar/stellar-base/lib/soroban.js
var require_soroban = __commonJS({
  "node_modules/@stellar/stellar-base/lib/soroban.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Soroban = void 0;
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _toArray(r3) {
      return _arrayWithHoles(r3) || _iterableToArray(r3) || _unsupportedIterableToArray(r3) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _iterableToArray(r3) {
      if ("undefined" != typeof Symbol && null != r3[Symbol.iterator] || null != r3["@@iterator"]) return Array.from(r3);
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Soroban = exports.Soroban = function() {
      function Soroban2() {
        _classCallCheck(this, Soroban2);
      }
      return _createClass(Soroban2, null, [{
        key: "formatTokenAmount",
        value: (
          /**
           * Given a whole number smart contract amount of a token and an amount of
           * decimal places (if the token has any), it returns a "display" value.
           *
           * All arithmetic inside the contract is performed on integers to avoid
           * potential precision and consistency issues of floating-point.
           *
           * @param {string} amount   the token amount you want to display
           * @param {number} decimals specify how many decimal places a token has
           *
           * @returns {string} the display value
           * @throws {TypeError} if the given amount has a decimal point already
           * @example
           * formatTokenAmount("123000", 4) === "12.3";
           */
          function formatTokenAmount(amount, decimals) {
            if (amount.includes(".")) {
              throw new TypeError("No decimals are allowed");
            }
            var formatted = amount;
            if (decimals > 0) {
              if (decimals > formatted.length) {
                formatted = ["0", formatted.toString().padStart(decimals, "0")].join(".");
              } else {
                formatted = [formatted.slice(0, -decimals), formatted.slice(-decimals)].join(".");
              }
            }
            return formatted.replace(/(\.\d*?)0+$/, "$1");
          }
        )
        /**
         * Parse a token amount to use it on smart contract
         *
         * This function takes the display value and its decimals (if the token has
         * any) and returns a string that'll be used within the smart contract.
         *
         * @param {string} value      the token amount you want to use it on smart
         *    contract which you've been displaying in a UI
         * @param {number} decimals   the number of decimal places expected in the
         *    display value (different than the "actual" number, because suffix zeroes
         *    might not be present)
         *
         * @returns {string}  the whole number token amount represented by the display
         *    value with the decimal places shifted over
         *
         * @example
         * const displayValueAmount = "123.4560"
         * const parsedAmtForSmartContract = parseTokenAmount(displayValueAmount, 5);
         * parsedAmtForSmartContract === "12345600"
         */
      }, {
        key: "parseTokenAmount",
        value: function parseTokenAmount(value, decimals) {
          var _fraction$padEnd;
          var _value$split$slice = value.split(".").slice(), _value$split$slice2 = _toArray(_value$split$slice), whole = _value$split$slice2[0], fraction = _value$split$slice2[1], rest = _value$split$slice2.slice(2);
          if (rest.length) {
            throw new Error("Invalid decimal value: ".concat(value));
          }
          var shifted = BigInt(whole + ((_fraction$padEnd = fraction === null || fraction === void 0 ? void 0 : fraction.padEnd(decimals, "0")) !== null && _fraction$padEnd !== void 0 ? _fraction$padEnd : "0".repeat(decimals)));
          return shifted.toString();
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/contract.js
var require_contract = __commonJS({
  "node_modules/@stellar/stellar-base/lib/contract.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Contract = void 0;
    var _address = require_address();
    var _operation = require_operation();
    var _xdr = _interopRequireDefault(require_xdr2());
    var _strkey = require_strkey();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Contract = exports.Contract = function() {
      function Contract2(contractId) {
        _classCallCheck(this, Contract2);
        try {
          this._id = _strkey.StrKey.decodeContract(contractId);
        } catch (_) {
          throw new Error("Invalid contract ID: ".concat(contractId));
        }
      }
      return _createClass(Contract2, [{
        key: "contractId",
        value: function contractId() {
          return _strkey.StrKey.encodeContract(this._id);
        }
        /** @returns {string} the ID as a strkey (C...) */
      }, {
        key: "toString",
        value: function toString() {
          return this.contractId();
        }
        /** @returns {Address} the wrapped address of this contract */
      }, {
        key: "address",
        value: function address() {
          return _address.Address.contract(this._id);
        }
        /**
         * Returns an operation that will invoke this contract call.
         *
         * @param {string}        method   name of the method to call
         * @param {...xdr.ScVal}  params   arguments to pass to the function call
         *
         * @returns {xdr.Operation}   an InvokeHostFunctionOp operation to call the
         *    contract with the given method and parameters
         *
         * @see Operation.invokeHostFunction
         * @see Operation.invokeContractFunction
         * @see Operation.createCustomContract
         * @see Operation.createStellarAssetContract
         * @see Operation.uploadContractWasm
         */
      }, {
        key: "call",
        value: function call(method) {
          for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            params[_key - 1] = arguments[_key];
          }
          return _operation.Operation.invokeContractFunction({
            contract: this.address().toString(),
            "function": method,
            args: params
          });
        }
        /**
         * Returns the read-only footprint entries necessary for any invocations to
         * this contract, for convenience when manually adding it to your
         * transaction's overall footprint or doing bump/restore operations.
         *
         * @returns {xdr.LedgerKey} the ledger key for the deployed contract instance
         */
      }, {
        key: "getFootprint",
        value: function getFootprint() {
          return _xdr["default"].LedgerKey.contractData(new _xdr["default"].LedgerKeyContractData({
            contract: this.address().toScAddress(),
            key: _xdr["default"].ScVal.scvLedgerKeyContractInstance(),
            durability: _xdr["default"].ContractDataDurability.persistent()
          }));
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/uint128.js
var require_uint128 = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/uint128.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Uint128 = void 0;
    var _jsXdr = require_xdr();
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var Uint128 = exports.Uint128 = function(_LargeInt) {
      function Uint1282() {
        _classCallCheck(this, Uint1282);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _callSuper(this, Uint1282, [args]);
      }
      _inherits(Uint1282, _LargeInt);
      return _createClass(Uint1282, [{
        key: "unsigned",
        get: function get() {
          return true;
        }
      }, {
        key: "size",
        get: function get() {
          return 128;
        }
      }]);
    }(_jsXdr.LargeInt);
    Uint128.defineIntBoundaries();
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/uint256.js
var require_uint256 = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/uint256.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Uint256 = void 0;
    var _jsXdr = require_xdr();
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var Uint256 = exports.Uint256 = function(_LargeInt) {
      function Uint2562() {
        _classCallCheck(this, Uint2562);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _callSuper(this, Uint2562, [args]);
      }
      _inherits(Uint2562, _LargeInt);
      return _createClass(Uint2562, [{
        key: "unsigned",
        get: function get() {
          return true;
        }
      }, {
        key: "size",
        get: function get() {
          return 256;
        }
      }]);
    }(_jsXdr.LargeInt);
    Uint256.defineIntBoundaries();
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/int128.js
var require_int128 = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/int128.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Int128 = void 0;
    var _jsXdr = require_xdr();
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var Int128 = exports.Int128 = function(_LargeInt) {
      function Int1282() {
        _classCallCheck(this, Int1282);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _callSuper(this, Int1282, [args]);
      }
      _inherits(Int1282, _LargeInt);
      return _createClass(Int1282, [{
        key: "unsigned",
        get: function get() {
          return false;
        }
      }, {
        key: "size",
        get: function get() {
          return 128;
        }
      }]);
    }(_jsXdr.LargeInt);
    Int128.defineIntBoundaries();
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/int256.js
var require_int256 = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/int256.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Int256 = void 0;
    var _jsXdr = require_xdr();
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var Int256 = exports.Int256 = function(_LargeInt) {
      function Int2562() {
        _classCallCheck(this, Int2562);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _callSuper(this, Int2562, [args]);
      }
      _inherits(Int2562, _LargeInt);
      return _createClass(Int2562, [{
        key: "unsigned",
        get: function get() {
          return false;
        }
      }, {
        key: "size",
        get: function get() {
          return 256;
        }
      }]);
    }(_jsXdr.LargeInt);
    Int256.defineIntBoundaries();
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/xdr_large_int.js
var require_xdr_large_int = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/xdr_large_int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.XdrLargeInt = void 0;
    var _jsXdr = require_xdr();
    var _uint = require_uint128();
    var _uint2 = require_uint256();
    var _int = require_int128();
    var _int2 = require_int256();
    var _xdr = _interopRequireDefault(require_xdr2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var XdrLargeInt = exports.XdrLargeInt = function() {
      function XdrLargeInt2(type, values) {
        _classCallCheck(this, XdrLargeInt2);
        _defineProperty(this, "int", void 0);
        _defineProperty(this, "type", void 0);
        if (!(values instanceof Array)) {
          values = [values];
        }
        values = values.map(function(i) {
          if (typeof i === "bigint") {
            return i;
          }
          if (i instanceof XdrLargeInt2) {
            return i.toBigInt();
          }
          return BigInt(i);
        });
        switch (type) {
          case "i64":
            this["int"] = new _jsXdr.Hyper(values);
            break;
          case "i128":
            this["int"] = new _int.Int128(values);
            break;
          case "i256":
            this["int"] = new _int2.Int256(values);
            break;
          case "u64":
            this["int"] = new _jsXdr.UnsignedHyper(values);
            break;
          case "u128":
            this["int"] = new _uint.Uint128(values);
            break;
          case "u256":
            this["int"] = new _uint2.Uint256(values);
            break;
          default:
            throw TypeError("invalid type: ".concat(type));
        }
        this.type = type;
      }
      return _createClass(XdrLargeInt2, [{
        key: "toNumber",
        value: function toNumber() {
          var bi = this["int"].toBigInt();
          if (bi > Number.MAX_SAFE_INTEGER || bi < Number.MIN_SAFE_INTEGER) {
            throw RangeError("value ".concat(bi, " not in range for Number ") + "[".concat(Number.MAX_SAFE_INTEGER, ", ").concat(Number.MIN_SAFE_INTEGER, "]"));
          }
          return Number(bi);
        }
        /** @returns {bigint} */
      }, {
        key: "toBigInt",
        value: function toBigInt() {
          return this["int"].toBigInt();
        }
        /** @returns {xdr.ScVal} the integer encoded with `ScValType = I64` */
      }, {
        key: "toI64",
        value: function toI64() {
          this._sizeCheck(64);
          var v = this.toBigInt();
          if (BigInt.asIntN(64, v) !== v) {
            throw RangeError("value too large for i64: ".concat(v));
          }
          return _xdr["default"].ScVal.scvI64(new _xdr["default"].Int64(v));
        }
        /** @returns {xdr.ScVal} the integer encoded with `ScValType = U64` */
      }, {
        key: "toU64",
        value: function toU64() {
          this._sizeCheck(64);
          return _xdr["default"].ScVal.scvU64(
            new _xdr["default"].Uint64(BigInt.asUintN(64, this.toBigInt()))
            // reiterpret as unsigned
          );
        }
        /**
         * @returns {xdr.ScVal} the integer encoded with `ScValType = I128`
         * @throws {RangeError} if the value cannot fit in 128 bits
         */
      }, {
        key: "toI128",
        value: function toI128() {
          this._sizeCheck(128);
          var v = this["int"].toBigInt();
          var hi64 = BigInt.asIntN(64, v >> 64n);
          var lo64 = BigInt.asUintN(64, v);
          return _xdr["default"].ScVal.scvI128(new _xdr["default"].Int128Parts({
            hi: new _xdr["default"].Int64(hi64),
            lo: new _xdr["default"].Uint64(lo64)
          }));
        }
        /**
         * @returns {xdr.ScVal} the integer encoded with `ScValType = U128`
         * @throws {RangeError} if the value cannot fit in 128 bits
         */
      }, {
        key: "toU128",
        value: function toU128() {
          this._sizeCheck(128);
          var v = this["int"].toBigInt();
          return _xdr["default"].ScVal.scvU128(new _xdr["default"].UInt128Parts({
            hi: new _xdr["default"].Uint64(BigInt.asUintN(64, v >> 64n)),
            lo: new _xdr["default"].Uint64(BigInt.asUintN(64, v))
          }));
        }
        /** @returns {xdr.ScVal} the integer encoded with `ScValType = I256` */
      }, {
        key: "toI256",
        value: function toI256() {
          var v = this["int"].toBigInt();
          var hiHi64 = BigInt.asIntN(64, v >> 192n);
          var hiLo64 = BigInt.asUintN(64, v >> 128n);
          var loHi64 = BigInt.asUintN(64, v >> 64n);
          var loLo64 = BigInt.asUintN(64, v);
          return _xdr["default"].ScVal.scvI256(new _xdr["default"].Int256Parts({
            hiHi: new _xdr["default"].Int64(hiHi64),
            hiLo: new _xdr["default"].Uint64(hiLo64),
            loHi: new _xdr["default"].Uint64(loHi64),
            loLo: new _xdr["default"].Uint64(loLo64)
          }));
        }
        /** @returns {xdr.ScVal} the integer encoded with `ScValType = U256` */
      }, {
        key: "toU256",
        value: function toU256() {
          var v = this["int"].toBigInt();
          var hiHi64 = BigInt.asUintN(64, v >> 192n);
          var hiLo64 = BigInt.asUintN(64, v >> 128n);
          var loHi64 = BigInt.asUintN(64, v >> 64n);
          var loLo64 = BigInt.asUintN(64, v);
          return _xdr["default"].ScVal.scvU256(new _xdr["default"].UInt256Parts({
            hiHi: new _xdr["default"].Uint64(hiHi64),
            hiLo: new _xdr["default"].Uint64(hiLo64),
            loHi: new _xdr["default"].Uint64(loHi64),
            loLo: new _xdr["default"].Uint64(loLo64)
          }));
        }
        /** @returns {xdr.ScVal} the smallest interpretation of the stored value */
      }, {
        key: "toScVal",
        value: function toScVal() {
          switch (this.type) {
            case "i64":
              return this.toI64();
            case "i128":
              return this.toI128();
            case "i256":
              return this.toI256();
            case "u64":
              return this.toU64();
            case "u128":
              return this.toU128();
            case "u256":
              return this.toU256();
            default:
              throw TypeError("invalid type: ".concat(this.type));
          }
        }
      }, {
        key: "valueOf",
        value: function valueOf() {
          return this["int"].valueOf();
        }
      }, {
        key: "toString",
        value: function toString() {
          return this["int"].toString();
        }
      }, {
        key: "toJSON",
        value: function toJSON() {
          return {
            value: this.toBigInt().toString(),
            type: this.type
          };
        }
      }, {
        key: "_sizeCheck",
        value: function _sizeCheck(bits) {
          if (this["int"].size > bits) {
            throw RangeError("value too large for ".concat(bits, " bits (").concat(this.type, ")"));
          }
        }
      }], [{
        key: "isType",
        value: function isType(type) {
          switch (type) {
            case "i64":
            case "i128":
            case "i256":
            case "u64":
            case "u128":
            case "u256":
              return true;
            default:
              return false;
          }
        }
        /**
         * Convert the raw `ScValType` string (e.g. 'scvI128', generated by the XDR)
         * to a type description for {@link XdrLargeInt} construction (e.g. 'i128')
         *
         * @param {string} scvType  the `xdr.ScValType` as a string
         * @returns {string} a suitable equivalent type to construct this object
         */
      }, {
        key: "getType",
        value: function getType(scvType) {
          return scvType.slice(3).toLowerCase();
        }
      }]);
    }();
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/sc_int.js
var require_sc_int = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/sc_int.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ScInt = void 0;
    var _xdr_large_int = require_xdr_large_int();
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    var ScInt = exports.ScInt = function(_XdrLargeInt) {
      function ScInt2(value, opts) {
        var _opts$type;
        _classCallCheck(this, ScInt2);
        var signed = value < 0;
        var type = (_opts$type = opts === null || opts === void 0 ? void 0 : opts.type) !== null && _opts$type !== void 0 ? _opts$type : "";
        if (type.startsWith("u") && signed) {
          throw TypeError("specified type ".concat(opts.type, " yet negative (").concat(value, ")"));
        }
        if (type === "") {
          type = signed ? "i" : "u";
          var bitlen = nearestBigIntSize(value);
          switch (bitlen) {
            case 64:
            case 128:
            case 256:
              type += bitlen.toString();
              break;
            default:
              throw RangeError("expected 64/128/256 bits for input (".concat(value, "), got ").concat(bitlen));
          }
        }
        return _callSuper(this, ScInt2, [type, value]);
      }
      _inherits(ScInt2, _XdrLargeInt);
      return _createClass(ScInt2);
    }(_xdr_large_int.XdrLargeInt);
    function nearestBigIntSize(bigI) {
      var _find;
      var bitlen = bigI.toString(2).length;
      return (_find = [64, 128, 256].find(function(len) {
        return bitlen <= len;
      })) !== null && _find !== void 0 ? _find : bitlen;
    }
  }
});

// node_modules/@stellar/stellar-base/lib/numbers/index.js
var require_numbers = __commonJS({
  "node_modules/@stellar/stellar-base/lib/numbers/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "Int128", {
      enumerable: true,
      get: function get() {
        return _int.Int128;
      }
    });
    Object.defineProperty(exports, "Int256", {
      enumerable: true,
      get: function get() {
        return _int2.Int256;
      }
    });
    Object.defineProperty(exports, "ScInt", {
      enumerable: true,
      get: function get() {
        return _sc_int.ScInt;
      }
    });
    Object.defineProperty(exports, "Uint128", {
      enumerable: true,
      get: function get() {
        return _uint.Uint128;
      }
    });
    Object.defineProperty(exports, "Uint256", {
      enumerable: true,
      get: function get() {
        return _uint2.Uint256;
      }
    });
    Object.defineProperty(exports, "XdrLargeInt", {
      enumerable: true,
      get: function get() {
        return _xdr_large_int.XdrLargeInt;
      }
    });
    exports.scValToBigInt = scValToBigInt;
    var _xdr_large_int = require_xdr_large_int();
    var _uint = require_uint128();
    var _uint2 = require_uint256();
    var _int = require_int128();
    var _int2 = require_int256();
    var _sc_int = require_sc_int();
    function scValToBigInt(scv) {
      var scIntType = _xdr_large_int.XdrLargeInt.getType(scv["switch"]().name);
      switch (scv["switch"]().name) {
        case "scvU32":
        case "scvI32":
          return BigInt(scv.value());
        case "scvU64":
        case "scvI64":
          return new _xdr_large_int.XdrLargeInt(scIntType, scv.value()).toBigInt();
        case "scvU128":
        case "scvI128":
          return new _xdr_large_int.XdrLargeInt(scIntType, [scv.value().lo(), scv.value().hi()]).toBigInt();
        case "scvU256":
        case "scvI256":
          return new _xdr_large_int.XdrLargeInt(scIntType, [scv.value().loLo(), scv.value().loHi(), scv.value().hiLo(), scv.value().hiHi()]).toBigInt();
        default:
          throw TypeError("expected integer type, got ".concat(scv["switch"]()));
      }
    }
  }
});

// node_modules/@stellar/stellar-base/lib/scval.js
var require_scval = __commonJS({
  "node_modules/@stellar/stellar-base/lib/scval.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.nativeToScVal = nativeToScVal;
    exports.scValToNative = scValToNative2;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _address = require_address();
    var _contract = require_contract();
    var _index = require_numbers();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2["return"] && (u = t2["return"](), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function nativeToScVal(val) {
      var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      switch (_typeof(val)) {
        case "object": {
          var _val$constructor$name, _val$constructor;
          if (val === null) {
            return _xdr["default"].ScVal.scvVoid();
          }
          if (val instanceof _xdr["default"].ScVal) {
            return val;
          }
          if (val instanceof _address.Address) {
            return val.toScVal();
          }
          if (val instanceof _contract.Contract) {
            return val.address().toScVal();
          }
          if (val instanceof Uint8Array || Buffer.isBuffer(val)) {
            var _opts$type;
            var copy = Uint8Array.from(val);
            switch ((_opts$type = opts === null || opts === void 0 ? void 0 : opts.type) !== null && _opts$type !== void 0 ? _opts$type : "bytes") {
              case "bytes":
                return _xdr["default"].ScVal.scvBytes(copy);
              case "symbol":
                return _xdr["default"].ScVal.scvSymbol(copy);
              case "string":
                return _xdr["default"].ScVal.scvString(copy);
              default:
                throw new TypeError("invalid type (".concat(opts.type, ") specified for bytes-like value"));
            }
          }
          if (Array.isArray(val)) {
            if (val.length > 0 && val.some(function(v) {
              return _typeof(v) !== _typeof(val[0]);
            })) {
              throw new TypeError("array values (".concat(val, ") must have the same type (types: ").concat(val.map(function(v) {
                return _typeof(v);
              }).join(","), ")"));
            }
            return _xdr["default"].ScVal.scvVec(val.map(function(v) {
              return nativeToScVal(v, opts);
            }));
          }
          if (((_val$constructor$name = (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) !== null && _val$constructor$name !== void 0 ? _val$constructor$name : "") !== "Object") {
            var _val$constructor2;
            throw new TypeError("cannot interpret ".concat((_val$constructor2 = val.constructor) === null || _val$constructor2 === void 0 ? void 0 : _val$constructor2.name, " value as ScVal (").concat(JSON.stringify(val), ")"));
          }
          return _xdr["default"].ScVal.scvMap(Object.entries(val).sort(function(_ref, _ref2) {
            var _ref3 = _slicedToArray(_ref, 1), key1 = _ref3[0];
            var _ref4 = _slicedToArray(_ref2, 1), key2 = _ref4[0];
            return key1.localeCompare(key2);
          }).map(function(_ref5) {
            var _k, _opts$type2;
            var _ref6 = _slicedToArray(_ref5, 2), k = _ref6[0], v = _ref6[1];
            var _ref7 = (_k = ((_opts$type2 = opts === null || opts === void 0 ? void 0 : opts.type) !== null && _opts$type2 !== void 0 ? _opts$type2 : {})[k]) !== null && _k !== void 0 ? _k : [null, null], _ref8 = _slicedToArray(_ref7, 2), keyType = _ref8[0], valType = _ref8[1];
            var keyOpts = keyType ? {
              type: keyType
            } : {};
            var valOpts = valType ? {
              type: valType
            } : {};
            return new _xdr["default"].ScMapEntry({
              key: nativeToScVal(k, keyOpts),
              val: nativeToScVal(v, valOpts)
            });
          }));
        }
        case "number":
        case "bigint":
          switch (opts === null || opts === void 0 ? void 0 : opts.type) {
            case "u32":
              return _xdr["default"].ScVal.scvU32(val);
            case "i32":
              return _xdr["default"].ScVal.scvI32(val);
            default:
              break;
          }
          return new _index.ScInt(val, {
            type: opts === null || opts === void 0 ? void 0 : opts.type
          }).toScVal();
        case "string": {
          var _opts$type3;
          var optType = (_opts$type3 = opts === null || opts === void 0 ? void 0 : opts.type) !== null && _opts$type3 !== void 0 ? _opts$type3 : "string";
          switch (optType) {
            case "string":
              return _xdr["default"].ScVal.scvString(val);
            case "symbol":
              return _xdr["default"].ScVal.scvSymbol(val);
            case "address":
              return new _address.Address(val).toScVal();
            case "u32":
              return _xdr["default"].ScVal.scvU32(parseInt(val, 10));
            case "i32":
              return _xdr["default"].ScVal.scvI32(parseInt(val, 10));
            default:
              if (_index.XdrLargeInt.isType(optType)) {
                return new _index.XdrLargeInt(optType, val).toScVal();
              }
              throw new TypeError("invalid type (".concat(opts.type, ") specified for string value"));
          }
        }
        case "boolean":
          return _xdr["default"].ScVal.scvBool(val);
        case "undefined":
          return _xdr["default"].ScVal.scvVoid();
        case "function":
          return nativeToScVal(val());
        default:
          throw new TypeError("failed to convert typeof ".concat(_typeof(val), " (").concat(val, ")"));
      }
    }
    function scValToNative2(scv) {
      var _scv$vec, _scv$map;
      switch (scv["switch"]().value) {
        case _xdr["default"].ScValType.scvVoid().value:
          return null;
        case _xdr["default"].ScValType.scvU64().value:
        case _xdr["default"].ScValType.scvI64().value:
          return scv.value().toBigInt();
        case _xdr["default"].ScValType.scvU128().value:
        case _xdr["default"].ScValType.scvI128().value:
        case _xdr["default"].ScValType.scvU256().value:
        case _xdr["default"].ScValType.scvI256().value:
          return (0, _index.scValToBigInt)(scv);
        case _xdr["default"].ScValType.scvVec().value:
          return ((_scv$vec = scv.vec()) !== null && _scv$vec !== void 0 ? _scv$vec : []).map(scValToNative2);
        case _xdr["default"].ScValType.scvAddress().value:
          return _address.Address.fromScVal(scv).toString();
        case _xdr["default"].ScValType.scvMap().value:
          return Object.fromEntries(((_scv$map = scv.map()) !== null && _scv$map !== void 0 ? _scv$map : []).map(function(entry) {
            return [scValToNative2(entry.key()), scValToNative2(entry.val())];
          }));
        case _xdr["default"].ScValType.scvBool().value:
        case _xdr["default"].ScValType.scvU32().value:
        case _xdr["default"].ScValType.scvI32().value:
        case _xdr["default"].ScValType.scvBytes().value:
          return scv.value();
        case _xdr["default"].ScValType.scvSymbol().value:
        case _xdr["default"].ScValType.scvString().value: {
          var v = scv.value();
          if (Buffer.isBuffer(v) || ArrayBuffer.isView(v)) {
            try {
              return new TextDecoder().decode(v);
            } catch (e2) {
              return new Uint8Array(v.buffer);
            }
          }
          return v;
        }
        case _xdr["default"].ScValType.scvTimepoint().value:
        case _xdr["default"].ScValType.scvDuration().value:
          return new _xdr["default"].Uint64(scv.value()).toBigInt();
        case _xdr["default"].ScValType.scvError().value:
          switch (scv.error()["switch"]().value) {
            case _xdr["default"].ScErrorType.sceContract().value:
              return {
                type: "contract",
                code: scv.error().contractCode()
              };
            default: {
              var err = scv.error();
              return {
                type: "system",
                code: err.code().value,
                value: err.code().name
              };
            }
          }
        default:
          return scv.value();
      }
    }
  }
});

// node_modules/@stellar/stellar-base/lib/events.js
var require_events = __commonJS({
  "node_modules/@stellar/stellar-base/lib/events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.humanizeEvents = humanizeEvents;
    var _strkey = require_strkey();
    var _scval = require_scval();
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function humanizeEvents(events) {
      return events.map(function(e2) {
        if (e2.inSuccessfulContractCall) {
          return extractEvent(e2.event());
        }
        return extractEvent(e2);
      });
    }
    function extractEvent(event) {
      return _objectSpread(_objectSpread({}, typeof event.contractId === "function" && event.contractId() != null && {
        contractId: _strkey.StrKey.encodeContract(event.contractId())
      }), {}, {
        type: event.type().name,
        topics: event.body().value().topics().map(function(t2) {
          return (0, _scval.scValToNative)(t2);
        }),
        data: (0, _scval.scValToNative)(event.body().value().data())
      });
    }
  }
});

// node_modules/@stellar/stellar-base/lib/auth.js
var require_auth = __commonJS({
  "node_modules/@stellar/stellar-base/lib/auth.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.authorizeEntry = authorizeEntry;
    exports.authorizeInvocation = authorizeInvocation;
    var _xdr = _interopRequireDefault(require_xdr2());
    var _keypair = require_keypair();
    var _strkey = require_strkey();
    var _network = require_network();
    var _hashing = require_hashing();
    var _address = require_address();
    var _scval = require_scval();
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator["return"] && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, "catch": function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function authorizeEntry(_x, _x2, _x3) {
      return _authorizeEntry.apply(this, arguments);
    }
    function _authorizeEntry() {
      _authorizeEntry = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(entry, signer, validUntilLedgerSeq) {
        var networkPassphrase, clone, addrAuth, networkId, preimage, payload, signature, publicKey, sigScVal, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              networkPassphrase = _args.length > 3 && _args[3] !== void 0 ? _args[3] : _network.Networks.FUTURENET;
              if (!(entry.credentials()["switch"]().value !== _xdr["default"].SorobanCredentialsType.sorobanCredentialsAddress().value)) {
                _context.next = 3;
                break;
              }
              return _context.abrupt("return", entry);
            case 3:
              clone = _xdr["default"].SorobanAuthorizationEntry.fromXDR(entry.toXDR());
              addrAuth = clone.credentials().address();
              addrAuth.signatureExpirationLedger(validUntilLedgerSeq);
              networkId = (0, _hashing.hash)(Buffer.from(networkPassphrase));
              preimage = _xdr["default"].HashIdPreimage.envelopeTypeSorobanAuthorization(new _xdr["default"].HashIdPreimageSorobanAuthorization({
                networkId,
                nonce: addrAuth.nonce(),
                invocation: clone.rootInvocation(),
                signatureExpirationLedger: addrAuth.signatureExpirationLedger()
              }));
              payload = (0, _hashing.hash)(preimage.toXDR());
              if (!(typeof signer === "function")) {
                _context.next = 18;
                break;
              }
              _context.t0 = Buffer;
              _context.next = 13;
              return signer(preimage);
            case 13:
              _context.t1 = _context.sent;
              signature = _context.t0.from.call(_context.t0, _context.t1);
              publicKey = _address.Address.fromScAddress(addrAuth.address()).toString();
              _context.next = 20;
              break;
            case 18:
              signature = Buffer.from(signer.sign(payload));
              publicKey = signer.publicKey();
            case 20:
              if (_keypair.Keypair.fromPublicKey(publicKey).verify(payload, signature)) {
                _context.next = 22;
                break;
              }
              throw new Error("signature doesn't match payload");
            case 22:
              sigScVal = (0, _scval.nativeToScVal)({
                public_key: _strkey.StrKey.decodeEd25519PublicKey(publicKey),
                signature
              }, {
                type: {
                  public_key: ["symbol", null],
                  signature: ["symbol", null]
                }
              });
              addrAuth.signature(_xdr["default"].ScVal.scvVec([sigScVal]));
              return _context.abrupt("return", clone);
            case 25:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return _authorizeEntry.apply(this, arguments);
    }
    function authorizeInvocation(signer, validUntilLedgerSeq, invocation) {
      var publicKey = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
      var networkPassphrase = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : _network.Networks.FUTURENET;
      var kp = _keypair.Keypair.random().rawPublicKey();
      var nonce = new _xdr["default"].Int64(bytesToInt64(kp));
      var pk = publicKey || signer.publicKey();
      if (!pk) {
        throw new Error("authorizeInvocation requires publicKey parameter");
      }
      var entry = new _xdr["default"].SorobanAuthorizationEntry({
        rootInvocation: invocation,
        credentials: _xdr["default"].SorobanCredentials.sorobanCredentialsAddress(new _xdr["default"].SorobanAddressCredentials({
          address: new _address.Address(pk).toScAddress(),
          nonce,
          signatureExpirationLedger: 0,
          // replaced
          signature: _xdr["default"].ScVal.scvVec([])
          // replaced
        }))
      });
      return authorizeEntry(entry, signer, validUntilLedgerSeq, networkPassphrase);
    }
    function bytesToInt64(bytes) {
      return bytes.subarray(0, 8).reduce(function(accum, b) {
        return accum << 8 | b;
      }, 0);
    }
  }
});

// node_modules/@stellar/stellar-base/lib/invocation.js
var require_invocation = __commonJS({
  "node_modules/@stellar/stellar-base/lib/invocation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.buildInvocationTree = buildInvocationTree;
    exports.walkInvocationTree = walkInvocationTree;
    var _asset = require_asset();
    var _address = require_address();
    var _scval = require_scval();
    function buildInvocationTree(root) {
      var fn = root["function"]();
      var output = {};
      var inner = fn.value();
      switch (fn["switch"]().value) {
        case 0:
          output.type = "execute";
          output.args = {
            source: _address.Address.fromScAddress(inner.contractAddress()).toString(),
            "function": inner.functionName(),
            args: inner.args().map(function(arg) {
              return (0, _scval.scValToNative)(arg);
            })
          };
          break;
        case 1: {
          output.type = "create";
          output.args = {};
          var _ref = [inner.executable(), inner.contractIdPreimage()], exec = _ref[0], preimage = _ref[1];
          if (!!exec["switch"]().value !== !!preimage["switch"]().value) {
            throw new Error("creation function appears invalid: ".concat(JSON.stringify(inner), " (should be wasm+address or token+asset)"));
          }
          switch (exec["switch"]().value) {
            case 0: {
              var details = preimage.fromAddress();
              output.args.type = "wasm";
              output.args.wasm = {
                salt: details.salt().toString("hex"),
                hash: exec.wasmHash().toString("hex"),
                address: _address.Address.fromScAddress(details.address()).toString()
              };
              break;
            }
            case 1:
              output.args.type = "sac";
              output.args.asset = _asset.Asset.fromOperation(preimage.fromAsset()).toString();
              break;
            default:
              throw new Error("unknown creation type: ".concat(JSON.stringify(exec)));
          }
          break;
        }
        default:
          throw new Error("unknown invocation type (".concat(fn["switch"](), "): ").concat(JSON.stringify(fn)));
      }
      output.invocations = root.subInvocations().map(function(i) {
        return buildInvocationTree(i);
      });
      return output;
    }
    function walkInvocationTree(root, callback) {
      walkHelper(root, 1, callback);
    }
    function walkHelper(node, depth, callback, parent) {
      if (callback(node, depth, parent) === false) {
        return;
      }
      node.subInvocations().forEach(function(i) {
        return walkHelper(i, depth + 1, callback, node);
      });
    }
  }
});

// node_modules/@stellar/stellar-base/lib/index.js
var require_lib = __commonJS({
  "node_modules/@stellar/stellar-base/lib/index.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      xdr: true,
      cereal: true,
      hash: true,
      sign: true,
      verify: true,
      FastSigning: true,
      getLiquidityPoolId: true,
      LiquidityPoolFeeV18: true,
      Keypair: true,
      UnsignedHyper: true,
      Hyper: true,
      TransactionBase: true,
      Transaction: true,
      FeeBumpTransaction: true,
      TransactionBuilder: true,
      TimeoutInfinite: true,
      BASE_FEE: true,
      Asset: true,
      LiquidityPoolAsset: true,
      LiquidityPoolId: true,
      Operation: true,
      AuthRequiredFlag: true,
      AuthRevocableFlag: true,
      AuthImmutableFlag: true,
      AuthClawbackEnabledFlag: true,
      Account: true,
      MuxedAccount: true,
      Claimant: true,
      Networks: true,
      StrKey: true,
      SignerKey: true,
      Soroban: true,
      decodeAddressToMuxedAccount: true,
      encodeMuxedAccountToAddress: true,
      extractBaseAddress: true,
      encodeMuxedAccount: true,
      Contract: true,
      Address: true
    };
    Object.defineProperty(exports, "Account", {
      enumerable: true,
      get: function get() {
        return _account.Account;
      }
    });
    Object.defineProperty(exports, "Address", {
      enumerable: true,
      get: function get() {
        return _address.Address;
      }
    });
    Object.defineProperty(exports, "Asset", {
      enumerable: true,
      get: function get() {
        return _asset.Asset;
      }
    });
    Object.defineProperty(exports, "AuthClawbackEnabledFlag", {
      enumerable: true,
      get: function get() {
        return _operation.AuthClawbackEnabledFlag;
      }
    });
    Object.defineProperty(exports, "AuthImmutableFlag", {
      enumerable: true,
      get: function get() {
        return _operation.AuthImmutableFlag;
      }
    });
    Object.defineProperty(exports, "AuthRequiredFlag", {
      enumerable: true,
      get: function get() {
        return _operation.AuthRequiredFlag;
      }
    });
    Object.defineProperty(exports, "AuthRevocableFlag", {
      enumerable: true,
      get: function get() {
        return _operation.AuthRevocableFlag;
      }
    });
    Object.defineProperty(exports, "BASE_FEE", {
      enumerable: true,
      get: function get() {
        return _transaction_builder.BASE_FEE;
      }
    });
    Object.defineProperty(exports, "Claimant", {
      enumerable: true,
      get: function get() {
        return _claimant.Claimant;
      }
    });
    Object.defineProperty(exports, "Contract", {
      enumerable: true,
      get: function get() {
        return _contract.Contract;
      }
    });
    Object.defineProperty(exports, "FastSigning", {
      enumerable: true,
      get: function get() {
        return _signing.FastSigning;
      }
    });
    Object.defineProperty(exports, "FeeBumpTransaction", {
      enumerable: true,
      get: function get() {
        return _fee_bump_transaction.FeeBumpTransaction;
      }
    });
    Object.defineProperty(exports, "Hyper", {
      enumerable: true,
      get: function get() {
        return _jsXdr.Hyper;
      }
    });
    Object.defineProperty(exports, "Keypair", {
      enumerable: true,
      get: function get() {
        return _keypair.Keypair;
      }
    });
    Object.defineProperty(exports, "LiquidityPoolAsset", {
      enumerable: true,
      get: function get() {
        return _liquidity_pool_asset.LiquidityPoolAsset;
      }
    });
    Object.defineProperty(exports, "LiquidityPoolFeeV18", {
      enumerable: true,
      get: function get() {
        return _get_liquidity_pool_id.LiquidityPoolFeeV18;
      }
    });
    Object.defineProperty(exports, "LiquidityPoolId", {
      enumerable: true,
      get: function get() {
        return _liquidity_pool_id.LiquidityPoolId;
      }
    });
    Object.defineProperty(exports, "MuxedAccount", {
      enumerable: true,
      get: function get() {
        return _muxed_account.MuxedAccount;
      }
    });
    Object.defineProperty(exports, "Networks", {
      enumerable: true,
      get: function get() {
        return _network.Networks;
      }
    });
    Object.defineProperty(exports, "Operation", {
      enumerable: true,
      get: function get() {
        return _operation.Operation;
      }
    });
    Object.defineProperty(exports, "SignerKey", {
      enumerable: true,
      get: function get() {
        return _signerkey.SignerKey;
      }
    });
    Object.defineProperty(exports, "Soroban", {
      enumerable: true,
      get: function get() {
        return _soroban.Soroban;
      }
    });
    Object.defineProperty(exports, "StrKey", {
      enumerable: true,
      get: function get() {
        return _strkey.StrKey;
      }
    });
    Object.defineProperty(exports, "TimeoutInfinite", {
      enumerable: true,
      get: function get() {
        return _transaction_builder.TimeoutInfinite;
      }
    });
    Object.defineProperty(exports, "Transaction", {
      enumerable: true,
      get: function get() {
        return _transaction.Transaction;
      }
    });
    Object.defineProperty(exports, "TransactionBase", {
      enumerable: true,
      get: function get() {
        return _transaction_base.TransactionBase;
      }
    });
    Object.defineProperty(exports, "TransactionBuilder", {
      enumerable: true,
      get: function get() {
        return _transaction_builder.TransactionBuilder;
      }
    });
    Object.defineProperty(exports, "UnsignedHyper", {
      enumerable: true,
      get: function get() {
        return _jsXdr.UnsignedHyper;
      }
    });
    Object.defineProperty(exports, "cereal", {
      enumerable: true,
      get: function get() {
        return _jsxdr["default"];
      }
    });
    Object.defineProperty(exports, "decodeAddressToMuxedAccount", {
      enumerable: true,
      get: function get() {
        return _decode_encode_muxed_account.decodeAddressToMuxedAccount;
      }
    });
    exports["default"] = void 0;
    Object.defineProperty(exports, "encodeMuxedAccount", {
      enumerable: true,
      get: function get() {
        return _decode_encode_muxed_account.encodeMuxedAccount;
      }
    });
    Object.defineProperty(exports, "encodeMuxedAccountToAddress", {
      enumerable: true,
      get: function get() {
        return _decode_encode_muxed_account.encodeMuxedAccountToAddress;
      }
    });
    Object.defineProperty(exports, "extractBaseAddress", {
      enumerable: true,
      get: function get() {
        return _decode_encode_muxed_account.extractBaseAddress;
      }
    });
    Object.defineProperty(exports, "getLiquidityPoolId", {
      enumerable: true,
      get: function get() {
        return _get_liquidity_pool_id.getLiquidityPoolId;
      }
    });
    Object.defineProperty(exports, "hash", {
      enumerable: true,
      get: function get() {
        return _hashing.hash;
      }
    });
    Object.defineProperty(exports, "sign", {
      enumerable: true,
      get: function get() {
        return _signing.sign;
      }
    });
    Object.defineProperty(exports, "verify", {
      enumerable: true,
      get: function get() {
        return _signing.verify;
      }
    });
    Object.defineProperty(exports, "xdr", {
      enumerable: true,
      get: function get() {
        return _xdr["default"];
      }
    });
    var _xdr = _interopRequireDefault(require_xdr2());
    var _jsxdr = _interopRequireDefault(require_jsxdr());
    var _hashing = require_hashing();
    var _signing = require_signing();
    var _get_liquidity_pool_id = require_get_liquidity_pool_id();
    var _keypair = require_keypair();
    var _jsXdr = require_xdr();
    var _transaction_base = require_transaction_base();
    var _transaction = require_transaction();
    var _fee_bump_transaction = require_fee_bump_transaction();
    var _transaction_builder = require_transaction_builder();
    var _asset = require_asset();
    var _liquidity_pool_asset = require_liquidity_pool_asset();
    var _liquidity_pool_id = require_liquidity_pool_id();
    var _operation = require_operation();
    var _memo = require_memo();
    Object.keys(_memo).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _memo[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _memo[key];
        }
      });
    });
    var _account = require_account();
    var _muxed_account = require_muxed_account();
    var _claimant = require_claimant();
    var _network = require_network();
    var _strkey = require_strkey();
    var _signerkey = require_signerkey();
    var _soroban = require_soroban();
    var _decode_encode_muxed_account = require_decode_encode_muxed_account();
    var _contract = require_contract();
    var _address = require_address();
    var _numbers = require_numbers();
    Object.keys(_numbers).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _numbers[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _numbers[key];
        }
      });
    });
    var _scval = require_scval();
    Object.keys(_scval).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _scval[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _scval[key];
        }
      });
    });
    var _events = require_events();
    Object.keys(_events).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _events[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _events[key];
        }
      });
    });
    var _sorobandata_builder = require_sorobandata_builder();
    Object.keys(_sorobandata_builder).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _sorobandata_builder[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _sorobandata_builder[key];
        }
      });
    });
    var _auth = require_auth();
    Object.keys(_auth).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _auth[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _auth[key];
        }
      });
    });
    var _invocation = require_invocation();
    Object.keys(_invocation).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _invocation[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _invocation[key];
        }
      });
    });
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { "default": e2 };
    }
    var _default = exports["default"] = module.exports;
  }
});

// node_modules/urijs/src/punycode.js
var require_punycode = __commonJS({
  "node_modules/urijs/src/punycode.js"(exports, module) {
    (function(root) {
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = typeof module == "object" && module && !module.nodeType && module;
      var freeGlobal = typeof global == "object" && global;
      if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
        root = freeGlobal;
      }
      var punycode, maxInt = 2147483647, base = 36, tMin = 1, tMax = 26, skew = 38, damp = 700, initialBias = 72, initialN = 128, delimiter = "-", regexPunycode = /^xn--/, regexNonASCII = /[^\x20-\x7E]/, regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, errors = {
        "overflow": "Overflow: input needs wider integers to process",
        "not-basic": "Illegal input >= 0x80 (not a basic code point)",
        "invalid-input": "Invalid input"
      }, baseMinusTMin = base - tMin, floor = Math.floor, stringFromCharCode = String.fromCharCode, key;
      function error(type) {
        throw new RangeError(errors[type]);
      }
      function map(array, fn) {
        var length = array.length;
        var result = [];
        while (length--) {
          result[length] = fn(array[length]);
        }
        return result;
      }
      function mapDomain(string, fn) {
        var parts = string.split("@");
        var result = "";
        if (parts.length > 1) {
          result = parts[0] + "@";
          string = parts[1];
        }
        string = string.replace(regexSeparators, ".");
        var labels = string.split(".");
        var encoded = map(labels, fn).join(".");
        return result + encoded;
      }
      function ucs2decode(string) {
        var output = [], counter = 0, length = string.length, value, extra;
        while (counter < length) {
          value = string.charCodeAt(counter++);
          if (value >= 55296 && value <= 56319 && counter < length) {
            extra = string.charCodeAt(counter++);
            if ((extra & 64512) == 56320) {
              output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
            } else {
              output.push(value);
              counter--;
            }
          } else {
            output.push(value);
          }
        }
        return output;
      }
      function ucs2encode(array) {
        return map(array, function(value) {
          var output = "";
          if (value > 65535) {
            value -= 65536;
            output += stringFromCharCode(value >>> 10 & 1023 | 55296);
            value = 56320 | value & 1023;
          }
          output += stringFromCharCode(value);
          return output;
        }).join("");
      }
      function basicToDigit(codePoint) {
        if (codePoint - 48 < 10) {
          return codePoint - 22;
        }
        if (codePoint - 65 < 26) {
          return codePoint - 65;
        }
        if (codePoint - 97 < 26) {
          return codePoint - 97;
        }
        return base;
      }
      function digitToBasic(digit, flag) {
        return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
      }
      function adapt(delta, numPoints, firstTime) {
        var k = 0;
        delta = firstTime ? floor(delta / damp) : delta >> 1;
        delta += floor(delta / numPoints);
        for (; delta > baseMinusTMin * tMax >> 1; k += base) {
          delta = floor(delta / baseMinusTMin);
        }
        return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
      }
      function decode2(input) {
        var output = [], inputLength = input.length, out, i = 0, n2 = initialN, bias = initialBias, basic, j, index, oldi, w, k, digit, t2, baseMinusT;
        basic = input.lastIndexOf(delimiter);
        if (basic < 0) {
          basic = 0;
        }
        for (j = 0; j < basic; ++j) {
          if (input.charCodeAt(j) >= 128) {
            error("not-basic");
          }
          output.push(input.charCodeAt(j));
        }
        for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
          for (oldi = i, w = 1, k = base; ; k += base) {
            if (index >= inputLength) {
              error("invalid-input");
            }
            digit = basicToDigit(input.charCodeAt(index++));
            if (digit >= base || digit > floor((maxInt - i) / w)) {
              error("overflow");
            }
            i += digit * w;
            t2 = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
            if (digit < t2) {
              break;
            }
            baseMinusT = base - t2;
            if (w > floor(maxInt / baseMinusT)) {
              error("overflow");
            }
            w *= baseMinusT;
          }
          out = output.length + 1;
          bias = adapt(i - oldi, out, oldi == 0);
          if (floor(i / out) > maxInt - n2) {
            error("overflow");
          }
          n2 += floor(i / out);
          i %= out;
          output.splice(i++, 0, n2);
        }
        return ucs2encode(output);
      }
      function encode(input) {
        var n2, delta, handledCPCount, basicLength, bias, j, m, q, k, t2, currentValue, output = [], inputLength, handledCPCountPlusOne, baseMinusT, qMinusT;
        input = ucs2decode(input);
        inputLength = input.length;
        n2 = initialN;
        delta = 0;
        bias = initialBias;
        for (j = 0; j < inputLength; ++j) {
          currentValue = input[j];
          if (currentValue < 128) {
            output.push(stringFromCharCode(currentValue));
          }
        }
        handledCPCount = basicLength = output.length;
        if (basicLength) {
          output.push(delimiter);
        }
        while (handledCPCount < inputLength) {
          for (m = maxInt, j = 0; j < inputLength; ++j) {
            currentValue = input[j];
            if (currentValue >= n2 && currentValue < m) {
              m = currentValue;
            }
          }
          handledCPCountPlusOne = handledCPCount + 1;
          if (m - n2 > floor((maxInt - delta) / handledCPCountPlusOne)) {
            error("overflow");
          }
          delta += (m - n2) * handledCPCountPlusOne;
          n2 = m;
          for (j = 0; j < inputLength; ++j) {
            currentValue = input[j];
            if (currentValue < n2 && ++delta > maxInt) {
              error("overflow");
            }
            if (currentValue == n2) {
              for (q = delta, k = base; ; k += base) {
                t2 = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                if (q < t2) {
                  break;
                }
                qMinusT = q - t2;
                baseMinusT = base - t2;
                output.push(
                  stringFromCharCode(digitToBasic(t2 + qMinusT % baseMinusT, 0))
                );
                q = floor(qMinusT / baseMinusT);
              }
              output.push(stringFromCharCode(digitToBasic(q, 0)));
              bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
              delta = 0;
              ++handledCPCount;
            }
          }
          ++delta;
          ++n2;
        }
        return output.join("");
      }
      function toUnicode(input) {
        return mapDomain(input, function(string) {
          return regexPunycode.test(string) ? decode2(string.slice(4).toLowerCase()) : string;
        });
      }
      function toASCII(input) {
        return mapDomain(input, function(string) {
          return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
        });
      }
      punycode = {
        /**
         * A string representing the current Punycode.js version number.
         * @memberOf punycode
         * @type String
         */
        "version": "1.3.2",
        /**
         * An object of methods to convert from JavaScript's internal character
         * representation (UCS-2) to Unicode code points, and back.
         * @see <https://mathiasbynens.be/notes/javascript-encoding>
         * @memberOf punycode
         * @type Object
         */
        "ucs2": {
          "decode": ucs2decode,
          "encode": ucs2encode
        },
        "decode": decode2,
        "encode": encode,
        "toASCII": toASCII,
        "toUnicode": toUnicode
      };
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        define("punycode", function() {
          return punycode;
        });
      } else if (freeExports && freeModule) {
        if (module.exports == freeExports) {
          freeModule.exports = punycode;
        } else {
          for (key in punycode) {
            punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
          }
        }
      } else {
        root.punycode = punycode;
      }
    })(exports);
  }
});

// node_modules/urijs/src/IPv6.js
var require_IPv6 = __commonJS({
  "node_modules/urijs/src/IPv6.js"(exports, module) {
    (function(root, factory) {
      "use strict";
      if (typeof module === "object" && module.exports) {
        module.exports = factory();
      } else if (typeof define === "function" && define.amd) {
        define(factory);
      } else {
        root.IPv6 = factory(root);
      }
    })(exports, function(root) {
      "use strict";
      var _IPv6 = root && root.IPv6;
      function bestPresentation(address) {
        var _address = address.toLowerCase();
        var segments = _address.split(":");
        var length = segments.length;
        var total = 8;
        if (segments[0] === "" && segments[1] === "" && segments[2] === "") {
          segments.shift();
          segments.shift();
        } else if (segments[0] === "" && segments[1] === "") {
          segments.shift();
        } else if (segments[length - 1] === "" && segments[length - 2] === "") {
          segments.pop();
        }
        length = segments.length;
        if (segments[length - 1].indexOf(".") !== -1) {
          total = 7;
        }
        var pos;
        for (pos = 0; pos < length; pos++) {
          if (segments[pos] === "") {
            break;
          }
        }
        if (pos < total) {
          segments.splice(pos, 1, "0000");
          while (segments.length < total) {
            segments.splice(pos, 0, "0000");
          }
        }
        var _segments;
        for (var i = 0; i < total; i++) {
          _segments = segments[i].split("");
          for (var j = 0; j < 3; j++) {
            if (_segments[0] === "0" && _segments.length > 1) {
              _segments.splice(0, 1);
            } else {
              break;
            }
          }
          segments[i] = _segments.join("");
        }
        var best = -1;
        var _best = 0;
        var _current = 0;
        var current = -1;
        var inzeroes = false;
        for (i = 0; i < total; i++) {
          if (inzeroes) {
            if (segments[i] === "0") {
              _current += 1;
            } else {
              inzeroes = false;
              if (_current > _best) {
                best = current;
                _best = _current;
              }
            }
          } else {
            if (segments[i] === "0") {
              inzeroes = true;
              current = i;
              _current = 1;
            }
          }
        }
        if (_current > _best) {
          best = current;
          _best = _current;
        }
        if (_best > 1) {
          segments.splice(best, _best, "");
        }
        length = segments.length;
        var result = "";
        if (segments[0] === "") {
          result = ":";
        }
        for (i = 0; i < length; i++) {
          result += segments[i];
          if (i === length - 1) {
            break;
          }
          result += ":";
        }
        if (segments[length - 1] === "") {
          result += ":";
        }
        return result;
      }
      function noConflict() {
        if (root.IPv6 === this) {
          root.IPv6 = _IPv6;
        }
        return this;
      }
      return {
        best: bestPresentation,
        noConflict
      };
    });
  }
});

// node_modules/urijs/src/SecondLevelDomains.js
var require_SecondLevelDomains = __commonJS({
  "node_modules/urijs/src/SecondLevelDomains.js"(exports, module) {
    (function(root, factory) {
      "use strict";
      if (typeof module === "object" && module.exports) {
        module.exports = factory();
      } else if (typeof define === "function" && define.amd) {
        define(factory);
      } else {
        root.SecondLevelDomains = factory(root);
      }
    })(exports, function(root) {
      "use strict";
      var _SecondLevelDomains = root && root.SecondLevelDomains;
      var SLD = {
        // list of known Second Level Domains
        // converted list of SLDs from https://github.com/gavingmiller/second-level-domains
        // ----
        // publicsuffix.org is more current and actually used by a couple of browsers internally.
        // downside is it also contains domains like "dyndns.org" - which is fine for the security
        // issues browser have to deal with (SOP for cookies, etc) - but is way overboard for URI.js
        // ----
        list: {
          "ac": " com gov mil net org ",
          "ae": " ac co gov mil name net org pro sch ",
          "af": " com edu gov net org ",
          "al": " com edu gov mil net org ",
          "ao": " co ed gv it og pb ",
          "ar": " com edu gob gov int mil net org tur ",
          "at": " ac co gv or ",
          "au": " asn com csiro edu gov id net org ",
          "ba": " co com edu gov mil net org rs unbi unmo unsa untz unze ",
          "bb": " biz co com edu gov info net org store tv ",
          "bh": " biz cc com edu gov info net org ",
          "bn": " com edu gov net org ",
          "bo": " com edu gob gov int mil net org tv ",
          "br": " adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ",
          "bs": " com edu gov net org ",
          "bz": " du et om ov rg ",
          "ca": " ab bc mb nb nf nl ns nt nu on pe qc sk yk ",
          "ck": " biz co edu gen gov info net org ",
          "cn": " ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ",
          "co": " com edu gov mil net nom org ",
          "cr": " ac c co ed fi go or sa ",
          "cy": " ac biz com ekloges gov ltd name net org parliament press pro tm ",
          "do": " art com edu gob gov mil net org sld web ",
          "dz": " art asso com edu gov net org pol ",
          "ec": " com edu fin gov info med mil net org pro ",
          "eg": " com edu eun gov mil name net org sci ",
          "er": " com edu gov ind mil net org rochest w ",
          "es": " com edu gob nom org ",
          "et": " biz com edu gov info name net org ",
          "fj": " ac biz com info mil name net org pro ",
          "fk": " ac co gov net nom org ",
          "fr": " asso com f gouv nom prd presse tm ",
          "gg": " co net org ",
          "gh": " com edu gov mil org ",
          "gn": " ac com gov net org ",
          "gr": " com edu gov mil net org ",
          "gt": " com edu gob ind mil net org ",
          "gu": " com edu gov net org ",
          "hk": " com edu gov idv net org ",
          "hu": " 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ",
          "id": " ac co go mil net or sch web ",
          "il": " ac co gov idf k12 muni net org ",
          "in": " ac co edu ernet firm gen gov i ind mil net nic org res ",
          "iq": " com edu gov i mil net org ",
          "ir": " ac co dnssec gov i id net org sch ",
          "it": " edu gov ",
          "je": " co net org ",
          "jo": " com edu gov mil name net org sch ",
          "jp": " ac ad co ed go gr lg ne or ",
          "ke": " ac co go info me mobi ne or sc ",
          "kh": " com edu gov mil net org per ",
          "ki": " biz com de edu gov info mob net org tel ",
          "km": " asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ",
          "kn": " edu gov net org ",
          "kr": " ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ",
          "kw": " com edu gov net org ",
          "ky": " com edu gov net org ",
          "kz": " com edu gov mil net org ",
          "lb": " com edu gov net org ",
          "lk": " assn com edu gov grp hotel int ltd net ngo org sch soc web ",
          "lr": " com edu gov net org ",
          "lv": " asn com conf edu gov id mil net org ",
          "ly": " com edu gov id med net org plc sch ",
          "ma": " ac co gov m net org press ",
          "mc": " asso tm ",
          "me": " ac co edu gov its net org priv ",
          "mg": " com edu gov mil nom org prd tm ",
          "mk": " com edu gov inf name net org pro ",
          "ml": " com edu gov net org presse ",
          "mn": " edu gov org ",
          "mo": " com edu gov net org ",
          "mt": " com edu gov net org ",
          "mv": " aero biz com coop edu gov info int mil museum name net org pro ",
          "mw": " ac co com coop edu gov int museum net org ",
          "mx": " com edu gob net org ",
          "my": " com edu gov mil name net org sch ",
          "nf": " arts com firm info net other per rec store web ",
          "ng": " biz com edu gov mil mobi name net org sch ",
          "ni": " ac co com edu gob mil net nom org ",
          "np": " com edu gov mil net org ",
          "nr": " biz com edu gov info net org ",
          "om": " ac biz co com edu gov med mil museum net org pro sch ",
          "pe": " com edu gob mil net nom org sld ",
          "ph": " com edu gov i mil net ngo org ",
          "pk": " biz com edu fam gob gok gon gop gos gov net org web ",
          "pl": " art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ",
          "pr": " ac biz com edu est gov info isla name net org pro prof ",
          "ps": " com edu gov net org plo sec ",
          "pw": " belau co ed go ne or ",
          "ro": " arts com firm info nom nt org rec store tm www ",
          "rs": " ac co edu gov in org ",
          "sb": " com edu gov net org ",
          "sc": " com edu gov net org ",
          "sh": " co com edu gov net nom org ",
          "sl": " com edu gov net org ",
          "st": " co com consulado edu embaixada gov mil net org principe saotome store ",
          "sv": " com edu gob org red ",
          "sz": " ac co org ",
          "tr": " av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ",
          "tt": " aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ",
          "tw": " club com ebiz edu game gov idv mil net org ",
          "mu": " ac co com gov net or org ",
          "mz": " ac co edu gov org ",
          "na": " co com ",
          "nz": " ac co cri geek gen govt health iwi maori mil net org parliament school ",
          "pa": " abo ac com edu gob ing med net nom org sld ",
          "pt": " com edu gov int net nome org publ ",
          "py": " com edu gov mil net org ",
          "qa": " com edu gov mil net org ",
          "re": " asso com nom ",
          "ru": " ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ",
          "rw": " ac co com edu gouv gov int mil net ",
          "sa": " com edu gov med net org pub sch ",
          "sd": " com edu gov info med net org tv ",
          "se": " a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ",
          "sg": " com edu gov idn net org per ",
          "sn": " art com edu gouv org perso univ ",
          "sy": " com edu gov mil net news org ",
          "th": " ac co go in mi net or ",
          "tj": " ac biz co com edu go gov info int mil name net nic org test web ",
          "tn": " agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ",
          "tz": " ac co go ne or ",
          "ua": " biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ",
          "ug": " ac co go ne or org sc ",
          "uk": " ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ",
          "us": " dni fed isa kids nsn ",
          "uy": " com edu gub mil net org ",
          "ve": " co com edu gob info mil net org web ",
          "vi": " co com k12 net org ",
          "vn": " ac biz com edu gov health info int name net org pro ",
          "ye": " co com gov ltd me net org plc ",
          "yu": " ac co edu gov org ",
          "za": " ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ",
          "zm": " ac co com edu gov net org sch ",
          // https://en.wikipedia.org/wiki/CentralNic#Second-level_domains
          "com": "ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ",
          "net": "gb jp se uk ",
          "org": "ae",
          "de": "com "
        },
        // gorhill 2013-10-25: Using indexOf() instead Regexp(). Significant boost
        // in both performance and memory footprint. No initialization required.
        // http://jsperf.com/uri-js-sld-regex-vs-binary-search/4
        // Following methods use lastIndexOf() rather than array.split() in order
        // to avoid any memory allocations.
        has: function(domain) {
          var tldOffset = domain.lastIndexOf(".");
          if (tldOffset <= 0 || tldOffset >= domain.length - 1) {
            return false;
          }
          var sldOffset = domain.lastIndexOf(".", tldOffset - 1);
          if (sldOffset <= 0 || sldOffset >= tldOffset - 1) {
            return false;
          }
          var sldList = SLD.list[domain.slice(tldOffset + 1)];
          if (!sldList) {
            return false;
          }
          return sldList.indexOf(" " + domain.slice(sldOffset + 1, tldOffset) + " ") >= 0;
        },
        is: function(domain) {
          var tldOffset = domain.lastIndexOf(".");
          if (tldOffset <= 0 || tldOffset >= domain.length - 1) {
            return false;
          }
          var sldOffset = domain.lastIndexOf(".", tldOffset - 1);
          if (sldOffset >= 0) {
            return false;
          }
          var sldList = SLD.list[domain.slice(tldOffset + 1)];
          if (!sldList) {
            return false;
          }
          return sldList.indexOf(" " + domain.slice(0, tldOffset) + " ") >= 0;
        },
        get: function(domain) {
          var tldOffset = domain.lastIndexOf(".");
          if (tldOffset <= 0 || tldOffset >= domain.length - 1) {
            return null;
          }
          var sldOffset = domain.lastIndexOf(".", tldOffset - 1);
          if (sldOffset <= 0 || sldOffset >= tldOffset - 1) {
            return null;
          }
          var sldList = SLD.list[domain.slice(tldOffset + 1)];
          if (!sldList) {
            return null;
          }
          if (sldList.indexOf(" " + domain.slice(sldOffset + 1, tldOffset) + " ") < 0) {
            return null;
          }
          return domain.slice(sldOffset + 1);
        },
        noConflict: function() {
          if (root.SecondLevelDomains === this) {
            root.SecondLevelDomains = _SecondLevelDomains;
          }
          return this;
        }
      };
      return SLD;
    });
  }
});

// node_modules/urijs/src/URI.js
var require_URI = __commonJS({
  "node_modules/urijs/src/URI.js"(exports, module) {
    (function(root, factory) {
      "use strict";
      if (typeof module === "object" && module.exports) {
        module.exports = factory(require_punycode(), require_IPv6(), require_SecondLevelDomains());
      } else if (typeof define === "function" && define.amd) {
        define(["./punycode", "./IPv6", "./SecondLevelDomains"], factory);
      } else {
        root.URI = factory(root.punycode, root.IPv6, root.SecondLevelDomains, root);
      }
    })(exports, function(punycode, IPv6, SLD, root) {
      "use strict";
      var _URI = root && root.URI;
      function URI(url, base) {
        var _urlSupplied = arguments.length >= 1;
        var _baseSupplied = arguments.length >= 2;
        if (!(this instanceof URI)) {
          if (_urlSupplied) {
            if (_baseSupplied) {
              return new URI(url, base);
            }
            return new URI(url);
          }
          return new URI();
        }
        if (url === void 0) {
          if (_urlSupplied) {
            throw new TypeError("undefined is not a valid argument for URI");
          }
          if (typeof location !== "undefined") {
            url = location.href + "";
          } else {
            url = "";
          }
        }
        if (url === null) {
          if (_urlSupplied) {
            throw new TypeError("null is not a valid argument for URI");
          }
        }
        this.href(url);
        if (base !== void 0) {
          return this.absoluteTo(base);
        }
        return this;
      }
      function isInteger(value) {
        return /^[0-9]+$/.test(value);
      }
      URI.version = "1.19.11";
      var p = URI.prototype;
      var hasOwn = Object.prototype.hasOwnProperty;
      function escapeRegEx(string) {
        return string.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
      }
      function getType(value) {
        if (value === void 0) {
          return "Undefined";
        }
        return String(Object.prototype.toString.call(value)).slice(8, -1);
      }
      function isArray(obj) {
        return getType(obj) === "Array";
      }
      function filterArrayValues(data, value) {
        var lookup = {};
        var i, length;
        if (getType(value) === "RegExp") {
          lookup = null;
        } else if (isArray(value)) {
          for (i = 0, length = value.length; i < length; i++) {
            lookup[value[i]] = true;
          }
        } else {
          lookup[value] = true;
        }
        for (i = 0, length = data.length; i < length; i++) {
          var _match = lookup && lookup[data[i]] !== void 0 || !lookup && value.test(data[i]);
          if (_match) {
            data.splice(i, 1);
            length--;
            i--;
          }
        }
        return data;
      }
      function arrayContains(list, value) {
        var i, length;
        if (isArray(value)) {
          for (i = 0, length = value.length; i < length; i++) {
            if (!arrayContains(list, value[i])) {
              return false;
            }
          }
          return true;
        }
        var _type = getType(value);
        for (i = 0, length = list.length; i < length; i++) {
          if (_type === "RegExp") {
            if (typeof list[i] === "string" && list[i].match(value)) {
              return true;
            }
          } else if (list[i] === value) {
            return true;
          }
        }
        return false;
      }
      function arraysEqual(one, two) {
        if (!isArray(one) || !isArray(two)) {
          return false;
        }
        if (one.length !== two.length) {
          return false;
        }
        one.sort();
        two.sort();
        for (var i = 0, l2 = one.length; i < l2; i++) {
          if (one[i] !== two[i]) {
            return false;
          }
        }
        return true;
      }
      function trimSlashes(text) {
        var trim_expression = /^\/+|\/+$/g;
        return text.replace(trim_expression, "");
      }
      URI._parts = function() {
        return {
          protocol: null,
          username: null,
          password: null,
          hostname: null,
          urn: null,
          port: null,
          path: null,
          query: null,
          fragment: null,
          // state
          preventInvalidHostname: URI.preventInvalidHostname,
          duplicateQueryParameters: URI.duplicateQueryParameters,
          escapeQuerySpace: URI.escapeQuerySpace
        };
      };
      URI.preventInvalidHostname = false;
      URI.duplicateQueryParameters = false;
      URI.escapeQuerySpace = true;
      URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;
      URI.idn_expression = /[^a-z0-9\._-]/i;
      URI.punycode_expression = /(xn--)/i;
      URI.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
      URI.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
      URI.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig;
      URI.findUri = {
        // valid "scheme://" or "www."
        start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,
        // everything up to the next whitespace
        end: /[\s\r\n]|$/,
        // trim trailing punctuation captured by end RegExp
        trim: /[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,
        // balanced parens inclusion (), [], {}, <>
        parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g
      };
      URI.leading_whitespace_expression = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;
      URI.ascii_tab_whitespace = /[\u0009\u000A\u000D]+/g;
      URI.defaultPorts = {
        http: "80",
        https: "443",
        ftp: "21",
        gopher: "70",
        ws: "80",
        wss: "443"
      };
      URI.hostProtocols = [
        "http",
        "https"
      ];
      URI.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/;
      URI.domAttributes = {
        "a": "href",
        "blockquote": "cite",
        "link": "href",
        "base": "href",
        "script": "src",
        "form": "action",
        "img": "src",
        "area": "href",
        "iframe": "src",
        "embed": "src",
        "source": "src",
        "track": "src",
        "input": "src",
        // but only if type="image"
        "audio": "src",
        "video": "src"
      };
      URI.getDomAttribute = function(node) {
        if (!node || !node.nodeName) {
          return void 0;
        }
        var nodeName = node.nodeName.toLowerCase();
        if (nodeName === "input" && node.type !== "image") {
          return void 0;
        }
        return URI.domAttributes[nodeName];
      };
      function escapeForDumbFirefox36(value) {
        return escape(value);
      }
      function strictEncodeURIComponent(string) {
        return encodeURIComponent(string).replace(/[!'()*]/g, escapeForDumbFirefox36).replace(/\*/g, "%2A");
      }
      URI.encode = strictEncodeURIComponent;
      URI.decode = decodeURIComponent;
      URI.iso8859 = function() {
        URI.encode = escape;
        URI.decode = unescape;
      };
      URI.unicode = function() {
        URI.encode = strictEncodeURIComponent;
        URI.decode = decodeURIComponent;
      };
      URI.characters = {
        pathname: {
          encode: {
            // RFC3986 2.1: For consistency, URI producers and normalizers should
            // use uppercase hexadecimal digits for all percent-encodings.
            expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,
            map: {
              // -._~!'()*
              "%24": "$",
              "%26": "&",
              "%2B": "+",
              "%2C": ",",
              "%3B": ";",
              "%3D": "=",
              "%3A": ":",
              "%40": "@"
            }
          },
          decode: {
            expression: /[\/\?#]/g,
            map: {
              "/": "%2F",
              "?": "%3F",
              "#": "%23"
            }
          }
        },
        reserved: {
          encode: {
            // RFC3986 2.1: For consistency, URI producers and normalizers should
            // use uppercase hexadecimal digits for all percent-encodings.
            expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,
            map: {
              // gen-delims
              "%3A": ":",
              "%2F": "/",
              "%3F": "?",
              "%23": "#",
              "%5B": "[",
              "%5D": "]",
              "%40": "@",
              // sub-delims
              "%21": "!",
              "%24": "$",
              "%26": "&",
              "%27": "'",
              "%28": "(",
              "%29": ")",
              "%2A": "*",
              "%2B": "+",
              "%2C": ",",
              "%3B": ";",
              "%3D": "="
            }
          }
        },
        urnpath: {
          // The characters under `encode` are the characters called out by RFC 2141 as being acceptable
          // for usage in a URN. RFC2141 also calls out "-", ".", and "_" as acceptable characters, but
          // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also
          // note that the colon character is not featured in the encoding map; this is because URI.js
          // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it
          // should not appear unencoded in a segment itself.
          // See also the note above about RFC3986 and capitalalized hex digits.
          encode: {
            expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,
            map: {
              "%21": "!",
              "%24": "$",
              "%27": "'",
              "%28": "(",
              "%29": ")",
              "%2A": "*",
              "%2B": "+",
              "%2C": ",",
              "%3B": ";",
              "%3D": "=",
              "%40": "@"
            }
          },
          // These characters are the characters called out by RFC2141 as "reserved" characters that
          // should never appear in a URN, plus the colon character (see note above).
          decode: {
            expression: /[\/\?#:]/g,
            map: {
              "/": "%2F",
              "?": "%3F",
              "#": "%23",
              ":": "%3A"
            }
          }
        }
      };
      URI.encodeQuery = function(string, escapeQuerySpace) {
        var escaped = URI.encode(string + "");
        if (escapeQuerySpace === void 0) {
          escapeQuerySpace = URI.escapeQuerySpace;
        }
        return escapeQuerySpace ? escaped.replace(/%20/g, "+") : escaped;
      };
      URI.decodeQuery = function(string, escapeQuerySpace) {
        string += "";
        if (escapeQuerySpace === void 0) {
          escapeQuerySpace = URI.escapeQuerySpace;
        }
        try {
          return URI.decode(escapeQuerySpace ? string.replace(/\+/g, "%20") : string);
        } catch (e2) {
          return string;
        }
      };
      var _parts = { "encode": "encode", "decode": "decode" };
      var _part;
      var generateAccessor = function(_group, _part2) {
        return function(string) {
          try {
            return URI[_part2](string + "").replace(URI.characters[_group][_part2].expression, function(c) {
              return URI.characters[_group][_part2].map[c];
            });
          } catch (e2) {
            return string;
          }
        };
      };
      for (_part in _parts) {
        URI[_part + "PathSegment"] = generateAccessor("pathname", _parts[_part]);
        URI[_part + "UrnPathSegment"] = generateAccessor("urnpath", _parts[_part]);
      }
      var generateSegmentedPathFunction = function(_sep, _codingFuncName, _innerCodingFuncName) {
        return function(string) {
          var actualCodingFunc;
          if (!_innerCodingFuncName) {
            actualCodingFunc = URI[_codingFuncName];
          } else {
            actualCodingFunc = function(string2) {
              return URI[_codingFuncName](URI[_innerCodingFuncName](string2));
            };
          }
          var segments = (string + "").split(_sep);
          for (var i = 0, length = segments.length; i < length; i++) {
            segments[i] = actualCodingFunc(segments[i]);
          }
          return segments.join(_sep);
        };
      };
      URI.decodePath = generateSegmentedPathFunction("/", "decodePathSegment");
      URI.decodeUrnPath = generateSegmentedPathFunction(":", "decodeUrnPathSegment");
      URI.recodePath = generateSegmentedPathFunction("/", "encodePathSegment", "decode");
      URI.recodeUrnPath = generateSegmentedPathFunction(":", "encodeUrnPathSegment", "decode");
      URI.encodeReserved = generateAccessor("reserved", "encode");
      URI.parse = function(string, parts) {
        var pos;
        if (!parts) {
          parts = {
            preventInvalidHostname: URI.preventInvalidHostname
          };
        }
        string = string.replace(URI.leading_whitespace_expression, "");
        string = string.replace(URI.ascii_tab_whitespace, "");
        pos = string.indexOf("#");
        if (pos > -1) {
          parts.fragment = string.substring(pos + 1) || null;
          string = string.substring(0, pos);
        }
        pos = string.indexOf("?");
        if (pos > -1) {
          parts.query = string.substring(pos + 1) || null;
          string = string.substring(0, pos);
        }
        string = string.replace(/^(https?|ftp|wss?)?:+[/\\]*/i, "$1://");
        string = string.replace(/^[/\\]{2,}/i, "//");
        if (string.substring(0, 2) === "//") {
          parts.protocol = null;
          string = string.substring(2);
          string = URI.parseAuthority(string, parts);
        } else {
          pos = string.indexOf(":");
          if (pos > -1) {
            parts.protocol = string.substring(0, pos) || null;
            if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {
              parts.protocol = void 0;
            } else if (string.substring(pos + 1, pos + 3).replace(/\\/g, "/") === "//") {
              string = string.substring(pos + 3);
              string = URI.parseAuthority(string, parts);
            } else {
              string = string.substring(pos + 1);
              parts.urn = true;
            }
          }
        }
        parts.path = string;
        return parts;
      };
      URI.parseHost = function(string, parts) {
        if (!string) {
          string = "";
        }
        string = string.replace(/\\/g, "/");
        var pos = string.indexOf("/");
        var bracketPos;
        var t2;
        if (pos === -1) {
          pos = string.length;
        }
        if (string.charAt(0) === "[") {
          bracketPos = string.indexOf("]");
          parts.hostname = string.substring(1, bracketPos) || null;
          parts.port = string.substring(bracketPos + 2, pos) || null;
          if (parts.port === "/") {
            parts.port = null;
          }
        } else {
          var firstColon = string.indexOf(":");
          var firstSlash = string.indexOf("/");
          var nextColon = string.indexOf(":", firstColon + 1);
          if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {
            parts.hostname = string.substring(0, pos) || null;
            parts.port = null;
          } else {
            t2 = string.substring(0, pos).split(":");
            parts.hostname = t2[0] || null;
            parts.port = t2[1] || null;
          }
        }
        if (parts.hostname && string.substring(pos).charAt(0) !== "/") {
          pos++;
          string = "/" + string;
        }
        if (parts.preventInvalidHostname) {
          URI.ensureValidHostname(parts.hostname, parts.protocol);
        }
        if (parts.port) {
          URI.ensureValidPort(parts.port);
        }
        return string.substring(pos) || "/";
      };
      URI.parseAuthority = function(string, parts) {
        string = URI.parseUserinfo(string, parts);
        return URI.parseHost(string, parts);
      };
      URI.parseUserinfo = function(string, parts) {
        var _string = string;
        var firstBackSlash = string.indexOf("\\");
        if (firstBackSlash !== -1) {
          string = string.replace(/\\/g, "/");
        }
        var firstSlash = string.indexOf("/");
        var pos = string.lastIndexOf("@", firstSlash > -1 ? firstSlash : string.length - 1);
        var t2;
        if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {
          t2 = string.substring(0, pos).split(":");
          parts.username = t2[0] ? URI.decode(t2[0]) : null;
          t2.shift();
          parts.password = t2[0] ? URI.decode(t2.join(":")) : null;
          string = _string.substring(pos + 1);
        } else {
          parts.username = null;
          parts.password = null;
        }
        return string;
      };
      URI.parseQuery = function(string, escapeQuerySpace) {
        if (!string) {
          return {};
        }
        string = string.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, "");
        if (!string) {
          return {};
        }
        var items = {};
        var splits = string.split("&");
        var length = splits.length;
        var v, name, value;
        for (var i = 0; i < length; i++) {
          v = splits[i].split("=");
          name = URI.decodeQuery(v.shift(), escapeQuerySpace);
          value = v.length ? URI.decodeQuery(v.join("="), escapeQuerySpace) : null;
          if (name === "__proto__") {
            continue;
          } else if (hasOwn.call(items, name)) {
            if (typeof items[name] === "string" || items[name] === null) {
              items[name] = [items[name]];
            }
            items[name].push(value);
          } else {
            items[name] = value;
          }
        }
        return items;
      };
      URI.build = function(parts) {
        var t2 = "";
        var requireAbsolutePath = false;
        if (parts.protocol) {
          t2 += parts.protocol + ":";
        }
        if (!parts.urn && (t2 || parts.hostname)) {
          t2 += "//";
          requireAbsolutePath = true;
        }
        t2 += URI.buildAuthority(parts) || "";
        if (typeof parts.path === "string") {
          if (parts.path.charAt(0) !== "/" && requireAbsolutePath) {
            t2 += "/";
          }
          t2 += parts.path;
        }
        if (typeof parts.query === "string" && parts.query) {
          t2 += "?" + parts.query;
        }
        if (typeof parts.fragment === "string" && parts.fragment) {
          t2 += "#" + parts.fragment;
        }
        return t2;
      };
      URI.buildHost = function(parts) {
        var t2 = "";
        if (!parts.hostname) {
          return "";
        } else if (URI.ip6_expression.test(parts.hostname)) {
          t2 += "[" + parts.hostname + "]";
        } else {
          t2 += parts.hostname;
        }
        if (parts.port) {
          t2 += ":" + parts.port;
        }
        return t2;
      };
      URI.buildAuthority = function(parts) {
        return URI.buildUserinfo(parts) + URI.buildHost(parts);
      };
      URI.buildUserinfo = function(parts) {
        var t2 = "";
        if (parts.username) {
          t2 += URI.encode(parts.username);
        }
        if (parts.password) {
          t2 += ":" + URI.encode(parts.password);
        }
        if (t2) {
          t2 += "@";
        }
        return t2;
      };
      URI.buildQuery = function(data, duplicateQueryParameters, escapeQuerySpace) {
        var t2 = "";
        var unique, key, i, length;
        for (key in data) {
          if (key === "__proto__") {
            continue;
          } else if (hasOwn.call(data, key)) {
            if (isArray(data[key])) {
              unique = {};
              for (i = 0, length = data[key].length; i < length; i++) {
                if (data[key][i] !== void 0 && unique[data[key][i] + ""] === void 0) {
                  t2 += "&" + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);
                  if (duplicateQueryParameters !== true) {
                    unique[data[key][i] + ""] = true;
                  }
                }
              }
            } else if (data[key] !== void 0) {
              t2 += "&" + URI.buildQueryParameter(key, data[key], escapeQuerySpace);
            }
          }
        }
        return t2.substring(1);
      };
      URI.buildQueryParameter = function(name, value, escapeQuerySpace) {
        return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? "=" + URI.encodeQuery(value, escapeQuerySpace) : "");
      };
      URI.addQuery = function(data, name, value) {
        if (typeof name === "object") {
          for (var key in name) {
            if (hasOwn.call(name, key)) {
              URI.addQuery(data, key, name[key]);
            }
          }
        } else if (typeof name === "string") {
          if (data[name] === void 0) {
            data[name] = value;
            return;
          } else if (typeof data[name] === "string") {
            data[name] = [data[name]];
          }
          if (!isArray(value)) {
            value = [value];
          }
          data[name] = (data[name] || []).concat(value);
        } else {
          throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        }
      };
      URI.setQuery = function(data, name, value) {
        if (typeof name === "object") {
          for (var key in name) {
            if (hasOwn.call(name, key)) {
              URI.setQuery(data, key, name[key]);
            }
          }
        } else if (typeof name === "string") {
          data[name] = value === void 0 ? null : value;
        } else {
          throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");
        }
      };
      URI.removeQuery = function(data, name, value) {
        var i, length, key;
        if (isArray(name)) {
          for (i = 0, length = name.length; i < length; i++) {
            data[name[i]] = void 0;
          }
        } else if (getType(name) === "RegExp") {
          for (key in data) {
            if (name.test(key)) {
              data[key] = void 0;
            }
          }
        } else if (typeof name === "object") {
          for (key in name) {
            if (hasOwn.call(name, key)) {
              URI.removeQuery(data, key, name[key]);
            }
          }
        } else if (typeof name === "string") {
          if (value !== void 0) {
            if (getType(value) === "RegExp") {
              if (!isArray(data[name]) && value.test(data[name])) {
                data[name] = void 0;
              } else {
                data[name] = filterArrayValues(data[name], value);
              }
            } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {
              data[name] = void 0;
            } else if (isArray(data[name])) {
              data[name] = filterArrayValues(data[name], value);
            }
          } else {
            data[name] = void 0;
          }
        } else {
          throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
        }
      };
      URI.hasQuery = function(data, name, value, withinArray) {
        switch (getType(name)) {
          case "String":
            break;
          case "RegExp":
            for (var key in data) {
              if (hasOwn.call(data, key)) {
                if (name.test(key) && (value === void 0 || URI.hasQuery(data, key, value))) {
                  return true;
                }
              }
            }
            return false;
          case "Object":
            for (var _key in name) {
              if (hasOwn.call(name, _key)) {
                if (!URI.hasQuery(data, _key, name[_key])) {
                  return false;
                }
              }
            }
            return true;
          default:
            throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
        }
        switch (getType(value)) {
          case "Undefined":
            return name in data;
          case "Boolean":
            var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);
            return value === _booly;
          case "Function":
            return !!value(data[name], name, data);
          case "Array":
            if (!isArray(data[name])) {
              return false;
            }
            var op = withinArray ? arrayContains : arraysEqual;
            return op(data[name], value);
          case "RegExp":
            if (!isArray(data[name])) {
              return Boolean(data[name] && data[name].match(value));
            }
            if (!withinArray) {
              return false;
            }
            return arrayContains(data[name], value);
          case "Number":
            value = String(value);
          case "String":
            if (!isArray(data[name])) {
              return data[name] === value;
            }
            if (!withinArray) {
              return false;
            }
            return arrayContains(data[name], value);
          default:
            throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
        }
      };
      URI.joinPaths = function() {
        var input = [];
        var segments = [];
        var nonEmptySegments = 0;
        for (var i = 0; i < arguments.length; i++) {
          var url = new URI(arguments[i]);
          input.push(url);
          var _segments = url.segment();
          for (var s = 0; s < _segments.length; s++) {
            if (typeof _segments[s] === "string") {
              segments.push(_segments[s]);
            }
            if (_segments[s]) {
              nonEmptySegments++;
            }
          }
        }
        if (!segments.length || !nonEmptySegments) {
          return new URI("");
        }
        var uri = new URI("").segment(segments);
        if (input[0].path() === "" || input[0].path().slice(0, 1) === "/") {
          uri.path("/" + uri.path());
        }
        return uri.normalize();
      };
      URI.commonPath = function(one, two) {
        var length = Math.min(one.length, two.length);
        var pos;
        for (pos = 0; pos < length; pos++) {
          if (one.charAt(pos) !== two.charAt(pos)) {
            pos--;
            break;
          }
        }
        if (pos < 1) {
          return one.charAt(0) === two.charAt(0) && one.charAt(0) === "/" ? "/" : "";
        }
        if (one.charAt(pos) !== "/" || two.charAt(pos) !== "/") {
          pos = one.substring(0, pos).lastIndexOf("/");
        }
        return one.substring(0, pos + 1);
      };
      URI.withinString = function(string, callback, options) {
        options || (options = {});
        var _start = options.start || URI.findUri.start;
        var _end = options.end || URI.findUri.end;
        var _trim = options.trim || URI.findUri.trim;
        var _parens = options.parens || URI.findUri.parens;
        var _attributeOpen = /[a-z0-9-]=["']?$/i;
        _start.lastIndex = 0;
        while (true) {
          var match = _start.exec(string);
          if (!match) {
            break;
          }
          var start = match.index;
          if (options.ignoreHtml) {
            var attributeOpen = string.slice(Math.max(start - 3, 0), start);
            if (attributeOpen && _attributeOpen.test(attributeOpen)) {
              continue;
            }
          }
          var end = start + string.slice(start).search(_end);
          var slice = string.slice(start, end);
          var parensEnd = -1;
          while (true) {
            var parensMatch = _parens.exec(slice);
            if (!parensMatch) {
              break;
            }
            var parensMatchEnd = parensMatch.index + parensMatch[0].length;
            parensEnd = Math.max(parensEnd, parensMatchEnd);
          }
          if (parensEnd > -1) {
            slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, "");
          } else {
            slice = slice.replace(_trim, "");
          }
          if (slice.length <= match[0].length) {
            continue;
          }
          if (options.ignore && options.ignore.test(slice)) {
            continue;
          }
          end = start + slice.length;
          var result = callback(slice, start, end, string);
          if (result === void 0) {
            _start.lastIndex = end;
            continue;
          }
          result = String(result);
          string = string.slice(0, start) + result + string.slice(end);
          _start.lastIndex = start + result.length;
        }
        _start.lastIndex = 0;
        return string;
      };
      URI.ensureValidHostname = function(v, protocol) {
        var hasHostname = !!v;
        var hasProtocol = !!protocol;
        var rejectEmptyHostname = false;
        if (hasProtocol) {
          rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);
        }
        if (rejectEmptyHostname && !hasHostname) {
          throw new TypeError("Hostname cannot be empty, if protocol is " + protocol);
        } else if (v && v.match(URI.invalid_hostname_characters)) {
          if (!punycode) {
            throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
          }
          if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {
            throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-:_]');
          }
        }
      };
      URI.ensureValidPort = function(v) {
        if (!v) {
          return;
        }
        var port = Number(v);
        if (isInteger(port) && port > 0 && port < 65536) {
          return;
        }
        throw new TypeError('Port "' + v + '" is not a valid port');
      };
      URI.noConflict = function(removeAll) {
        if (removeAll) {
          var unconflicted = {
            URI: this.noConflict()
          };
          if (root.URITemplate && typeof root.URITemplate.noConflict === "function") {
            unconflicted.URITemplate = root.URITemplate.noConflict();
          }
          if (root.IPv6 && typeof root.IPv6.noConflict === "function") {
            unconflicted.IPv6 = root.IPv6.noConflict();
          }
          if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === "function") {
            unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();
          }
          return unconflicted;
        } else if (root.URI === this) {
          root.URI = _URI;
        }
        return this;
      };
      p.build = function(deferBuild) {
        if (deferBuild === true) {
          this._deferred_build = true;
        } else if (deferBuild === void 0 || this._deferred_build) {
          this._string = URI.build(this._parts);
          this._deferred_build = false;
        }
        return this;
      };
      p.clone = function() {
        return new URI(this);
      };
      p.valueOf = p.toString = function() {
        return this.build(false)._string;
      };
      function generateSimpleAccessor(_part2) {
        return function(v, build) {
          if (v === void 0) {
            return this._parts[_part2] || "";
          } else {
            this._parts[_part2] = v || null;
            this.build(!build);
            return this;
          }
        };
      }
      function generatePrefixAccessor(_part2, _key) {
        return function(v, build) {
          if (v === void 0) {
            return this._parts[_part2] || "";
          } else {
            if (v !== null) {
              v = v + "";
              if (v.charAt(0) === _key) {
                v = v.substring(1);
              }
            }
            this._parts[_part2] = v;
            this.build(!build);
            return this;
          }
        };
      }
      p.protocol = generateSimpleAccessor("protocol");
      p.username = generateSimpleAccessor("username");
      p.password = generateSimpleAccessor("password");
      p.hostname = generateSimpleAccessor("hostname");
      p.port = generateSimpleAccessor("port");
      p.query = generatePrefixAccessor("query", "?");
      p.fragment = generatePrefixAccessor("fragment", "#");
      p.search = function(v, build) {
        var t2 = this.query(v, build);
        return typeof t2 === "string" && t2.length ? "?" + t2 : t2;
      };
      p.hash = function(v, build) {
        var t2 = this.fragment(v, build);
        return typeof t2 === "string" && t2.length ? "#" + t2 : t2;
      };
      p.pathname = function(v, build) {
        if (v === void 0 || v === true) {
          var res = this._parts.path || (this._parts.hostname ? "/" : "");
          return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;
        } else {
          if (this._parts.urn) {
            this._parts.path = v ? URI.recodeUrnPath(v) : "";
          } else {
            this._parts.path = v ? URI.recodePath(v) : "/";
          }
          this.build(!build);
          return this;
        }
      };
      p.path = p.pathname;
      p.href = function(href, build) {
        var key;
        if (href === void 0) {
          return this.toString();
        }
        this._string = "";
        this._parts = URI._parts();
        var _URI2 = href instanceof URI;
        var _object = typeof href === "object" && (href.hostname || href.path || href.pathname);
        if (href.nodeName) {
          var attribute = URI.getDomAttribute(href);
          href = href[attribute] || "";
          _object = false;
        }
        if (!_URI2 && _object && href.pathname !== void 0) {
          href = href.toString();
        }
        if (typeof href === "string" || href instanceof String) {
          this._parts = URI.parse(String(href), this._parts);
        } else if (_URI2 || _object) {
          var src2 = _URI2 ? href._parts : href;
          for (key in src2) {
            if (key === "query") {
              continue;
            }
            if (hasOwn.call(this._parts, key)) {
              this._parts[key] = src2[key];
            }
          }
          if (src2.query) {
            this.query(src2.query, false);
          }
        } else {
          throw new TypeError("invalid input");
        }
        this.build(!build);
        return this;
      };
      p.is = function(what) {
        var ip = false;
        var ip4 = false;
        var ip6 = false;
        var name = false;
        var sld = false;
        var idn = false;
        var punycode2 = false;
        var relative = !this._parts.urn;
        if (this._parts.hostname) {
          relative = false;
          ip4 = URI.ip4_expression.test(this._parts.hostname);
          ip6 = URI.ip6_expression.test(this._parts.hostname);
          ip = ip4 || ip6;
          name = !ip;
          sld = name && SLD && SLD.has(this._parts.hostname);
          idn = name && URI.idn_expression.test(this._parts.hostname);
          punycode2 = name && URI.punycode_expression.test(this._parts.hostname);
        }
        switch (what.toLowerCase()) {
          case "relative":
            return relative;
          case "absolute":
            return !relative;
          case "domain":
          case "name":
            return name;
          case "sld":
            return sld;
          case "ip":
            return ip;
          case "ip4":
          case "ipv4":
          case "inet4":
            return ip4;
          case "ip6":
          case "ipv6":
          case "inet6":
            return ip6;
          case "idn":
            return idn;
          case "url":
            return !this._parts.urn;
          case "urn":
            return !!this._parts.urn;
          case "punycode":
            return punycode2;
        }
        return null;
      };
      var _protocol = p.protocol;
      var _port = p.port;
      var _hostname = p.hostname;
      p.protocol = function(v, build) {
        if (v) {
          v = v.replace(/:(\/\/)?$/, "");
          if (!v.match(URI.protocol_expression)) {
            throw new TypeError('Protocol "' + v + `" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]`);
          }
        }
        return _protocol.call(this, v, build);
      };
      p.scheme = p.protocol;
      p.port = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v !== void 0) {
          if (v === 0) {
            v = null;
          }
          if (v) {
            v += "";
            if (v.charAt(0) === ":") {
              v = v.substring(1);
            }
            URI.ensureValidPort(v);
          }
        }
        return _port.call(this, v, build);
      };
      p.hostname = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v !== void 0) {
          var x = { preventInvalidHostname: this._parts.preventInvalidHostname };
          var res = URI.parseHost(v, x);
          if (res !== "/") {
            throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
          }
          v = x.hostname;
          if (this._parts.preventInvalidHostname) {
            URI.ensureValidHostname(v, this._parts.protocol);
          }
        }
        return _hostname.call(this, v, build);
      };
      p.origin = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0) {
          var protocol = this.protocol();
          var authority = this.authority();
          if (!authority) {
            return "";
          }
          return (protocol ? protocol + "://" : "") + this.authority();
        } else {
          var origin = URI(v);
          this.protocol(origin.protocol()).authority(origin.authority()).build(!build);
          return this;
        }
      };
      p.host = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0) {
          return this._parts.hostname ? URI.buildHost(this._parts) : "";
        } else {
          var res = URI.parseHost(v, this._parts);
          if (res !== "/") {
            throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
          }
          this.build(!build);
          return this;
        }
      };
      p.authority = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0) {
          return this._parts.hostname ? URI.buildAuthority(this._parts) : "";
        } else {
          var res = URI.parseAuthority(v, this._parts);
          if (res !== "/") {
            throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
          }
          this.build(!build);
          return this;
        }
      };
      p.userinfo = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0) {
          var t2 = URI.buildUserinfo(this._parts);
          return t2 ? t2.substring(0, t2.length - 1) : t2;
        } else {
          if (v[v.length - 1] !== "@") {
            v += "@";
          }
          URI.parseUserinfo(v, this._parts);
          this.build(!build);
          return this;
        }
      };
      p.resource = function(v, build) {
        var parts;
        if (v === void 0) {
          return this.path() + this.search() + this.hash();
        }
        parts = URI.parse(v);
        this._parts.path = parts.path;
        this._parts.query = parts.query;
        this._parts.fragment = parts.fragment;
        this.build(!build);
        return this;
      };
      p.subdomain = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0) {
          if (!this._parts.hostname || this.is("IP")) {
            return "";
          }
          var end = this._parts.hostname.length - this.domain().length - 1;
          return this._parts.hostname.substring(0, end) || "";
        } else {
          var e2 = this._parts.hostname.length - this.domain().length;
          var sub = this._parts.hostname.substring(0, e2);
          var replace = new RegExp("^" + escapeRegEx(sub));
          if (v && v.charAt(v.length - 1) !== ".") {
            v += ".";
          }
          if (v.indexOf(":") !== -1) {
            throw new TypeError("Domains cannot contain colons");
          }
          if (v) {
            URI.ensureValidHostname(v, this._parts.protocol);
          }
          this._parts.hostname = this._parts.hostname.replace(replace, v);
          this.build(!build);
          return this;
        }
      };
      p.domain = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (typeof v === "boolean") {
          build = v;
          v = void 0;
        }
        if (v === void 0) {
          if (!this._parts.hostname || this.is("IP")) {
            return "";
          }
          var t2 = this._parts.hostname.match(/\./g);
          if (t2 && t2.length < 2) {
            return this._parts.hostname;
          }
          var end = this._parts.hostname.length - this.tld(build).length - 1;
          end = this._parts.hostname.lastIndexOf(".", end - 1) + 1;
          return this._parts.hostname.substring(end) || "";
        } else {
          if (!v) {
            throw new TypeError("cannot set domain empty");
          }
          if (v.indexOf(":") !== -1) {
            throw new TypeError("Domains cannot contain colons");
          }
          URI.ensureValidHostname(v, this._parts.protocol);
          if (!this._parts.hostname || this.is("IP")) {
            this._parts.hostname = v;
          } else {
            var replace = new RegExp(escapeRegEx(this.domain()) + "$");
            this._parts.hostname = this._parts.hostname.replace(replace, v);
          }
          this.build(!build);
          return this;
        }
      };
      p.tld = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (typeof v === "boolean") {
          build = v;
          v = void 0;
        }
        if (v === void 0) {
          if (!this._parts.hostname || this.is("IP")) {
            return "";
          }
          var pos = this._parts.hostname.lastIndexOf(".");
          var tld = this._parts.hostname.substring(pos + 1);
          if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {
            return SLD.get(this._parts.hostname) || tld;
          }
          return tld;
        } else {
          var replace;
          if (!v) {
            throw new TypeError("cannot set TLD empty");
          } else if (v.match(/[^a-zA-Z0-9-]/)) {
            if (SLD && SLD.is(v)) {
              replace = new RegExp(escapeRegEx(this.tld()) + "$");
              this._parts.hostname = this._parts.hostname.replace(replace, v);
            } else {
              throw new TypeError('TLD "' + v + '" contains characters other than [A-Z0-9]');
            }
          } else if (!this._parts.hostname || this.is("IP")) {
            throw new ReferenceError("cannot set TLD on non-domain host");
          } else {
            replace = new RegExp(escapeRegEx(this.tld()) + "$");
            this._parts.hostname = this._parts.hostname.replace(replace, v);
          }
          this.build(!build);
          return this;
        }
      };
      p.directory = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0 || v === true) {
          if (!this._parts.path && !this._parts.hostname) {
            return "";
          }
          if (this._parts.path === "/") {
            return "/";
          }
          var end = this._parts.path.length - this.filename().length - 1;
          var res = this._parts.path.substring(0, end) || (this._parts.hostname ? "/" : "");
          return v ? URI.decodePath(res) : res;
        } else {
          var e2 = this._parts.path.length - this.filename().length;
          var directory = this._parts.path.substring(0, e2);
          var replace = new RegExp("^" + escapeRegEx(directory));
          if (!this.is("relative")) {
            if (!v) {
              v = "/";
            }
            if (v.charAt(0) !== "/") {
              v = "/" + v;
            }
          }
          if (v && v.charAt(v.length - 1) !== "/") {
            v += "/";
          }
          v = URI.recodePath(v);
          this._parts.path = this._parts.path.replace(replace, v);
          this.build(!build);
          return this;
        }
      };
      p.filename = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (typeof v !== "string") {
          if (!this._parts.path || this._parts.path === "/") {
            return "";
          }
          var pos = this._parts.path.lastIndexOf("/");
          var res = this._parts.path.substring(pos + 1);
          return v ? URI.decodePathSegment(res) : res;
        } else {
          var mutatedDirectory = false;
          if (v.charAt(0) === "/") {
            v = v.substring(1);
          }
          if (v.match(/\.?\//)) {
            mutatedDirectory = true;
          }
          var replace = new RegExp(escapeRegEx(this.filename()) + "$");
          v = URI.recodePath(v);
          this._parts.path = this._parts.path.replace(replace, v);
          if (mutatedDirectory) {
            this.normalizePath(build);
          } else {
            this.build(!build);
          }
          return this;
        }
      };
      p.suffix = function(v, build) {
        if (this._parts.urn) {
          return v === void 0 ? "" : this;
        }
        if (v === void 0 || v === true) {
          if (!this._parts.path || this._parts.path === "/") {
            return "";
          }
          var filename = this.filename();
          var pos = filename.lastIndexOf(".");
          var s, res;
          if (pos === -1) {
            return "";
          }
          s = filename.substring(pos + 1);
          res = /^[a-z0-9%]+$/i.test(s) ? s : "";
          return v ? URI.decodePathSegment(res) : res;
        } else {
          if (v.charAt(0) === ".") {
            v = v.substring(1);
          }
          var suffix = this.suffix();
          var replace;
          if (!suffix) {
            if (!v) {
              return this;
            }
            this._parts.path += "." + URI.recodePath(v);
          } else if (!v) {
            replace = new RegExp(escapeRegEx("." + suffix) + "$");
          } else {
            replace = new RegExp(escapeRegEx(suffix) + "$");
          }
          if (replace) {
            v = URI.recodePath(v);
            this._parts.path = this._parts.path.replace(replace, v);
          }
          this.build(!build);
          return this;
        }
      };
      p.segment = function(segment, v, build) {
        var separator = this._parts.urn ? ":" : "/";
        var path = this.path();
        var absolute = path.substring(0, 1) === "/";
        var segments = path.split(separator);
        if (segment !== void 0 && typeof segment !== "number") {
          build = v;
          v = segment;
          segment = void 0;
        }
        if (segment !== void 0 && typeof segment !== "number") {
          throw new Error('Bad segment "' + segment + '", must be 0-based integer');
        }
        if (absolute) {
          segments.shift();
        }
        if (segment < 0) {
          segment = Math.max(segments.length + segment, 0);
        }
        if (v === void 0) {
          return segment === void 0 ? segments : segments[segment];
        } else if (segment === null || segments[segment] === void 0) {
          if (isArray(v)) {
            segments = [];
            for (var i = 0, l2 = v.length; i < l2; i++) {
              if (!v[i].length && (!segments.length || !segments[segments.length - 1].length)) {
                continue;
              }
              if (segments.length && !segments[segments.length - 1].length) {
                segments.pop();
              }
              segments.push(trimSlashes(v[i]));
            }
          } else if (v || typeof v === "string") {
            v = trimSlashes(v);
            if (segments[segments.length - 1] === "") {
              segments[segments.length - 1] = v;
            } else {
              segments.push(v);
            }
          }
        } else {
          if (v) {
            segments[segment] = trimSlashes(v);
          } else {
            segments.splice(segment, 1);
          }
        }
        if (absolute) {
          segments.unshift("");
        }
        return this.path(segments.join(separator), build);
      };
      p.segmentCoded = function(segment, v, build) {
        var segments, i, l2;
        if (typeof segment !== "number") {
          build = v;
          v = segment;
          segment = void 0;
        }
        if (v === void 0) {
          segments = this.segment(segment, v, build);
          if (!isArray(segments)) {
            segments = segments !== void 0 ? URI.decode(segments) : void 0;
          } else {
            for (i = 0, l2 = segments.length; i < l2; i++) {
              segments[i] = URI.decode(segments[i]);
            }
          }
          return segments;
        }
        if (!isArray(v)) {
          v = typeof v === "string" || v instanceof String ? URI.encode(v) : v;
        } else {
          for (i = 0, l2 = v.length; i < l2; i++) {
            v[i] = URI.encode(v[i]);
          }
        }
        return this.segment(segment, v, build);
      };
      var q = p.query;
      p.query = function(v, build) {
        if (v === true) {
          return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        } else if (typeof v === "function") {
          var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
          var result = v.call(this, data);
          this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
          this.build(!build);
          return this;
        } else if (v !== void 0 && typeof v !== "string") {
          this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
          this.build(!build);
          return this;
        } else {
          return q.call(this, v, build);
        }
      };
      p.setQuery = function(name, value, build) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        if (typeof name === "string" || name instanceof String) {
          data[name] = value !== void 0 ? value : null;
        } else if (typeof name === "object") {
          for (var key in name) {
            if (hasOwn.call(name, key)) {
              data[key] = name[key];
            }
          }
        } else {
          throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        }
        this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        if (typeof name !== "string") {
          build = value;
        }
        this.build(!build);
        return this;
      };
      p.addQuery = function(name, value, build) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        URI.addQuery(data, name, value === void 0 ? null : value);
        this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        if (typeof name !== "string") {
          build = value;
        }
        this.build(!build);
        return this;
      };
      p.removeQuery = function(name, value, build) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        URI.removeQuery(data, name, value);
        this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        if (typeof name !== "string") {
          build = value;
        }
        this.build(!build);
        return this;
      };
      p.hasQuery = function(name, value, withinArray) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return URI.hasQuery(data, name, value, withinArray);
      };
      p.setSearch = p.setQuery;
      p.addSearch = p.addQuery;
      p.removeSearch = p.removeQuery;
      p.hasSearch = p.hasQuery;
      p.normalize = function() {
        if (this._parts.urn) {
          return this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
        }
        return this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
      };
      p.normalizeProtocol = function(build) {
        if (typeof this._parts.protocol === "string") {
          this._parts.protocol = this._parts.protocol.toLowerCase();
          this.build(!build);
        }
        return this;
      };
      p.normalizeHostname = function(build) {
        if (this._parts.hostname) {
          if (this.is("IDN") && punycode) {
            this._parts.hostname = punycode.toASCII(this._parts.hostname);
          } else if (this.is("IPv6") && IPv6) {
            this._parts.hostname = IPv6.best(this._parts.hostname);
          }
          this._parts.hostname = this._parts.hostname.toLowerCase();
          this.build(!build);
        }
        return this;
      };
      p.normalizePort = function(build) {
        if (typeof this._parts.protocol === "string" && this._parts.port === URI.defaultPorts[this._parts.protocol]) {
          this._parts.port = null;
          this.build(!build);
        }
        return this;
      };
      p.normalizePath = function(build) {
        var _path = this._parts.path;
        if (!_path) {
          return this;
        }
        if (this._parts.urn) {
          this._parts.path = URI.recodeUrnPath(this._parts.path);
          this.build(!build);
          return this;
        }
        if (this._parts.path === "/") {
          return this;
        }
        _path = URI.recodePath(_path);
        var _was_relative;
        var _leadingParents = "";
        var _parent, _pos;
        if (_path.charAt(0) !== "/") {
          _was_relative = true;
          _path = "/" + _path;
        }
        if (_path.slice(-3) === "/.." || _path.slice(-2) === "/.") {
          _path += "/";
        }
        _path = _path.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/");
        if (_was_relative) {
          _leadingParents = _path.substring(1).match(/^(\.\.\/)+/) || "";
          if (_leadingParents) {
            _leadingParents = _leadingParents[0];
          }
        }
        while (true) {
          _parent = _path.search(/\/\.\.(\/|$)/);
          if (_parent === -1) {
            break;
          } else if (_parent === 0) {
            _path = _path.substring(3);
            continue;
          }
          _pos = _path.substring(0, _parent).lastIndexOf("/");
          if (_pos === -1) {
            _pos = _parent;
          }
          _path = _path.substring(0, _pos) + _path.substring(_parent + 3);
        }
        if (_was_relative && this.is("relative")) {
          _path = _leadingParents + _path.substring(1);
        }
        this._parts.path = _path;
        this.build(!build);
        return this;
      };
      p.normalizePathname = p.normalizePath;
      p.normalizeQuery = function(build) {
        if (typeof this._parts.query === "string") {
          if (!this._parts.query.length) {
            this._parts.query = null;
          } else {
            this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));
          }
          this.build(!build);
        }
        return this;
      };
      p.normalizeFragment = function(build) {
        if (!this._parts.fragment) {
          this._parts.fragment = null;
          this.build(!build);
        }
        return this;
      };
      p.normalizeSearch = p.normalizeQuery;
      p.normalizeHash = p.normalizeFragment;
      p.iso8859 = function() {
        var e2 = URI.encode;
        var d = URI.decode;
        URI.encode = escape;
        URI.decode = decodeURIComponent;
        try {
          this.normalize();
        } finally {
          URI.encode = e2;
          URI.decode = d;
        }
        return this;
      };
      p.unicode = function() {
        var e2 = URI.encode;
        var d = URI.decode;
        URI.encode = strictEncodeURIComponent;
        URI.decode = unescape;
        try {
          this.normalize();
        } finally {
          URI.encode = e2;
          URI.decode = d;
        }
        return this;
      };
      p.readable = function() {
        var uri = this.clone();
        uri.username("").password("").normalize();
        var t2 = "";
        if (uri._parts.protocol) {
          t2 += uri._parts.protocol + "://";
        }
        if (uri._parts.hostname) {
          if (uri.is("punycode") && punycode) {
            t2 += punycode.toUnicode(uri._parts.hostname);
            if (uri._parts.port) {
              t2 += ":" + uri._parts.port;
            }
          } else {
            t2 += uri.host();
          }
        }
        if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== "/") {
          t2 += "/";
        }
        t2 += uri.path(true);
        if (uri._parts.query) {
          var q2 = "";
          for (var i = 0, qp = uri._parts.query.split("&"), l2 = qp.length; i < l2; i++) {
            var kv = (qp[i] || "").split("=");
            q2 += "&" + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace).replace(/&/g, "%26");
            if (kv[1] !== void 0) {
              q2 += "=" + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace).replace(/&/g, "%26");
            }
          }
          t2 += "?" + q2.substring(1);
        }
        t2 += URI.decodeQuery(uri.hash(), true);
        return t2;
      };
      p.absoluteTo = function(base) {
        var resolved = this.clone();
        var properties = ["protocol", "username", "password", "hostname", "port"];
        var basedir, i, p2;
        if (this._parts.urn) {
          throw new Error("URNs do not have any generally defined hierarchical components");
        }
        if (!(base instanceof URI)) {
          base = new URI(base);
        }
        if (resolved._parts.protocol) {
          return resolved;
        } else {
          resolved._parts.protocol = base._parts.protocol;
        }
        if (this._parts.hostname) {
          return resolved;
        }
        for (i = 0; p2 = properties[i]; i++) {
          resolved._parts[p2] = base._parts[p2];
        }
        if (!resolved._parts.path) {
          resolved._parts.path = base._parts.path;
          if (!resolved._parts.query) {
            resolved._parts.query = base._parts.query;
          }
        } else {
          if (resolved._parts.path.substring(-2) === "..") {
            resolved._parts.path += "/";
          }
          if (resolved.path().charAt(0) !== "/") {
            basedir = base.directory();
            basedir = basedir ? basedir : base.path().indexOf("/") === 0 ? "/" : "";
            resolved._parts.path = (basedir ? basedir + "/" : "") + resolved._parts.path;
            resolved.normalizePath();
          }
        }
        resolved.build();
        return resolved;
      };
      p.relativeTo = function(base) {
        var relative = this.clone().normalize();
        var relativeParts, baseParts, common, relativePath, basePath;
        if (relative._parts.urn) {
          throw new Error("URNs do not have any generally defined hierarchical components");
        }
        base = new URI(base).normalize();
        relativeParts = relative._parts;
        baseParts = base._parts;
        relativePath = relative.path();
        basePath = base.path();
        if (relativePath.charAt(0) !== "/") {
          throw new Error("URI is already relative");
        }
        if (basePath.charAt(0) !== "/") {
          throw new Error("Cannot calculate a URI relative to another relative URI");
        }
        if (relativeParts.protocol === baseParts.protocol) {
          relativeParts.protocol = null;
        }
        if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {
          return relative.build();
        }
        if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {
          return relative.build();
        }
        if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {
          relativeParts.hostname = null;
          relativeParts.port = null;
        } else {
          return relative.build();
        }
        if (relativePath === basePath) {
          relativeParts.path = "";
          return relative.build();
        }
        common = URI.commonPath(relativePath, basePath);
        if (!common) {
          return relative.build();
        }
        var parents = baseParts.path.substring(common.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
        relativeParts.path = parents + relativeParts.path.substring(common.length) || "./";
        return relative.build();
      };
      p.equals = function(uri) {
        var one = this.clone();
        var two = new URI(uri);
        var one_map = {};
        var two_map = {};
        var checked = {};
        var one_query, two_query, key;
        one.normalize();
        two.normalize();
        if (one.toString() === two.toString()) {
          return true;
        }
        one_query = one.query();
        two_query = two.query();
        one.query("");
        two.query("");
        if (one.toString() !== two.toString()) {
          return false;
        }
        if (one_query.length !== two_query.length) {
          return false;
        }
        one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);
        two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);
        for (key in one_map) {
          if (hasOwn.call(one_map, key)) {
            if (!isArray(one_map[key])) {
              if (one_map[key] !== two_map[key]) {
                return false;
              }
            } else if (!arraysEqual(one_map[key], two_map[key])) {
              return false;
            }
            checked[key] = true;
          }
        }
        for (key in two_map) {
          if (hasOwn.call(two_map, key)) {
            if (!checked[key]) {
              return false;
            }
          }
        }
        return true;
      };
      p.preventInvalidHostname = function(v) {
        this._parts.preventInvalidHostname = !!v;
        return this;
      };
      p.duplicateQueryParameters = function(v) {
        this._parts.duplicateQueryParameters = !!v;
        return this;
      };
      p.escapeQuerySpace = function(v) {
        this._parts.escapeQuerySpace = !!v;
        return this;
      };
      return URI;
    });
  }
});

// node_modules/axios/dist/browser/axios.cjs
var require_axios = __commonJS({
  "node_modules/axios/dist/browser/axios.cjs"(exports, module) {
    "use strict";
    function bind(fn, thisArg) {
      return function wrap() {
        return fn.apply(thisArg, arguments);
      };
    }
    var { toString } = Object.prototype;
    var { getPrototypeOf } = Object;
    var { iterator, toStringTag } = Symbol;
    var kindOf = /* @__PURE__ */ ((cache) => (thing) => {
      const str = toString.call(thing);
      return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
    })(/* @__PURE__ */ Object.create(null));
    var kindOfTest = (type) => {
      type = type.toLowerCase();
      return (thing) => kindOf(thing) === type;
    };
    var typeOfTest = (type) => (thing) => typeof thing === type;
    var { isArray } = Array;
    var isUndefined = typeOfTest("undefined");
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction$1(val.constructor.isBuffer) && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest("ArrayBuffer");
    function isArrayBufferView(val) {
      let result;
      if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    var isString = typeOfTest("string");
    var isFunction$1 = typeOfTest("function");
    var isNumber = typeOfTest("number");
    var isObject = (thing) => thing !== null && typeof thing === "object";
    var isBoolean = (thing) => thing === true || thing === false;
    var isPlainObject = (val) => {
      if (kindOf(val) !== "object") {
        return false;
      }
      const prototype2 = getPrototypeOf(val);
      return (prototype2 === null || prototype2 === Object.prototype || Object.getPrototypeOf(prototype2) === null) && !(toStringTag in val) && !(iterator in val);
    };
    var isEmptyObject = (val) => {
      if (!isObject(val) || isBuffer(val)) {
        return false;
      }
      try {
        return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;
      } catch (e2) {
        return false;
      }
    };
    var isDate = kindOfTest("Date");
    var isFile = kindOfTest("File");
    var isBlob = kindOfTest("Blob");
    var isFileList = kindOfTest("FileList");
    var isStream = (val) => isObject(val) && isFunction$1(val.pipe);
    var isFormData = (thing) => {
      let kind;
      return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction$1(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
      kind === "object" && isFunction$1(thing.toString) && thing.toString() === "[object FormData]"));
    };
    var isURLSearchParams = kindOfTest("URLSearchParams");
    var [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
    var trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    function forEach(obj, fn, { allOwnKeys = false } = {}) {
      if (obj === null || typeof obj === "undefined") {
        return;
      }
      let i;
      let l2;
      if (typeof obj !== "object") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (i = 0, l2 = obj.length; i < l2; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        if (isBuffer(obj)) {
          return;
        }
        const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
        const len = keys.length;
        let key;
        for (i = 0; i < len; i++) {
          key = keys[i];
          fn.call(null, obj[key], key, obj);
        }
      }
    }
    function findKey(obj, key) {
      if (isBuffer(obj)) {
        return null;
      }
      key = key.toLowerCase();
      const keys = Object.keys(obj);
      let i = keys.length;
      let _key;
      while (i-- > 0) {
        _key = keys[i];
        if (key === _key.toLowerCase()) {
          return _key;
        }
      }
      return null;
    }
    var _global = (() => {
      if (typeof globalThis !== "undefined") return globalThis;
      return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
    })();
    var isContextDefined = (context) => !isUndefined(context) && context !== _global;
    function merge() {
      const { caseless, skipUndefined } = isContextDefined(this) && this || {};
      const result = {};
      const assignValue = (val, key) => {
        const targetKey = caseless && findKey(result, key) || key;
        if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
          result[targetKey] = merge(result[targetKey], val);
        } else if (isPlainObject(val)) {
          result[targetKey] = merge({}, val);
        } else if (isArray(val)) {
          result[targetKey] = val.slice();
        } else if (!skipUndefined || !isUndefined(val)) {
          result[targetKey] = val;
        }
      };
      for (let i = 0, l2 = arguments.length; i < l2; i++) {
        arguments[i] && forEach(arguments[i], assignValue);
      }
      return result;
    }
    var extend = (a, b, thisArg, { allOwnKeys } = {}) => {
      forEach(b, (val, key) => {
        if (thisArg && isFunction$1(val)) {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      }, { allOwnKeys });
      return a;
    };
    var stripBOM = (content) => {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    };
    var inherits = (constructor, superConstructor, props, descriptors2) => {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
      constructor.prototype.constructor = constructor;
      Object.defineProperty(constructor, "super", {
        value: superConstructor.prototype
      });
      props && Object.assign(constructor.prototype, props);
    };
    var toFlatObject = (sourceObj, destObj, filter, propFilter) => {
      let props;
      let i;
      let prop;
      const merged = {};
      destObj = destObj || {};
      if (sourceObj == null) return destObj;
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = filter !== false && getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    };
    var endsWith = (str, searchString, position2) => {
      str = String(str);
      if (position2 === void 0 || position2 > str.length) {
        position2 = str.length;
      }
      position2 -= searchString.length;
      const lastIndex = str.indexOf(searchString, position2);
      return lastIndex !== -1 && lastIndex === position2;
    };
    var toArray = (thing) => {
      if (!thing) return null;
      if (isArray(thing)) return thing;
      let i = thing.length;
      if (!isNumber(i)) return null;
      const arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    };
    var isTypedArray = /* @__PURE__ */ ((TypedArray) => {
      return (thing) => {
        return TypedArray && thing instanceof TypedArray;
      };
    })(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
    var forEachEntry = (obj, fn) => {
      const generator = obj && obj[iterator];
      const _iterator = generator.call(obj);
      let result;
      while ((result = _iterator.next()) && !result.done) {
        const pair = result.value;
        fn.call(obj, pair[0], pair[1]);
      }
    };
    var matchAll = (regExp, str) => {
      let matches;
      const arr = [];
      while ((matches = regExp.exec(str)) !== null) {
        arr.push(matches);
      }
      return arr;
    };
    var isHTMLForm = kindOfTest("HTMLFormElement");
    var toCamelCase = (str) => {
      return str.toLowerCase().replace(
        /[-_\s]([a-z\d])(\w*)/g,
        function replacer(m, p1, p2) {
          return p1.toUpperCase() + p2;
        }
      );
    };
    var hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
    var isRegExp = kindOfTest("RegExp");
    var reduceDescriptors = (obj, reducer) => {
      const descriptors2 = Object.getOwnPropertyDescriptors(obj);
      const reducedDescriptors = {};
      forEach(descriptors2, (descriptor, name) => {
        let ret;
        if ((ret = reducer(descriptor, name, obj)) !== false) {
          reducedDescriptors[name] = ret || descriptor;
        }
      });
      Object.defineProperties(obj, reducedDescriptors);
    };
    var freezeMethods = (obj) => {
      reduceDescriptors(obj, (descriptor, name) => {
        if (isFunction$1(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
          return false;
        }
        const value = obj[name];
        if (!isFunction$1(value)) return;
        descriptor.enumerable = false;
        if ("writable" in descriptor) {
          descriptor.writable = false;
          return;
        }
        if (!descriptor.set) {
          descriptor.set = () => {
            throw Error("Can not rewrite read-only method '" + name + "'");
          };
        }
      });
    };
    var toObjectSet = (arrayOrString, delimiter) => {
      const obj = {};
      const define2 = (arr) => {
        arr.forEach((value) => {
          obj[value] = true;
        });
      };
      isArray(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
      return obj;
    };
    var noop = () => {
    };
    var toFiniteNumber = (value, defaultValue) => {
      return value != null && Number.isFinite(value = +value) ? value : defaultValue;
    };
    function isSpecCompliantForm(thing) {
      return !!(thing && isFunction$1(thing.append) && thing[toStringTag] === "FormData" && thing[iterator]);
    }
    var toJSONObject = (obj) => {
      const stack = new Array(10);
      const visit = (source, i) => {
        if (isObject(source)) {
          if (stack.indexOf(source) >= 0) {
            return;
          }
          if (isBuffer(source)) {
            return source;
          }
          if (!("toJSON" in source)) {
            stack[i] = source;
            const target = isArray(source) ? [] : {};
            forEach(source, (value, key) => {
              const reducedValue = visit(value, i + 1);
              !isUndefined(reducedValue) && (target[key] = reducedValue);
            });
            stack[i] = void 0;
            return target;
          }
        }
        return source;
      };
      return visit(obj, 0);
    };
    var isAsyncFn = kindOfTest("AsyncFunction");
    var isThenable = (thing) => thing && (isObject(thing) || isFunction$1(thing)) && isFunction$1(thing.then) && isFunction$1(thing.catch);
    var _setImmediate = ((setImmediateSupported, postMessageSupported) => {
      if (setImmediateSupported) {
        return setImmediate;
      }
      return postMessageSupported ? ((token, callbacks) => {
        _global.addEventListener("message", ({ source, data }) => {
          if (source === _global && data === token) {
            callbacks.length && callbacks.shift()();
          }
        }, false);
        return (cb) => {
          callbacks.push(cb);
          _global.postMessage(token, "*");
        };
      })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
    })(
      typeof setImmediate === "function",
      isFunction$1(_global.postMessage)
    );
    var asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
    var isIterable = (thing) => thing != null && isFunction$1(thing[iterator]);
    var utils$1 = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isBoolean,
      isObject,
      isPlainObject,
      isEmptyObject,
      isReadableStream,
      isRequest,
      isResponse,
      isHeaders,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isRegExp,
      isFunction: isFunction$1,
      isStream,
      isURLSearchParams,
      isTypedArray,
      isFileList,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      forEachEntry,
      matchAll,
      isHTMLForm,
      hasOwnProperty,
      hasOwnProp: hasOwnProperty,
      // an alias to avoid ESLint no-prototype-builtins detection
      reduceDescriptors,
      freezeMethods,
      toObjectSet,
      toCamelCase,
      noop,
      toFiniteNumber,
      findKey,
      global: _global,
      isContextDefined,
      isSpecCompliantForm,
      toJSONObject,
      isAsyncFn,
      isThenable,
      setImmediate: _setImmediate,
      asap,
      isIterable
    };
    function AxiosError(message, code, config, request, response) {
      Error.call(this);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      } else {
        this.stack = new Error().stack;
      }
      this.message = message;
      this.name = "AxiosError";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      if (response) {
        this.response = response;
        this.status = response.status ? response.status : null;
      }
    }
    utils$1.inherits(AxiosError, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: utils$1.toJSONObject(this.config),
          code: this.code,
          status: this.status
        };
      }
    });
    var prototype$1 = AxiosError.prototype;
    var descriptors = {};
    [
      "ERR_BAD_OPTION_VALUE",
      "ERR_BAD_OPTION",
      "ECONNABORTED",
      "ETIMEDOUT",
      "ERR_NETWORK",
      "ERR_FR_TOO_MANY_REDIRECTS",
      "ERR_DEPRECATED",
      "ERR_BAD_RESPONSE",
      "ERR_BAD_REQUEST",
      "ERR_CANCELED",
      "ERR_NOT_SUPPORT",
      "ERR_INVALID_URL"
      // eslint-disable-next-line func-names
    ].forEach((code) => {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError, descriptors);
    Object.defineProperty(prototype$1, "isAxiosError", { value: true });
    AxiosError.from = (error, code, config, request, response, customProps) => {
      const axiosError = Object.create(prototype$1);
      utils$1.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      }, (prop) => {
        return prop !== "isAxiosError";
      });
      const msg = error && error.message ? error.message : "Error";
      const errCode = code == null && error ? error.code : code;
      AxiosError.call(axiosError, msg, errCode, config, request, response);
      if (error && axiosError.cause == null) {
        Object.defineProperty(axiosError, "cause", { value: error, configurable: true });
      }
      axiosError.name = error && error.name || "Error";
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    var httpAdapter = null;
    function isVisitable(thing) {
      return utils$1.isPlainObject(thing) || utils$1.isArray(thing);
    }
    function removeBrackets(key) {
      return utils$1.endsWith(key, "[]") ? key.slice(0, -2) : key;
    }
    function renderKey(path, key, dots) {
      if (!path) return key;
      return path.concat(key).map(function each(token, i) {
        token = removeBrackets(token);
        return !dots && i ? "[" + token + "]" : token;
      }).join(dots ? "." : "");
    }
    function isFlatArray(arr) {
      return utils$1.isArray(arr) && !arr.some(isVisitable);
    }
    var predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {
      return /^is[A-Z]/.test(prop);
    });
    function toFormData(obj, formData, options) {
      if (!utils$1.isObject(obj)) {
        throw new TypeError("target must be an object");
      }
      formData = formData || new FormData();
      options = utils$1.toFlatObject(options, {
        metaTokens: true,
        dots: false,
        indexes: false
      }, false, function defined(option, source) {
        return !utils$1.isUndefined(source[option]);
      });
      const metaTokens = options.metaTokens;
      const visitor = options.visitor || defaultVisitor;
      const dots = options.dots;
      const indexes = options.indexes;
      const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
      const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);
      if (!utils$1.isFunction(visitor)) {
        throw new TypeError("visitor must be a function");
      }
      function convertValue(value) {
        if (value === null) return "";
        if (utils$1.isDate(value)) {
          return value.toISOString();
        }
        if (utils$1.isBoolean(value)) {
          return value.toString();
        }
        if (!useBlob && utils$1.isBlob(value)) {
          throw new AxiosError("Blob is not supported. Use a Buffer instead.");
        }
        if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {
          return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function defaultVisitor(value, key, path) {
        let arr = value;
        if (value && !path && typeof value === "object") {
          if (utils$1.endsWith(key, "{}")) {
            key = metaTokens ? key : key.slice(0, -2);
            value = JSON.stringify(value);
          } else if (utils$1.isArray(value) && isFlatArray(value) || (utils$1.isFileList(value) || utils$1.endsWith(key, "[]")) && (arr = utils$1.toArray(value))) {
            key = removeBrackets(key);
            arr.forEach(function each(el, index) {
              !(utils$1.isUndefined(el) || el === null) && formData.append(
                // eslint-disable-next-line no-nested-ternary
                indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + "[]",
                convertValue(el)
              );
            });
            return false;
          }
        }
        if (isVisitable(value)) {
          return true;
        }
        formData.append(renderKey(path, key, dots), convertValue(value));
        return false;
      }
      const stack = [];
      const exposedHelpers = Object.assign(predicates, {
        defaultVisitor,
        convertValue,
        isVisitable
      });
      function build(value, path) {
        if (utils$1.isUndefined(value)) return;
        if (stack.indexOf(value) !== -1) {
          throw Error("Circular reference detected in " + path.join("."));
        }
        stack.push(value);
        utils$1.forEach(value, function each(el, key) {
          const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(
            formData,
            el,
            utils$1.isString(key) ? key.trim() : key,
            path,
            exposedHelpers
          );
          if (result === true) {
            build(el, path ? path.concat(key) : [key]);
          }
        });
        stack.pop();
      }
      if (!utils$1.isObject(obj)) {
        throw new TypeError("data must be an object");
      }
      build(obj);
      return formData;
    }
    function encode$1(str) {
      const charMap = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+",
        "%00": "\0"
      };
      return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
        return charMap[match];
      });
    }
    function AxiosURLSearchParams(params, options) {
      this._pairs = [];
      params && toFormData(params, this, options);
    }
    var prototype = AxiosURLSearchParams.prototype;
    prototype.append = function append(name, value) {
      this._pairs.push([name, value]);
    };
    prototype.toString = function toString2(encoder) {
      const _encode = encoder ? function(value) {
        return encoder.call(this, value, encode$1);
      } : encode$1;
      return this._pairs.map(function each(pair) {
        return _encode(pair[0]) + "=" + _encode(pair[1]);
      }, "").join("&");
    };
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+");
    }
    function buildURL(url, params, options) {
      if (!params) {
        return url;
      }
      const _encode = options && options.encode || encode;
      if (utils$1.isFunction(options)) {
        options = {
          serialize: options
        };
      }
      const serializeFn = options && options.serialize;
      let serializedParams;
      if (serializeFn) {
        serializedParams = serializeFn(params, options);
      } else {
        serializedParams = utils$1.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams(params, options).toString(_encode);
      }
      if (serializedParams) {
        const hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
      }
      return url;
    }
    var InterceptorManager = class {
      constructor() {
        this.handlers = [];
      }
      /**
       * Add a new interceptor to the stack
       *
       * @param {Function} fulfilled The function to handle `then` for a `Promise`
       * @param {Function} rejected The function to handle `reject` for a `Promise`
       *
       * @return {Number} An ID used to remove interceptor later
       */
      use(fulfilled, rejected, options) {
        this.handlers.push({
          fulfilled,
          rejected,
          synchronous: options ? options.synchronous : false,
          runWhen: options ? options.runWhen : null
        });
        return this.handlers.length - 1;
      }
      /**
       * Remove an interceptor from the stack
       *
       * @param {Number} id The ID that was returned by `use`
       *
       * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
       */
      eject(id) {
        if (this.handlers[id]) {
          this.handlers[id] = null;
        }
      }
      /**
       * Clear all interceptors from the stack
       *
       * @returns {void}
       */
      clear() {
        if (this.handlers) {
          this.handlers = [];
        }
      }
      /**
       * Iterate over all the registered interceptors
       *
       * This method is particularly useful for skipping over any
       * interceptors that may have become `null` calling `eject`.
       *
       * @param {Function} fn The function to call for each interceptor
       *
       * @returns {void}
       */
      forEach(fn) {
        utils$1.forEach(this.handlers, function forEachHandler(h) {
          if (h !== null) {
            fn(h);
          }
        });
      }
    };
    var InterceptorManager$1 = InterceptorManager;
    var transitionalDefaults = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
    var URLSearchParams$1 = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams;
    var FormData$1 = typeof FormData !== "undefined" ? FormData : null;
    var Blob$1 = typeof Blob !== "undefined" ? Blob : null;
    var platform$1 = {
      isBrowser: true,
      classes: {
        URLSearchParams: URLSearchParams$1,
        FormData: FormData$1,
        Blob: Blob$1
      },
      protocols: ["http", "https", "file", "blob", "url", "data"]
    };
    var hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
    var _navigator = typeof navigator === "object" && navigator || void 0;
    var hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
    var hasStandardBrowserWebWorkerEnv = (() => {
      return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
      self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
    })();
    var origin = hasBrowserEnv && window.location.href || "http://localhost";
    var utils = Object.freeze({
      __proto__: null,
      hasBrowserEnv,
      hasStandardBrowserWebWorkerEnv,
      hasStandardBrowserEnv,
      navigator: _navigator,
      origin
    });
    var platform = {
      ...utils,
      ...platform$1
    };
    function toURLEncodedForm(data, options) {
      return toFormData(data, new platform.classes.URLSearchParams(), {
        visitor: function(value, key, path, helpers) {
          if (platform.isNode && utils$1.isBuffer(value)) {
            this.append(key, value.toString("base64"));
            return false;
          }
          return helpers.defaultVisitor.apply(this, arguments);
        },
        ...options
      });
    }
    function parsePropPath(name) {
      return utils$1.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
        return match[0] === "[]" ? "" : match[1] || match[0];
      });
    }
    function arrayToObject(arr) {
      const obj = {};
      const keys = Object.keys(arr);
      let i;
      const len = keys.length;
      let key;
      for (i = 0; i < len; i++) {
        key = keys[i];
        obj[key] = arr[key];
      }
      return obj;
    }
    function formDataToJSON(formData) {
      function buildPath(path, value, target, index) {
        let name = path[index++];
        if (name === "__proto__") return true;
        const isNumericKey = Number.isFinite(+name);
        const isLast = index >= path.length;
        name = !name && utils$1.isArray(target) ? target.length : name;
        if (isLast) {
          if (utils$1.hasOwnProp(target, name)) {
            target[name] = [target[name], value];
          } else {
            target[name] = value;
          }
          return !isNumericKey;
        }
        if (!target[name] || !utils$1.isObject(target[name])) {
          target[name] = [];
        }
        const result = buildPath(path, value, target[name], index);
        if (result && utils$1.isArray(target[name])) {
          target[name] = arrayToObject(target[name]);
        }
        return !isNumericKey;
      }
      if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {
        const obj = {};
        utils$1.forEachEntry(formData, (name, value) => {
          buildPath(parsePropPath(name), value, obj, 0);
        });
        return obj;
      }
      return null;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils$1.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils$1.trim(rawValue);
        } catch (e2) {
          if (e2.name !== "SyntaxError") {
            throw e2;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: ["xhr", "http", "fetch"],
      transformRequest: [function transformRequest(data, headers) {
        const contentType = headers.getContentType() || "";
        const hasJSONContentType = contentType.indexOf("application/json") > -1;
        const isObjectPayload = utils$1.isObject(data);
        if (isObjectPayload && utils$1.isHTMLForm(data)) {
          data = new FormData(data);
        }
        const isFormData2 = utils$1.isFormData(data);
        if (isFormData2) {
          return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;
        }
        if (utils$1.isArrayBuffer(data) || utils$1.isBuffer(data) || utils$1.isStream(data) || utils$1.isFile(data) || utils$1.isBlob(data) || utils$1.isReadableStream(data)) {
          return data;
        }
        if (utils$1.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils$1.isURLSearchParams(data)) {
          headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
          return data.toString();
        }
        let isFileList2;
        if (isObjectPayload) {
          if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
            return toURLEncodedForm(data, this.formSerializer).toString();
          }
          if ((isFileList2 = utils$1.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
            const _FormData = this.env && this.env.FormData;
            return toFormData(
              isFileList2 ? { "files[]": data } : data,
              _FormData && new _FormData(),
              this.formSerializer
            );
          }
        }
        if (isObjectPayload || hasJSONContentType) {
          headers.setContentType("application/json", false);
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        const transitional = this.transitional || defaults.transitional;
        const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        const JSONRequested = this.responseType === "json";
        if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {
          return data;
        }
        if (data && utils$1.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
          const silentJSONParsing = transitional && transitional.silentJSONParsing;
          const strictJSONParsing = !silentJSONParsing && JSONRequested;
          try {
            return JSON.parse(data, this.parseReviver);
          } catch (e2) {
            if (strictJSONParsing) {
              if (e2.name === "SyntaxError") {
                throw AxiosError.from(e2, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e2;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: platform.classes.FormData,
        Blob: platform.classes.Blob
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          "Accept": "application/json, text/plain, */*",
          "Content-Type": void 0
        }
      }
    };
    utils$1.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
      defaults.headers[method] = {};
    });
    var defaults$1 = defaults;
    var ignoreDuplicateOf = utils$1.toObjectSet([
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent"
    ]);
    var parseHeaders = (rawHeaders) => {
      const parsed = {};
      let key;
      let val;
      let i;
      rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
        i = line.indexOf(":");
        key = line.substring(0, i).trim().toLowerCase();
        val = line.substring(i + 1).trim();
        if (!key || parsed[key] && ignoreDuplicateOf[key]) {
          return;
        }
        if (key === "set-cookie") {
          if (parsed[key]) {
            parsed[key].push(val);
          } else {
            parsed[key] = [val];
          }
        } else {
          parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
        }
      });
      return parsed;
    };
    var $internals = Symbol("internals");
    function normalizeHeader(header) {
      return header && String(header).trim().toLowerCase();
    }
    function normalizeValue(value) {
      if (value === false || value == null) {
        return value;
      }
      return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);
    }
    function parseTokens(str) {
      const tokens = /* @__PURE__ */ Object.create(null);
      const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
      let match;
      while (match = tokensRE.exec(str)) {
        tokens[match[1]] = match[2];
      }
      return tokens;
    }
    var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
    function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
      if (utils$1.isFunction(filter)) {
        return filter.call(this, value, header);
      }
      if (isHeaderNameFilter) {
        value = header;
      }
      if (!utils$1.isString(value)) return;
      if (utils$1.isString(filter)) {
        return value.indexOf(filter) !== -1;
      }
      if (utils$1.isRegExp(filter)) {
        return filter.test(value);
      }
    }
    function formatHeader(header) {
      return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
        return char.toUpperCase() + str;
      });
    }
    function buildAccessors(obj, header) {
      const accessorName = utils$1.toCamelCase(" " + header);
      ["get", "set", "has"].forEach((methodName) => {
        Object.defineProperty(obj, methodName + accessorName, {
          value: function(arg1, arg2, arg3) {
            return this[methodName].call(this, header, arg1, arg2, arg3);
          },
          configurable: true
        });
      });
    }
    var AxiosHeaders = class {
      constructor(headers) {
        headers && this.set(headers);
      }
      set(header, valueOrRewrite, rewrite) {
        const self2 = this;
        function setHeader(_value, _header, _rewrite) {
          const lHeader = normalizeHeader(_header);
          if (!lHeader) {
            throw new Error("header name must be a non-empty string");
          }
          const key = utils$1.findKey(self2, lHeader);
          if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
            self2[key || _header] = normalizeValue(_value);
          }
        }
        const setHeaders = (headers, _rewrite) => utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
        if (utils$1.isPlainObject(header) || header instanceof this.constructor) {
          setHeaders(header, valueOrRewrite);
        } else if (utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
          setHeaders(parseHeaders(header), valueOrRewrite);
        } else if (utils$1.isObject(header) && utils$1.isIterable(header)) {
          let obj = {}, dest, key;
          for (const entry of header) {
            if (!utils$1.isArray(entry)) {
              throw TypeError("Object iterator must return a key-value pair");
            }
            obj[key = entry[0]] = (dest = obj[key]) ? utils$1.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]] : entry[1];
          }
          setHeaders(obj, valueOrRewrite);
        } else {
          header != null && setHeader(valueOrRewrite, header, rewrite);
        }
        return this;
      }
      get(header, parser) {
        header = normalizeHeader(header);
        if (header) {
          const key = utils$1.findKey(this, header);
          if (key) {
            const value = this[key];
            if (!parser) {
              return value;
            }
            if (parser === true) {
              return parseTokens(value);
            }
            if (utils$1.isFunction(parser)) {
              return parser.call(this, value, key);
            }
            if (utils$1.isRegExp(parser)) {
              return parser.exec(value);
            }
            throw new TypeError("parser must be boolean|regexp|function");
          }
        }
      }
      has(header, matcher) {
        header = normalizeHeader(header);
        if (header) {
          const key = utils$1.findKey(this, header);
          return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
        }
        return false;
      }
      delete(header, matcher) {
        const self2 = this;
        let deleted = false;
        function deleteHeader(_header) {
          _header = normalizeHeader(_header);
          if (_header) {
            const key = utils$1.findKey(self2, _header);
            if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
              delete self2[key];
              deleted = true;
            }
          }
        }
        if (utils$1.isArray(header)) {
          header.forEach(deleteHeader);
        } else {
          deleteHeader(header);
        }
        return deleted;
      }
      clear(matcher) {
        const keys = Object.keys(this);
        let i = keys.length;
        let deleted = false;
        while (i--) {
          const key = keys[i];
          if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
            delete this[key];
            deleted = true;
          }
        }
        return deleted;
      }
      normalize(format) {
        const self2 = this;
        const headers = {};
        utils$1.forEach(this, (value, header) => {
          const key = utils$1.findKey(headers, header);
          if (key) {
            self2[key] = normalizeValue(value);
            delete self2[header];
            return;
          }
          const normalized = format ? formatHeader(header) : String(header).trim();
          if (normalized !== header) {
            delete self2[header];
          }
          self2[normalized] = normalizeValue(value);
          headers[normalized] = true;
        });
        return this;
      }
      concat(...targets) {
        return this.constructor.concat(this, ...targets);
      }
      toJSON(asStrings) {
        const obj = /* @__PURE__ */ Object.create(null);
        utils$1.forEach(this, (value, header) => {
          value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(", ") : value);
        });
        return obj;
      }
      [Symbol.iterator]() {
        return Object.entries(this.toJSON())[Symbol.iterator]();
      }
      toString() {
        return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
      }
      getSetCookie() {
        return this.get("set-cookie") || [];
      }
      get [Symbol.toStringTag]() {
        return "AxiosHeaders";
      }
      static from(thing) {
        return thing instanceof this ? thing : new this(thing);
      }
      static concat(first, ...targets) {
        const computed = new this(first);
        targets.forEach((target) => computed.set(target));
        return computed;
      }
      static accessor(header) {
        const internals = this[$internals] = this[$internals] = {
          accessors: {}
        };
        const accessors = internals.accessors;
        const prototype2 = this.prototype;
        function defineAccessor(_header) {
          const lHeader = normalizeHeader(_header);
          if (!accessors[lHeader]) {
            buildAccessors(prototype2, _header);
            accessors[lHeader] = true;
          }
        }
        utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
        return this;
      }
    };
    AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
    utils$1.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
      let mapped = key[0].toUpperCase() + key.slice(1);
      return {
        get: () => value,
        set(headerValue) {
          this[mapped] = headerValue;
        }
      };
    });
    utils$1.freezeMethods(AxiosHeaders);
    var AxiosHeaders$1 = AxiosHeaders;
    function transformData(fns, response) {
      const config = this || defaults$1;
      const context = response || config;
      const headers = AxiosHeaders$1.from(context.headers);
      let data = context.data;
      utils$1.forEach(fns, function transform(fn) {
        data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
      });
      headers.normalize();
      return data;
    }
    function isCancel(value) {
      return !!(value && value.__CANCEL__);
    }
    function CanceledError(message, config, request) {
      AxiosError.call(this, message == null ? "canceled" : message, AxiosError.ERR_CANCELED, config, request);
      this.name = "CanceledError";
    }
    utils$1.inherits(CanceledError, AxiosError, {
      __CANCEL__: true
    });
    function settle(resolve, reject, response) {
      const validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError(
          "Request failed with status code " + response.status,
          [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    }
    function parseProtocol(url) {
      const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
      return match && match[1] || "";
    }
    function speedometer(samplesCount, min) {
      samplesCount = samplesCount || 10;
      const bytes = new Array(samplesCount);
      const timestamps = new Array(samplesCount);
      let head = 0;
      let tail = 0;
      let firstSampleTS;
      min = min !== void 0 ? min : 1e3;
      return function push(chunkLength) {
        const now = Date.now();
        const startedAt = timestamps[tail];
        if (!firstSampleTS) {
          firstSampleTS = now;
        }
        bytes[head] = chunkLength;
        timestamps[head] = now;
        let i = tail;
        let bytesCount = 0;
        while (i !== head) {
          bytesCount += bytes[i++];
          i = i % samplesCount;
        }
        head = (head + 1) % samplesCount;
        if (head === tail) {
          tail = (tail + 1) % samplesCount;
        }
        if (now - firstSampleTS < min) {
          return;
        }
        const passed = startedAt && now - startedAt;
        return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
      };
    }
    function throttle(fn, freq) {
      let timestamp = 0;
      let threshold = 1e3 / freq;
      let lastArgs;
      let timer;
      const invoke = (args, now = Date.now()) => {
        timestamp = now;
        lastArgs = null;
        if (timer) {
          clearTimeout(timer);
          timer = null;
        }
        fn(...args);
      };
      const throttled = (...args) => {
        const now = Date.now();
        const passed = now - timestamp;
        if (passed >= threshold) {
          invoke(args, now);
        } else {
          lastArgs = args;
          if (!timer) {
            timer = setTimeout(() => {
              timer = null;
              invoke(lastArgs);
            }, threshold - passed);
          }
        }
      };
      const flush = () => lastArgs && invoke(lastArgs);
      return [throttled, flush];
    }
    var progressEventReducer = (listener, isDownloadStream, freq = 3) => {
      let bytesNotified = 0;
      const _speedometer = speedometer(50, 250);
      return throttle((e2) => {
        const loaded = e2.loaded;
        const total = e2.lengthComputable ? e2.total : void 0;
        const progressBytes = loaded - bytesNotified;
        const rate = _speedometer(progressBytes);
        const inRange = loaded <= total;
        bytesNotified = loaded;
        const data = {
          loaded,
          total,
          progress: total ? loaded / total : void 0,
          bytes: progressBytes,
          rate: rate ? rate : void 0,
          estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
          event: e2,
          lengthComputable: total != null,
          [isDownloadStream ? "download" : "upload"]: true
        };
        listener(data);
      }, freq);
    };
    var progressEventDecorator = (total, throttled) => {
      const lengthComputable = total != null;
      return [(loaded) => throttled[0]({
        lengthComputable,
        total,
        loaded
      }), throttled[1]];
    };
    var asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));
    var isURLSameOrigin = platform.hasStandardBrowserEnv ? /* @__PURE__ */ ((origin2, isMSIE) => (url) => {
      url = new URL(url, platform.origin);
      return origin2.protocol === url.protocol && origin2.host === url.host && (isMSIE || origin2.port === url.port);
    })(
      new URL(platform.origin),
      platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)
    ) : () => true;
    var cookies = platform.hasStandardBrowserEnv ? (
      // Standard browser envs support document.cookie
      {
        write(name, value, expires, path, domain, secure) {
          const cookie = [name + "=" + encodeURIComponent(value)];
          utils$1.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
          utils$1.isString(path) && cookie.push("path=" + path);
          utils$1.isString(domain) && cookie.push("domain=" + domain);
          secure === true && cookie.push("secure");
          document.cookie = cookie.join("; ");
        },
        read(name) {
          const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove(name) {
          this.write(name, "", Date.now() - 864e5);
        }
      }
    ) : (
      // Non-standard browser env (web workers, react-native) lack needed support.
      {
        write() {
        },
        read() {
          return null;
        },
        remove() {
        }
      }
    );
    function isAbsoluteURL(url) {
      return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
    }
    function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
    }
    function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
      let isRelativeUrl = !isAbsoluteURL(requestedURL);
      if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    }
    var headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;
    function mergeConfig(config1, config2) {
      config2 = config2 || {};
      const config = {};
      function getMergedValue(target, source, prop, caseless) {
        if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {
          return utils$1.merge.call({ caseless }, target, source);
        } else if (utils$1.isPlainObject(source)) {
          return utils$1.merge({}, source);
        } else if (utils$1.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(a, b, prop, caseless) {
        if (!utils$1.isUndefined(b)) {
          return getMergedValue(a, b, prop, caseless);
        } else if (!utils$1.isUndefined(a)) {
          return getMergedValue(void 0, a, prop, caseless);
        }
      }
      function valueFromConfig2(a, b) {
        if (!utils$1.isUndefined(b)) {
          return getMergedValue(void 0, b);
        }
      }
      function defaultToConfig2(a, b) {
        if (!utils$1.isUndefined(b)) {
          return getMergedValue(void 0, b);
        } else if (!utils$1.isUndefined(a)) {
          return getMergedValue(void 0, a);
        }
      }
      function mergeDirectKeys(a, b, prop) {
        if (prop in config2) {
          return getMergedValue(a, b);
        } else if (prop in config1) {
          return getMergedValue(void 0, a);
        }
      }
      const mergeMap = {
        url: valueFromConfig2,
        method: valueFromConfig2,
        data: valueFromConfig2,
        baseURL: defaultToConfig2,
        transformRequest: defaultToConfig2,
        transformResponse: defaultToConfig2,
        paramsSerializer: defaultToConfig2,
        timeout: defaultToConfig2,
        timeoutMessage: defaultToConfig2,
        withCredentials: defaultToConfig2,
        withXSRFToken: defaultToConfig2,
        adapter: defaultToConfig2,
        responseType: defaultToConfig2,
        xsrfCookieName: defaultToConfig2,
        xsrfHeaderName: defaultToConfig2,
        onUploadProgress: defaultToConfig2,
        onDownloadProgress: defaultToConfig2,
        decompress: defaultToConfig2,
        maxContentLength: defaultToConfig2,
        maxBodyLength: defaultToConfig2,
        beforeRedirect: defaultToConfig2,
        transport: defaultToConfig2,
        httpAgent: defaultToConfig2,
        httpsAgent: defaultToConfig2,
        cancelToken: defaultToConfig2,
        socketPath: defaultToConfig2,
        responseEncoding: defaultToConfig2,
        validateStatus: mergeDirectKeys,
        headers: (a, b, prop) => mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true)
      };
      utils$1.forEach(Object.keys({ ...config1, ...config2 }), function computeConfigValue(prop) {
        const merge2 = mergeMap[prop] || mergeDeepProperties;
        const configValue = merge2(config1[prop], config2[prop], prop);
        utils$1.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    }
    var resolveConfig = (config) => {
      const newConfig = mergeConfig({}, config);
      let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
      newConfig.headers = headers = AxiosHeaders$1.from(headers);
      newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);
      if (auth) {
        headers.set(
          "Authorization",
          "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
        );
      }
      if (utils$1.isFormData(data)) {
        if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
          headers.setContentType(void 0);
        } else if (utils$1.isFunction(data.getHeaders)) {
          const formHeaders = data.getHeaders();
          const allowedHeaders = ["content-type", "content-length"];
          Object.entries(formHeaders).forEach(([key, val]) => {
            if (allowedHeaders.includes(key.toLowerCase())) {
              headers.set(key, val);
            }
          });
        }
      }
      if (platform.hasStandardBrowserEnv) {
        withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
        if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin(newConfig.url)) {
          const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);
          if (xsrfValue) {
            headers.set(xsrfHeaderName, xsrfValue);
          }
        }
      }
      return newConfig;
    };
    var isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
    var xhrAdapter = isXHRAdapterSupported && function(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        const _config = resolveConfig(config);
        let requestData = _config.data;
        const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();
        let { responseType, onUploadProgress, onDownloadProgress } = _config;
        let onCanceled;
        let uploadThrottled, downloadThrottled;
        let flushUpload, flushDownload;
        function done() {
          flushUpload && flushUpload();
          flushDownload && flushDownload();
          _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
          _config.signal && _config.signal.removeEventListener("abort", onCanceled);
        }
        let request = new XMLHttpRequest();
        request.open(_config.method.toUpperCase(), _config.url, true);
        request.timeout = _config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          const responseHeaders = AxiosHeaders$1.from(
            "getAllResponseHeaders" in request && request.getAllResponseHeaders()
          );
          const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
          const response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if ("onloadend" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError("Request aborted", AxiosError.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError(event) {
          const msg = event && event.message ? event.message : "Network Error";
          const err = new AxiosError(msg, AxiosError.ERR_NETWORK, config, request);
          err.event = event || null;
          reject(err);
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
          const transitional = _config.transitional || transitionalDefaults;
          if (_config.timeoutErrorMessage) {
            timeoutErrorMessage = _config.timeoutErrorMessage;
          }
          reject(new AxiosError(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        requestData === void 0 && requestHeaders.setContentType(null);
        if ("setRequestHeader" in request) {
          utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
            request.setRequestHeader(key, val);
          });
        }
        if (!utils$1.isUndefined(_config.withCredentials)) {
          request.withCredentials = !!_config.withCredentials;
        }
        if (responseType && responseType !== "json") {
          request.responseType = _config.responseType;
        }
        if (onDownloadProgress) {
          [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
          request.addEventListener("progress", downloadThrottled);
        }
        if (onUploadProgress && request.upload) {
          [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
          request.upload.addEventListener("progress", uploadThrottled);
          request.upload.addEventListener("loadend", flushUpload);
        }
        if (_config.cancelToken || _config.signal) {
          onCanceled = (cancel) => {
            if (!request) {
              return;
            }
            reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);
            request.abort();
            request = null;
          };
          _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
          if (_config.signal) {
            _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
          }
        }
        const protocol = parseProtocol(_config.url);
        if (protocol && platform.protocols.indexOf(protocol) === -1) {
          reject(new AxiosError("Unsupported protocol " + protocol + ":", AxiosError.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData || null);
      });
    };
    var composeSignals = (signals, timeout) => {
      const { length } = signals = signals ? signals.filter(Boolean) : [];
      if (timeout || length) {
        let controller = new AbortController();
        let aborted;
        const onabort = function(reason) {
          if (!aborted) {
            aborted = true;
            unsubscribe();
            const err = reason instanceof Error ? reason : this.reason;
            controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));
          }
        };
        let timer = timeout && setTimeout(() => {
          timer = null;
          onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));
        }, timeout);
        const unsubscribe = () => {
          if (signals) {
            timer && clearTimeout(timer);
            timer = null;
            signals.forEach((signal2) => {
              signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
            });
            signals = null;
          }
        };
        signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
        const { signal } = controller;
        signal.unsubscribe = () => utils$1.asap(unsubscribe);
        return signal;
      }
    };
    var composeSignals$1 = composeSignals;
    var streamChunk = function* (chunk, chunkSize) {
      let len = chunk.byteLength;
      if (!chunkSize || len < chunkSize) {
        yield chunk;
        return;
      }
      let pos = 0;
      let end;
      while (pos < len) {
        end = pos + chunkSize;
        yield chunk.slice(pos, end);
        pos = end;
      }
    };
    var readBytes = async function* (iterable, chunkSize) {
      for await (const chunk of readStream(iterable)) {
        yield* streamChunk(chunk, chunkSize);
      }
    };
    var readStream = async function* (stream) {
      if (stream[Symbol.asyncIterator]) {
        yield* stream;
        return;
      }
      const reader = stream.getReader();
      try {
        for (; ; ) {
          const { done, value } = await reader.read();
          if (done) {
            break;
          }
          yield value;
        }
      } finally {
        await reader.cancel();
      }
    };
    var trackStream = (stream, chunkSize, onProgress, onFinish) => {
      const iterator2 = readBytes(stream, chunkSize);
      let bytes = 0;
      let done;
      let _onFinish = (e2) => {
        if (!done) {
          done = true;
          onFinish && onFinish(e2);
        }
      };
      return new ReadableStream({
        async pull(controller) {
          try {
            const { done: done2, value } = await iterator2.next();
            if (done2) {
              _onFinish();
              controller.close();
              return;
            }
            let len = value.byteLength;
            if (onProgress) {
              let loadedBytes = bytes += len;
              onProgress(loadedBytes);
            }
            controller.enqueue(new Uint8Array(value));
          } catch (err) {
            _onFinish(err);
            throw err;
          }
        },
        cancel(reason) {
          _onFinish(reason);
          return iterator2.return();
        }
      }, {
        highWaterMark: 2
      });
    };
    var DEFAULT_CHUNK_SIZE = 64 * 1024;
    var { isFunction } = utils$1;
    var globalFetchAPI = (({ Request: Request2, Response: Response2 }) => ({
      Request: Request2,
      Response: Response2
    }))(utils$1.global);
    var {
      ReadableStream: ReadableStream$1,
      TextEncoder: TextEncoder2
    } = utils$1.global;
    var test = (fn, ...args) => {
      try {
        return !!fn(...args);
      } catch (e2) {
        return false;
      }
    };
    var factory = (env) => {
      env = utils$1.merge.call({
        skipUndefined: true
      }, globalFetchAPI, env);
      const { fetch: envFetch, Request: Request2, Response: Response2 } = env;
      const isFetchSupported = envFetch ? isFunction(envFetch) : typeof fetch === "function";
      const isRequestSupported = isFunction(Request2);
      const isResponseSupported = isFunction(Response2);
      if (!isFetchSupported) {
        return false;
      }
      const isReadableStreamSupported = isFetchSupported && isFunction(ReadableStream$1);
      const encodeText = isFetchSupported && (typeof TextEncoder2 === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder2()) : async (str) => new Uint8Array(await new Request2(str).arrayBuffer()));
      const supportsRequestStream = isRequestSupported && isReadableStreamSupported && test(() => {
        let duplexAccessed = false;
        const hasContentType = new Request2(platform.origin, {
          body: new ReadableStream$1(),
          method: "POST",
          get duplex() {
            duplexAccessed = true;
            return "half";
          }
        }).headers.has("Content-Type");
        return duplexAccessed && !hasContentType;
      });
      const supportsResponseStream = isResponseSupported && isReadableStreamSupported && test(() => utils$1.isReadableStream(new Response2("").body));
      const resolvers = {
        stream: supportsResponseStream && ((res) => res.body)
      };
      isFetchSupported && (() => {
        ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
          !resolvers[type] && (resolvers[type] = (res, config) => {
            let method = res && res[type];
            if (method) {
              return method.call(res);
            }
            throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);
          });
        });
      })();
      const getBodyLength = async (body) => {
        if (body == null) {
          return 0;
        }
        if (utils$1.isBlob(body)) {
          return body.size;
        }
        if (utils$1.isSpecCompliantForm(body)) {
          const _request = new Request2(platform.origin, {
            method: "POST",
            body
          });
          return (await _request.arrayBuffer()).byteLength;
        }
        if (utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {
          return body.byteLength;
        }
        if (utils$1.isURLSearchParams(body)) {
          body = body + "";
        }
        if (utils$1.isString(body)) {
          return (await encodeText(body)).byteLength;
        }
      };
      const resolveBodyLength = async (headers, body) => {
        const length = utils$1.toFiniteNumber(headers.getContentLength());
        return length == null ? getBodyLength(body) : length;
      };
      return async (config) => {
        let {
          url,
          method,
          data,
          signal,
          cancelToken,
          timeout,
          onDownloadProgress,
          onUploadProgress,
          responseType,
          headers,
          withCredentials = "same-origin",
          fetchOptions
        } = resolveConfig(config);
        let _fetch = envFetch || fetch;
        responseType = responseType ? (responseType + "").toLowerCase() : "text";
        let composedSignal = composeSignals$1([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
        let request = null;
        const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
          composedSignal.unsubscribe();
        });
        let requestContentLength;
        try {
          if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
            let _request = new Request2(url, {
              method: "POST",
              body: data,
              duplex: "half"
            });
            let contentTypeHeader;
            if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
              headers.setContentType(contentTypeHeader);
            }
            if (_request.body) {
              const [onProgress, flush] = progressEventDecorator(
                requestContentLength,
                progressEventReducer(asyncDecorator(onUploadProgress))
              );
              data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
            }
          }
          if (!utils$1.isString(withCredentials)) {
            withCredentials = withCredentials ? "include" : "omit";
          }
          const isCredentialsSupported = isRequestSupported && "credentials" in Request2.prototype;
          const resolvedOptions = {
            ...fetchOptions,
            signal: composedSignal,
            method: method.toUpperCase(),
            headers: headers.normalize().toJSON(),
            body: data,
            duplex: "half",
            credentials: isCredentialsSupported ? withCredentials : void 0
          };
          request = isRequestSupported && new Request2(url, resolvedOptions);
          let response = await (isRequestSupported ? _fetch(request, fetchOptions) : _fetch(url, resolvedOptions));
          const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
          if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
            const options = {};
            ["status", "statusText", "headers"].forEach((prop) => {
              options[prop] = response[prop];
            });
            const responseContentLength = utils$1.toFiniteNumber(response.headers.get("content-length"));
            const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
              responseContentLength,
              progressEventReducer(asyncDecorator(onDownloadProgress), true)
            ) || [];
            response = new Response2(
              trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
                flush && flush();
                unsubscribe && unsubscribe();
              }),
              options
            );
          }
          responseType = responseType || "text";
          let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || "text"](response, config);
          !isStreamResponse && unsubscribe && unsubscribe();
          return await new Promise((resolve, reject) => {
            settle(resolve, reject, {
              data: responseData,
              headers: AxiosHeaders$1.from(response.headers),
              status: response.status,
              statusText: response.statusText,
              config,
              request
            });
          });
        } catch (err) {
          unsubscribe && unsubscribe();
          if (err && err.name === "TypeError" && /Load failed|fetch/i.test(err.message)) {
            throw Object.assign(
              new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request),
              {
                cause: err.cause || err
              }
            );
          }
          throw AxiosError.from(err, err && err.code, config, request);
        }
      };
    };
    var seedCache = /* @__PURE__ */ new Map();
    var getFetch = (config) => {
      let env = config ? config.env : {};
      const { fetch: fetch2, Request: Request2, Response: Response2 } = env;
      const seeds = [
        Request2,
        Response2,
        fetch2
      ];
      let len = seeds.length, i = len, seed, target, map = seedCache;
      while (i--) {
        seed = seeds[i];
        target = map.get(seed);
        target === void 0 && map.set(seed, target = i ? /* @__PURE__ */ new Map() : factory(env));
        map = target;
      }
      return target;
    };
    getFetch();
    var knownAdapters = {
      http: httpAdapter,
      xhr: xhrAdapter,
      fetch: {
        get: getFetch
      }
    };
    utils$1.forEach(knownAdapters, (fn, value) => {
      if (fn) {
        try {
          Object.defineProperty(fn, "name", { value });
        } catch (e2) {
        }
        Object.defineProperty(fn, "adapterName", { value });
      }
    });
    var renderReason = (reason) => `- ${reason}`;
    var isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;
    var adapters = {
      getAdapter: (adapters2, config) => {
        adapters2 = utils$1.isArray(adapters2) ? adapters2 : [adapters2];
        const { length } = adapters2;
        let nameOrAdapter;
        let adapter;
        const rejectedReasons = {};
        for (let i = 0; i < length; i++) {
          nameOrAdapter = adapters2[i];
          let id;
          adapter = nameOrAdapter;
          if (!isResolvedHandle(nameOrAdapter)) {
            adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
            if (adapter === void 0) {
              throw new AxiosError(`Unknown adapter '${id}'`);
            }
          }
          if (adapter && (utils$1.isFunction(adapter) || (adapter = adapter.get(config)))) {
            break;
          }
          rejectedReasons[id || "#" + i] = adapter;
        }
        if (!adapter) {
          const reasons = Object.entries(rejectedReasons).map(
            ([id, state]) => `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
          );
          let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
          throw new AxiosError(
            `There is no suitable adapter to dispatch the request ` + s,
            "ERR_NOT_SUPPORT"
          );
        }
        return adapter;
      },
      adapters: knownAdapters
    };
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError(null, config);
      }
    }
    function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = AxiosHeaders$1.from(config.headers);
      config.data = transformData.call(
        config,
        config.transformRequest
      );
      if (["post", "put", "patch"].indexOf(config.method) !== -1) {
        config.headers.setContentType("application/x-www-form-urlencoded", false);
      }
      const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter, config);
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          config.transformResponse,
          response
        );
        response.headers = AxiosHeaders$1.from(response.headers);
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              config.transformResponse,
              reason.response
            );
            reason.response.headers = AxiosHeaders$1.from(reason.response.headers);
          }
        }
        return Promise.reject(reason);
      });
    }
    var VERSION = "1.12.2";
    var validators$1 = {};
    ["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
      validators$1[type] = function validator2(thing) {
        return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
      };
    });
    var deprecatedWarnings = {};
    validators$1.transitional = function transitional(validator2, version, message) {
      function formatMessage(opt, desc) {
        return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
      }
      return (value, opt, opts) => {
        if (validator2 === false) {
          throw new AxiosError(
            formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
            AxiosError.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              " has been deprecated since v" + version + " and will be removed in the near future"
            )
          );
        }
        return validator2 ? validator2(value, opt, opts) : true;
      };
    };
    validators$1.spelling = function spelling(correctSpelling) {
      return (value, opt) => {
        console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
        return true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== "object") {
        throw new AxiosError("options must be an object", AxiosError.ERR_BAD_OPTION_VALUE);
      }
      const keys = Object.keys(options);
      let i = keys.length;
      while (i-- > 0) {
        const opt = keys[i];
        const validator2 = schema[opt];
        if (validator2) {
          const value = options[opt];
          const result = value === void 0 || validator2(value, opt, options);
          if (result !== true) {
            throw new AxiosError("option " + opt + " must be " + result, AxiosError.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError("Unknown option " + opt, AxiosError.ERR_BAD_OPTION);
        }
      }
    }
    var validator = {
      assertOptions,
      validators: validators$1
    };
    var validators = validator.validators;
    var Axios = class {
      constructor(instanceConfig) {
        this.defaults = instanceConfig || {};
        this.interceptors = {
          request: new InterceptorManager$1(),
          response: new InterceptorManager$1()
        };
      }
      /**
       * Dispatch a request
       *
       * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
       * @param {?Object} config
       *
       * @returns {Promise} The Promise to be fulfilled
       */
      async request(configOrUrl, config) {
        try {
          return await this._request(configOrUrl, config);
        } catch (err) {
          if (err instanceof Error) {
            let dummy = {};
            Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
            const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
            try {
              if (!err.stack) {
                err.stack = stack;
              } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
                err.stack += "\n" + stack;
              }
            } catch (e2) {
            }
          }
          throw err;
        }
      }
      _request(configOrUrl, config) {
        if (typeof configOrUrl === "string") {
          config = config || {};
          config.url = configOrUrl;
        } else {
          config = configOrUrl || {};
        }
        config = mergeConfig(this.defaults, config);
        const { transitional, paramsSerializer, headers } = config;
        if (transitional !== void 0) {
          validator.assertOptions(transitional, {
            silentJSONParsing: validators.transitional(validators.boolean),
            forcedJSONParsing: validators.transitional(validators.boolean),
            clarifyTimeoutError: validators.transitional(validators.boolean)
          }, false);
        }
        if (paramsSerializer != null) {
          if (utils$1.isFunction(paramsSerializer)) {
            config.paramsSerializer = {
              serialize: paramsSerializer
            };
          } else {
            validator.assertOptions(paramsSerializer, {
              encode: validators.function,
              serialize: validators.function
            }, true);
          }
        }
        if (config.allowAbsoluteUrls !== void 0) ;
        else if (this.defaults.allowAbsoluteUrls !== void 0) {
          config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
        } else {
          config.allowAbsoluteUrls = true;
        }
        validator.assertOptions(config, {
          baseUrl: validators.spelling("baseURL"),
          withXsrfToken: validators.spelling("withXSRFToken")
        }, true);
        config.method = (config.method || this.defaults.method || "get").toLowerCase();
        let contextHeaders = headers && utils$1.merge(
          headers.common,
          headers[config.method]
        );
        headers && utils$1.forEach(
          ["delete", "get", "head", "post", "put", "patch", "common"],
          (method) => {
            delete headers[method];
          }
        );
        config.headers = AxiosHeaders$1.concat(contextHeaders, headers);
        const requestInterceptorChain = [];
        let synchronousRequestInterceptors = true;
        this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
          if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
            return;
          }
          synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
          requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
        });
        const responseInterceptorChain = [];
        this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
          responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
        });
        let promise;
        let i = 0;
        let len;
        if (!synchronousRequestInterceptors) {
          const chain = [dispatchRequest.bind(this), void 0];
          chain.unshift(...requestInterceptorChain);
          chain.push(...responseInterceptorChain);
          len = chain.length;
          promise = Promise.resolve(config);
          while (i < len) {
            promise = promise.then(chain[i++], chain[i++]);
          }
          return promise;
        }
        len = requestInterceptorChain.length;
        let newConfig = config;
        while (i < len) {
          const onFulfilled = requestInterceptorChain[i++];
          const onRejected = requestInterceptorChain[i++];
          try {
            newConfig = onFulfilled(newConfig);
          } catch (error) {
            onRejected.call(this, error);
            break;
          }
        }
        try {
          promise = dispatchRequest.call(this, newConfig);
        } catch (error) {
          return Promise.reject(error);
        }
        i = 0;
        len = responseInterceptorChain.length;
        while (i < len) {
          promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
        }
        return promise;
      }
      getUri(config) {
        config = mergeConfig(this.defaults, config);
        const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);
        return buildURL(fullPath, config.params, config.paramsSerializer);
      }
    };
    utils$1.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils$1.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              "Content-Type": "multipart/form-data"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + "Form"] = generateHTTPMethod(true);
    });
    var Axios$1 = Axios;
    var CancelToken = class _CancelToken {
      constructor(executor) {
        if (typeof executor !== "function") {
          throw new TypeError("executor must be a function.");
        }
        let resolvePromise;
        this.promise = new Promise(function promiseExecutor(resolve) {
          resolvePromise = resolve;
        });
        const token = this;
        this.promise.then((cancel) => {
          if (!token._listeners) return;
          let i = token._listeners.length;
          while (i-- > 0) {
            token._listeners[i](cancel);
          }
          token._listeners = null;
        });
        this.promise.then = (onfulfilled) => {
          let _resolve;
          const promise = new Promise((resolve) => {
            token.subscribe(resolve);
            _resolve = resolve;
          }).then(onfulfilled);
          promise.cancel = function reject() {
            token.unsubscribe(_resolve);
          };
          return promise;
        };
        executor(function cancel(message, config, request) {
          if (token.reason) {
            return;
          }
          token.reason = new CanceledError(message, config, request);
          resolvePromise(token.reason);
        });
      }
      /**
       * Throws a `CanceledError` if cancellation has been requested.
       */
      throwIfRequested() {
        if (this.reason) {
          throw this.reason;
        }
      }
      /**
       * Subscribe to the cancel signal
       */
      subscribe(listener) {
        if (this.reason) {
          listener(this.reason);
          return;
        }
        if (this._listeners) {
          this._listeners.push(listener);
        } else {
          this._listeners = [listener];
        }
      }
      /**
       * Unsubscribe from the cancel signal
       */
      unsubscribe(listener) {
        if (!this._listeners) {
          return;
        }
        const index = this._listeners.indexOf(listener);
        if (index !== -1) {
          this._listeners.splice(index, 1);
        }
      }
      toAbortSignal() {
        const controller = new AbortController();
        const abort = (err) => {
          controller.abort(err);
        };
        this.subscribe(abort);
        controller.signal.unsubscribe = () => this.unsubscribe(abort);
        return controller.signal;
      }
      /**
       * Returns an object that contains a new `CancelToken` and a function that, when called,
       * cancels the `CancelToken`.
       */
      static source() {
        let cancel;
        const token = new _CancelToken(function executor(c) {
          cancel = c;
        });
        return {
          token,
          cancel
        };
      }
    };
    var CancelToken$1 = CancelToken;
    function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    }
    function isAxiosError(payload) {
      return utils$1.isObject(payload) && payload.isAxiosError === true;
    }
    var HttpStatusCode = {
      Continue: 100,
      SwitchingProtocols: 101,
      Processing: 102,
      EarlyHints: 103,
      Ok: 200,
      Created: 201,
      Accepted: 202,
      NonAuthoritativeInformation: 203,
      NoContent: 204,
      ResetContent: 205,
      PartialContent: 206,
      MultiStatus: 207,
      AlreadyReported: 208,
      ImUsed: 226,
      MultipleChoices: 300,
      MovedPermanently: 301,
      Found: 302,
      SeeOther: 303,
      NotModified: 304,
      UseProxy: 305,
      Unused: 306,
      TemporaryRedirect: 307,
      PermanentRedirect: 308,
      BadRequest: 400,
      Unauthorized: 401,
      PaymentRequired: 402,
      Forbidden: 403,
      NotFound: 404,
      MethodNotAllowed: 405,
      NotAcceptable: 406,
      ProxyAuthenticationRequired: 407,
      RequestTimeout: 408,
      Conflict: 409,
      Gone: 410,
      LengthRequired: 411,
      PreconditionFailed: 412,
      PayloadTooLarge: 413,
      UriTooLong: 414,
      UnsupportedMediaType: 415,
      RangeNotSatisfiable: 416,
      ExpectationFailed: 417,
      ImATeapot: 418,
      MisdirectedRequest: 421,
      UnprocessableEntity: 422,
      Locked: 423,
      FailedDependency: 424,
      TooEarly: 425,
      UpgradeRequired: 426,
      PreconditionRequired: 428,
      TooManyRequests: 429,
      RequestHeaderFieldsTooLarge: 431,
      UnavailableForLegalReasons: 451,
      InternalServerError: 500,
      NotImplemented: 501,
      BadGateway: 502,
      ServiceUnavailable: 503,
      GatewayTimeout: 504,
      HttpVersionNotSupported: 505,
      VariantAlsoNegotiates: 506,
      InsufficientStorage: 507,
      LoopDetected: 508,
      NotExtended: 510,
      NetworkAuthenticationRequired: 511
    };
    Object.entries(HttpStatusCode).forEach(([key, value]) => {
      HttpStatusCode[value] = key;
    });
    var HttpStatusCode$1 = HttpStatusCode;
    function createInstance(defaultConfig) {
      const context = new Axios$1(defaultConfig);
      const instance = bind(Axios$1.prototype.request, context);
      utils$1.extend(instance, Axios$1.prototype, context, { allOwnKeys: true });
      utils$1.extend(instance, context, null, { allOwnKeys: true });
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios = createInstance(defaults$1);
    axios.Axios = Axios$1;
    axios.CanceledError = CanceledError;
    axios.CancelToken = CancelToken$1;
    axios.isCancel = isCancel;
    axios.VERSION = VERSION;
    axios.toFormData = toFormData;
    axios.AxiosError = AxiosError;
    axios.Cancel = axios.CanceledError;
    axios.all = function all(promises) {
      return Promise.all(promises);
    };
    axios.spread = spread;
    axios.isAxiosError = isAxiosError;
    axios.mergeConfig = mergeConfig;
    axios.AxiosHeaders = AxiosHeaders$1;
    axios.formToJSON = (thing) => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);
    axios.getAdapter = adapters.getAdapter;
    axios.HttpStatusCode = HttpStatusCode$1;
    axios.default = axios;
    module.exports = axios;
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/package.json
var require_package = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/package.json"(exports, module) {
    module.exports = {
      name: "@stellar/stellar-sdk",
      version: "12.0.1",
      description: "A library for working with the Stellar network, including communication with the Horizon and Soroban RPC servers.",
      keywords: [
        "stellar"
      ],
      homepage: "https://github.com/stellar/js-stellar-sdk",
      bugs: {
        url: "https://github.com/stellar/js-stellar-sdk/issues"
      },
      repository: {
        type: "git",
        url: "https://github.com/stellar/js-stellar-sdk.git"
      },
      license: "Apache-2.0",
      author: "Stellar Development Foundation <hello@stellar.org>",
      main: "./lib/index.js",
      types: "./lib/index.d.ts",
      browser: "./dist/stellar-sdk.min.js",
      files: [
        "/types",
        "/lib",
        "/dist"
      ],
      exports: {
        ".": {
          browser: "./dist/stellar-sdk.min.js",
          types: "./lib/index.d.ts",
          default: "./lib/index.js"
        },
        "./contract": {
          types: "./lib/contract/index.d.ts",
          default: "./lib/contract/index.js"
        },
        "./rpc": {
          types: "./lib/rpc/index.d.ts",
          default: "./lib/rpc/index.js"
        }
      },
      scripts: {
        build: "cross-env NODE_ENV=development yarn _build",
        "build:prod": "cross-env NODE_ENV=production yarn _build",
        "build:node": "yarn _babel && yarn build:ts",
        "build:ts": "tsc -p ./config/tsconfig.json",
        "build:test": "tsc -p ./test/unit/tsconfig.json",
        "build:browser": "webpack -c config/webpack.config.browser.js",
        "build:docs": "cross-env NODE_ENV=docs yarn _babel",
        clean: "rm -rf lib/ dist/ coverage/ .nyc_output/ jsdoc/ test/e2e/.soroban",
        docs: "yarn build:docs && jsdoc -c ./config/.jsdoc.json --verbose",
        test: "yarn build:test && yarn test:node && yarn test:integration && yarn test:browser",
        "test:e2e": "./test/e2e/initialize.sh && ava",
        "test:node": "yarn _nyc mocha --recursive 'test/unit/**/*.js'",
        "test:integration": "yarn _nyc mocha --recursive 'test/integration/**/*.js'",
        "test:browser": "karma start config/karma.conf.js",
        fmt: "yarn eslint -c .eslintrc.js src/ --fix && yarn _prettier",
        preversion: "yarn clean && yarn _prettier && yarn build:prod && yarn test",
        prepare: "yarn build:prod",
        _build: "yarn build:node && yarn build:test && yarn build:browser",
        _babel: "babel --extensions '.ts' --out-dir lib/ src/",
        _nyc: "nyc --nycrc-path config/.nycrc",
        _prettier: "prettier --ignore-path config/.prettierignore --write './test/**/*.js'"
      },
      husky: {
        hooks: {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "**/*.{js,json,ts}": [
          "yarn fmt"
        ]
      },
      mocha: {
        reporter: "spec",
        require: [
          "@babel/register",
          "test/test-nodejs.js"
        ],
        exclude: [
          "test/test-browser.js"
        ],
        sort: true,
        recursive: true,
        timeout: 3e4
      },
      nyc: {
        instrument: false,
        sourceMap: false,
        reporter: [
          "text-summary"
        ]
      },
      devDependencies: {
        "@babel/cli": "^7.24.6",
        "@babel/core": "^7.24.6",
        "@babel/eslint-plugin": "^7.24.6",
        "@babel/preset-env": "^7.24.6",
        "@babel/preset-typescript": "^7.24.6",
        "@babel/register": "^7.24.6",
        "@definitelytyped/dtslint": "^0.2.20",
        "@istanbuljs/nyc-config-babel": "3.0.0",
        "@stellar/tsconfig": "^1.0.2",
        "@types/chai": "^4.3.14",
        "@types/detect-node": "^2.0.0",
        "@types/eventsource": "^1.1.12",
        "@types/json-schema": "^7.0.15",
        "@types/lodash": "^4.17.4",
        "@types/mocha": "^10.0.2",
        "@types/node": "^20.12.13",
        "@types/randombytes": "^2.0.1",
        "@types/sinon": "^17.0.2",
        "@types/urijs": "^1.19.20",
        "@typescript-eslint/parser": "^7.11.0",
        ava: "^5.3.1",
        "axios-mock-adapter": "^1.22.0",
        "babel-loader": "^9.1.3",
        "babel-plugin-istanbul": "^6.1.1",
        buffer: "^6.0.3",
        chai: "^4.3.10",
        "chai-as-promised": "^7.1.1",
        "chai-http": "^4.3.0",
        "cross-env": "^7.0.3",
        dotenv: "^16.4.5",
        eslint: "^8.57.0",
        "eslint-config-airbnb-base": "^15.0.0",
        "eslint-config-airbnb-typescript": "^18.0.0",
        "eslint-config-prettier": "^9.0.0",
        "eslint-plugin-import": "^2.29.1",
        "eslint-plugin-jsdoc": "^48.2.7",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prefer-import": "^0.0.1",
        "eslint-plugin-prettier": "^5.1.2",
        "eslint-webpack-plugin": "^4.2.0",
        ghooks: "^2.0.4",
        husky: "^9.0.11",
        jsdoc: "^4.0.2",
        "json-schema-faker": "^0.5.6",
        karma: "^6.4.3",
        "karma-chai": "^0.1.0",
        "karma-chrome-launcher": "^3.1.0",
        "karma-coverage": "^2.2.1",
        "karma-firefox-launcher": "^2.1.3",
        "karma-mocha": "^2.0.0",
        "karma-sinon-chai": "^2.0.2",
        "karma-webpack": "^5.0.1",
        "lint-staged": "^15.2.5",
        lodash: "^4.17.21",
        minami: "^1.1.1",
        mocha: "^10.3.0",
        "node-polyfill-webpack-plugin": "^3.0.0",
        nyc: "^15.1.0",
        prettier: "^3.2.5",
        randombytes: "^2.1.0",
        sinon: "^17.0.1",
        "sinon-chai": "^3.7.0",
        taffydb: "^2.7.3",
        "terser-webpack-plugin": "^5.3.10",
        "ts-node": "^10.9.2",
        typescript: "^5.4.3",
        webpack: "^5.91.0",
        "webpack-cli": "^5.0.1"
      },
      dependencies: {
        "@stellar/stellar-base": "^12.0.0",
        axios: "^1.7.2",
        "bignumber.js": "^9.1.2",
        eventsource: "^2.0.2",
        randombytes: "^2.1.0",
        toml: "^3.0.0",
        urijs: "^1.19.1"
      },
      ava: {
        files: [
          "./test/e2e/src/test-*"
        ],
        require: [
          "dotenv/config"
        ],
        timeout: "2m"
      }
    };
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js
var require_axios2 = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.version = exports.default = exports.AxiosClient = void 0;
    var _axios = _interopRequireDefault(require_axios());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    var version = exports.version = require_package().version;
    var AxiosClient = exports.AxiosClient = _axios.default.create({
      headers: {
        "X-Client-Name": "js-soroban-client",
        "X-Client-Version": version
      }
    });
    var _default = exports.default = AxiosClient;
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/jsonrpc.js
var require_jsonrpc = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/jsonrpc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.postObject = postObject;
    var _axios = _interopRequireDefault(require_axios2());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function postObject(_x, _x2) {
      return _postObject.apply(this, arguments);
    }
    function _postObject() {
      _postObject = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(url, method) {
        var param, response, _response$data, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              param = _args.length > 2 && _args[2] !== void 0 ? _args[2] : null;
              _context.next = 3;
              return _axios.default.post(url, {
                jsonrpc: "2.0",
                id: 1,
                method,
                params: param
              });
            case 3:
              response = _context.sent;
              if (!hasOwnProperty(response.data, "error")) {
                _context.next = 8;
                break;
              }
              throw response.data.error;
            case 8:
              return _context.abrupt("return", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result);
            case 9:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return _postObject.apply(this, arguments);
    }
    function hasOwnProperty(obj, prop) {
      return obj.hasOwnProperty(prop);
    }
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/api.js
var require_api = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/api.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Api = void 0;
    var Api;
    (function(_Api) {
      var GetTransactionStatus = function(GetTransactionStatus2) {
        GetTransactionStatus2["SUCCESS"] = "SUCCESS";
        GetTransactionStatus2["NOT_FOUND"] = "NOT_FOUND";
        GetTransactionStatus2["FAILED"] = "FAILED";
        return GetTransactionStatus2;
      }({});
      _Api.GetTransactionStatus = GetTransactionStatus;
      function isSimulationError(sim) {
        return "error" in sim;
      }
      _Api.isSimulationError = isSimulationError;
      function isSimulationSuccess(sim) {
        return "transactionData" in sim;
      }
      _Api.isSimulationSuccess = isSimulationSuccess;
      function isSimulationRestore(sim) {
        return isSimulationSuccess(sim) && "restorePreamble" in sim && !!sim.restorePreamble.transactionData;
      }
      _Api.isSimulationRestore = isSimulationRestore;
      function isSimulationRaw(sim) {
        return !sim._parsed;
      }
      _Api.isSimulationRaw = isSimulationRaw;
    })(Api || (exports.Api = Api = {}));
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js
var require_parsers = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parseRawEvents = parseRawEvents;
    exports.parseRawLedgerEntries = parseRawLedgerEntries;
    exports.parseRawSendTransaction = parseRawSendTransaction;
    exports.parseRawSimulation = parseRawSimulation;
    var _stellarBase = require_lib();
    var _api = require_api();
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function parseRawSendTransaction(r3) {
      var errorResultXdr = r3.errorResultXdr, diagnosticEventsXdr = r3.diagnosticEventsXdr;
      delete r3.errorResultXdr;
      delete r3.diagnosticEventsXdr;
      if (!!errorResultXdr) {
        return _objectSpread(_objectSpread(_objectSpread({}, r3), diagnosticEventsXdr !== void 0 && diagnosticEventsXdr.length > 0 && {
          diagnosticEvents: diagnosticEventsXdr.map(function(evt) {
            return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, "base64");
          })
        }), {}, {
          errorResult: _stellarBase.xdr.TransactionResult.fromXDR(errorResultXdr, "base64")
        });
      }
      return _objectSpread({}, r3);
    }
    function parseRawEvents(r3) {
      var _r$events;
      return {
        latestLedger: r3.latestLedger,
        events: ((_r$events = r3.events) !== null && _r$events !== void 0 ? _r$events : []).map(function(evt) {
          var clone = _objectSpread({}, evt);
          delete clone.contractId;
          return _objectSpread(_objectSpread(_objectSpread({}, clone), evt.contractId !== "" && {
            contractId: new _stellarBase.Contract(evt.contractId)
          }), {}, {
            topic: evt.topic.map(function(topic) {
              return _stellarBase.xdr.ScVal.fromXDR(topic, "base64");
            }),
            value: _stellarBase.xdr.ScVal.fromXDR(evt.value, "base64")
          });
        })
      };
    }
    function parseRawLedgerEntries(raw) {
      var _raw$entries;
      return {
        latestLedger: raw.latestLedger,
        entries: ((_raw$entries = raw.entries) !== null && _raw$entries !== void 0 ? _raw$entries : []).map(function(rawEntry) {
          if (!rawEntry.key || !rawEntry.xdr) {
            throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(rawEntry)));
          }
          return _objectSpread({
            lastModifiedLedgerSeq: rawEntry.lastModifiedLedgerSeq,
            key: _stellarBase.xdr.LedgerKey.fromXDR(rawEntry.key, "base64"),
            val: _stellarBase.xdr.LedgerEntryData.fromXDR(rawEntry.xdr, "base64")
          }, rawEntry.liveUntilLedgerSeq !== void 0 && {
            liveUntilLedgerSeq: rawEntry.liveUntilLedgerSeq
          });
        })
      };
    }
    function parseRawSimulation(sim) {
      var _sim$events$map, _sim$events;
      var looksRaw = _api.Api.isSimulationRaw(sim);
      if (!looksRaw) {
        return sim;
      }
      var base = {
        _parsed: true,
        id: sim.id,
        latestLedger: sim.latestLedger,
        events: (_sim$events$map = (_sim$events = sim.events) === null || _sim$events === void 0 ? void 0 : _sim$events.map(function(evt) {
          return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, "base64");
        })) !== null && _sim$events$map !== void 0 ? _sim$events$map : []
      };
      if (typeof sim.error === "string") {
        return _objectSpread(_objectSpread({}, base), {}, {
          error: sim.error
        });
      }
      return parseSuccessful(sim, base);
    }
    function parseSuccessful(sim, partial) {
      var _sim$results$length, _sim$results, _sim$stateChanges$len, _sim$stateChanges, _sim$stateChanges2;
      var success = _objectSpread(_objectSpread(_objectSpread({}, partial), {}, {
        transactionData: new _stellarBase.SorobanDataBuilder(sim.transactionData),
        minResourceFee: sim.minResourceFee,
        cost: sim.cost
      }, ((_sim$results$length = (_sim$results = sim.results) === null || _sim$results === void 0 ? void 0 : _sim$results.length) !== null && _sim$results$length !== void 0 ? _sim$results$length : 0 > 0) && {
        result: sim.results.map(function(row) {
          var _row$auth;
          return {
            auth: ((_row$auth = row.auth) !== null && _row$auth !== void 0 ? _row$auth : []).map(function(entry) {
              return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(entry, "base64");
            }),
            retval: !!row.xdr ? _stellarBase.xdr.ScVal.fromXDR(row.xdr, "base64") : _stellarBase.xdr.ScVal.scvVoid()
          };
        })[0]
      }), ((_sim$stateChanges$len = (_sim$stateChanges = sim.stateChanges) === null || _sim$stateChanges === void 0 ? void 0 : _sim$stateChanges.length) !== null && _sim$stateChanges$len !== void 0 ? _sim$stateChanges$len : 0 > 0) && {
        stateChanges: (_sim$stateChanges2 = sim.stateChanges) === null || _sim$stateChanges2 === void 0 ? void 0 : _sim$stateChanges2.map(function(entryChange) {
          return {
            type: entryChange.type,
            key: _stellarBase.xdr.LedgerKey.fromXDR(entryChange.key, "base64"),
            before: entryChange.before ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.before, "base64") : null,
            after: entryChange.after ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.after, "base64") : null
          };
        })
      });
      if (!sim.restorePreamble || sim.restorePreamble.transactionData === "") {
        return success;
      }
      return _objectSpread(_objectSpread({}, success), {}, {
        restorePreamble: {
          minResourceFee: sim.restorePreamble.minResourceFee,
          transactionData: new _stellarBase.SorobanDataBuilder(sim.restorePreamble.transactionData)
        }
      });
    }
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js
var require_transaction2 = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.assembleTransaction = assembleTransaction;
    var _stellarBase = require_lib();
    var _api = require_api();
    var _parsers = require_parsers();
    function assembleTransaction(raw, simulation) {
      var _invokeOp$auth;
      if ("innerTransaction" in raw) {
        return assembleTransaction(raw.innerTransaction, simulation);
      }
      if (!isSorobanTransaction(raw)) {
        throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
      }
      var success = (0, _parsers.parseRawSimulation)(simulation);
      if (!_api.Api.isSimulationSuccess(success)) {
        throw new Error("simulation incorrect: ".concat(JSON.stringify(success)));
      }
      var classicFeeNum = parseInt(raw.fee) || 0;
      var minResourceFeeNum = parseInt(success.minResourceFee) || 0;
      var txnBuilder = _stellarBase.TransactionBuilder.cloneFrom(raw, {
        fee: (classicFeeNum + minResourceFeeNum).toString(),
        sorobanData: success.transactionData.build(),
        networkPassphrase: raw.networkPassphrase
      });
      switch (raw.operations[0].type) {
        case "invokeHostFunction":
          txnBuilder.clearOperations();
          var invokeOp = raw.operations[0];
          var existingAuth = (_invokeOp$auth = invokeOp.auth) !== null && _invokeOp$auth !== void 0 ? _invokeOp$auth : [];
          txnBuilder.addOperation(_stellarBase.Operation.invokeHostFunction({
            source: invokeOp.source,
            func: invokeOp.func,
            auth: existingAuth.length > 0 ? existingAuth : success.result.auth
          }));
          break;
      }
      return txnBuilder;
    }
    function isSorobanTransaction(tx) {
      if (tx.operations.length !== 1) {
        return false;
      }
      switch (tx.operations[0].type) {
        case "invokeHostFunction":
        case "extendFootprintTtl":
        case "restoreFootprint":
          return true;
        default:
          return false;
      }
    }
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/server.js
var require_server = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Server = exports.SUBMIT_TRANSACTION_TIMEOUT = exports.Durability = void 0;
    var _urijs = _interopRequireDefault(require_URI());
    var _stellarBase = require_lib();
    var _axios = _interopRequireDefault(require_axios2());
    var jsonrpc = _interopRequireWildcard(require_jsonrpc());
    var _api = require_api();
    var _transaction = require_transaction2();
    var _parsers = require_parsers();
    function _getRequireWildcardCache(e2) {
      if ("function" != typeof WeakMap) return null;
      var r3 = /* @__PURE__ */ new WeakMap(), t2 = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e3) {
        return e3 ? t2 : r3;
      })(e2);
    }
    function _interopRequireWildcard(e2, r3) {
      if (!r3 && e2 && e2.__esModule) return e2;
      if (null === e2 || "object" != _typeof(e2) && "function" != typeof e2) return { default: e2 };
      var t2 = _getRequireWildcardCache(r3);
      if (t2 && t2.has(e2)) return t2.get(e2);
      var n2 = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e2) if ("default" !== u && {}.hasOwnProperty.call(e2, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e2, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n2, u, i) : n2[u] = e2[u];
      }
      return n2.default = e2, t2 && t2.set(e2, n2), n2;
    }
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _createForOfIteratorHelper(r3, e2) {
      var t2 = "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (!t2) {
        if (Array.isArray(r3) || (t2 = _unsupportedIterableToArray(r3)) || e2 && r3 && "number" == typeof r3.length) {
          t2 && (r3 = t2);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n2() {
            return _n >= r3.length ? { done: true } : { done: false, value: r3[_n++] };
          }, e: function e3(r4) {
            throw r4;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o2, a = true, u = false;
      return { s: function s() {
        t2 = t2.call(r3);
      }, n: function n2() {
        var r4 = t2.next();
        return a = r4.done, r4;
      }, e: function e3(r4) {
        u = true, o2 = r4;
      }, f: function f() {
        try {
          a || null == t2.return || t2.return();
        } finally {
          if (u) throw o2;
        }
      } };
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1e3;
    var Durability = exports.Durability = function(Durability2) {
      Durability2["Temporary"] = "temporary";
      Durability2["Persistent"] = "persistent";
      return Durability2;
    }({});
    var Server = exports.Server = function() {
      function Server2(serverURL) {
        var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck(this, Server2);
        this.serverURL = (0, _urijs.default)(serverURL);
        if (opts.headers && Object.keys(opts.headers).length === 0) {
          _axios.default.interceptors.request.use(function(config) {
            config.headers = Object.assign(config.headers, opts.headers);
            return config;
          });
        }
        if (this.serverURL.protocol() !== "https" && !opts.allowHttp) {
          throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
        }
      }
      return _createClass(Server2, [{
        key: "getAccount",
        value: function() {
          var _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {
            var ledgerKey, resp, accountEntry;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  ledgerKey = _stellarBase.xdr.LedgerKey.account(new _stellarBase.xdr.LedgerKeyAccount({
                    accountId: _stellarBase.Keypair.fromPublicKey(address).xdrPublicKey()
                  }));
                  _context.next = 3;
                  return this.getLedgerEntries(ledgerKey);
                case 3:
                  resp = _context.sent;
                  if (!(resp.entries.length === 0)) {
                    _context.next = 6;
                    break;
                  }
                  return _context.abrupt("return", Promise.reject({
                    code: 404,
                    message: "Account not found: ".concat(address)
                  }));
                case 6:
                  accountEntry = resp.entries[0].val.account();
                  return _context.abrupt("return", new _stellarBase.Account(address, accountEntry.seqNum().toString()));
                case 8:
                case "end":
                  return _context.stop();
              }
            }, _callee, this);
          }));
          function getAccount(_x) {
            return _getAccount.apply(this, arguments);
          }
          return getAccount;
        }()
      }, {
        key: "getHealth",
        value: function() {
          var _getHealth = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  return _context2.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getHealth"));
                case 1:
                case "end":
                  return _context2.stop();
              }
            }, _callee2, this);
          }));
          function getHealth() {
            return _getHealth.apply(this, arguments);
          }
          return getHealth;
        }()
      }, {
        key: "getContractData",
        value: function() {
          var _getContractData = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(contract, key) {
            var durability, scAddress, xdrDurability, contractKey, _args3 = arguments;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  durability = _args3.length > 2 && _args3[2] !== void 0 ? _args3[2] : Durability.Persistent;
                  if (!(typeof contract === "string")) {
                    _context3.next = 5;
                    break;
                  }
                  scAddress = new _stellarBase.Contract(contract).address().toScAddress();
                  _context3.next = 14;
                  break;
                case 5:
                  if (!(contract instanceof _stellarBase.Address)) {
                    _context3.next = 9;
                    break;
                  }
                  scAddress = contract.toScAddress();
                  _context3.next = 14;
                  break;
                case 9:
                  if (!(contract instanceof _stellarBase.Contract)) {
                    _context3.next = 13;
                    break;
                  }
                  scAddress = contract.address().toScAddress();
                  _context3.next = 14;
                  break;
                case 13:
                  throw new TypeError("unknown contract type: ".concat(contract));
                case 14:
                  _context3.t0 = durability;
                  _context3.next = _context3.t0 === Durability.Temporary ? 17 : _context3.t0 === Durability.Persistent ? 19 : 21;
                  break;
                case 17:
                  xdrDurability = _stellarBase.xdr.ContractDataDurability.temporary();
                  return _context3.abrupt("break", 22);
                case 19:
                  xdrDurability = _stellarBase.xdr.ContractDataDurability.persistent();
                  return _context3.abrupt("break", 22);
                case 21:
                  throw new TypeError("invalid durability: ".concat(durability));
                case 22:
                  contractKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({
                    key,
                    contract: scAddress,
                    durability: xdrDurability
                  }));
                  return _context3.abrupt("return", this.getLedgerEntries(contractKey).then(function(r3) {
                    if (r3.entries.length === 0) {
                      return Promise.reject({
                        code: 404,
                        message: "Contract data not found. Contract: ".concat(_stellarBase.Address.fromScAddress(scAddress).toString(), ", Key: ").concat(key.toXDR("base64"), ", Durability: ").concat(durability)
                      });
                    }
                    return r3.entries[0];
                  }));
                case 24:
                case "end":
                  return _context3.stop();
              }
            }, _callee3, this);
          }));
          function getContractData(_x2, _x3) {
            return _getContractData.apply(this, arguments);
          }
          return getContractData;
        }()
      }, {
        key: "getContractWasmByContractId",
        value: function() {
          var _getContractWasmByContractId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(contractId) {
            var _response$entries$;
            var contractLedgerKey, response, wasmHash;
            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
              while (1) switch (_context4.prev = _context4.next) {
                case 0:
                  contractLedgerKey = new _stellarBase.Contract(contractId).getFootprint();
                  _context4.next = 3;
                  return this.getLedgerEntries(contractLedgerKey);
                case 3:
                  response = _context4.sent;
                  if (!(!response.entries.length || !((_response$entries$ = response.entries[0]) !== null && _response$entries$ !== void 0 && _response$entries$.val))) {
                    _context4.next = 6;
                    break;
                  }
                  return _context4.abrupt("return", Promise.reject({
                    code: 404,
                    message: "Could not obtain contract hash from server"
                  }));
                case 6:
                  wasmHash = response.entries[0].val.contractData().val().instance().executable().wasmHash();
                  return _context4.abrupt("return", this.getContractWasmByHash(wasmHash));
                case 8:
                case "end":
                  return _context4.stop();
              }
            }, _callee4, this);
          }));
          function getContractWasmByContractId(_x4) {
            return _getContractWasmByContractId.apply(this, arguments);
          }
          return getContractWasmByContractId;
        }()
      }, {
        key: "getContractWasmByHash",
        value: function() {
          var _getContractWasmByHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasmHash) {
            var _responseWasm$entries;
            var format, wasmHashBuffer, ledgerKeyWasmHash, responseWasm, wasmBuffer, _args5 = arguments;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  format = _args5.length > 1 && _args5[1] !== void 0 ? _args5[1] : void 0;
                  wasmHashBuffer = typeof wasmHash === "string" ? Buffer.from(wasmHash, format) : wasmHash;
                  ledgerKeyWasmHash = _stellarBase.xdr.LedgerKey.contractCode(new _stellarBase.xdr.LedgerKeyContractCode({
                    hash: wasmHashBuffer
                  }));
                  _context5.next = 5;
                  return this.getLedgerEntries(ledgerKeyWasmHash);
                case 5:
                  responseWasm = _context5.sent;
                  if (!(!responseWasm.entries.length || !((_responseWasm$entries = responseWasm.entries[0]) !== null && _responseWasm$entries !== void 0 && _responseWasm$entries.val))) {
                    _context5.next = 8;
                    break;
                  }
                  return _context5.abrupt("return", Promise.reject({
                    code: 404,
                    message: "Could not obtain contract wasm from server"
                  }));
                case 8:
                  wasmBuffer = responseWasm.entries[0].val.contractCode().code();
                  return _context5.abrupt("return", wasmBuffer);
                case 10:
                case "end":
                  return _context5.stop();
              }
            }, _callee5, this);
          }));
          function getContractWasmByHash(_x5) {
            return _getContractWasmByHash.apply(this, arguments);
          }
          return getContractWasmByHash;
        }()
      }, {
        key: "getLedgerEntries",
        value: function() {
          var _getLedgerEntries2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {
            var _args6 = arguments;
            return _regeneratorRuntime().wrap(function _callee6$(_context6) {
              while (1) switch (_context6.prev = _context6.next) {
                case 0:
                  return _context6.abrupt("return", this._getLedgerEntries.apply(this, _args6).then(_parsers.parseRawLedgerEntries));
                case 1:
                case "end":
                  return _context6.stop();
              }
            }, _callee6, this);
          }));
          function getLedgerEntries() {
            return _getLedgerEntries2.apply(this, arguments);
          }
          return getLedgerEntries;
        }()
      }, {
        key: "_getLedgerEntries",
        value: function() {
          var _getLedgerEntries3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {
            var _len, keys, _key, _args7 = arguments;
            return _regeneratorRuntime().wrap(function _callee7$(_context7) {
              while (1) switch (_context7.prev = _context7.next) {
                case 0:
                  for (_len = _args7.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {
                    keys[_key] = _args7[_key];
                  }
                  return _context7.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getLedgerEntries", {
                    keys: keys.map(function(k) {
                      return k.toXDR("base64");
                    })
                  }));
                case 2:
                case "end":
                  return _context7.stop();
              }
            }, _callee7, this);
          }));
          function _getLedgerEntries() {
            return _getLedgerEntries3.apply(this, arguments);
          }
          return _getLedgerEntries;
        }()
      }, {
        key: "getTransaction",
        value: function() {
          var _getTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(hash2) {
            return _regeneratorRuntime().wrap(function _callee8$(_context8) {
              while (1) switch (_context8.prev = _context8.next) {
                case 0:
                  return _context8.abrupt("return", this._getTransaction(hash2).then(function(raw) {
                    var foundInfo = {};
                    if (raw.status !== _api.Api.GetTransactionStatus.NOT_FOUND) {
                      var _meta$v3$sorobanMeta;
                      var meta = _stellarBase.xdr.TransactionMeta.fromXDR(raw.resultMetaXdr, "base64");
                      foundInfo = _objectSpread({
                        ledger: raw.ledger,
                        createdAt: raw.createdAt,
                        applicationOrder: raw.applicationOrder,
                        feeBump: raw.feeBump,
                        envelopeXdr: _stellarBase.xdr.TransactionEnvelope.fromXDR(raw.envelopeXdr, "base64"),
                        resultXdr: _stellarBase.xdr.TransactionResult.fromXDR(raw.resultXdr, "base64"),
                        resultMetaXdr: meta
                      }, meta.switch() === 3 && meta.v3().sorobanMeta() !== null && raw.status === _api.Api.GetTransactionStatus.SUCCESS && {
                        returnValue: (_meta$v3$sorobanMeta = meta.v3().sorobanMeta()) === null || _meta$v3$sorobanMeta === void 0 ? void 0 : _meta$v3$sorobanMeta.returnValue()
                      });
                    }
                    var result = _objectSpread({
                      status: raw.status,
                      latestLedger: raw.latestLedger,
                      latestLedgerCloseTime: raw.latestLedgerCloseTime,
                      oldestLedger: raw.oldestLedger,
                      oldestLedgerCloseTime: raw.oldestLedgerCloseTime
                    }, foundInfo);
                    return result;
                  }));
                case 1:
                case "end":
                  return _context8.stop();
              }
            }, _callee8, this);
          }));
          function getTransaction(_x6) {
            return _getTransaction2.apply(this, arguments);
          }
          return getTransaction;
        }()
      }, {
        key: "_getTransaction",
        value: function() {
          var _getTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(hash2) {
            return _regeneratorRuntime().wrap(function _callee9$(_context9) {
              while (1) switch (_context9.prev = _context9.next) {
                case 0:
                  return _context9.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getTransaction", {
                    hash: hash2
                  }));
                case 1:
                case "end":
                  return _context9.stop();
              }
            }, _callee9, this);
          }));
          function _getTransaction(_x7) {
            return _getTransaction3.apply(this, arguments);
          }
          return _getTransaction;
        }()
      }, {
        key: "getEvents",
        value: function() {
          var _getEvents2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(request) {
            return _regeneratorRuntime().wrap(function _callee10$(_context10) {
              while (1) switch (_context10.prev = _context10.next) {
                case 0:
                  return _context10.abrupt("return", this._getEvents(request).then(_parsers.parseRawEvents));
                case 1:
                case "end":
                  return _context10.stop();
              }
            }, _callee10, this);
          }));
          function getEvents(_x8) {
            return _getEvents2.apply(this, arguments);
          }
          return getEvents;
        }()
      }, {
        key: "_getEvents",
        value: function() {
          var _getEvents3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee11(request) {
            var _request$filters;
            return _regeneratorRuntime().wrap(function _callee11$(_context11) {
              while (1) switch (_context11.prev = _context11.next) {
                case 0:
                  return _context11.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getEvents", _objectSpread({
                    filters: (_request$filters = request.filters) !== null && _request$filters !== void 0 ? _request$filters : [],
                    pagination: _objectSpread(_objectSpread({}, request.cursor && {
                      cursor: request.cursor
                    }), request.limit && {
                      limit: request.limit
                    })
                  }, request.startLedger && {
                    startLedger: request.startLedger
                  })));
                case 1:
                case "end":
                  return _context11.stop();
              }
            }, _callee11, this);
          }));
          function _getEvents(_x9) {
            return _getEvents3.apply(this, arguments);
          }
          return _getEvents;
        }()
      }, {
        key: "getNetwork",
        value: function() {
          var _getNetwork = _asyncToGenerator(_regeneratorRuntime().mark(function _callee12() {
            return _regeneratorRuntime().wrap(function _callee12$(_context12) {
              while (1) switch (_context12.prev = _context12.next) {
                case 0:
                  _context12.next = 2;
                  return jsonrpc.postObject(this.serverURL.toString(), "getNetwork");
                case 2:
                  return _context12.abrupt("return", _context12.sent);
                case 3:
                case "end":
                  return _context12.stop();
              }
            }, _callee12, this);
          }));
          function getNetwork() {
            return _getNetwork.apply(this, arguments);
          }
          return getNetwork;
        }()
      }, {
        key: "getLatestLedger",
        value: function() {
          var _getLatestLedger = _asyncToGenerator(_regeneratorRuntime().mark(function _callee13() {
            return _regeneratorRuntime().wrap(function _callee13$(_context13) {
              while (1) switch (_context13.prev = _context13.next) {
                case 0:
                  return _context13.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getLatestLedger"));
                case 1:
                case "end":
                  return _context13.stop();
              }
            }, _callee13, this);
          }));
          function getLatestLedger() {
            return _getLatestLedger.apply(this, arguments);
          }
          return getLatestLedger;
        }()
      }, {
        key: "simulateTransaction",
        value: function() {
          var _simulateTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee14(tx, addlResources) {
            return _regeneratorRuntime().wrap(function _callee14$(_context14) {
              while (1) switch (_context14.prev = _context14.next) {
                case 0:
                  return _context14.abrupt("return", this._simulateTransaction(tx, addlResources).then(_parsers.parseRawSimulation));
                case 1:
                case "end":
                  return _context14.stop();
              }
            }, _callee14, this);
          }));
          function simulateTransaction(_x10, _x11) {
            return _simulateTransaction2.apply(this, arguments);
          }
          return simulateTransaction;
        }()
      }, {
        key: "_simulateTransaction",
        value: function() {
          var _simulateTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee15(transaction, addlResources) {
            return _regeneratorRuntime().wrap(function _callee15$(_context15) {
              while (1) switch (_context15.prev = _context15.next) {
                case 0:
                  return _context15.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "simulateTransaction", _objectSpread({
                    transaction: transaction.toXDR()
                  }, addlResources !== void 0 && {
                    resourceConfig: {
                      instructionLeeway: addlResources.cpuInstructions
                    }
                  })));
                case 1:
                case "end":
                  return _context15.stop();
              }
            }, _callee15, this);
          }));
          function _simulateTransaction(_x12, _x13) {
            return _simulateTransaction3.apply(this, arguments);
          }
          return _simulateTransaction;
        }()
      }, {
        key: "prepareTransaction",
        value: function() {
          var _prepareTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee16(tx) {
            var simResponse;
            return _regeneratorRuntime().wrap(function _callee16$(_context16) {
              while (1) switch (_context16.prev = _context16.next) {
                case 0:
                  _context16.next = 2;
                  return this.simulateTransaction(tx);
                case 2:
                  simResponse = _context16.sent;
                  if (!_api.Api.isSimulationError(simResponse)) {
                    _context16.next = 5;
                    break;
                  }
                  throw simResponse.error;
                case 5:
                  return _context16.abrupt("return", (0, _transaction.assembleTransaction)(tx, simResponse).build());
                case 6:
                case "end":
                  return _context16.stop();
              }
            }, _callee16, this);
          }));
          function prepareTransaction(_x14) {
            return _prepareTransaction.apply(this, arguments);
          }
          return prepareTransaction;
        }()
      }, {
        key: "sendTransaction",
        value: function() {
          var _sendTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee17(transaction) {
            return _regeneratorRuntime().wrap(function _callee17$(_context17) {
              while (1) switch (_context17.prev = _context17.next) {
                case 0:
                  return _context17.abrupt("return", this._sendTransaction(transaction).then(_parsers.parseRawSendTransaction));
                case 1:
                case "end":
                  return _context17.stop();
              }
            }, _callee17, this);
          }));
          function sendTransaction(_x15) {
            return _sendTransaction2.apply(this, arguments);
          }
          return sendTransaction;
        }()
      }, {
        key: "_sendTransaction",
        value: function() {
          var _sendTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee18(transaction) {
            return _regeneratorRuntime().wrap(function _callee18$(_context18) {
              while (1) switch (_context18.prev = _context18.next) {
                case 0:
                  return _context18.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "sendTransaction", {
                    transaction: transaction.toXDR()
                  }));
                case 1:
                case "end":
                  return _context18.stop();
              }
            }, _callee18, this);
          }));
          function _sendTransaction(_x16) {
            return _sendTransaction3.apply(this, arguments);
          }
          return _sendTransaction;
        }()
      }, {
        key: "requestAirdrop",
        value: function() {
          var _requestAirdrop = _asyncToGenerator(_regeneratorRuntime().mark(function _callee19(address, friendbotUrl) {
            var account, response, meta, sequence, _error$response, _error$response$detai;
            return _regeneratorRuntime().wrap(function _callee19$(_context19) {
              while (1) switch (_context19.prev = _context19.next) {
                case 0:
                  account = typeof address === "string" ? address : address.accountId();
                  _context19.t0 = friendbotUrl;
                  if (_context19.t0) {
                    _context19.next = 6;
                    break;
                  }
                  _context19.next = 5;
                  return this.getNetwork();
                case 5:
                  _context19.t0 = _context19.sent.friendbotUrl;
                case 6:
                  friendbotUrl = _context19.t0;
                  if (friendbotUrl) {
                    _context19.next = 9;
                    break;
                  }
                  throw new Error("No friendbot URL configured for current network");
                case 9:
                  _context19.prev = 9;
                  _context19.next = 12;
                  return _axios.default.post("".concat(friendbotUrl, "?addr=").concat(encodeURIComponent(account)));
                case 12:
                  response = _context19.sent;
                  meta = _stellarBase.xdr.TransactionMeta.fromXDR(response.data.result_meta_xdr, "base64");
                  sequence = findCreatedAccountSequenceInTransactionMeta(meta);
                  return _context19.abrupt("return", new _stellarBase.Account(account, sequence));
                case 18:
                  _context19.prev = 18;
                  _context19.t1 = _context19["catch"](9);
                  if (!(((_error$response = _context19.t1.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400)) {
                    _context19.next = 23;
                    break;
                  }
                  if (!((_error$response$detai = _context19.t1.response.detail) !== null && _error$response$detai !== void 0 && _error$response$detai.includes("createAccountAlreadyExist"))) {
                    _context19.next = 23;
                    break;
                  }
                  return _context19.abrupt("return", this.getAccount(account));
                case 23:
                  throw _context19.t1;
                case 24:
                case "end":
                  return _context19.stop();
              }
            }, _callee19, this, [[9, 18]]);
          }));
          function requestAirdrop(_x17, _x18) {
            return _requestAirdrop.apply(this, arguments);
          }
          return requestAirdrop;
        }()
      }]);
    }();
    function findCreatedAccountSequenceInTransactionMeta(meta) {
      var operations = [];
      switch (meta.switch()) {
        case 0:
          operations = meta.operations();
          break;
        case 1:
        case 2:
        case 3:
          operations = meta.value().operations();
          break;
        default:
          throw new Error("Unexpected transaction meta switch value");
      }
      var _iterator = _createForOfIteratorHelper(operations), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var op = _step.value;
          var _iterator2 = _createForOfIteratorHelper(op.changes()), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var c = _step2.value;
              if (c.switch() !== _stellarBase.xdr.LedgerEntryChangeType.ledgerEntryCreated()) {
                continue;
              }
              var data = c.created().data();
              if (data.switch() !== _stellarBase.xdr.LedgerEntryType.account()) {
                continue;
              }
              return data.account().seqNum().toString();
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      throw new Error("No account created in transaction");
    }
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js
var require_rust_result = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Ok = exports.Err = void 0;
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Ok = exports.Ok = function() {
      function Ok2(value) {
        _classCallCheck(this, Ok2);
        this.value = value;
      }
      return _createClass(Ok2, [{
        key: "unwrapErr",
        value: function unwrapErr() {
          throw new Error("No error");
        }
      }, {
        key: "unwrap",
        value: function unwrap() {
          return this.value;
        }
      }, {
        key: "isOk",
        value: function isOk() {
          return true;
        }
      }, {
        key: "isErr",
        value: function isErr() {
          return false;
        }
      }]);
    }();
    var Err = exports.Err = function() {
      function Err2(error) {
        _classCallCheck(this, Err2);
        this.error = error;
      }
      return _createClass(Err2, [{
        key: "unwrapErr",
        value: function unwrapErr() {
          return this.error;
        }
      }, {
        key: "unwrap",
        value: function unwrap() {
          throw new Error(this.error.message);
        }
      }, {
        key: "isOk",
        value: function isOk() {
          return false;
        }
      }, {
        key: "isErr",
        value: function isErr() {
          return true;
        }
      }]);
    }();
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/utils.js
var require_utils = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.contractErrorPattern = exports.DEFAULT_TIMEOUT = void 0;
    exports.implementsToString = implementsToString;
    exports.processSpecEntryStream = processSpecEntryStream;
    exports.withExponentialBackoff = withExponentialBackoff;
    var _stellarBase = require_lib();
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    var DEFAULT_TIMEOUT = exports.DEFAULT_TIMEOUT = 5 * 60;
    function withExponentialBackoff(_x, _x2, _x3) {
      return _withExponentialBackoff.apply(this, arguments);
    }
    function _withExponentialBackoff() {
      _withExponentialBackoff = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(fn, keepWaitingIf, timeoutInSeconds) {
        var exponentialFactor, verbose, attempts, count, waitUntil, waitTime, totalWaitTime, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              exponentialFactor = _args.length > 3 && _args[3] !== void 0 ? _args[3] : 1.5;
              verbose = _args.length > 4 && _args[4] !== void 0 ? _args[4] : false;
              attempts = [];
              count = 0;
              _context.t0 = attempts;
              _context.next = 7;
              return fn();
            case 7:
              _context.t1 = _context.sent;
              _context.t0.push.call(_context.t0, _context.t1);
              if (keepWaitingIf(attempts[attempts.length - 1])) {
                _context.next = 11;
                break;
              }
              return _context.abrupt("return", attempts);
            case 11:
              waitUntil = new Date(Date.now() + timeoutInSeconds * 1e3).valueOf();
              waitTime = 1e3;
              totalWaitTime = waitTime;
            case 14:
              if (!(Date.now() < waitUntil && keepWaitingIf(attempts[attempts.length - 1]))) {
                _context.next = 30;
                break;
              }
              count += 1;
              if (verbose) {
                console.info("Waiting ".concat(waitTime, "ms before trying again (bringing the total wait time to ").concat(totalWaitTime, "ms so far, of total ").concat(timeoutInSeconds * 1e3, "ms)"));
              }
              _context.next = 19;
              return new Promise(function(res) {
                return setTimeout(res, waitTime);
              });
            case 19:
              waitTime *= exponentialFactor;
              if (new Date(Date.now() + waitTime).valueOf() > waitUntil) {
                waitTime = waitUntil - Date.now();
                if (verbose) {
                  console.info("was gonna wait too long; new waitTime: ".concat(waitTime, "ms"));
                }
              }
              totalWaitTime = waitTime + totalWaitTime;
              _context.t2 = attempts;
              _context.next = 25;
              return fn(attempts[attempts.length - 1]);
            case 25:
              _context.t3 = _context.sent;
              _context.t2.push.call(_context.t2, _context.t3);
              if (verbose && keepWaitingIf(attempts[attempts.length - 1])) {
                console.info("".concat(count, ". Called ").concat(fn, "; ").concat(attempts.length, " prev attempts. Most recent: ").concat(JSON.stringify(attempts[attempts.length - 1], null, 2)));
              }
              _context.next = 14;
              break;
            case 30:
              return _context.abrupt("return", attempts);
            case 31:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return _withExponentialBackoff.apply(this, arguments);
    }
    var contractErrorPattern = exports.contractErrorPattern = /Error\(Contract, #(\d+)\)/;
    function implementsToString(obj) {
      return _typeof(obj) === "object" && obj !== null && "toString" in obj;
    }
    function processSpecEntryStream(buffer) {
      var reader = new _stellarBase.cereal.XdrReader(buffer);
      var res = [];
      while (!reader.eof) {
        res.push(_stellarBase.xdr.ScSpecEntry.read(reader));
      }
      return res;
    }
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js
var require_sent_transaction = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SentTransaction = void 0;
    var _stellarBase = require_lib();
    var _server = require_server();
    var _api = require_api();
    var _utils = require_utils();
    var _SentTransaction;
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _wrapNativeSuper(t2) {
      var r3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
      return _wrapNativeSuper = function _wrapNativeSuper2(t3) {
        if (null === t3 || !_isNativeFunction(t3)) return t3;
        if ("function" != typeof t3) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r3) {
          if (r3.has(t3)) return r3.get(t3);
          r3.set(t3, Wrapper);
        }
        function Wrapper() {
          return _construct(t3, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t3.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t3);
      }, _wrapNativeSuper(t2);
    }
    function _construct(t2, e2, r3) {
      if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
      var o2 = [null];
      o2.push.apply(o2, e2);
      var p = new (t2.bind.apply(t2, o2))();
      return r3 && _setPrototypeOf(p, r3.prototype), p;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _isNativeFunction(t2) {
      try {
        return -1 !== Function.toString.call(t2).indexOf("[native code]");
      } catch (n2) {
        return "function" == typeof t2;
      }
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var SentTransaction = exports.SentTransaction = function() {
      function SentTransaction2(signTransaction, assembled) {
        var _this = this, _this$assembled$optio2;
        _classCallCheck(this, SentTransaction2);
        _defineProperty(this, "send", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
          var _this$assembled$optio;
          var timeoutInSeconds, signature, hash2;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                timeoutInSeconds = (_this$assembled$optio = _this.assembled.options.timeoutInSeconds) !== null && _this$assembled$optio !== void 0 ? _this$assembled$optio : _utils.DEFAULT_TIMEOUT;
                _this.assembled.built = _stellarBase.TransactionBuilder.cloneFrom(_this.assembled.built, {
                  fee: _this.assembled.built.fee,
                  timebounds: void 0,
                  sorobanData: new _stellarBase.SorobanDataBuilder(_this.assembled.simulationData.transactionData.toXDR()).build()
                }).setTimeout(timeoutInSeconds).build();
                _context.next = 4;
                return _this.signTransaction(_this.assembled.built.toXDR(), {
                  networkPassphrase: _this.assembled.options.networkPassphrase
                });
              case 4:
                signature = _context.sent;
                _this.signed = _stellarBase.TransactionBuilder.fromXDR(signature, _this.assembled.options.networkPassphrase);
                _context.next = 8;
                return _this.server.sendTransaction(_this.signed);
              case 8:
                _this.sendTransactionResponse = _context.sent;
                if (!(_this.sendTransactionResponse.status !== "PENDING")) {
                  _context.next = 11;
                  break;
                }
                throw new SentTransaction2.Errors.SendFailed("Sending the transaction to the network failed!\n".concat(JSON.stringify(_this.sendTransactionResponse, null, 2)));
              case 11:
                hash2 = _this.sendTransactionResponse.hash;
                _context.next = 14;
                return (0, _utils.withExponentialBackoff)(function() {
                  return _this.server.getTransaction(hash2);
                }, function(resp) {
                  return resp.status === _api.Api.GetTransactionStatus.NOT_FOUND;
                }, timeoutInSeconds);
              case 14:
                _this.getTransactionResponseAll = _context.sent;
                _this.getTransactionResponse = _this.getTransactionResponseAll[_this.getTransactionResponseAll.length - 1];
                if (!(_this.getTransactionResponse.status === _api.Api.GetTransactionStatus.NOT_FOUND)) {
                  _context.next = 18;
                  break;
                }
                throw new SentTransaction2.Errors.TransactionStillPending("Waited ".concat(timeoutInSeconds, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(_this.sendTransactionResponse, null, 2), "\n") + "All attempts to get the result: ".concat(JSON.stringify(_this.getTransactionResponseAll, null, 2)));
              case 18:
                return _context.abrupt("return", _this);
              case 19:
              case "end":
                return _context.stop();
            }
          }, _callee);
        })));
        this.signTransaction = signTransaction;
        this.assembled = assembled;
        if (!signTransaction) {
          throw new Error("You must provide a `signTransaction` function to send a transaction");
        }
        this.server = new _server.Server(this.assembled.options.rpcUrl, {
          allowHttp: (_this$assembled$optio2 = this.assembled.options.allowHttp) !== null && _this$assembled$optio2 !== void 0 ? _this$assembled$optio2 : false
        });
      }
      return _createClass(SentTransaction2, [{
        key: "result",
        get: function get() {
          if ("getTransactionResponse" in this && this.getTransactionResponse) {
            if ("returnValue" in this.getTransactionResponse) {
              return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
            }
            throw new Error("Transaction failed! Cannot parse result.");
          }
          if (this.sendTransactionResponse) {
            var _this$sendTransaction;
            var errorResult = (_this$sendTransaction = this.sendTransactionResponse.errorResult) === null || _this$sendTransaction === void 0 ? void 0 : _this$sendTransaction.result();
            if (errorResult) {
              throw new SentTransaction2.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(errorResult));
            }
            throw new SentTransaction2.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
          }
          throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled)));
        }
      }]);
    }();
    _SentTransaction = SentTransaction;
    _defineProperty(SentTransaction, "Errors", {
      SendFailed: function(_Error) {
        function SendFailedError() {
          _classCallCheck(this, SendFailedError);
          return _callSuper(this, SendFailedError, arguments);
        }
        _inherits(SendFailedError, _Error);
        return _createClass(SendFailedError);
      }(_wrapNativeSuper(Error)),
      SendResultOnly: function(_Error2) {
        function SendResultOnlyError() {
          _classCallCheck(this, SendResultOnlyError);
          return _callSuper(this, SendResultOnlyError, arguments);
        }
        _inherits(SendResultOnlyError, _Error2);
        return _createClass(SendResultOnlyError);
      }(_wrapNativeSuper(Error)),
      TransactionStillPending: function(_Error3) {
        function TransactionStillPendingError() {
          _classCallCheck(this, TransactionStillPendingError);
          return _callSuper(this, TransactionStillPendingError, arguments);
        }
        _inherits(TransactionStillPendingError, _Error3);
        return _createClass(TransactionStillPendingError);
      }(_wrapNativeSuper(Error))
    });
    _defineProperty(SentTransaction, "init", function() {
      var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(signTransaction, assembled) {
        var tx, sent;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              tx = new _SentTransaction(signTransaction, assembled);
              _context2.next = 3;
              return tx.send();
            case 3:
              sent = _context2.sent;
              return _context2.abrupt("return", sent);
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function(_x, _x2) {
        return _ref2.apply(this, arguments);
      };
    }());
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js
var require_assembled_transaction = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.NULL_ACCOUNT = exports.AssembledTransaction = void 0;
    var _stellarBase = require_lib();
    var _server = require_server();
    var _api = require_api();
    var _transaction = require_transaction2();
    var _rust_result = require_rust_result();
    var _utils = require_utils();
    var _sent_transaction = require_sent_transaction();
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _wrapNativeSuper(t2) {
      var r3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
      return _wrapNativeSuper = function _wrapNativeSuper2(t3) {
        if (null === t3 || !_isNativeFunction(t3)) return t3;
        if ("function" != typeof t3) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r3) {
          if (r3.has(t3)) return r3.get(t3);
          r3.set(t3, Wrapper);
        }
        function Wrapper() {
          return _construct(t3, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t3.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t3);
      }, _wrapNativeSuper(t2);
    }
    function _construct(t2, e2, r3) {
      if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
      var o2 = [null];
      o2.push.apply(o2, e2);
      var p = new (t2.bind.apply(t2, o2))();
      return r3 && _setPrototypeOf(p, r3.prototype), p;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _isNativeFunction(t2) {
      try {
        return -1 !== Function.toString.call(t2).indexOf("[native code]");
      } catch (n2) {
        return "function" == typeof t2;
      }
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2.return && (u = t2.return(), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function _createForOfIteratorHelper(r3, e2) {
      var t2 = "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (!t2) {
        if (Array.isArray(r3) || (t2 = _unsupportedIterableToArray(r3)) || e2 && r3 && "number" == typeof r3.length) {
          t2 && (r3 = t2);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n2() {
            return _n >= r3.length ? { done: true } : { done: false, value: r3[_n++] };
          }, e: function e3(r4) {
            throw r4;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o2, a = true, u = false;
      return { s: function s() {
        t2 = t2.call(r3);
      }, n: function n2() {
        var r4 = t2.next();
        return a = r4.done, r4;
      }, e: function e3(r4) {
        u = true, o2 = r4;
      }, f: function f() {
        try {
          a || null == t2.return || t2.return();
        } finally {
          if (u) throw o2;
        }
      } };
    }
    function _toConsumableArray(r3) {
      return _arrayWithoutHoles(r3) || _iterableToArray(r3) || _unsupportedIterableToArray(r3) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _iterableToArray(r3) {
      if ("undefined" != typeof Symbol && null != r3[Symbol.iterator] || null != r3["@@iterator"]) return Array.from(r3);
    }
    function _arrayWithoutHoles(r3) {
      if (Array.isArray(r3)) return _arrayLikeToArray(r3);
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var NULL_ACCOUNT = exports.NULL_ACCOUNT = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF";
    var AssembledTransaction3 = exports.AssembledTransaction = function() {
      function AssembledTransaction4(options) {
        var _this = this, _this$options$simulat, _this$options$allowHt;
        _classCallCheck(this, AssembledTransaction4);
        _defineProperty(this, "simulate", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                if (_this.raw) {
                  _context.next = 2;
                  break;
                }
                throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
              case 2:
                _this.built = _this.raw.build();
                _context.next = 5;
                return _this.server.simulateTransaction(_this.built);
              case 5:
                _this.simulation = _context.sent;
                if (_api.Api.isSimulationSuccess(_this.simulation)) {
                  _this.built = (0, _transaction.assembleTransaction)(_this.built, _this.simulation).build();
                }
                return _context.abrupt("return", _this);
              case 8:
              case "end":
                return _context.stop();
            }
          }, _callee);
        })));
        _defineProperty(this, "signAndSend", _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
          var _ref3, _ref3$force, force, _ref3$signTransaction, signTransaction, typeChecked, sent, _args2 = arguments;
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                _ref3 = _args2.length > 0 && _args2[0] !== void 0 ? _args2[0] : {}, _ref3$force = _ref3.force, force = _ref3$force === void 0 ? false : _ref3$force, _ref3$signTransaction = _ref3.signTransaction, signTransaction = _ref3$signTransaction === void 0 ? _this.options.signTransaction : _ref3$signTransaction;
                if (_this.built) {
                  _context2.next = 3;
                  break;
                }
                throw new Error("Transaction has not yet been simulated");
              case 3:
                if (!(!force && _this.isReadCall)) {
                  _context2.next = 5;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
              case 5:
                if (signTransaction) {
                  _context2.next = 7;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
              case 7:
                if (!_this.needsNonInvokerSigningBy().length) {
                  _context2.next = 9;
                  break;
                }
                throw new AssembledTransaction4.Errors.NeedsMoreSignatures("Transaction requires more signatures. See `needsNonInvokerSigningBy` for details.");
              case 9:
                typeChecked = _this;
                _context2.next = 12;
                return _sent_transaction.SentTransaction.init(signTransaction, typeChecked);
              case 12:
                sent = _context2.sent;
                return _context2.abrupt("return", sent);
              case 14:
              case "end":
                return _context2.stop();
            }
          }, _callee2);
        })));
        _defineProperty(this, "getStorageExpiration", _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
          var entryRes;
          return _regeneratorRuntime().wrap(function _callee3$(_context3) {
            while (1) switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _this.server.getLedgerEntries(new _stellarBase.Contract(_this.options.contractId).getFootprint());
              case 2:
                entryRes = _context3.sent;
                if (!(!entryRes.entries || !entryRes.entries.length || !entryRes.entries[0].liveUntilLedgerSeq)) {
                  _context3.next = 5;
                  break;
                }
                throw new Error("failed to get ledger entry");
              case 5:
                return _context3.abrupt("return", entryRes.entries[0].liveUntilLedgerSeq);
              case 6:
              case "end":
                return _context3.stop();
            }
          }, _callee3);
        })));
        _defineProperty(this, "needsNonInvokerSigningBy", function() {
          var _rawInvokeHostFunctio;
          var _ref5 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref5$includeAlreadyS = _ref5.includeAlreadySigned, includeAlreadySigned = _ref5$includeAlreadyS === void 0 ? false : _ref5$includeAlreadyS;
          if (!_this.built) {
            throw new Error("Transaction has not yet been simulated");
          }
          if (!("operations" in _this.built)) {
            throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(_this.built)));
          }
          var rawInvokeHostFunctionOp = _this.built.operations[0];
          return _toConsumableArray(new Set(((_rawInvokeHostFunctio = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio !== void 0 ? _rawInvokeHostFunctio : []).filter(function(entry) {
            return entry.credentials().switch() === _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (includeAlreadySigned || entry.credentials().address().signature().switch().name === "scvVoid");
          }).map(function(entry) {
            return _stellarBase.StrKey.encodeEd25519PublicKey(entry.credentials().address().address().accountId().ed25519());
          })));
        });
        _defineProperty(this, "signAuthEntries", _asyncToGenerator(_regeneratorRuntime().mark(function _callee5() {
          var _rawInvokeHostFunctio2;
          var _ref7, _ref7$expiration, expiration, _ref7$signAuthEntry, signAuthEntry, _ref7$publicKey, publicKey, needsNonInvokerSigningBy, rawInvokeHostFunctionOp, authEntries, _iterator, _step, _step$value, i, entry, pk, _args5 = arguments;
          return _regeneratorRuntime().wrap(function _callee5$(_context5) {
            while (1) switch (_context5.prev = _context5.next) {
              case 0:
                _ref7 = _args5.length > 0 && _args5[0] !== void 0 ? _args5[0] : {}, _ref7$expiration = _ref7.expiration, expiration = _ref7$expiration === void 0 ? _this.getStorageExpiration() : _ref7$expiration, _ref7$signAuthEntry = _ref7.signAuthEntry, signAuthEntry = _ref7$signAuthEntry === void 0 ? _this.options.signAuthEntry : _ref7$signAuthEntry, _ref7$publicKey = _ref7.publicKey, publicKey = _ref7$publicKey === void 0 ? _this.options.publicKey : _ref7$publicKey;
                if (_this.built) {
                  _context5.next = 3;
                  break;
                }
                throw new Error("Transaction has not yet been assembled or simulated");
              case 3:
                needsNonInvokerSigningBy = _this.needsNonInvokerSigningBy();
                if (needsNonInvokerSigningBy) {
                  _context5.next = 6;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
              case 6:
                if (!(needsNonInvokerSigningBy.indexOf(publicKey !== null && publicKey !== void 0 ? publicKey : "") === -1)) {
                  _context5.next = 8;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(publicKey, '"'));
              case 8:
                if (signAuthEntry) {
                  _context5.next = 10;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSigner("You must provide `signAuthEntry` when calling `signAuthEntries`, or when constructing the `Client` or `AssembledTransaction`");
              case 10:
                rawInvokeHostFunctionOp = _this.built.operations[0];
                authEntries = (_rawInvokeHostFunctio2 = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio2 !== void 0 ? _rawInvokeHostFunctio2 : [];
                _iterator = _createForOfIteratorHelper(authEntries.entries());
                _context5.prev = 13;
                _iterator.s();
              case 15:
                if ((_step = _iterator.n()).done) {
                  _context5.next = 34;
                  break;
                }
                _step$value = _slicedToArray(_step.value, 2), i = _step$value[0], entry = _step$value[1];
                if (!(entry.credentials().switch() !== _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress())) {
                  _context5.next = 19;
                  break;
                }
                return _context5.abrupt("continue", 32);
              case 19:
                pk = _stellarBase.StrKey.encodeEd25519PublicKey(entry.credentials().address().address().accountId().ed25519());
                if (!(pk !== publicKey)) {
                  _context5.next = 22;
                  break;
                }
                return _context5.abrupt("continue", 32);
              case 22:
                _context5.t0 = _stellarBase.authorizeEntry;
                _context5.t1 = entry;
                _context5.t2 = function() {
                  var _ref8 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(preimage) {
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                      while (1) switch (_context4.prev = _context4.next) {
                        case 0:
                          _context4.t0 = Buffer;
                          _context4.next = 3;
                          return signAuthEntry(preimage.toXDR("base64"));
                        case 3:
                          _context4.t1 = _context4.sent;
                          return _context4.abrupt("return", _context4.t0.from.call(_context4.t0, _context4.t1, "base64"));
                        case 5:
                        case "end":
                          return _context4.stop();
                      }
                    }, _callee4);
                  }));
                  return function(_x) {
                    return _ref8.apply(this, arguments);
                  };
                }();
                _context5.next = 27;
                return expiration;
              case 27:
                _context5.t3 = _context5.sent;
                _context5.t4 = _this.options.networkPassphrase;
                _context5.next = 31;
                return (0, _context5.t0)(_context5.t1, _context5.t2, _context5.t3, _context5.t4);
              case 31:
                authEntries[i] = _context5.sent;
              case 32:
                _context5.next = 15;
                break;
              case 34:
                _context5.next = 39;
                break;
              case 36:
                _context5.prev = 36;
                _context5.t5 = _context5["catch"](13);
                _iterator.e(_context5.t5);
              case 39:
                _context5.prev = 39;
                _iterator.f();
                return _context5.finish(39);
              case 42:
              case "end":
                return _context5.stop();
            }
          }, _callee5, null, [[13, 36, 39, 42]]);
        })));
        this.options = options;
        this.options.simulate = (_this$options$simulat = this.options.simulate) !== null && _this$options$simulat !== void 0 ? _this$options$simulat : true;
        this.server = new _server.Server(this.options.rpcUrl, {
          allowHttp: (_this$options$allowHt = this.options.allowHttp) !== null && _this$options$allowHt !== void 0 ? _this$options$allowHt : false
        });
      }
      return _createClass(AssembledTransaction4, [{
        key: "toJSON",
        value: function toJSON() {
          var _this$built;
          return JSON.stringify({
            method: this.options.method,
            tx: (_this$built = this.built) === null || _this$built === void 0 ? void 0 : _this$built.toXDR(),
            simulationResult: {
              auth: this.simulationData.result.auth.map(function(a) {
                return a.toXDR("base64");
              }),
              retval: this.simulationData.result.retval.toXDR("base64")
            },
            simulationTransactionData: this.simulationData.transactionData.toXDR("base64")
          });
        }
      }, {
        key: "simulationData",
        get: function get() {
          if (this.simulationResult && this.simulationTransactionData) {
            return {
              result: this.simulationResult,
              transactionData: this.simulationTransactionData
            };
          }
          var simulation = this.simulation;
          if (!simulation) {
            throw new AssembledTransaction4.Errors.NotYetSimulated("Transaction has not yet been simulated");
          }
          if (_api.Api.isSimulationError(simulation)) {
            throw new Error('Transaction simulation failed: "'.concat(simulation.error, '"'));
          }
          if (_api.Api.isSimulationRestore(simulation)) {
            throw new AssembledTransaction4.Errors.ExpiredState("You need to restore some contract state before you can invoke this method. ".concat(JSON.stringify(simulation, null, 2)));
          }
          if (!simulation.result) {
            throw new Error("Expected an invocation simulation, but got no 'result' field. Simulation: ".concat(JSON.stringify(simulation, null, 2)));
          }
          this.simulationResult = simulation.result;
          this.simulationTransactionData = simulation.transactionData.build();
          return {
            result: this.simulationResult,
            transactionData: this.simulationTransactionData
          };
        }
      }, {
        key: "result",
        get: function get() {
          try {
            return this.options.parseResultXdr(this.simulationData.result.retval);
          } catch (e2) {
            if (!(0, _utils.implementsToString)(e2)) throw e2;
            var err = this.parseError(e2.toString());
            if (err) return err;
            throw e2;
          }
        }
      }, {
        key: "parseError",
        value: function parseError(errorMessage) {
          if (!this.options.errorTypes) return void 0;
          var match = errorMessage.match(_utils.contractErrorPattern);
          if (!match) return void 0;
          var i = parseInt(match[1], 10);
          var err = this.options.errorTypes[i];
          if (!err) return void 0;
          return new _rust_result.Err(err);
        }
      }, {
        key: "isReadCall",
        get: function get() {
          var authsCount = this.simulationData.result.auth.length;
          var writeLength = this.simulationData.transactionData.resources().footprint().readWrite().length;
          return authsCount === 0 && writeLength === 0;
        }
      }], [{
        key: "fromJSON",
        value: function fromJSON(options, _ref9) {
          var tx = _ref9.tx, simulationResult = _ref9.simulationResult, simulationTransactionData = _ref9.simulationTransactionData;
          var txn = new AssembledTransaction4(options);
          txn.built = _stellarBase.TransactionBuilder.fromXDR(tx, options.networkPassphrase);
          txn.simulationResult = {
            auth: simulationResult.auth.map(function(a) {
              return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(a, "base64");
            }),
            retval: _stellarBase.xdr.ScVal.fromXDR(simulationResult.retval, "base64")
          };
          txn.simulationTransactionData = _stellarBase.xdr.SorobanTransactionData.fromXDR(simulationTransactionData, "base64");
          return txn;
        }
      }, {
        key: "build",
        value: function() {
          var _build = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(options) {
            var _options$fee, _options$args, _options$timeoutInSec;
            var tx, contract, account;
            return _regeneratorRuntime().wrap(function _callee6$(_context6) {
              while (1) switch (_context6.prev = _context6.next) {
                case 0:
                  tx = new AssembledTransaction4(options);
                  contract = new _stellarBase.Contract(options.contractId);
                  if (!options.publicKey) {
                    _context6.next = 8;
                    break;
                  }
                  _context6.next = 5;
                  return tx.server.getAccount(options.publicKey);
                case 5:
                  _context6.t0 = _context6.sent;
                  _context6.next = 9;
                  break;
                case 8:
                  _context6.t0 = new _stellarBase.Account(NULL_ACCOUNT, "0");
                case 9:
                  account = _context6.t0;
                  tx.raw = new _stellarBase.TransactionBuilder(account, {
                    fee: (_options$fee = options.fee) !== null && _options$fee !== void 0 ? _options$fee : _stellarBase.BASE_FEE,
                    networkPassphrase: options.networkPassphrase
                  }).addOperation(contract.call.apply(contract, [options.method].concat(_toConsumableArray((_options$args = options.args) !== null && _options$args !== void 0 ? _options$args : [])))).setTimeout((_options$timeoutInSec = options.timeoutInSeconds) !== null && _options$timeoutInSec !== void 0 ? _options$timeoutInSec : _utils.DEFAULT_TIMEOUT);
                  if (!options.simulate) {
                    _context6.next = 14;
                    break;
                  }
                  _context6.next = 14;
                  return tx.simulate();
                case 14:
                  return _context6.abrupt("return", tx);
                case 15:
                case "end":
                  return _context6.stop();
              }
            }, _callee6);
          }));
          function build(_x2) {
            return _build.apply(this, arguments);
          }
          return build;
        }()
      }]);
    }();
    _defineProperty(AssembledTransaction3, "Errors", {
      ExpiredState: function(_Error) {
        function ExpiredStateError() {
          _classCallCheck(this, ExpiredStateError);
          return _callSuper(this, ExpiredStateError, arguments);
        }
        _inherits(ExpiredStateError, _Error);
        return _createClass(ExpiredStateError);
      }(_wrapNativeSuper(Error)),
      NeedsMoreSignatures: function(_Error2) {
        function NeedsMoreSignaturesError() {
          _classCallCheck(this, NeedsMoreSignaturesError);
          return _callSuper(this, NeedsMoreSignaturesError, arguments);
        }
        _inherits(NeedsMoreSignaturesError, _Error2);
        return _createClass(NeedsMoreSignaturesError);
      }(_wrapNativeSuper(Error)),
      NoSignatureNeeded: function(_Error3) {
        function NoSignatureNeededError() {
          _classCallCheck(this, NoSignatureNeededError);
          return _callSuper(this, NoSignatureNeededError, arguments);
        }
        _inherits(NoSignatureNeededError, _Error3);
        return _createClass(NoSignatureNeededError);
      }(_wrapNativeSuper(Error)),
      NoUnsignedNonInvokerAuthEntries: function(_Error4) {
        function NoUnsignedNonInvokerAuthEntriesError() {
          _classCallCheck(this, NoUnsignedNonInvokerAuthEntriesError);
          return _callSuper(this, NoUnsignedNonInvokerAuthEntriesError, arguments);
        }
        _inherits(NoUnsignedNonInvokerAuthEntriesError, _Error4);
        return _createClass(NoUnsignedNonInvokerAuthEntriesError);
      }(_wrapNativeSuper(Error)),
      NoSigner: function(_Error5) {
        function NoSignerError() {
          _classCallCheck(this, NoSignerError);
          return _callSuper(this, NoSignerError, arguments);
        }
        _inherits(NoSignerError, _Error5);
        return _createClass(NoSignerError);
      }(_wrapNativeSuper(Error)),
      NotYetSimulated: function(_Error6) {
        function NotYetSimulatedError() {
          _classCallCheck(this, NotYetSimulatedError);
          return _callSuper(this, NotYetSimulatedError, arguments);
        }
        _inherits(NotYetSimulatedError, _Error6);
        return _createClass(NotYetSimulatedError);
      }(_wrapNativeSuper(Error)),
      FakeAccount: function(_Error7) {
        function FakeAccountError() {
          _classCallCheck(this, FakeAccountError);
          return _callSuper(this, FakeAccountError, arguments);
        }
        _inherits(FakeAccountError, _Error7);
        return _createClass(FakeAccountError);
      }(_wrapNativeSuper(Error))
    });
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/basic_node_signer.js
var require_basic_node_signer = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/basic_node_signer.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.basicNodeSigner = void 0;
    var _stellarBase = require_lib();
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    var basicNodeSigner = exports.basicNodeSigner = function basicNodeSigner2(keypair, networkPassphrase) {
      return {
        signTransaction: function() {
          var _signTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(tx) {
            var t2;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  t2 = _stellarBase.TransactionBuilder.fromXDR(tx, networkPassphrase);
                  t2.sign(keypair);
                  return _context.abrupt("return", t2.toXDR());
                case 3:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));
          function signTransaction(_x) {
            return _signTransaction.apply(this, arguments);
          }
          return signTransaction;
        }(),
        signAuthEntry: function() {
          var _signAuthEntry = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(entryXdr) {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  return _context2.abrupt("return", keypair.sign((0, _stellarBase.hash)(Buffer.from(entryXdr, "base64"))).toString("base64"));
                case 1:
                case "end":
                  return _context2.stop();
              }
            }, _callee2);
          }));
          function signAuthEntry(_x2) {
            return _signAuthEntry.apply(this, arguments);
          }
          return signAuthEntry;
        }()
      };
    };
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/spec.js
var require_spec = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/spec.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Spec = void 0;
    var _stellarBase = require_lib();
    var _rust_result = require_rust_result();
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _createForOfIteratorHelper(r3, e2) {
      var t2 = "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (!t2) {
        if (Array.isArray(r3) || (t2 = _unsupportedIterableToArray(r3)) || e2 && r3 && "number" == typeof r3.length) {
          t2 && (r3 = t2);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n2() {
            return _n >= r3.length ? { done: true } : { done: false, value: r3[_n++] };
          }, e: function e3(r4) {
            throw r4;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o2, a = true, u = false;
      return { s: function s() {
        t2 = t2.call(r3);
      }, n: function n2() {
        var r4 = t2.next();
        return a = r4.done, r4;
      }, e: function e3(r4) {
        u = true, o2 = r4;
      }, f: function f() {
        try {
          a || null == t2.return || t2.return();
        } finally {
          if (u) throw o2;
        }
      } };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2.return && (u = t2.return(), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function readObj(args, input) {
      var inputName = input.name().toString();
      var entry = Object.entries(args).find(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2), name = _ref2[0], _ = _ref2[1];
        return name === inputName;
      });
      if (!entry) {
        throw new Error("Missing field ".concat(inputName));
      }
      return entry[1];
    }
    var Spec = exports.Spec = function() {
      function Spec2(entries) {
        _classCallCheck(this, Spec2);
        _defineProperty(this, "entries", []);
        if (entries.length == 0) {
          throw new Error("Contract spec must have at least one entry");
        }
        var entry = entries[0];
        if (typeof entry === "string") {
          this.entries = entries.map(function(s) {
            return _stellarBase.xdr.ScSpecEntry.fromXDR(s, "base64");
          });
        } else {
          this.entries = entries;
        }
      }
      return _createClass(Spec2, [{
        key: "funcs",
        value: function funcs() {
          return this.entries.filter(function(entry) {
            return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
          }).map(function(entry) {
            return entry.functionV0();
          });
        }
      }, {
        key: "getFunc",
        value: function getFunc(name) {
          var entry = this.findEntry(name);
          if (entry.switch().value !== _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) {
            throw new Error("".concat(name, " is not a function"));
          }
          return entry.functionV0();
        }
      }, {
        key: "funcArgsToScVals",
        value: function funcArgsToScVals(name, args) {
          var _this = this;
          var fn = this.getFunc(name);
          return fn.inputs().map(function(input) {
            return _this.nativeToScVal(readObj(args, input), input.type());
          });
        }
      }, {
        key: "funcResToNative",
        value: function funcResToNative(name, val_or_base64) {
          var val = typeof val_or_base64 === "string" ? _stellarBase.xdr.ScVal.fromXDR(val_or_base64, "base64") : val_or_base64;
          var func = this.getFunc(name);
          var outputs = func.outputs();
          if (outputs.length === 0) {
            var type = val.switch();
            if (type.value !== _stellarBase.xdr.ScValType.scvVoid().value) {
              throw new Error("Expected void, got ".concat(type.name));
            }
            return null;
          }
          if (outputs.length > 1) {
            throw new Error("Multiple outputs not supported");
          }
          var output = outputs[0];
          if (output.switch().value === _stellarBase.xdr.ScSpecType.scSpecTypeResult().value) {
            return new _rust_result.Ok(this.scValToNative(val, output.result().okType()));
          }
          return this.scValToNative(val, output);
        }
      }, {
        key: "findEntry",
        value: function findEntry(name) {
          var entry = this.entries.find(function(entry2) {
            return entry2.value().name().toString() === name;
          });
          if (!entry) {
            throw new Error("no such entry: ".concat(name));
          }
          return entry;
        }
      }, {
        key: "nativeToScVal",
        value: function nativeToScVal(val, ty) {
          var _this2 = this;
          var t2 = ty.switch();
          var value = t2.value;
          if (t2.value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {
            var udt = ty.udt();
            return this.nativeToUdt(val, udt.name().toString());
          }
          if (value === _stellarBase.xdr.ScSpecType.scSpecTypeOption().value) {
            var opt = ty.option();
            if (val === void 0) {
              return _stellarBase.xdr.ScVal.scvVoid();
            }
            return this.nativeToScVal(val, opt.valueType());
          }
          switch (_typeof(val)) {
            case "object": {
              var _val$constructor$name, _val$constructor;
              if (val === null) {
                switch (value) {
                  case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
                    return _stellarBase.xdr.ScVal.scvVoid();
                  default:
                    throw new TypeError("Type ".concat(ty, " was not void, but value was null"));
                }
              }
              if (val instanceof _stellarBase.xdr.ScVal) {
                return val;
              }
              if (val instanceof _stellarBase.Address) {
                if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {
                  throw new TypeError("Type ".concat(ty, " was not address, but value was Address"));
                }
                return val.toScVal();
              }
              if (val instanceof _stellarBase.Contract) {
                if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {
                  throw new TypeError("Type ".concat(ty, " was not address, but value was Address"));
                }
                return val.address().toScVal();
              }
              if (val instanceof Uint8Array || Buffer.isBuffer(val)) {
                var copy = Uint8Array.from(val);
                switch (value) {
                  case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value: {
                    var bytes_n = ty.bytesN();
                    if (copy.length !== bytes_n.n()) {
                      throw new TypeError("expected ".concat(bytes_n.n(), " bytes, but got ").concat(copy.length));
                    }
                    return _stellarBase.xdr.ScVal.scvBytes(copy);
                  }
                  case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
                    return _stellarBase.xdr.ScVal.scvBytes(copy);
                  default:
                    throw new TypeError("invalid type (".concat(ty, ") specified for Bytes and BytesN"));
                }
              }
              if (Array.isArray(val)) {
                switch (value) {
                  case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value: {
                    var vec = ty.vec();
                    var elementType = vec.elementType();
                    return _stellarBase.xdr.ScVal.scvVec(val.map(function(v2) {
                      return _this2.nativeToScVal(v2, elementType);
                    }));
                  }
                  case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value: {
                    var tup = ty.tuple();
                    var valTypes = tup.valueTypes();
                    if (val.length !== valTypes.length) {
                      throw new TypeError("Tuple expects ".concat(valTypes.length, " values, but ").concat(val.length, " were provided"));
                    }
                    return _stellarBase.xdr.ScVal.scvVec(val.map(function(v2, i) {
                      return _this2.nativeToScVal(v2, valTypes[i]);
                    }));
                  }
                  case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value: {
                    var map = ty.map();
                    var keyType = map.keyType();
                    var valueType = map.valueType();
                    return _stellarBase.xdr.ScVal.scvMap(val.map(function(entry) {
                      var key2 = _this2.nativeToScVal(entry[0], keyType);
                      var val2 = _this2.nativeToScVal(entry[1], valueType);
                      return new _stellarBase.xdr.ScMapEntry({
                        key: key2,
                        val: val2
                      });
                    }));
                  }
                  default:
                    throw new TypeError("Type ".concat(ty, " was not vec, but value was Array"));
                }
              }
              if (val.constructor === Map) {
                if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {
                  throw new TypeError("Type ".concat(ty, " was not map, but value was Map"));
                }
                var scMap = ty.map();
                var _map = val;
                var entries = [];
                var values = _map.entries();
                var res = values.next();
                while (!res.done) {
                  var _res$value = _slicedToArray(res.value, 2), k = _res$value[0], v = _res$value[1];
                  var key = this.nativeToScVal(k, scMap.keyType());
                  var _val = this.nativeToScVal(v, scMap.valueType());
                  entries.push(new _stellarBase.xdr.ScMapEntry({
                    key,
                    val: _val
                  }));
                  res = values.next();
                }
                return _stellarBase.xdr.ScVal.scvMap(entries);
              }
              if (((_val$constructor$name = (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) !== null && _val$constructor$name !== void 0 ? _val$constructor$name : "") !== "Object") {
                var _val$constructor2;
                throw new TypeError("cannot interpret ".concat((_val$constructor2 = val.constructor) === null || _val$constructor2 === void 0 ? void 0 : _val$constructor2.name, " value as ScVal (").concat(JSON.stringify(val), ")"));
              }
              throw new TypeError("Received object ".concat(val, "  did not match the provided type ").concat(ty));
            }
            case "number":
            case "bigint": {
              switch (value) {
                case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:
                  return _stellarBase.xdr.ScVal.scvU32(val);
                case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:
                  return _stellarBase.xdr.ScVal.scvI32(val);
                case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value: {
                  var intType = t2.name.substring(10).toLowerCase();
                  return new _stellarBase.XdrLargeInt(intType, val).toScVal();
                }
                default:
                  throw new TypeError("invalid type (".concat(ty, ") specified for integer"));
              }
            }
            case "string":
              return stringToScVal(val, t2);
            case "boolean": {
              if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeBool().value) {
                throw TypeError("Type ".concat(ty, " was not bool, but value was bool"));
              }
              return _stellarBase.xdr.ScVal.scvBool(val);
            }
            case "undefined": {
              if (!ty) {
                return _stellarBase.xdr.ScVal.scvVoid();
              }
              switch (value) {
                case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:
                  return _stellarBase.xdr.ScVal.scvVoid();
                default:
                  throw new TypeError("Type ".concat(ty, " was not void, but value was undefined"));
              }
            }
            case "function":
              return this.nativeToScVal(val(), ty);
            default:
              throw new TypeError("failed to convert typeof ".concat(_typeof(val), " (").concat(val, ")"));
          }
        }
      }, {
        key: "nativeToUdt",
        value: function nativeToUdt(val, name) {
          var entry = this.findEntry(name);
          switch (entry.switch()) {
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              if (typeof val !== "number") {
                throw new TypeError("expected number for enum ".concat(name, ", but got ").concat(_typeof(val)));
              }
              return this.nativeToEnum(val, entry.udtEnumV0());
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.nativeToStruct(val, entry.udtStructV0());
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.nativeToUnion(val, entry.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(name));
          }
        }
      }, {
        key: "nativeToUnion",
        value: function nativeToUnion(val, union_) {
          var _this3 = this;
          var entry_name = val.tag;
          var case_ = union_.cases().find(function(entry) {
            var case_2 = entry.value().name().toString();
            return case_2 === entry_name;
          });
          if (!case_) {
            throw new TypeError("no such enum entry: ".concat(entry_name, " in ").concat(union_));
          }
          var key = _stellarBase.xdr.ScVal.scvSymbol(entry_name);
          switch (case_.switch()) {
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0(): {
              return _stellarBase.xdr.ScVal.scvVec([key]);
            }
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0(): {
              var types = case_.tupleCase().type();
              if (Array.isArray(val.values)) {
                if (val.values.length != types.length) {
                  throw new TypeError("union ".concat(union_, " expects ").concat(types.length, " values, but got ").concat(val.values.length));
                }
                var scvals = val.values.map(function(v, i) {
                  return _this3.nativeToScVal(v, types[i]);
                });
                scvals.unshift(key);
                return _stellarBase.xdr.ScVal.scvVec(scvals);
              }
              throw new Error("failed to parse union case ".concat(case_, " with ").concat(val));
            }
            default:
              throw new Error("failed to parse union ".concat(union_, " with ").concat(val));
          }
        }
      }, {
        key: "nativeToStruct",
        value: function nativeToStruct(val, struct) {
          var _this4 = this;
          var fields = struct.fields();
          if (fields.some(isNumeric)) {
            if (!fields.every(isNumeric)) {
              throw new Error("mixed numeric and non-numeric field names are not allowed");
            }
            return _stellarBase.xdr.ScVal.scvVec(fields.map(function(_, i) {
              return _this4.nativeToScVal(val[i], fields[i].type());
            }));
          }
          return _stellarBase.xdr.ScVal.scvMap(fields.map(function(field) {
            var name = field.name().toString();
            return new _stellarBase.xdr.ScMapEntry({
              key: _this4.nativeToScVal(name, _stellarBase.xdr.ScSpecTypeDef.scSpecTypeSymbol()),
              val: _this4.nativeToScVal(val[name], field.type())
            });
          }));
        }
      }, {
        key: "nativeToEnum",
        value: function nativeToEnum(val, enum_) {
          if (enum_.cases().some(function(entry) {
            return entry.value() === val;
          })) {
            return _stellarBase.xdr.ScVal.scvU32(val);
          }
          throw new TypeError("no such enum entry: ".concat(val, " in ").concat(enum_));
        }
      }, {
        key: "scValStrToNative",
        value: function scValStrToNative(scv, typeDef) {
          return this.scValToNative(_stellarBase.xdr.ScVal.fromXDR(scv, "base64"), typeDef);
        }
      }, {
        key: "scValToNative",
        value: function scValToNative2(scv, typeDef) {
          var _this5 = this;
          var t2 = typeDef.switch();
          var value = t2.value;
          if (value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {
            return this.scValUdtToNative(scv, typeDef.udt());
          }
          switch (scv.switch().value) {
            case _stellarBase.xdr.ScValType.scvVoid().value:
              return void 0;
            case _stellarBase.xdr.ScValType.scvU64().value:
            case _stellarBase.xdr.ScValType.scvI64().value:
            case _stellarBase.xdr.ScValType.scvU128().value:
            case _stellarBase.xdr.ScValType.scvI128().value:
            case _stellarBase.xdr.ScValType.scvU256().value:
            case _stellarBase.xdr.ScValType.scvI256().value:
              return (0, _stellarBase.scValToBigInt)(scv);
            case _stellarBase.xdr.ScValType.scvVec().value: {
              if (value == _stellarBase.xdr.ScSpecType.scSpecTypeVec().value) {
                var _scv$vec;
                var vec = typeDef.vec();
                return ((_scv$vec = scv.vec()) !== null && _scv$vec !== void 0 ? _scv$vec : []).map(function(elm) {
                  return _this5.scValToNative(elm, vec.elementType());
                });
              } else if (value == _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value) {
                var _scv$vec2;
                var tuple = typeDef.tuple();
                var valTypes = tuple.valueTypes();
                return ((_scv$vec2 = scv.vec()) !== null && _scv$vec2 !== void 0 ? _scv$vec2 : []).map(function(elm, i) {
                  return _this5.scValToNative(elm, valTypes[i]);
                });
              }
              throw new TypeError("Type ".concat(typeDef, " was not vec, but ").concat(scv, " is"));
            }
            case _stellarBase.xdr.ScValType.scvAddress().value:
              return _stellarBase.Address.fromScVal(scv).toString();
            case _stellarBase.xdr.ScValType.scvMap().value: {
              var _scv$map;
              var map = (_scv$map = scv.map()) !== null && _scv$map !== void 0 ? _scv$map : [];
              if (value == _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {
                var type_ = typeDef.map();
                var keyType = type_.keyType();
                var valueType = type_.valueType();
                var res = map.map(function(entry) {
                  return [_this5.scValToNative(entry.key(), keyType), _this5.scValToNative(entry.val(), valueType)];
                });
                return res;
              }
              throw new TypeError("ScSpecType ".concat(t2.name, " was not map, but ").concat(JSON.stringify(scv, null, 2), " is"));
            }
            case _stellarBase.xdr.ScValType.scvBool().value:
            case _stellarBase.xdr.ScValType.scvU32().value:
            case _stellarBase.xdr.ScValType.scvI32().value:
            case _stellarBase.xdr.ScValType.scvBytes().value:
              return scv.value();
            case _stellarBase.xdr.ScValType.scvString().value:
            case _stellarBase.xdr.ScValType.scvSymbol().value: {
              var _scv$value;
              if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeString().value && value !== _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value) {
                throw new Error("ScSpecType ".concat(t2.name, " was not string or symbol, but ").concat(JSON.stringify(scv, null, 2), " is"));
              }
              return (_scv$value = scv.value()) === null || _scv$value === void 0 ? void 0 : _scv$value.toString();
            }
            case _stellarBase.xdr.ScValType.scvTimepoint().value:
            case _stellarBase.xdr.ScValType.scvDuration().value:
              return (0, _stellarBase.scValToBigInt)(_stellarBase.xdr.ScVal.scvU64(scv.u64()));
            default:
              throw new TypeError("failed to convert ".concat(JSON.stringify(scv, null, 2), " to native type from type ").concat(t2.name));
          }
        }
      }, {
        key: "scValUdtToNative",
        value: function scValUdtToNative(scv, udt) {
          var entry = this.findEntry(udt.name().toString());
          switch (entry.switch()) {
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              return this.enumToNative(scv);
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.structToNative(scv, entry.udtStructV0());
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.unionToNative(scv, entry.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(udt.name().toString(), ": ").concat(entry));
          }
        }
      }, {
        key: "unionToNative",
        value: function unionToNative(val, udt) {
          var _this6 = this;
          var vec = val.vec();
          if (!vec) {
            throw new Error("".concat(JSON.stringify(val, null, 2), " is not a vec"));
          }
          if (vec.length === 0 && udt.cases.length !== 0) {
            throw new Error("".concat(val, " has length 0, but the there are at least one case in the union"));
          }
          var name = vec[0].sym().toString();
          if (vec[0].switch().value != _stellarBase.xdr.ScValType.scvSymbol().value) {
            throw new Error("{vec[0]} is not a symbol");
          }
          var entry = udt.cases().find(findCase(name));
          if (!entry) {
            throw new Error("failed to find entry ".concat(name, " in union {udt.name().toString()}"));
          }
          var res = {
            tag: name
          };
          if (entry.switch().value === _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
            var tuple = entry.tupleCase();
            var ty = tuple.type();
            var values = ty.map(function(entry2, i) {
              return _this6.scValToNative(vec[i + 1], entry2);
            });
            res.values = values;
          }
          return res;
        }
      }, {
        key: "structToNative",
        value: function structToNative(val, udt) {
          var _this7 = this, _val$map;
          var res = {};
          var fields = udt.fields();
          if (fields.some(isNumeric)) {
            var _val$vec;
            var r3 = (_val$vec = val.vec()) === null || _val$vec === void 0 ? void 0 : _val$vec.map(function(entry, i) {
              return _this7.scValToNative(entry, fields[i].type());
            });
            return r3;
          }
          (_val$map = val.map()) === null || _val$map === void 0 || _val$map.forEach(function(entry, i) {
            var field = fields[i];
            res[field.name().toString()] = _this7.scValToNative(entry.val(), field.type());
          });
          return res;
        }
      }, {
        key: "enumToNative",
        value: function enumToNative(scv) {
          if (scv.switch().value !== _stellarBase.xdr.ScValType.scvU32().value) {
            throw new Error("Enum must have a u32 value");
          }
          var num = scv.u32();
          return num;
        }
      }, {
        key: "errorCases",
        value: function errorCases() {
          return this.entries.filter(function(entry) {
            return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
          }).flatMap(function(entry) {
            return entry.value().cases();
          });
        }
      }, {
        key: "jsonSchema",
        value: function jsonSchema(funcName) {
          var definitions = {};
          var _iterator = _createForOfIteratorHelper(this.entries), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var entry = _step.value;
              switch (entry.switch().value) {
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value: {
                  var _udt = entry.udtEnumV0();
                  definitions[_udt.name().toString()] = enumToJsonSchema(_udt);
                  break;
                }
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value: {
                  var _udt2 = entry.udtStructV0();
                  definitions[_udt2.name().toString()] = structToJsonSchema(_udt2);
                  break;
                }
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:
                  var udt = entry.udtUnionV0();
                  definitions[udt.name().toString()] = unionToJsonSchema(udt);
                  break;
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value: {
                  var fn = entry.functionV0();
                  var fnName = fn.name().toString();
                  var _functionToJsonSchema = functionToJsonSchema(fn), input = _functionToJsonSchema.input;
                  definitions[fnName] = input;
                  break;
                }
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value: {
                }
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          var res = {
            $schema: "http://json-schema.org/draft-07/schema#",
            definitions: _objectSpread(_objectSpread({}, PRIMITIVE_DEFINITONS), definitions)
          };
          if (funcName) {
            res["$ref"] = "#/definitions/".concat(funcName);
          }
          return res;
        }
      }]);
    }();
    function stringToScVal(str, ty) {
      switch (ty.value) {
        case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:
          return _stellarBase.xdr.ScVal.scvString(str);
        case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:
          return _stellarBase.xdr.ScVal.scvSymbol(str);
        case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value: {
          var addr = _stellarBase.Address.fromString(str);
          return _stellarBase.xdr.ScVal.scvAddress(addr.toScAddress());
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
          return new _stellarBase.XdrLargeInt("u64", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
          return new _stellarBase.XdrLargeInt("i64", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
          return new _stellarBase.XdrLargeInt("u128", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
          return new _stellarBase.XdrLargeInt("i128", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
          return new _stellarBase.XdrLargeInt("u256", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:
          return new _stellarBase.XdrLargeInt("i256", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:
          return _stellarBase.xdr.ScVal.scvBytes(Buffer.from(str, "base64"));
        default:
          throw new TypeError("invalid type ".concat(ty.name, " specified for string value"));
      }
    }
    function isNumeric(field) {
      return /^\d+$/.test(field.name().toString());
    }
    function findCase(name) {
      return function matches(entry) {
        switch (entry.switch().value) {
          case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
            var tuple = entry.tupleCase();
            return tuple.name().toString() === name;
          }
          case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
            var void_case = entry.voidCase();
            return void_case.name().toString() === name;
          }
          default:
            return false;
        }
      };
    }
    var PRIMITIVE_DEFINITONS = {
      U32: {
        type: "integer",
        minimum: 0,
        maximum: 4294967295
      },
      I32: {
        type: "integer",
        minimum: -2147483648,
        maximum: 2147483647
      },
      U64: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 20
      },
      I64: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 21
      },
      U128: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 39
      },
      I128: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 40
      },
      U256: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 78
      },
      I256: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 79
      },
      Address: {
        type: "string",
        format: "address",
        description: "Address can be a public key or contract id"
      },
      ScString: {
        type: "string",
        description: "ScString is a string"
      },
      ScSymbol: {
        type: "string",
        description: "ScString is a string"
      },
      DataUrl: {
        type: "string",
        pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
      }
    };
    function typeRef(typeDef) {
      var t2 = typeDef.switch();
      var value = t2.value;
      var ref;
      switch (value) {
        case _stellarBase.xdr.ScSpecType.scSpecTypeVal().value: {
          ref = "Val";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBool().value: {
          return {
            type: "boolean"
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value: {
          return {
            type: "null"
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeError().value: {
          ref = "Error";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value: {
          ref = "U32";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value: {
          ref = "I32";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value: {
          ref = "U64";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value: {
          ref = "I64";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeTimepoint().value: {
          throw new Error("Timepoint type not supported");
          ref = "Timepoint";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeDuration().value: {
          throw new Error("Duration not supported");
          ref = "Duration";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value: {
          ref = "U128";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value: {
          ref = "I128";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value: {
          ref = "U256";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value: {
          ref = "I256";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value: {
          ref = "DataUrl";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeString().value: {
          ref = "ScString";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value: {
          ref = "ScSymbol";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value: {
          ref = "Address";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value: {
          var opt = typeDef.option();
          return typeRef(opt.valueType());
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeResult().value: {
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value: {
          var arr = typeDef.vec();
          var _ref3 = typeRef(arr.elementType());
          return {
            type: "array",
            items: _ref3
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value: {
          var map = typeDef.map();
          var items = [typeRef(map.keyType()), typeRef(map.valueType())];
          return {
            type: "array",
            items: {
              type: "array",
              items,
              minItems: 2,
              maxItems: 2
            }
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value: {
          var tuple = typeDef.tuple();
          var minItems = tuple.valueTypes().length;
          var maxItems = minItems;
          var _items = tuple.valueTypes().map(typeRef);
          return {
            type: "array",
            items: _items,
            minItems,
            maxItems
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value: {
          var _arr = typeDef.bytesN();
          return {
            $ref: "#/definitions/DataUrl",
            maxLength: _arr.n()
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value: {
          var udt = typeDef.udt();
          ref = udt.name().toString();
          break;
        }
      }
      return {
        $ref: "#/definitions/".concat(ref)
      };
    }
    function isRequired(typeDef) {
      return typeDef.switch().value != _stellarBase.xdr.ScSpecType.scSpecTypeOption().value;
    }
    function structToJsonSchema(udt) {
      var fields = udt.fields();
      if (fields.some(isNumeric)) {
        if (!fields.every(isNumeric)) {
          throw new Error("mixed numeric and non-numeric field names are not allowed");
        }
        var items = fields.map(function(_, i) {
          return typeRef(fields[i].type());
        });
        return {
          type: "array",
          items,
          minItems: fields.length,
          maxItems: fields.length
        };
      }
      var description = udt.doc().toString();
      var _args_and_required = args_and_required(fields), properties = _args_and_required.properties, required = _args_and_required.required;
      properties["additionalProperties"] = false;
      return {
        description,
        properties,
        required,
        type: "object"
      };
    }
    function args_and_required(input) {
      var properties = {};
      var required = [];
      var _iterator2 = _createForOfIteratorHelper(input), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var arg = _step2.value;
          var type_ = arg.type();
          var name = arg.name().toString();
          properties[name] = typeRef(type_);
          if (isRequired(type_)) {
            required.push(name);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      var res = {
        properties
      };
      if (required.length > 0) {
        res.required = required;
      }
      return res;
    }
    function functionToJsonSchema(func) {
      var _args_and_required2 = args_and_required(func.inputs()), properties = _args_and_required2.properties, required = _args_and_required2.required;
      var args = {
        additionalProperties: false,
        properties,
        type: "object"
      };
      if ((required === null || required === void 0 ? void 0 : required.length) > 0) {
        args.required = required;
      }
      var input = {
        properties: {
          args
        }
      };
      var outputs = func.outputs();
      var output = outputs.length > 0 ? typeRef(outputs[0]) : typeRef(_stellarBase.xdr.ScSpecTypeDef.scSpecTypeVoid());
      var description = func.doc().toString();
      if (description.length > 0) {
        input.description = description;
      }
      input.additionalProperties = false;
      output.additionalProperties = false;
      return {
        input,
        output
      };
    }
    function unionToJsonSchema(udt) {
      var description = udt.doc().toString();
      var cases = udt.cases();
      var oneOf = [];
      var _iterator3 = _createForOfIteratorHelper(cases), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var case_ = _step3.value;
          switch (case_.switch().value) {
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
              var c = case_.voidCase();
              var title = c.name().toString();
              oneOf.push({
                type: "object",
                title,
                properties: {
                  tag: title
                },
                additionalProperties: false,
                required: ["tag"]
              });
              break;
            }
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
              var _c = case_.tupleCase();
              var _title = _c.name().toString();
              oneOf.push({
                type: "object",
                title: _title,
                properties: {
                  tag: _title,
                  values: {
                    type: "array",
                    items: _c.type().map(typeRef)
                  }
                },
                required: ["tag", "values"],
                additionalProperties: false
              });
            }
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      var res = {
        oneOf
      };
      if (description.length > 0) {
        res.description = description;
      }
      return res;
    }
    function enumToJsonSchema(udt) {
      var description = udt.doc().toString();
      var cases = udt.cases();
      var oneOf = [];
      var _iterator4 = _createForOfIteratorHelper(cases), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var case_ = _step4.value;
          var title = case_.name().toString();
          var _description = case_.doc().toString();
          oneOf.push({
            description: _description,
            title,
            enum: [case_.value()],
            type: "number"
          });
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      var res = {
        oneOf
      };
      if (description.length > 0) {
        res.description = description;
      }
      return res;
    }
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/index.js
var require_rpc = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/index.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      Server: true,
      Durability: true,
      AxiosClient: true,
      parseRawSimulation: true,
      parseRawEvents: true
    };
    Object.defineProperty(exports, "AxiosClient", {
      enumerable: true,
      get: function get() {
        return _axios.default;
      }
    });
    Object.defineProperty(exports, "Durability", {
      enumerable: true,
      get: function get() {
        return _server.Durability;
      }
    });
    Object.defineProperty(exports, "Server", {
      enumerable: true,
      get: function get() {
        return _server.Server;
      }
    });
    exports.default = void 0;
    Object.defineProperty(exports, "parseRawEvents", {
      enumerable: true,
      get: function get() {
        return _parsers.parseRawEvents;
      }
    });
    Object.defineProperty(exports, "parseRawSimulation", {
      enumerable: true,
      get: function get() {
        return _parsers.parseRawSimulation;
      }
    });
    var _api = require_api();
    Object.keys(_api).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _api[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _api[key];
        }
      });
    });
    var _server = require_server();
    var _axios = _interopRequireDefault(require_axios2());
    var _parsers = require_parsers();
    var _transaction = require_transaction2();
    Object.keys(_transaction).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _transaction[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _transaction[key];
        }
      });
    });
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    var _default = exports.default = module.exports;
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/client.js
var require_client = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Client = void 0;
    var _spec = require_spec();
    var _rpc = require_rpc();
    var _assembled_transaction = require_assembled_transaction();
    var _utils = require_utils();
    var _excluded = ["method"];
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _objectWithoutProperties(e2, t2) {
      if (null == e2) return {};
      var o2, r3, i = _objectWithoutPropertiesLoose(e2, t2);
      if (Object.getOwnPropertySymbols) {
        var n2 = Object.getOwnPropertySymbols(e2);
        for (r3 = 0; r3 < n2.length; r3++) o2 = n2[r3], t2.indexOf(o2) >= 0 || {}.propertyIsEnumerable.call(e2, o2) && (i[o2] = e2[o2]);
      }
      return i;
    }
    function _objectWithoutPropertiesLoose(r3, e2) {
      if (null == r3) return {};
      var t2 = {};
      for (var n2 in r3) if ({}.hasOwnProperty.call(r3, n2)) {
        if (e2.indexOf(n2) >= 0) continue;
        t2[n2] = r3[n2];
      }
      return t2;
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Client3 = exports.Client = function() {
      function Client4(spec, options) {
        var _this = this;
        _classCallCheck(this, Client4);
        _defineProperty(this, "txFromJSON", function(json) {
          var _JSON$parse = JSON.parse(json), method = _JSON$parse.method, tx = _objectWithoutProperties(_JSON$parse, _excluded);
          return _assembled_transaction.AssembledTransaction.fromJSON(_objectSpread(_objectSpread({}, _this.options), {}, {
            method,
            parseResultXdr: function parseResultXdr(result) {
              return _this.spec.funcResToNative(method, result);
            }
          }), tx);
        });
        this.spec = spec;
        this.options = options;
        this.spec.funcs().forEach(function(xdrFn) {
          var method = xdrFn.name().toString();
          var assembleTransaction = function assembleTransaction2(args, methodOptions) {
            return _assembled_transaction.AssembledTransaction.build(_objectSpread(_objectSpread(_objectSpread({
              method,
              args: args && spec.funcArgsToScVals(method, args)
            }, options), methodOptions), {}, {
              errorTypes: spec.errorCases().reduce(function(acc, curr) {
                return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr.value(), {
                  message: curr.doc().toString()
                }));
              }, {}),
              parseResultXdr: function parseResultXdr(result) {
                return spec.funcResToNative(method, result);
              }
            }));
          };
          _this[method] = spec.getFunc(method).inputs().length === 0 ? function(opts) {
            return assembleTransaction(void 0, opts);
          } : assembleTransaction;
        });
      }
      return _createClass(Client4, null, [{
        key: "fromWasmHash",
        value: function() {
          var _fromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(wasmHash, options) {
            var format, rpcUrl, allowHttp, serverOpts, server, wasm, _args = arguments;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  format = _args.length > 2 && _args[2] !== void 0 ? _args[2] : "hex";
                  if (!(!options || !options.rpcUrl)) {
                    _context.next = 3;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 3:
                  rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;
                  serverOpts = {
                    allowHttp
                  };
                  server = new _rpc.Server(rpcUrl, serverOpts);
                  _context.next = 8;
                  return server.getContractWasmByHash(wasmHash, format);
                case 8:
                  wasm = _context.sent;
                  return _context.abrupt("return", Client4.fromWasm(wasm, options));
                case 10:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));
          function fromWasmHash(_x, _x2) {
            return _fromWasmHash.apply(this, arguments);
          }
          return fromWasmHash;
        }()
      }, {
        key: "fromWasm",
        value: function() {
          var _fromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(wasm, options) {
            var wasmModule, xdrSections, bufferSection, specEntryArray, spec;
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return WebAssembly.compile(wasm);
                case 2:
                  wasmModule = _context2.sent;
                  xdrSections = WebAssembly.Module.customSections(wasmModule, "contractspecv0");
                  if (!(xdrSections.length === 0)) {
                    _context2.next = 6;
                    break;
                  }
                  throw new Error("Could not obtain contract spec from wasm");
                case 6:
                  bufferSection = Buffer.from(xdrSections[0]);
                  specEntryArray = (0, _utils.processSpecEntryStream)(bufferSection);
                  spec = new _spec.Spec(specEntryArray);
                  return _context2.abrupt("return", new Client4(spec, options));
                case 10:
                case "end":
                  return _context2.stop();
              }
            }, _callee2);
          }));
          function fromWasm(_x3, _x4) {
            return _fromWasm.apply(this, arguments);
          }
          return fromWasm;
        }()
      }, {
        key: "from",
        value: function() {
          var _from = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(options) {
            var rpcUrl, contractId, allowHttp, serverOpts, server, wasm;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  if (!(!options || !options.rpcUrl || !options.contractId)) {
                    _context3.next = 2;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl and contractId");
                case 2:
                  rpcUrl = options.rpcUrl, contractId = options.contractId, allowHttp = options.allowHttp;
                  serverOpts = {
                    allowHttp
                  };
                  server = new _rpc.Server(rpcUrl, serverOpts);
                  _context3.next = 7;
                  return server.getContractWasmByContractId(contractId);
                case 7:
                  wasm = _context3.sent;
                  return _context3.abrupt("return", Client4.fromWasm(wasm, options));
                case 9:
                case "end":
                  return _context3.stop();
              }
            }, _callee3);
          }));
          function from(_x5) {
            return _from.apply(this, arguments);
          }
          return from;
        }()
      }]);
    }();
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/types.js
var require_types = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
  }
});

// node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/index.js
var require_contract2 = __commonJS({
  "node_modules/passkey-kit-sdk/node_modules/@stellar/stellar-sdk/lib/contract/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _assembled_transaction = require_assembled_transaction();
    Object.keys(_assembled_transaction).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _assembled_transaction[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _assembled_transaction[key];
        }
      });
    });
    var _basic_node_signer = require_basic_node_signer();
    Object.keys(_basic_node_signer).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _basic_node_signer[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _basic_node_signer[key];
        }
      });
    });
    var _client = require_client();
    Object.keys(_client).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _client[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _client[key];
        }
      });
    });
    var _rust_result = require_rust_result();
    Object.keys(_rust_result).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _rust_result[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _rust_result[key];
        }
      });
    });
    var _sent_transaction = require_sent_transaction();
    Object.keys(_sent_transaction).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _sent_transaction[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _sent_transaction[key];
        }
      });
    });
    var _spec = require_spec();
    Object.keys(_spec).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _spec[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _spec[key];
        }
      });
    });
    var _types = require_types();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _types[key];
        }
      });
    });
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/package.json
var require_package2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/package.json"(exports, module) {
    module.exports = {
      name: "@stellar/stellar-sdk",
      version: "12.0.1",
      description: "A library for working with the Stellar network, including communication with the Horizon and Soroban RPC servers.",
      keywords: [
        "stellar"
      ],
      homepage: "https://github.com/stellar/js-stellar-sdk",
      bugs: {
        url: "https://github.com/stellar/js-stellar-sdk/issues"
      },
      repository: {
        type: "git",
        url: "https://github.com/stellar/js-stellar-sdk.git"
      },
      license: "Apache-2.0",
      author: "Stellar Development Foundation <hello@stellar.org>",
      main: "./lib/index.js",
      types: "./lib/index.d.ts",
      browser: "./dist/stellar-sdk.min.js",
      files: [
        "/types",
        "/lib",
        "/dist"
      ],
      exports: {
        ".": {
          browser: "./dist/stellar-sdk.min.js",
          types: "./lib/index.d.ts",
          default: "./lib/index.js"
        },
        "./contract": {
          types: "./lib/contract/index.d.ts",
          default: "./lib/contract/index.js"
        },
        "./rpc": {
          types: "./lib/rpc/index.d.ts",
          default: "./lib/rpc/index.js"
        }
      },
      scripts: {
        build: "cross-env NODE_ENV=development yarn _build",
        "build:prod": "cross-env NODE_ENV=production yarn _build",
        "build:node": "yarn _babel && yarn build:ts",
        "build:ts": "tsc -p ./config/tsconfig.json",
        "build:test": "tsc -p ./test/unit/tsconfig.json",
        "build:browser": "webpack -c config/webpack.config.browser.js",
        "build:docs": "cross-env NODE_ENV=docs yarn _babel",
        clean: "rm -rf lib/ dist/ coverage/ .nyc_output/ jsdoc/ test/e2e/.soroban",
        docs: "yarn build:docs && jsdoc -c ./config/.jsdoc.json --verbose",
        test: "yarn build:test && yarn test:node && yarn test:integration && yarn test:browser",
        "test:e2e": "./test/e2e/initialize.sh && ava",
        "test:node": "yarn _nyc mocha --recursive 'test/unit/**/*.js'",
        "test:integration": "yarn _nyc mocha --recursive 'test/integration/**/*.js'",
        "test:browser": "karma start config/karma.conf.js",
        fmt: "yarn eslint -c .eslintrc.js src/ --fix && yarn _prettier",
        preversion: "yarn clean && yarn _prettier && yarn build:prod && yarn test",
        prepare: "yarn build:prod",
        _build: "yarn build:node && yarn build:test && yarn build:browser",
        _babel: "babel --extensions '.ts' --out-dir lib/ src/",
        _nyc: "nyc --nycrc-path config/.nycrc",
        _prettier: "prettier --ignore-path config/.prettierignore --write './test/**/*.js'"
      },
      husky: {
        hooks: {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "**/*.{js,json,ts}": [
          "yarn fmt"
        ]
      },
      mocha: {
        reporter: "spec",
        require: [
          "@babel/register",
          "test/test-nodejs.js"
        ],
        exclude: [
          "test/test-browser.js"
        ],
        sort: true,
        recursive: true,
        timeout: 3e4
      },
      nyc: {
        instrument: false,
        sourceMap: false,
        reporter: [
          "text-summary"
        ]
      },
      devDependencies: {
        "@babel/cli": "^7.24.6",
        "@babel/core": "^7.24.6",
        "@babel/eslint-plugin": "^7.24.6",
        "@babel/preset-env": "^7.24.6",
        "@babel/preset-typescript": "^7.24.6",
        "@babel/register": "^7.24.6",
        "@definitelytyped/dtslint": "^0.2.20",
        "@istanbuljs/nyc-config-babel": "3.0.0",
        "@stellar/tsconfig": "^1.0.2",
        "@types/chai": "^4.3.14",
        "@types/detect-node": "^2.0.0",
        "@types/eventsource": "^1.1.12",
        "@types/json-schema": "^7.0.15",
        "@types/lodash": "^4.17.4",
        "@types/mocha": "^10.0.2",
        "@types/node": "^20.12.13",
        "@types/randombytes": "^2.0.1",
        "@types/sinon": "^17.0.2",
        "@types/urijs": "^1.19.20",
        "@typescript-eslint/parser": "^7.11.0",
        ava: "^5.3.1",
        "axios-mock-adapter": "^1.22.0",
        "babel-loader": "^9.1.3",
        "babel-plugin-istanbul": "^6.1.1",
        buffer: "^6.0.3",
        chai: "^4.3.10",
        "chai-as-promised": "^7.1.1",
        "chai-http": "^4.3.0",
        "cross-env": "^7.0.3",
        dotenv: "^16.4.5",
        eslint: "^8.57.0",
        "eslint-config-airbnb-base": "^15.0.0",
        "eslint-config-airbnb-typescript": "^18.0.0",
        "eslint-config-prettier": "^9.0.0",
        "eslint-plugin-import": "^2.29.1",
        "eslint-plugin-jsdoc": "^48.2.7",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prefer-import": "^0.0.1",
        "eslint-plugin-prettier": "^5.1.2",
        "eslint-webpack-plugin": "^4.2.0",
        ghooks: "^2.0.4",
        husky: "^9.0.11",
        jsdoc: "^4.0.2",
        "json-schema-faker": "^0.5.6",
        karma: "^6.4.3",
        "karma-chai": "^0.1.0",
        "karma-chrome-launcher": "^3.1.0",
        "karma-coverage": "^2.2.1",
        "karma-firefox-launcher": "^2.1.3",
        "karma-mocha": "^2.0.0",
        "karma-sinon-chai": "^2.0.2",
        "karma-webpack": "^5.0.1",
        "lint-staged": "^15.2.5",
        lodash: "^4.17.21",
        minami: "^1.1.1",
        mocha: "^10.3.0",
        "node-polyfill-webpack-plugin": "^3.0.0",
        nyc: "^15.1.0",
        prettier: "^3.2.5",
        randombytes: "^2.1.0",
        sinon: "^17.0.1",
        "sinon-chai": "^3.7.0",
        taffydb: "^2.7.3",
        "terser-webpack-plugin": "^5.3.10",
        "ts-node": "^10.9.2",
        typescript: "^5.4.3",
        webpack: "^5.91.0",
        "webpack-cli": "^5.0.1"
      },
      dependencies: {
        "@stellar/stellar-base": "^12.0.0",
        axios: "^1.7.2",
        "bignumber.js": "^9.1.2",
        eventsource: "^2.0.2",
        randombytes: "^2.1.0",
        toml: "^3.0.0",
        urijs: "^1.19.1"
      },
      ava: {
        files: [
          "./test/e2e/src/test-*"
        ],
        require: [
          "dotenv/config"
        ],
        timeout: "2m"
      }
    };
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js
var require_axios3 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.version = exports.default = exports.AxiosClient = void 0;
    var _axios = _interopRequireDefault(require_axios());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    var version = exports.version = require_package2().version;
    var AxiosClient = exports.AxiosClient = _axios.default.create({
      headers: {
        "X-Client-Name": "js-soroban-client",
        "X-Client-Version": version
      }
    });
    var _default = exports.default = AxiosClient;
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/jsonrpc.js
var require_jsonrpc2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/jsonrpc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.postObject = postObject;
    var _axios = _interopRequireDefault(require_axios3());
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function postObject(_x, _x2) {
      return _postObject.apply(this, arguments);
    }
    function _postObject() {
      _postObject = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(url, method) {
        var param, response, _response$data, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              param = _args.length > 2 && _args[2] !== void 0 ? _args[2] : null;
              _context.next = 3;
              return _axios.default.post(url, {
                jsonrpc: "2.0",
                id: 1,
                method,
                params: param
              });
            case 3:
              response = _context.sent;
              if (!hasOwnProperty(response.data, "error")) {
                _context.next = 8;
                break;
              }
              throw response.data.error;
            case 8:
              return _context.abrupt("return", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result);
            case 9:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return _postObject.apply(this, arguments);
    }
    function hasOwnProperty(obj, prop) {
      return obj.hasOwnProperty(prop);
    }
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/api.js
var require_api2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/api.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Api = void 0;
    var Api;
    (function(_Api) {
      var GetTransactionStatus = function(GetTransactionStatus2) {
        GetTransactionStatus2["SUCCESS"] = "SUCCESS";
        GetTransactionStatus2["NOT_FOUND"] = "NOT_FOUND";
        GetTransactionStatus2["FAILED"] = "FAILED";
        return GetTransactionStatus2;
      }({});
      _Api.GetTransactionStatus = GetTransactionStatus;
      function isSimulationError(sim) {
        return "error" in sim;
      }
      _Api.isSimulationError = isSimulationError;
      function isSimulationSuccess(sim) {
        return "transactionData" in sim;
      }
      _Api.isSimulationSuccess = isSimulationSuccess;
      function isSimulationRestore(sim) {
        return isSimulationSuccess(sim) && "restorePreamble" in sim && !!sim.restorePreamble.transactionData;
      }
      _Api.isSimulationRestore = isSimulationRestore;
      function isSimulationRaw(sim) {
        return !sim._parsed;
      }
      _Api.isSimulationRaw = isSimulationRaw;
    })(Api || (exports.Api = Api = {}));
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js
var require_parsers2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parseRawEvents = parseRawEvents;
    exports.parseRawLedgerEntries = parseRawLedgerEntries;
    exports.parseRawSendTransaction = parseRawSendTransaction;
    exports.parseRawSimulation = parseRawSimulation;
    var _stellarBase = require_lib();
    var _api = require_api2();
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function parseRawSendTransaction(r3) {
      var errorResultXdr = r3.errorResultXdr, diagnosticEventsXdr = r3.diagnosticEventsXdr;
      delete r3.errorResultXdr;
      delete r3.diagnosticEventsXdr;
      if (!!errorResultXdr) {
        return _objectSpread(_objectSpread(_objectSpread({}, r3), diagnosticEventsXdr !== void 0 && diagnosticEventsXdr.length > 0 && {
          diagnosticEvents: diagnosticEventsXdr.map(function(evt) {
            return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, "base64");
          })
        }), {}, {
          errorResult: _stellarBase.xdr.TransactionResult.fromXDR(errorResultXdr, "base64")
        });
      }
      return _objectSpread({}, r3);
    }
    function parseRawEvents(r3) {
      var _r$events;
      return {
        latestLedger: r3.latestLedger,
        events: ((_r$events = r3.events) !== null && _r$events !== void 0 ? _r$events : []).map(function(evt) {
          var clone = _objectSpread({}, evt);
          delete clone.contractId;
          return _objectSpread(_objectSpread(_objectSpread({}, clone), evt.contractId !== "" && {
            contractId: new _stellarBase.Contract(evt.contractId)
          }), {}, {
            topic: evt.topic.map(function(topic) {
              return _stellarBase.xdr.ScVal.fromXDR(topic, "base64");
            }),
            value: _stellarBase.xdr.ScVal.fromXDR(evt.value, "base64")
          });
        })
      };
    }
    function parseRawLedgerEntries(raw) {
      var _raw$entries;
      return {
        latestLedger: raw.latestLedger,
        entries: ((_raw$entries = raw.entries) !== null && _raw$entries !== void 0 ? _raw$entries : []).map(function(rawEntry) {
          if (!rawEntry.key || !rawEntry.xdr) {
            throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(rawEntry)));
          }
          return _objectSpread({
            lastModifiedLedgerSeq: rawEntry.lastModifiedLedgerSeq,
            key: _stellarBase.xdr.LedgerKey.fromXDR(rawEntry.key, "base64"),
            val: _stellarBase.xdr.LedgerEntryData.fromXDR(rawEntry.xdr, "base64")
          }, rawEntry.liveUntilLedgerSeq !== void 0 && {
            liveUntilLedgerSeq: rawEntry.liveUntilLedgerSeq
          });
        })
      };
    }
    function parseRawSimulation(sim) {
      var _sim$events$map, _sim$events;
      var looksRaw = _api.Api.isSimulationRaw(sim);
      if (!looksRaw) {
        return sim;
      }
      var base = {
        _parsed: true,
        id: sim.id,
        latestLedger: sim.latestLedger,
        events: (_sim$events$map = (_sim$events = sim.events) === null || _sim$events === void 0 ? void 0 : _sim$events.map(function(evt) {
          return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, "base64");
        })) !== null && _sim$events$map !== void 0 ? _sim$events$map : []
      };
      if (typeof sim.error === "string") {
        return _objectSpread(_objectSpread({}, base), {}, {
          error: sim.error
        });
      }
      return parseSuccessful(sim, base);
    }
    function parseSuccessful(sim, partial) {
      var _sim$results$length, _sim$results, _sim$stateChanges$len, _sim$stateChanges, _sim$stateChanges2;
      var success = _objectSpread(_objectSpread(_objectSpread({}, partial), {}, {
        transactionData: new _stellarBase.SorobanDataBuilder(sim.transactionData),
        minResourceFee: sim.minResourceFee,
        cost: sim.cost
      }, ((_sim$results$length = (_sim$results = sim.results) === null || _sim$results === void 0 ? void 0 : _sim$results.length) !== null && _sim$results$length !== void 0 ? _sim$results$length : 0 > 0) && {
        result: sim.results.map(function(row) {
          var _row$auth;
          return {
            auth: ((_row$auth = row.auth) !== null && _row$auth !== void 0 ? _row$auth : []).map(function(entry) {
              return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(entry, "base64");
            }),
            retval: !!row.xdr ? _stellarBase.xdr.ScVal.fromXDR(row.xdr, "base64") : _stellarBase.xdr.ScVal.scvVoid()
          };
        })[0]
      }), ((_sim$stateChanges$len = (_sim$stateChanges = sim.stateChanges) === null || _sim$stateChanges === void 0 ? void 0 : _sim$stateChanges.length) !== null && _sim$stateChanges$len !== void 0 ? _sim$stateChanges$len : 0 > 0) && {
        stateChanges: (_sim$stateChanges2 = sim.stateChanges) === null || _sim$stateChanges2 === void 0 ? void 0 : _sim$stateChanges2.map(function(entryChange) {
          return {
            type: entryChange.type,
            key: _stellarBase.xdr.LedgerKey.fromXDR(entryChange.key, "base64"),
            before: entryChange.before ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.before, "base64") : null,
            after: entryChange.after ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.after, "base64") : null
          };
        })
      });
      if (!sim.restorePreamble || sim.restorePreamble.transactionData === "") {
        return success;
      }
      return _objectSpread(_objectSpread({}, success), {}, {
        restorePreamble: {
          minResourceFee: sim.restorePreamble.minResourceFee,
          transactionData: new _stellarBase.SorobanDataBuilder(sim.restorePreamble.transactionData)
        }
      });
    }
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js
var require_transaction3 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.assembleTransaction = assembleTransaction;
    var _stellarBase = require_lib();
    var _api = require_api2();
    var _parsers = require_parsers2();
    function assembleTransaction(raw, simulation) {
      var _invokeOp$auth;
      if ("innerTransaction" in raw) {
        return assembleTransaction(raw.innerTransaction, simulation);
      }
      if (!isSorobanTransaction(raw)) {
        throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
      }
      var success = (0, _parsers.parseRawSimulation)(simulation);
      if (!_api.Api.isSimulationSuccess(success)) {
        throw new Error("simulation incorrect: ".concat(JSON.stringify(success)));
      }
      var classicFeeNum = parseInt(raw.fee) || 0;
      var minResourceFeeNum = parseInt(success.minResourceFee) || 0;
      var txnBuilder = _stellarBase.TransactionBuilder.cloneFrom(raw, {
        fee: (classicFeeNum + minResourceFeeNum).toString(),
        sorobanData: success.transactionData.build(),
        networkPassphrase: raw.networkPassphrase
      });
      switch (raw.operations[0].type) {
        case "invokeHostFunction":
          txnBuilder.clearOperations();
          var invokeOp = raw.operations[0];
          var existingAuth = (_invokeOp$auth = invokeOp.auth) !== null && _invokeOp$auth !== void 0 ? _invokeOp$auth : [];
          txnBuilder.addOperation(_stellarBase.Operation.invokeHostFunction({
            source: invokeOp.source,
            func: invokeOp.func,
            auth: existingAuth.length > 0 ? existingAuth : success.result.auth
          }));
          break;
      }
      return txnBuilder;
    }
    function isSorobanTransaction(tx) {
      if (tx.operations.length !== 1) {
        return false;
      }
      switch (tx.operations[0].type) {
        case "invokeHostFunction":
        case "extendFootprintTtl":
        case "restoreFootprint":
          return true;
        default:
          return false;
      }
    }
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/server.js
var require_server2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Server = exports.SUBMIT_TRANSACTION_TIMEOUT = exports.Durability = void 0;
    var _urijs = _interopRequireDefault(require_URI());
    var _stellarBase = require_lib();
    var _axios = _interopRequireDefault(require_axios3());
    var jsonrpc = _interopRequireWildcard(require_jsonrpc2());
    var _api = require_api2();
    var _transaction = require_transaction3();
    var _parsers = require_parsers2();
    function _getRequireWildcardCache(e2) {
      if ("function" != typeof WeakMap) return null;
      var r3 = /* @__PURE__ */ new WeakMap(), t2 = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e3) {
        return e3 ? t2 : r3;
      })(e2);
    }
    function _interopRequireWildcard(e2, r3) {
      if (!r3 && e2 && e2.__esModule) return e2;
      if (null === e2 || "object" != _typeof(e2) && "function" != typeof e2) return { default: e2 };
      var t2 = _getRequireWildcardCache(r3);
      if (t2 && t2.has(e2)) return t2.get(e2);
      var n2 = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e2) if ("default" !== u && {}.hasOwnProperty.call(e2, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e2, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n2, u, i) : n2[u] = e2[u];
      }
      return n2.default = e2, t2 && t2.set(e2, n2), n2;
    }
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _createForOfIteratorHelper(r3, e2) {
      var t2 = "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (!t2) {
        if (Array.isArray(r3) || (t2 = _unsupportedIterableToArray(r3)) || e2 && r3 && "number" == typeof r3.length) {
          t2 && (r3 = t2);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n2() {
            return _n >= r3.length ? { done: true } : { done: false, value: r3[_n++] };
          }, e: function e3(r4) {
            throw r4;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o2, a = true, u = false;
      return { s: function s() {
        t2 = t2.call(r3);
      }, n: function n2() {
        var r4 = t2.next();
        return a = r4.done, r4;
      }, e: function e3(r4) {
        u = true, o2 = r4;
      }, f: function f() {
        try {
          a || null == t2.return || t2.return();
        } finally {
          if (u) throw o2;
        }
      } };
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1e3;
    var Durability = exports.Durability = function(Durability2) {
      Durability2["Temporary"] = "temporary";
      Durability2["Persistent"] = "persistent";
      return Durability2;
    }({});
    var Server = exports.Server = function() {
      function Server2(serverURL) {
        var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck(this, Server2);
        this.serverURL = (0, _urijs.default)(serverURL);
        if (opts.headers && Object.keys(opts.headers).length === 0) {
          _axios.default.interceptors.request.use(function(config) {
            config.headers = Object.assign(config.headers, opts.headers);
            return config;
          });
        }
        if (this.serverURL.protocol() !== "https" && !opts.allowHttp) {
          throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
        }
      }
      return _createClass(Server2, [{
        key: "getAccount",
        value: function() {
          var _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {
            var ledgerKey, resp, accountEntry;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  ledgerKey = _stellarBase.xdr.LedgerKey.account(new _stellarBase.xdr.LedgerKeyAccount({
                    accountId: _stellarBase.Keypair.fromPublicKey(address).xdrPublicKey()
                  }));
                  _context.next = 3;
                  return this.getLedgerEntries(ledgerKey);
                case 3:
                  resp = _context.sent;
                  if (!(resp.entries.length === 0)) {
                    _context.next = 6;
                    break;
                  }
                  return _context.abrupt("return", Promise.reject({
                    code: 404,
                    message: "Account not found: ".concat(address)
                  }));
                case 6:
                  accountEntry = resp.entries[0].val.account();
                  return _context.abrupt("return", new _stellarBase.Account(address, accountEntry.seqNum().toString()));
                case 8:
                case "end":
                  return _context.stop();
              }
            }, _callee, this);
          }));
          function getAccount(_x) {
            return _getAccount.apply(this, arguments);
          }
          return getAccount;
        }()
      }, {
        key: "getHealth",
        value: function() {
          var _getHealth = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  return _context2.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getHealth"));
                case 1:
                case "end":
                  return _context2.stop();
              }
            }, _callee2, this);
          }));
          function getHealth() {
            return _getHealth.apply(this, arguments);
          }
          return getHealth;
        }()
      }, {
        key: "getContractData",
        value: function() {
          var _getContractData = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(contract, key) {
            var durability, scAddress, xdrDurability, contractKey, _args3 = arguments;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  durability = _args3.length > 2 && _args3[2] !== void 0 ? _args3[2] : Durability.Persistent;
                  if (!(typeof contract === "string")) {
                    _context3.next = 5;
                    break;
                  }
                  scAddress = new _stellarBase.Contract(contract).address().toScAddress();
                  _context3.next = 14;
                  break;
                case 5:
                  if (!(contract instanceof _stellarBase.Address)) {
                    _context3.next = 9;
                    break;
                  }
                  scAddress = contract.toScAddress();
                  _context3.next = 14;
                  break;
                case 9:
                  if (!(contract instanceof _stellarBase.Contract)) {
                    _context3.next = 13;
                    break;
                  }
                  scAddress = contract.address().toScAddress();
                  _context3.next = 14;
                  break;
                case 13:
                  throw new TypeError("unknown contract type: ".concat(contract));
                case 14:
                  _context3.t0 = durability;
                  _context3.next = _context3.t0 === Durability.Temporary ? 17 : _context3.t0 === Durability.Persistent ? 19 : 21;
                  break;
                case 17:
                  xdrDurability = _stellarBase.xdr.ContractDataDurability.temporary();
                  return _context3.abrupt("break", 22);
                case 19:
                  xdrDurability = _stellarBase.xdr.ContractDataDurability.persistent();
                  return _context3.abrupt("break", 22);
                case 21:
                  throw new TypeError("invalid durability: ".concat(durability));
                case 22:
                  contractKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({
                    key,
                    contract: scAddress,
                    durability: xdrDurability
                  }));
                  return _context3.abrupt("return", this.getLedgerEntries(contractKey).then(function(r3) {
                    if (r3.entries.length === 0) {
                      return Promise.reject({
                        code: 404,
                        message: "Contract data not found. Contract: ".concat(_stellarBase.Address.fromScAddress(scAddress).toString(), ", Key: ").concat(key.toXDR("base64"), ", Durability: ").concat(durability)
                      });
                    }
                    return r3.entries[0];
                  }));
                case 24:
                case "end":
                  return _context3.stop();
              }
            }, _callee3, this);
          }));
          function getContractData(_x2, _x3) {
            return _getContractData.apply(this, arguments);
          }
          return getContractData;
        }()
      }, {
        key: "getContractWasmByContractId",
        value: function() {
          var _getContractWasmByContractId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(contractId) {
            var _response$entries$;
            var contractLedgerKey, response, wasmHash;
            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
              while (1) switch (_context4.prev = _context4.next) {
                case 0:
                  contractLedgerKey = new _stellarBase.Contract(contractId).getFootprint();
                  _context4.next = 3;
                  return this.getLedgerEntries(contractLedgerKey);
                case 3:
                  response = _context4.sent;
                  if (!(!response.entries.length || !((_response$entries$ = response.entries[0]) !== null && _response$entries$ !== void 0 && _response$entries$.val))) {
                    _context4.next = 6;
                    break;
                  }
                  return _context4.abrupt("return", Promise.reject({
                    code: 404,
                    message: "Could not obtain contract hash from server"
                  }));
                case 6:
                  wasmHash = response.entries[0].val.contractData().val().instance().executable().wasmHash();
                  return _context4.abrupt("return", this.getContractWasmByHash(wasmHash));
                case 8:
                case "end":
                  return _context4.stop();
              }
            }, _callee4, this);
          }));
          function getContractWasmByContractId(_x4) {
            return _getContractWasmByContractId.apply(this, arguments);
          }
          return getContractWasmByContractId;
        }()
      }, {
        key: "getContractWasmByHash",
        value: function() {
          var _getContractWasmByHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasmHash) {
            var _responseWasm$entries;
            var format, wasmHashBuffer, ledgerKeyWasmHash, responseWasm, wasmBuffer, _args5 = arguments;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  format = _args5.length > 1 && _args5[1] !== void 0 ? _args5[1] : void 0;
                  wasmHashBuffer = typeof wasmHash === "string" ? Buffer.from(wasmHash, format) : wasmHash;
                  ledgerKeyWasmHash = _stellarBase.xdr.LedgerKey.contractCode(new _stellarBase.xdr.LedgerKeyContractCode({
                    hash: wasmHashBuffer
                  }));
                  _context5.next = 5;
                  return this.getLedgerEntries(ledgerKeyWasmHash);
                case 5:
                  responseWasm = _context5.sent;
                  if (!(!responseWasm.entries.length || !((_responseWasm$entries = responseWasm.entries[0]) !== null && _responseWasm$entries !== void 0 && _responseWasm$entries.val))) {
                    _context5.next = 8;
                    break;
                  }
                  return _context5.abrupt("return", Promise.reject({
                    code: 404,
                    message: "Could not obtain contract wasm from server"
                  }));
                case 8:
                  wasmBuffer = responseWasm.entries[0].val.contractCode().code();
                  return _context5.abrupt("return", wasmBuffer);
                case 10:
                case "end":
                  return _context5.stop();
              }
            }, _callee5, this);
          }));
          function getContractWasmByHash(_x5) {
            return _getContractWasmByHash.apply(this, arguments);
          }
          return getContractWasmByHash;
        }()
      }, {
        key: "getLedgerEntries",
        value: function() {
          var _getLedgerEntries2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {
            var _args6 = arguments;
            return _regeneratorRuntime().wrap(function _callee6$(_context6) {
              while (1) switch (_context6.prev = _context6.next) {
                case 0:
                  return _context6.abrupt("return", this._getLedgerEntries.apply(this, _args6).then(_parsers.parseRawLedgerEntries));
                case 1:
                case "end":
                  return _context6.stop();
              }
            }, _callee6, this);
          }));
          function getLedgerEntries() {
            return _getLedgerEntries2.apply(this, arguments);
          }
          return getLedgerEntries;
        }()
      }, {
        key: "_getLedgerEntries",
        value: function() {
          var _getLedgerEntries3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {
            var _len, keys, _key, _args7 = arguments;
            return _regeneratorRuntime().wrap(function _callee7$(_context7) {
              while (1) switch (_context7.prev = _context7.next) {
                case 0:
                  for (_len = _args7.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {
                    keys[_key] = _args7[_key];
                  }
                  return _context7.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getLedgerEntries", {
                    keys: keys.map(function(k) {
                      return k.toXDR("base64");
                    })
                  }));
                case 2:
                case "end":
                  return _context7.stop();
              }
            }, _callee7, this);
          }));
          function _getLedgerEntries() {
            return _getLedgerEntries3.apply(this, arguments);
          }
          return _getLedgerEntries;
        }()
      }, {
        key: "getTransaction",
        value: function() {
          var _getTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(hash2) {
            return _regeneratorRuntime().wrap(function _callee8$(_context8) {
              while (1) switch (_context8.prev = _context8.next) {
                case 0:
                  return _context8.abrupt("return", this._getTransaction(hash2).then(function(raw) {
                    var foundInfo = {};
                    if (raw.status !== _api.Api.GetTransactionStatus.NOT_FOUND) {
                      var _meta$v3$sorobanMeta;
                      var meta = _stellarBase.xdr.TransactionMeta.fromXDR(raw.resultMetaXdr, "base64");
                      foundInfo = _objectSpread({
                        ledger: raw.ledger,
                        createdAt: raw.createdAt,
                        applicationOrder: raw.applicationOrder,
                        feeBump: raw.feeBump,
                        envelopeXdr: _stellarBase.xdr.TransactionEnvelope.fromXDR(raw.envelopeXdr, "base64"),
                        resultXdr: _stellarBase.xdr.TransactionResult.fromXDR(raw.resultXdr, "base64"),
                        resultMetaXdr: meta
                      }, meta.switch() === 3 && meta.v3().sorobanMeta() !== null && raw.status === _api.Api.GetTransactionStatus.SUCCESS && {
                        returnValue: (_meta$v3$sorobanMeta = meta.v3().sorobanMeta()) === null || _meta$v3$sorobanMeta === void 0 ? void 0 : _meta$v3$sorobanMeta.returnValue()
                      });
                    }
                    var result = _objectSpread({
                      status: raw.status,
                      latestLedger: raw.latestLedger,
                      latestLedgerCloseTime: raw.latestLedgerCloseTime,
                      oldestLedger: raw.oldestLedger,
                      oldestLedgerCloseTime: raw.oldestLedgerCloseTime
                    }, foundInfo);
                    return result;
                  }));
                case 1:
                case "end":
                  return _context8.stop();
              }
            }, _callee8, this);
          }));
          function getTransaction(_x6) {
            return _getTransaction2.apply(this, arguments);
          }
          return getTransaction;
        }()
      }, {
        key: "_getTransaction",
        value: function() {
          var _getTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(hash2) {
            return _regeneratorRuntime().wrap(function _callee9$(_context9) {
              while (1) switch (_context9.prev = _context9.next) {
                case 0:
                  return _context9.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getTransaction", {
                    hash: hash2
                  }));
                case 1:
                case "end":
                  return _context9.stop();
              }
            }, _callee9, this);
          }));
          function _getTransaction(_x7) {
            return _getTransaction3.apply(this, arguments);
          }
          return _getTransaction;
        }()
      }, {
        key: "getEvents",
        value: function() {
          var _getEvents2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(request) {
            return _regeneratorRuntime().wrap(function _callee10$(_context10) {
              while (1) switch (_context10.prev = _context10.next) {
                case 0:
                  return _context10.abrupt("return", this._getEvents(request).then(_parsers.parseRawEvents));
                case 1:
                case "end":
                  return _context10.stop();
              }
            }, _callee10, this);
          }));
          function getEvents(_x8) {
            return _getEvents2.apply(this, arguments);
          }
          return getEvents;
        }()
      }, {
        key: "_getEvents",
        value: function() {
          var _getEvents3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee11(request) {
            var _request$filters;
            return _regeneratorRuntime().wrap(function _callee11$(_context11) {
              while (1) switch (_context11.prev = _context11.next) {
                case 0:
                  return _context11.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getEvents", _objectSpread({
                    filters: (_request$filters = request.filters) !== null && _request$filters !== void 0 ? _request$filters : [],
                    pagination: _objectSpread(_objectSpread({}, request.cursor && {
                      cursor: request.cursor
                    }), request.limit && {
                      limit: request.limit
                    })
                  }, request.startLedger && {
                    startLedger: request.startLedger
                  })));
                case 1:
                case "end":
                  return _context11.stop();
              }
            }, _callee11, this);
          }));
          function _getEvents(_x9) {
            return _getEvents3.apply(this, arguments);
          }
          return _getEvents;
        }()
      }, {
        key: "getNetwork",
        value: function() {
          var _getNetwork = _asyncToGenerator(_regeneratorRuntime().mark(function _callee12() {
            return _regeneratorRuntime().wrap(function _callee12$(_context12) {
              while (1) switch (_context12.prev = _context12.next) {
                case 0:
                  _context12.next = 2;
                  return jsonrpc.postObject(this.serverURL.toString(), "getNetwork");
                case 2:
                  return _context12.abrupt("return", _context12.sent);
                case 3:
                case "end":
                  return _context12.stop();
              }
            }, _callee12, this);
          }));
          function getNetwork() {
            return _getNetwork.apply(this, arguments);
          }
          return getNetwork;
        }()
      }, {
        key: "getLatestLedger",
        value: function() {
          var _getLatestLedger = _asyncToGenerator(_regeneratorRuntime().mark(function _callee13() {
            return _regeneratorRuntime().wrap(function _callee13$(_context13) {
              while (1) switch (_context13.prev = _context13.next) {
                case 0:
                  return _context13.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "getLatestLedger"));
                case 1:
                case "end":
                  return _context13.stop();
              }
            }, _callee13, this);
          }));
          function getLatestLedger() {
            return _getLatestLedger.apply(this, arguments);
          }
          return getLatestLedger;
        }()
      }, {
        key: "simulateTransaction",
        value: function() {
          var _simulateTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee14(tx, addlResources) {
            return _regeneratorRuntime().wrap(function _callee14$(_context14) {
              while (1) switch (_context14.prev = _context14.next) {
                case 0:
                  return _context14.abrupt("return", this._simulateTransaction(tx, addlResources).then(_parsers.parseRawSimulation));
                case 1:
                case "end":
                  return _context14.stop();
              }
            }, _callee14, this);
          }));
          function simulateTransaction(_x10, _x11) {
            return _simulateTransaction2.apply(this, arguments);
          }
          return simulateTransaction;
        }()
      }, {
        key: "_simulateTransaction",
        value: function() {
          var _simulateTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee15(transaction, addlResources) {
            return _regeneratorRuntime().wrap(function _callee15$(_context15) {
              while (1) switch (_context15.prev = _context15.next) {
                case 0:
                  return _context15.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "simulateTransaction", _objectSpread({
                    transaction: transaction.toXDR()
                  }, addlResources !== void 0 && {
                    resourceConfig: {
                      instructionLeeway: addlResources.cpuInstructions
                    }
                  })));
                case 1:
                case "end":
                  return _context15.stop();
              }
            }, _callee15, this);
          }));
          function _simulateTransaction(_x12, _x13) {
            return _simulateTransaction3.apply(this, arguments);
          }
          return _simulateTransaction;
        }()
      }, {
        key: "prepareTransaction",
        value: function() {
          var _prepareTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee16(tx) {
            var simResponse;
            return _regeneratorRuntime().wrap(function _callee16$(_context16) {
              while (1) switch (_context16.prev = _context16.next) {
                case 0:
                  _context16.next = 2;
                  return this.simulateTransaction(tx);
                case 2:
                  simResponse = _context16.sent;
                  if (!_api.Api.isSimulationError(simResponse)) {
                    _context16.next = 5;
                    break;
                  }
                  throw simResponse.error;
                case 5:
                  return _context16.abrupt("return", (0, _transaction.assembleTransaction)(tx, simResponse).build());
                case 6:
                case "end":
                  return _context16.stop();
              }
            }, _callee16, this);
          }));
          function prepareTransaction(_x14) {
            return _prepareTransaction.apply(this, arguments);
          }
          return prepareTransaction;
        }()
      }, {
        key: "sendTransaction",
        value: function() {
          var _sendTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee17(transaction) {
            return _regeneratorRuntime().wrap(function _callee17$(_context17) {
              while (1) switch (_context17.prev = _context17.next) {
                case 0:
                  return _context17.abrupt("return", this._sendTransaction(transaction).then(_parsers.parseRawSendTransaction));
                case 1:
                case "end":
                  return _context17.stop();
              }
            }, _callee17, this);
          }));
          function sendTransaction(_x15) {
            return _sendTransaction2.apply(this, arguments);
          }
          return sendTransaction;
        }()
      }, {
        key: "_sendTransaction",
        value: function() {
          var _sendTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee18(transaction) {
            return _regeneratorRuntime().wrap(function _callee18$(_context18) {
              while (1) switch (_context18.prev = _context18.next) {
                case 0:
                  return _context18.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), "sendTransaction", {
                    transaction: transaction.toXDR()
                  }));
                case 1:
                case "end":
                  return _context18.stop();
              }
            }, _callee18, this);
          }));
          function _sendTransaction(_x16) {
            return _sendTransaction3.apply(this, arguments);
          }
          return _sendTransaction;
        }()
      }, {
        key: "requestAirdrop",
        value: function() {
          var _requestAirdrop = _asyncToGenerator(_regeneratorRuntime().mark(function _callee19(address, friendbotUrl) {
            var account, response, meta, sequence, _error$response, _error$response$detai;
            return _regeneratorRuntime().wrap(function _callee19$(_context19) {
              while (1) switch (_context19.prev = _context19.next) {
                case 0:
                  account = typeof address === "string" ? address : address.accountId();
                  _context19.t0 = friendbotUrl;
                  if (_context19.t0) {
                    _context19.next = 6;
                    break;
                  }
                  _context19.next = 5;
                  return this.getNetwork();
                case 5:
                  _context19.t0 = _context19.sent.friendbotUrl;
                case 6:
                  friendbotUrl = _context19.t0;
                  if (friendbotUrl) {
                    _context19.next = 9;
                    break;
                  }
                  throw new Error("No friendbot URL configured for current network");
                case 9:
                  _context19.prev = 9;
                  _context19.next = 12;
                  return _axios.default.post("".concat(friendbotUrl, "?addr=").concat(encodeURIComponent(account)));
                case 12:
                  response = _context19.sent;
                  meta = _stellarBase.xdr.TransactionMeta.fromXDR(response.data.result_meta_xdr, "base64");
                  sequence = findCreatedAccountSequenceInTransactionMeta(meta);
                  return _context19.abrupt("return", new _stellarBase.Account(account, sequence));
                case 18:
                  _context19.prev = 18;
                  _context19.t1 = _context19["catch"](9);
                  if (!(((_error$response = _context19.t1.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400)) {
                    _context19.next = 23;
                    break;
                  }
                  if (!((_error$response$detai = _context19.t1.response.detail) !== null && _error$response$detai !== void 0 && _error$response$detai.includes("createAccountAlreadyExist"))) {
                    _context19.next = 23;
                    break;
                  }
                  return _context19.abrupt("return", this.getAccount(account));
                case 23:
                  throw _context19.t1;
                case 24:
                case "end":
                  return _context19.stop();
              }
            }, _callee19, this, [[9, 18]]);
          }));
          function requestAirdrop(_x17, _x18) {
            return _requestAirdrop.apply(this, arguments);
          }
          return requestAirdrop;
        }()
      }]);
    }();
    function findCreatedAccountSequenceInTransactionMeta(meta) {
      var operations = [];
      switch (meta.switch()) {
        case 0:
          operations = meta.operations();
          break;
        case 1:
        case 2:
        case 3:
          operations = meta.value().operations();
          break;
        default:
          throw new Error("Unexpected transaction meta switch value");
      }
      var _iterator = _createForOfIteratorHelper(operations), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var op = _step.value;
          var _iterator2 = _createForOfIteratorHelper(op.changes()), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var c = _step2.value;
              if (c.switch() !== _stellarBase.xdr.LedgerEntryChangeType.ledgerEntryCreated()) {
                continue;
              }
              var data = c.created().data();
              if (data.switch() !== _stellarBase.xdr.LedgerEntryType.account()) {
                continue;
              }
              return data.account().seqNum().toString();
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      throw new Error("No account created in transaction");
    }
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js
var require_rust_result2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Ok = exports.Err = void 0;
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Ok = exports.Ok = function() {
      function Ok2(value) {
        _classCallCheck(this, Ok2);
        this.value = value;
      }
      return _createClass(Ok2, [{
        key: "unwrapErr",
        value: function unwrapErr() {
          throw new Error("No error");
        }
      }, {
        key: "unwrap",
        value: function unwrap() {
          return this.value;
        }
      }, {
        key: "isOk",
        value: function isOk() {
          return true;
        }
      }, {
        key: "isErr",
        value: function isErr() {
          return false;
        }
      }]);
    }();
    var Err = exports.Err = function() {
      function Err2(error) {
        _classCallCheck(this, Err2);
        this.error = error;
      }
      return _createClass(Err2, [{
        key: "unwrapErr",
        value: function unwrapErr() {
          return this.error;
        }
      }, {
        key: "unwrap",
        value: function unwrap() {
          throw new Error(this.error.message);
        }
      }, {
        key: "isOk",
        value: function isOk() {
          return false;
        }
      }, {
        key: "isErr",
        value: function isErr() {
          return true;
        }
      }]);
    }();
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/utils.js
var require_utils2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.contractErrorPattern = exports.DEFAULT_TIMEOUT = void 0;
    exports.implementsToString = implementsToString;
    exports.processSpecEntryStream = processSpecEntryStream;
    exports.withExponentialBackoff = withExponentialBackoff;
    var _stellarBase = require_lib();
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    var DEFAULT_TIMEOUT = exports.DEFAULT_TIMEOUT = 5 * 60;
    function withExponentialBackoff(_x, _x2, _x3) {
      return _withExponentialBackoff.apply(this, arguments);
    }
    function _withExponentialBackoff() {
      _withExponentialBackoff = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(fn, keepWaitingIf, timeoutInSeconds) {
        var exponentialFactor, verbose, attempts, count, waitUntil, waitTime, totalWaitTime, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              exponentialFactor = _args.length > 3 && _args[3] !== void 0 ? _args[3] : 1.5;
              verbose = _args.length > 4 && _args[4] !== void 0 ? _args[4] : false;
              attempts = [];
              count = 0;
              _context.t0 = attempts;
              _context.next = 7;
              return fn();
            case 7:
              _context.t1 = _context.sent;
              _context.t0.push.call(_context.t0, _context.t1);
              if (keepWaitingIf(attempts[attempts.length - 1])) {
                _context.next = 11;
                break;
              }
              return _context.abrupt("return", attempts);
            case 11:
              waitUntil = new Date(Date.now() + timeoutInSeconds * 1e3).valueOf();
              waitTime = 1e3;
              totalWaitTime = waitTime;
            case 14:
              if (!(Date.now() < waitUntil && keepWaitingIf(attempts[attempts.length - 1]))) {
                _context.next = 30;
                break;
              }
              count += 1;
              if (verbose) {
                console.info("Waiting ".concat(waitTime, "ms before trying again (bringing the total wait time to ").concat(totalWaitTime, "ms so far, of total ").concat(timeoutInSeconds * 1e3, "ms)"));
              }
              _context.next = 19;
              return new Promise(function(res) {
                return setTimeout(res, waitTime);
              });
            case 19:
              waitTime *= exponentialFactor;
              if (new Date(Date.now() + waitTime).valueOf() > waitUntil) {
                waitTime = waitUntil - Date.now();
                if (verbose) {
                  console.info("was gonna wait too long; new waitTime: ".concat(waitTime, "ms"));
                }
              }
              totalWaitTime = waitTime + totalWaitTime;
              _context.t2 = attempts;
              _context.next = 25;
              return fn(attempts[attempts.length - 1]);
            case 25:
              _context.t3 = _context.sent;
              _context.t2.push.call(_context.t2, _context.t3);
              if (verbose && keepWaitingIf(attempts[attempts.length - 1])) {
                console.info("".concat(count, ". Called ").concat(fn, "; ").concat(attempts.length, " prev attempts. Most recent: ").concat(JSON.stringify(attempts[attempts.length - 1], null, 2)));
              }
              _context.next = 14;
              break;
            case 30:
              return _context.abrupt("return", attempts);
            case 31:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return _withExponentialBackoff.apply(this, arguments);
    }
    var contractErrorPattern = exports.contractErrorPattern = /Error\(Contract, #(\d+)\)/;
    function implementsToString(obj) {
      return _typeof(obj) === "object" && obj !== null && "toString" in obj;
    }
    function processSpecEntryStream(buffer) {
      var reader = new _stellarBase.cereal.XdrReader(buffer);
      var res = [];
      while (!reader.eof) {
        res.push(_stellarBase.xdr.ScSpecEntry.read(reader));
      }
      return res;
    }
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js
var require_sent_transaction2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SentTransaction = void 0;
    var _stellarBase = require_lib();
    var _server = require_server2();
    var _api = require_api2();
    var _utils = require_utils2();
    var _SentTransaction;
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _wrapNativeSuper(t2) {
      var r3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
      return _wrapNativeSuper = function _wrapNativeSuper2(t3) {
        if (null === t3 || !_isNativeFunction(t3)) return t3;
        if ("function" != typeof t3) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r3) {
          if (r3.has(t3)) return r3.get(t3);
          r3.set(t3, Wrapper);
        }
        function Wrapper() {
          return _construct(t3, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t3.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t3);
      }, _wrapNativeSuper(t2);
    }
    function _construct(t2, e2, r3) {
      if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
      var o2 = [null];
      o2.push.apply(o2, e2);
      var p = new (t2.bind.apply(t2, o2))();
      return r3 && _setPrototypeOf(p, r3.prototype), p;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _isNativeFunction(t2) {
      try {
        return -1 !== Function.toString.call(t2).indexOf("[native code]");
      } catch (n2) {
        return "function" == typeof t2;
      }
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var SentTransaction = exports.SentTransaction = function() {
      function SentTransaction2(signTransaction, assembled) {
        var _this = this, _this$assembled$optio2;
        _classCallCheck(this, SentTransaction2);
        _defineProperty(this, "send", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
          var _this$assembled$optio;
          var timeoutInSeconds, signature, hash2;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                timeoutInSeconds = (_this$assembled$optio = _this.assembled.options.timeoutInSeconds) !== null && _this$assembled$optio !== void 0 ? _this$assembled$optio : _utils.DEFAULT_TIMEOUT;
                _this.assembled.built = _stellarBase.TransactionBuilder.cloneFrom(_this.assembled.built, {
                  fee: _this.assembled.built.fee,
                  timebounds: void 0,
                  sorobanData: new _stellarBase.SorobanDataBuilder(_this.assembled.simulationData.transactionData.toXDR()).build()
                }).setTimeout(timeoutInSeconds).build();
                _context.next = 4;
                return _this.signTransaction(_this.assembled.built.toXDR(), {
                  networkPassphrase: _this.assembled.options.networkPassphrase
                });
              case 4:
                signature = _context.sent;
                _this.signed = _stellarBase.TransactionBuilder.fromXDR(signature, _this.assembled.options.networkPassphrase);
                _context.next = 8;
                return _this.server.sendTransaction(_this.signed);
              case 8:
                _this.sendTransactionResponse = _context.sent;
                if (!(_this.sendTransactionResponse.status !== "PENDING")) {
                  _context.next = 11;
                  break;
                }
                throw new SentTransaction2.Errors.SendFailed("Sending the transaction to the network failed!\n".concat(JSON.stringify(_this.sendTransactionResponse, null, 2)));
              case 11:
                hash2 = _this.sendTransactionResponse.hash;
                _context.next = 14;
                return (0, _utils.withExponentialBackoff)(function() {
                  return _this.server.getTransaction(hash2);
                }, function(resp) {
                  return resp.status === _api.Api.GetTransactionStatus.NOT_FOUND;
                }, timeoutInSeconds);
              case 14:
                _this.getTransactionResponseAll = _context.sent;
                _this.getTransactionResponse = _this.getTransactionResponseAll[_this.getTransactionResponseAll.length - 1];
                if (!(_this.getTransactionResponse.status === _api.Api.GetTransactionStatus.NOT_FOUND)) {
                  _context.next = 18;
                  break;
                }
                throw new SentTransaction2.Errors.TransactionStillPending("Waited ".concat(timeoutInSeconds, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(_this.sendTransactionResponse, null, 2), "\n") + "All attempts to get the result: ".concat(JSON.stringify(_this.getTransactionResponseAll, null, 2)));
              case 18:
                return _context.abrupt("return", _this);
              case 19:
              case "end":
                return _context.stop();
            }
          }, _callee);
        })));
        this.signTransaction = signTransaction;
        this.assembled = assembled;
        if (!signTransaction) {
          throw new Error("You must provide a `signTransaction` function to send a transaction");
        }
        this.server = new _server.Server(this.assembled.options.rpcUrl, {
          allowHttp: (_this$assembled$optio2 = this.assembled.options.allowHttp) !== null && _this$assembled$optio2 !== void 0 ? _this$assembled$optio2 : false
        });
      }
      return _createClass(SentTransaction2, [{
        key: "result",
        get: function get() {
          if ("getTransactionResponse" in this && this.getTransactionResponse) {
            if ("returnValue" in this.getTransactionResponse) {
              return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
            }
            throw new Error("Transaction failed! Cannot parse result.");
          }
          if (this.sendTransactionResponse) {
            var _this$sendTransaction;
            var errorResult = (_this$sendTransaction = this.sendTransactionResponse.errorResult) === null || _this$sendTransaction === void 0 ? void 0 : _this$sendTransaction.result();
            if (errorResult) {
              throw new SentTransaction2.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(errorResult));
            }
            throw new SentTransaction2.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
          }
          throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled)));
        }
      }]);
    }();
    _SentTransaction = SentTransaction;
    _defineProperty(SentTransaction, "Errors", {
      SendFailed: function(_Error) {
        function SendFailedError() {
          _classCallCheck(this, SendFailedError);
          return _callSuper(this, SendFailedError, arguments);
        }
        _inherits(SendFailedError, _Error);
        return _createClass(SendFailedError);
      }(_wrapNativeSuper(Error)),
      SendResultOnly: function(_Error2) {
        function SendResultOnlyError() {
          _classCallCheck(this, SendResultOnlyError);
          return _callSuper(this, SendResultOnlyError, arguments);
        }
        _inherits(SendResultOnlyError, _Error2);
        return _createClass(SendResultOnlyError);
      }(_wrapNativeSuper(Error)),
      TransactionStillPending: function(_Error3) {
        function TransactionStillPendingError() {
          _classCallCheck(this, TransactionStillPendingError);
          return _callSuper(this, TransactionStillPendingError, arguments);
        }
        _inherits(TransactionStillPendingError, _Error3);
        return _createClass(TransactionStillPendingError);
      }(_wrapNativeSuper(Error))
    });
    _defineProperty(SentTransaction, "init", function() {
      var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(signTransaction, assembled) {
        var tx, sent;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              tx = new _SentTransaction(signTransaction, assembled);
              _context2.next = 3;
              return tx.send();
            case 3:
              sent = _context2.sent;
              return _context2.abrupt("return", sent);
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function(_x, _x2) {
        return _ref2.apply(this, arguments);
      };
    }());
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js
var require_assembled_transaction2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.NULL_ACCOUNT = exports.AssembledTransaction = void 0;
    var _stellarBase = require_lib();
    var _server = require_server2();
    var _api = require_api2();
    var _transaction = require_transaction3();
    var _rust_result = require_rust_result2();
    var _utils = require_utils2();
    var _sent_transaction = require_sent_transaction2();
    function _callSuper(t2, o2, e2) {
      return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t2, _isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t2).constructor) : o2.apply(t2, e2));
    }
    function _possibleConstructorReturn(t2, e2) {
      if (e2 && ("object" == _typeof(e2) || "function" == typeof e2)) return e2;
      if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t2);
    }
    function _assertThisInitialized(e2) {
      if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e2;
    }
    function _inherits(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
      t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && _setPrototypeOf(t2, e2);
    }
    function _wrapNativeSuper(t2) {
      var r3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
      return _wrapNativeSuper = function _wrapNativeSuper2(t3) {
        if (null === t3 || !_isNativeFunction(t3)) return t3;
        if ("function" != typeof t3) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r3) {
          if (r3.has(t3)) return r3.get(t3);
          r3.set(t3, Wrapper);
        }
        function Wrapper() {
          return _construct(t3, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t3.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t3);
      }, _wrapNativeSuper(t2);
    }
    function _construct(t2, e2, r3) {
      if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
      var o2 = [null];
      o2.push.apply(o2, e2);
      var p = new (t2.bind.apply(t2, o2))();
      return r3 && _setPrototypeOf(p, r3.prototype), p;
    }
    function _isNativeReflectConstruct() {
      try {
        var t2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t3) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t2;
      })();
    }
    function _isNativeFunction(t2) {
      try {
        return -1 !== Function.toString.call(t2).indexOf("[native code]");
      } catch (n2) {
        return "function" == typeof t2;
      }
    }
    function _setPrototypeOf(t2, e2) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
        return t3.__proto__ = e3, t3;
      }, _setPrototypeOf(t2, e2);
    }
    function _getPrototypeOf(t2) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
        return t3.__proto__ || Object.getPrototypeOf(t3);
      }, _getPrototypeOf(t2);
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2.return && (u = t2.return(), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function _createForOfIteratorHelper(r3, e2) {
      var t2 = "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (!t2) {
        if (Array.isArray(r3) || (t2 = _unsupportedIterableToArray(r3)) || e2 && r3 && "number" == typeof r3.length) {
          t2 && (r3 = t2);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n2() {
            return _n >= r3.length ? { done: true } : { done: false, value: r3[_n++] };
          }, e: function e3(r4) {
            throw r4;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o2, a = true, u = false;
      return { s: function s() {
        t2 = t2.call(r3);
      }, n: function n2() {
        var r4 = t2.next();
        return a = r4.done, r4;
      }, e: function e3(r4) {
        u = true, o2 = r4;
      }, f: function f() {
        try {
          a || null == t2.return || t2.return();
        } finally {
          if (u) throw o2;
        }
      } };
    }
    function _toConsumableArray(r3) {
      return _arrayWithoutHoles(r3) || _iterableToArray(r3) || _unsupportedIterableToArray(r3) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _iterableToArray(r3) {
      if ("undefined" != typeof Symbol && null != r3[Symbol.iterator] || null != r3["@@iterator"]) return Array.from(r3);
    }
    function _arrayWithoutHoles(r3) {
      if (Array.isArray(r3)) return _arrayLikeToArray(r3);
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var NULL_ACCOUNT = exports.NULL_ACCOUNT = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF";
    var AssembledTransaction3 = exports.AssembledTransaction = function() {
      function AssembledTransaction4(options) {
        var _this = this, _this$options$simulat, _this$options$allowHt;
        _classCallCheck(this, AssembledTransaction4);
        _defineProperty(this, "simulate", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                if (_this.raw) {
                  _context.next = 2;
                  break;
                }
                throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
              case 2:
                _this.built = _this.raw.build();
                _context.next = 5;
                return _this.server.simulateTransaction(_this.built);
              case 5:
                _this.simulation = _context.sent;
                if (_api.Api.isSimulationSuccess(_this.simulation)) {
                  _this.built = (0, _transaction.assembleTransaction)(_this.built, _this.simulation).build();
                }
                return _context.abrupt("return", _this);
              case 8:
              case "end":
                return _context.stop();
            }
          }, _callee);
        })));
        _defineProperty(this, "signAndSend", _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
          var _ref3, _ref3$force, force, _ref3$signTransaction, signTransaction, typeChecked, sent, _args2 = arguments;
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                _ref3 = _args2.length > 0 && _args2[0] !== void 0 ? _args2[0] : {}, _ref3$force = _ref3.force, force = _ref3$force === void 0 ? false : _ref3$force, _ref3$signTransaction = _ref3.signTransaction, signTransaction = _ref3$signTransaction === void 0 ? _this.options.signTransaction : _ref3$signTransaction;
                if (_this.built) {
                  _context2.next = 3;
                  break;
                }
                throw new Error("Transaction has not yet been simulated");
              case 3:
                if (!(!force && _this.isReadCall)) {
                  _context2.next = 5;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
              case 5:
                if (signTransaction) {
                  _context2.next = 7;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
              case 7:
                if (!_this.needsNonInvokerSigningBy().length) {
                  _context2.next = 9;
                  break;
                }
                throw new AssembledTransaction4.Errors.NeedsMoreSignatures("Transaction requires more signatures. See `needsNonInvokerSigningBy` for details.");
              case 9:
                typeChecked = _this;
                _context2.next = 12;
                return _sent_transaction.SentTransaction.init(signTransaction, typeChecked);
              case 12:
                sent = _context2.sent;
                return _context2.abrupt("return", sent);
              case 14:
              case "end":
                return _context2.stop();
            }
          }, _callee2);
        })));
        _defineProperty(this, "getStorageExpiration", _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
          var entryRes;
          return _regeneratorRuntime().wrap(function _callee3$(_context3) {
            while (1) switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _this.server.getLedgerEntries(new _stellarBase.Contract(_this.options.contractId).getFootprint());
              case 2:
                entryRes = _context3.sent;
                if (!(!entryRes.entries || !entryRes.entries.length || !entryRes.entries[0].liveUntilLedgerSeq)) {
                  _context3.next = 5;
                  break;
                }
                throw new Error("failed to get ledger entry");
              case 5:
                return _context3.abrupt("return", entryRes.entries[0].liveUntilLedgerSeq);
              case 6:
              case "end":
                return _context3.stop();
            }
          }, _callee3);
        })));
        _defineProperty(this, "needsNonInvokerSigningBy", function() {
          var _rawInvokeHostFunctio;
          var _ref5 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref5$includeAlreadyS = _ref5.includeAlreadySigned, includeAlreadySigned = _ref5$includeAlreadyS === void 0 ? false : _ref5$includeAlreadyS;
          if (!_this.built) {
            throw new Error("Transaction has not yet been simulated");
          }
          if (!("operations" in _this.built)) {
            throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(_this.built)));
          }
          var rawInvokeHostFunctionOp = _this.built.operations[0];
          return _toConsumableArray(new Set(((_rawInvokeHostFunctio = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio !== void 0 ? _rawInvokeHostFunctio : []).filter(function(entry) {
            return entry.credentials().switch() === _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (includeAlreadySigned || entry.credentials().address().signature().switch().name === "scvVoid");
          }).map(function(entry) {
            return _stellarBase.StrKey.encodeEd25519PublicKey(entry.credentials().address().address().accountId().ed25519());
          })));
        });
        _defineProperty(this, "signAuthEntries", _asyncToGenerator(_regeneratorRuntime().mark(function _callee5() {
          var _rawInvokeHostFunctio2;
          var _ref7, _ref7$expiration, expiration, _ref7$signAuthEntry, signAuthEntry, _ref7$publicKey, publicKey, needsNonInvokerSigningBy, rawInvokeHostFunctionOp, authEntries, _iterator, _step, _step$value, i, entry, pk, _args5 = arguments;
          return _regeneratorRuntime().wrap(function _callee5$(_context5) {
            while (1) switch (_context5.prev = _context5.next) {
              case 0:
                _ref7 = _args5.length > 0 && _args5[0] !== void 0 ? _args5[0] : {}, _ref7$expiration = _ref7.expiration, expiration = _ref7$expiration === void 0 ? _this.getStorageExpiration() : _ref7$expiration, _ref7$signAuthEntry = _ref7.signAuthEntry, signAuthEntry = _ref7$signAuthEntry === void 0 ? _this.options.signAuthEntry : _ref7$signAuthEntry, _ref7$publicKey = _ref7.publicKey, publicKey = _ref7$publicKey === void 0 ? _this.options.publicKey : _ref7$publicKey;
                if (_this.built) {
                  _context5.next = 3;
                  break;
                }
                throw new Error("Transaction has not yet been assembled or simulated");
              case 3:
                needsNonInvokerSigningBy = _this.needsNonInvokerSigningBy();
                if (needsNonInvokerSigningBy) {
                  _context5.next = 6;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
              case 6:
                if (!(needsNonInvokerSigningBy.indexOf(publicKey !== null && publicKey !== void 0 ? publicKey : "") === -1)) {
                  _context5.next = 8;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(publicKey, '"'));
              case 8:
                if (signAuthEntry) {
                  _context5.next = 10;
                  break;
                }
                throw new AssembledTransaction4.Errors.NoSigner("You must provide `signAuthEntry` when calling `signAuthEntries`, or when constructing the `Client` or `AssembledTransaction`");
              case 10:
                rawInvokeHostFunctionOp = _this.built.operations[0];
                authEntries = (_rawInvokeHostFunctio2 = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio2 !== void 0 ? _rawInvokeHostFunctio2 : [];
                _iterator = _createForOfIteratorHelper(authEntries.entries());
                _context5.prev = 13;
                _iterator.s();
              case 15:
                if ((_step = _iterator.n()).done) {
                  _context5.next = 34;
                  break;
                }
                _step$value = _slicedToArray(_step.value, 2), i = _step$value[0], entry = _step$value[1];
                if (!(entry.credentials().switch() !== _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress())) {
                  _context5.next = 19;
                  break;
                }
                return _context5.abrupt("continue", 32);
              case 19:
                pk = _stellarBase.StrKey.encodeEd25519PublicKey(entry.credentials().address().address().accountId().ed25519());
                if (!(pk !== publicKey)) {
                  _context5.next = 22;
                  break;
                }
                return _context5.abrupt("continue", 32);
              case 22:
                _context5.t0 = _stellarBase.authorizeEntry;
                _context5.t1 = entry;
                _context5.t2 = function() {
                  var _ref8 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(preimage) {
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                      while (1) switch (_context4.prev = _context4.next) {
                        case 0:
                          _context4.t0 = Buffer;
                          _context4.next = 3;
                          return signAuthEntry(preimage.toXDR("base64"));
                        case 3:
                          _context4.t1 = _context4.sent;
                          return _context4.abrupt("return", _context4.t0.from.call(_context4.t0, _context4.t1, "base64"));
                        case 5:
                        case "end":
                          return _context4.stop();
                      }
                    }, _callee4);
                  }));
                  return function(_x) {
                    return _ref8.apply(this, arguments);
                  };
                }();
                _context5.next = 27;
                return expiration;
              case 27:
                _context5.t3 = _context5.sent;
                _context5.t4 = _this.options.networkPassphrase;
                _context5.next = 31;
                return (0, _context5.t0)(_context5.t1, _context5.t2, _context5.t3, _context5.t4);
              case 31:
                authEntries[i] = _context5.sent;
              case 32:
                _context5.next = 15;
                break;
              case 34:
                _context5.next = 39;
                break;
              case 36:
                _context5.prev = 36;
                _context5.t5 = _context5["catch"](13);
                _iterator.e(_context5.t5);
              case 39:
                _context5.prev = 39;
                _iterator.f();
                return _context5.finish(39);
              case 42:
              case "end":
                return _context5.stop();
            }
          }, _callee5, null, [[13, 36, 39, 42]]);
        })));
        this.options = options;
        this.options.simulate = (_this$options$simulat = this.options.simulate) !== null && _this$options$simulat !== void 0 ? _this$options$simulat : true;
        this.server = new _server.Server(this.options.rpcUrl, {
          allowHttp: (_this$options$allowHt = this.options.allowHttp) !== null && _this$options$allowHt !== void 0 ? _this$options$allowHt : false
        });
      }
      return _createClass(AssembledTransaction4, [{
        key: "toJSON",
        value: function toJSON() {
          var _this$built;
          return JSON.stringify({
            method: this.options.method,
            tx: (_this$built = this.built) === null || _this$built === void 0 ? void 0 : _this$built.toXDR(),
            simulationResult: {
              auth: this.simulationData.result.auth.map(function(a) {
                return a.toXDR("base64");
              }),
              retval: this.simulationData.result.retval.toXDR("base64")
            },
            simulationTransactionData: this.simulationData.transactionData.toXDR("base64")
          });
        }
      }, {
        key: "simulationData",
        get: function get() {
          if (this.simulationResult && this.simulationTransactionData) {
            return {
              result: this.simulationResult,
              transactionData: this.simulationTransactionData
            };
          }
          var simulation = this.simulation;
          if (!simulation) {
            throw new AssembledTransaction4.Errors.NotYetSimulated("Transaction has not yet been simulated");
          }
          if (_api.Api.isSimulationError(simulation)) {
            throw new Error('Transaction simulation failed: "'.concat(simulation.error, '"'));
          }
          if (_api.Api.isSimulationRestore(simulation)) {
            throw new AssembledTransaction4.Errors.ExpiredState("You need to restore some contract state before you can invoke this method. ".concat(JSON.stringify(simulation, null, 2)));
          }
          if (!simulation.result) {
            throw new Error("Expected an invocation simulation, but got no 'result' field. Simulation: ".concat(JSON.stringify(simulation, null, 2)));
          }
          this.simulationResult = simulation.result;
          this.simulationTransactionData = simulation.transactionData.build();
          return {
            result: this.simulationResult,
            transactionData: this.simulationTransactionData
          };
        }
      }, {
        key: "result",
        get: function get() {
          try {
            return this.options.parseResultXdr(this.simulationData.result.retval);
          } catch (e2) {
            if (!(0, _utils.implementsToString)(e2)) throw e2;
            var err = this.parseError(e2.toString());
            if (err) return err;
            throw e2;
          }
        }
      }, {
        key: "parseError",
        value: function parseError(errorMessage) {
          if (!this.options.errorTypes) return void 0;
          var match = errorMessage.match(_utils.contractErrorPattern);
          if (!match) return void 0;
          var i = parseInt(match[1], 10);
          var err = this.options.errorTypes[i];
          if (!err) return void 0;
          return new _rust_result.Err(err);
        }
      }, {
        key: "isReadCall",
        get: function get() {
          var authsCount = this.simulationData.result.auth.length;
          var writeLength = this.simulationData.transactionData.resources().footprint().readWrite().length;
          return authsCount === 0 && writeLength === 0;
        }
      }], [{
        key: "fromJSON",
        value: function fromJSON(options, _ref9) {
          var tx = _ref9.tx, simulationResult = _ref9.simulationResult, simulationTransactionData = _ref9.simulationTransactionData;
          var txn = new AssembledTransaction4(options);
          txn.built = _stellarBase.TransactionBuilder.fromXDR(tx, options.networkPassphrase);
          txn.simulationResult = {
            auth: simulationResult.auth.map(function(a) {
              return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(a, "base64");
            }),
            retval: _stellarBase.xdr.ScVal.fromXDR(simulationResult.retval, "base64")
          };
          txn.simulationTransactionData = _stellarBase.xdr.SorobanTransactionData.fromXDR(simulationTransactionData, "base64");
          return txn;
        }
      }, {
        key: "build",
        value: function() {
          var _build = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(options) {
            var _options$fee, _options$args, _options$timeoutInSec;
            var tx, contract, account;
            return _regeneratorRuntime().wrap(function _callee6$(_context6) {
              while (1) switch (_context6.prev = _context6.next) {
                case 0:
                  tx = new AssembledTransaction4(options);
                  contract = new _stellarBase.Contract(options.contractId);
                  if (!options.publicKey) {
                    _context6.next = 8;
                    break;
                  }
                  _context6.next = 5;
                  return tx.server.getAccount(options.publicKey);
                case 5:
                  _context6.t0 = _context6.sent;
                  _context6.next = 9;
                  break;
                case 8:
                  _context6.t0 = new _stellarBase.Account(NULL_ACCOUNT, "0");
                case 9:
                  account = _context6.t0;
                  tx.raw = new _stellarBase.TransactionBuilder(account, {
                    fee: (_options$fee = options.fee) !== null && _options$fee !== void 0 ? _options$fee : _stellarBase.BASE_FEE,
                    networkPassphrase: options.networkPassphrase
                  }).addOperation(contract.call.apply(contract, [options.method].concat(_toConsumableArray((_options$args = options.args) !== null && _options$args !== void 0 ? _options$args : [])))).setTimeout((_options$timeoutInSec = options.timeoutInSeconds) !== null && _options$timeoutInSec !== void 0 ? _options$timeoutInSec : _utils.DEFAULT_TIMEOUT);
                  if (!options.simulate) {
                    _context6.next = 14;
                    break;
                  }
                  _context6.next = 14;
                  return tx.simulate();
                case 14:
                  return _context6.abrupt("return", tx);
                case 15:
                case "end":
                  return _context6.stop();
              }
            }, _callee6);
          }));
          function build(_x2) {
            return _build.apply(this, arguments);
          }
          return build;
        }()
      }]);
    }();
    _defineProperty(AssembledTransaction3, "Errors", {
      ExpiredState: function(_Error) {
        function ExpiredStateError() {
          _classCallCheck(this, ExpiredStateError);
          return _callSuper(this, ExpiredStateError, arguments);
        }
        _inherits(ExpiredStateError, _Error);
        return _createClass(ExpiredStateError);
      }(_wrapNativeSuper(Error)),
      NeedsMoreSignatures: function(_Error2) {
        function NeedsMoreSignaturesError() {
          _classCallCheck(this, NeedsMoreSignaturesError);
          return _callSuper(this, NeedsMoreSignaturesError, arguments);
        }
        _inherits(NeedsMoreSignaturesError, _Error2);
        return _createClass(NeedsMoreSignaturesError);
      }(_wrapNativeSuper(Error)),
      NoSignatureNeeded: function(_Error3) {
        function NoSignatureNeededError() {
          _classCallCheck(this, NoSignatureNeededError);
          return _callSuper(this, NoSignatureNeededError, arguments);
        }
        _inherits(NoSignatureNeededError, _Error3);
        return _createClass(NoSignatureNeededError);
      }(_wrapNativeSuper(Error)),
      NoUnsignedNonInvokerAuthEntries: function(_Error4) {
        function NoUnsignedNonInvokerAuthEntriesError() {
          _classCallCheck(this, NoUnsignedNonInvokerAuthEntriesError);
          return _callSuper(this, NoUnsignedNonInvokerAuthEntriesError, arguments);
        }
        _inherits(NoUnsignedNonInvokerAuthEntriesError, _Error4);
        return _createClass(NoUnsignedNonInvokerAuthEntriesError);
      }(_wrapNativeSuper(Error)),
      NoSigner: function(_Error5) {
        function NoSignerError() {
          _classCallCheck(this, NoSignerError);
          return _callSuper(this, NoSignerError, arguments);
        }
        _inherits(NoSignerError, _Error5);
        return _createClass(NoSignerError);
      }(_wrapNativeSuper(Error)),
      NotYetSimulated: function(_Error6) {
        function NotYetSimulatedError() {
          _classCallCheck(this, NotYetSimulatedError);
          return _callSuper(this, NotYetSimulatedError, arguments);
        }
        _inherits(NotYetSimulatedError, _Error6);
        return _createClass(NotYetSimulatedError);
      }(_wrapNativeSuper(Error)),
      FakeAccount: function(_Error7) {
        function FakeAccountError() {
          _classCallCheck(this, FakeAccountError);
          return _callSuper(this, FakeAccountError, arguments);
        }
        _inherits(FakeAccountError, _Error7);
        return _createClass(FakeAccountError);
      }(_wrapNativeSuper(Error))
    });
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/basic_node_signer.js
var require_basic_node_signer2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/basic_node_signer.js"(exports) {
    "use strict";
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.basicNodeSigner = void 0;
    var _stellarBase = require_lib();
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    var basicNodeSigner = exports.basicNodeSigner = function basicNodeSigner2(keypair, networkPassphrase) {
      return {
        signTransaction: function() {
          var _signTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(tx) {
            var t2;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  t2 = _stellarBase.TransactionBuilder.fromXDR(tx, networkPassphrase);
                  t2.sign(keypair);
                  return _context.abrupt("return", t2.toXDR());
                case 3:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));
          function signTransaction(_x) {
            return _signTransaction.apply(this, arguments);
          }
          return signTransaction;
        }(),
        signAuthEntry: function() {
          var _signAuthEntry = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(entryXdr) {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  return _context2.abrupt("return", keypair.sign((0, _stellarBase.hash)(Buffer.from(entryXdr, "base64"))).toString("base64"));
                case 1:
                case "end":
                  return _context2.stop();
              }
            }, _callee2);
          }));
          function signAuthEntry(_x2) {
            return _signAuthEntry.apply(this, arguments);
          }
          return signAuthEntry;
        }()
      };
    };
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/spec.js
var require_spec2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/spec.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Spec = void 0;
    var _stellarBase = require_lib();
    var _rust_result = require_rust_result2();
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _createForOfIteratorHelper(r3, e2) {
      var t2 = "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (!t2) {
        if (Array.isArray(r3) || (t2 = _unsupportedIterableToArray(r3)) || e2 && r3 && "number" == typeof r3.length) {
          t2 && (r3 = t2);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n2() {
            return _n >= r3.length ? { done: true } : { done: false, value: r3[_n++] };
          }, e: function e3(r4) {
            throw r4;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o2, a = true, u = false;
      return { s: function s() {
        t2 = t2.call(r3);
      }, n: function n2() {
        var r4 = t2.next();
        return a = r4.done, r4;
      }, e: function e3(r4) {
        u = true, o2 = r4;
      }, f: function f() {
        try {
          a || null == t2.return || t2.return();
        } finally {
          if (u) throw o2;
        }
      } };
    }
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    function _slicedToArray(r3, e2) {
      return _arrayWithHoles(r3) || _iterableToArrayLimit(r3, e2) || _unsupportedIterableToArray(r3, e2) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(r3, a) {
      if (r3) {
        if ("string" == typeof r3) return _arrayLikeToArray(r3, a);
        var t2 = {}.toString.call(r3).slice(8, -1);
        return "Object" === t2 && r3.constructor && (t2 = r3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r3, a) : void 0;
      }
    }
    function _arrayLikeToArray(r3, a) {
      (null == a || a > r3.length) && (a = r3.length);
      for (var e2 = 0, n2 = Array(a); e2 < a; e2++) n2[e2] = r3[e2];
      return n2;
    }
    function _iterableToArrayLimit(r3, l2) {
      var t2 = null == r3 ? null : "undefined" != typeof Symbol && r3[Symbol.iterator] || r3["@@iterator"];
      if (null != t2) {
        var e2, n2, i, u, a = [], f = true, o2 = false;
        try {
          if (i = (t2 = t2.call(r3)).next, 0 === l2) {
            if (Object(t2) !== t2) return;
            f = false;
          } else for (; !(f = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l2); f = true) ;
        } catch (r4) {
          o2 = true, n2 = r4;
        } finally {
          try {
            if (!f && null != t2.return && (u = t2.return(), Object(u) !== u)) return;
          } finally {
            if (o2) throw n2;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(r3) {
      if (Array.isArray(r3)) return r3;
    }
    function readObj(args, input) {
      var inputName = input.name().toString();
      var entry = Object.entries(args).find(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2), name = _ref2[0], _ = _ref2[1];
        return name === inputName;
      });
      if (!entry) {
        throw new Error("Missing field ".concat(inputName));
      }
      return entry[1];
    }
    var Spec = exports.Spec = function() {
      function Spec2(entries) {
        _classCallCheck(this, Spec2);
        _defineProperty(this, "entries", []);
        if (entries.length == 0) {
          throw new Error("Contract spec must have at least one entry");
        }
        var entry = entries[0];
        if (typeof entry === "string") {
          this.entries = entries.map(function(s) {
            return _stellarBase.xdr.ScSpecEntry.fromXDR(s, "base64");
          });
        } else {
          this.entries = entries;
        }
      }
      return _createClass(Spec2, [{
        key: "funcs",
        value: function funcs() {
          return this.entries.filter(function(entry) {
            return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
          }).map(function(entry) {
            return entry.functionV0();
          });
        }
      }, {
        key: "getFunc",
        value: function getFunc(name) {
          var entry = this.findEntry(name);
          if (entry.switch().value !== _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) {
            throw new Error("".concat(name, " is not a function"));
          }
          return entry.functionV0();
        }
      }, {
        key: "funcArgsToScVals",
        value: function funcArgsToScVals(name, args) {
          var _this = this;
          var fn = this.getFunc(name);
          return fn.inputs().map(function(input) {
            return _this.nativeToScVal(readObj(args, input), input.type());
          });
        }
      }, {
        key: "funcResToNative",
        value: function funcResToNative(name, val_or_base64) {
          var val = typeof val_or_base64 === "string" ? _stellarBase.xdr.ScVal.fromXDR(val_or_base64, "base64") : val_or_base64;
          var func = this.getFunc(name);
          var outputs = func.outputs();
          if (outputs.length === 0) {
            var type = val.switch();
            if (type.value !== _stellarBase.xdr.ScValType.scvVoid().value) {
              throw new Error("Expected void, got ".concat(type.name));
            }
            return null;
          }
          if (outputs.length > 1) {
            throw new Error("Multiple outputs not supported");
          }
          var output = outputs[0];
          if (output.switch().value === _stellarBase.xdr.ScSpecType.scSpecTypeResult().value) {
            return new _rust_result.Ok(this.scValToNative(val, output.result().okType()));
          }
          return this.scValToNative(val, output);
        }
      }, {
        key: "findEntry",
        value: function findEntry(name) {
          var entry = this.entries.find(function(entry2) {
            return entry2.value().name().toString() === name;
          });
          if (!entry) {
            throw new Error("no such entry: ".concat(name));
          }
          return entry;
        }
      }, {
        key: "nativeToScVal",
        value: function nativeToScVal(val, ty) {
          var _this2 = this;
          var t2 = ty.switch();
          var value = t2.value;
          if (t2.value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {
            var udt = ty.udt();
            return this.nativeToUdt(val, udt.name().toString());
          }
          if (value === _stellarBase.xdr.ScSpecType.scSpecTypeOption().value) {
            var opt = ty.option();
            if (val === void 0) {
              return _stellarBase.xdr.ScVal.scvVoid();
            }
            return this.nativeToScVal(val, opt.valueType());
          }
          switch (_typeof(val)) {
            case "object": {
              var _val$constructor$name, _val$constructor;
              if (val === null) {
                switch (value) {
                  case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
                    return _stellarBase.xdr.ScVal.scvVoid();
                  default:
                    throw new TypeError("Type ".concat(ty, " was not void, but value was null"));
                }
              }
              if (val instanceof _stellarBase.xdr.ScVal) {
                return val;
              }
              if (val instanceof _stellarBase.Address) {
                if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {
                  throw new TypeError("Type ".concat(ty, " was not address, but value was Address"));
                }
                return val.toScVal();
              }
              if (val instanceof _stellarBase.Contract) {
                if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {
                  throw new TypeError("Type ".concat(ty, " was not address, but value was Address"));
                }
                return val.address().toScVal();
              }
              if (val instanceof Uint8Array || Buffer.isBuffer(val)) {
                var copy = Uint8Array.from(val);
                switch (value) {
                  case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value: {
                    var bytes_n = ty.bytesN();
                    if (copy.length !== bytes_n.n()) {
                      throw new TypeError("expected ".concat(bytes_n.n(), " bytes, but got ").concat(copy.length));
                    }
                    return _stellarBase.xdr.ScVal.scvBytes(copy);
                  }
                  case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
                    return _stellarBase.xdr.ScVal.scvBytes(copy);
                  default:
                    throw new TypeError("invalid type (".concat(ty, ") specified for Bytes and BytesN"));
                }
              }
              if (Array.isArray(val)) {
                switch (value) {
                  case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value: {
                    var vec = ty.vec();
                    var elementType = vec.elementType();
                    return _stellarBase.xdr.ScVal.scvVec(val.map(function(v2) {
                      return _this2.nativeToScVal(v2, elementType);
                    }));
                  }
                  case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value: {
                    var tup = ty.tuple();
                    var valTypes = tup.valueTypes();
                    if (val.length !== valTypes.length) {
                      throw new TypeError("Tuple expects ".concat(valTypes.length, " values, but ").concat(val.length, " were provided"));
                    }
                    return _stellarBase.xdr.ScVal.scvVec(val.map(function(v2, i) {
                      return _this2.nativeToScVal(v2, valTypes[i]);
                    }));
                  }
                  case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value: {
                    var map = ty.map();
                    var keyType = map.keyType();
                    var valueType = map.valueType();
                    return _stellarBase.xdr.ScVal.scvMap(val.map(function(entry) {
                      var key2 = _this2.nativeToScVal(entry[0], keyType);
                      var val2 = _this2.nativeToScVal(entry[1], valueType);
                      return new _stellarBase.xdr.ScMapEntry({
                        key: key2,
                        val: val2
                      });
                    }));
                  }
                  default:
                    throw new TypeError("Type ".concat(ty, " was not vec, but value was Array"));
                }
              }
              if (val.constructor === Map) {
                if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {
                  throw new TypeError("Type ".concat(ty, " was not map, but value was Map"));
                }
                var scMap = ty.map();
                var _map = val;
                var entries = [];
                var values = _map.entries();
                var res = values.next();
                while (!res.done) {
                  var _res$value = _slicedToArray(res.value, 2), k = _res$value[0], v = _res$value[1];
                  var key = this.nativeToScVal(k, scMap.keyType());
                  var _val = this.nativeToScVal(v, scMap.valueType());
                  entries.push(new _stellarBase.xdr.ScMapEntry({
                    key,
                    val: _val
                  }));
                  res = values.next();
                }
                return _stellarBase.xdr.ScVal.scvMap(entries);
              }
              if (((_val$constructor$name = (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) !== null && _val$constructor$name !== void 0 ? _val$constructor$name : "") !== "Object") {
                var _val$constructor2;
                throw new TypeError("cannot interpret ".concat((_val$constructor2 = val.constructor) === null || _val$constructor2 === void 0 ? void 0 : _val$constructor2.name, " value as ScVal (").concat(JSON.stringify(val), ")"));
              }
              throw new TypeError("Received object ".concat(val, "  did not match the provided type ").concat(ty));
            }
            case "number":
            case "bigint": {
              switch (value) {
                case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:
                  return _stellarBase.xdr.ScVal.scvU32(val);
                case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:
                  return _stellarBase.xdr.ScVal.scvI32(val);
                case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value: {
                  var intType = t2.name.substring(10).toLowerCase();
                  return new _stellarBase.XdrLargeInt(intType, val).toScVal();
                }
                default:
                  throw new TypeError("invalid type (".concat(ty, ") specified for integer"));
              }
            }
            case "string":
              return stringToScVal(val, t2);
            case "boolean": {
              if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeBool().value) {
                throw TypeError("Type ".concat(ty, " was not bool, but value was bool"));
              }
              return _stellarBase.xdr.ScVal.scvBool(val);
            }
            case "undefined": {
              if (!ty) {
                return _stellarBase.xdr.ScVal.scvVoid();
              }
              switch (value) {
                case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
                case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:
                  return _stellarBase.xdr.ScVal.scvVoid();
                default:
                  throw new TypeError("Type ".concat(ty, " was not void, but value was undefined"));
              }
            }
            case "function":
              return this.nativeToScVal(val(), ty);
            default:
              throw new TypeError("failed to convert typeof ".concat(_typeof(val), " (").concat(val, ")"));
          }
        }
      }, {
        key: "nativeToUdt",
        value: function nativeToUdt(val, name) {
          var entry = this.findEntry(name);
          switch (entry.switch()) {
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              if (typeof val !== "number") {
                throw new TypeError("expected number for enum ".concat(name, ", but got ").concat(_typeof(val)));
              }
              return this.nativeToEnum(val, entry.udtEnumV0());
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.nativeToStruct(val, entry.udtStructV0());
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.nativeToUnion(val, entry.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(name));
          }
        }
      }, {
        key: "nativeToUnion",
        value: function nativeToUnion(val, union_) {
          var _this3 = this;
          var entry_name = val.tag;
          var case_ = union_.cases().find(function(entry) {
            var case_2 = entry.value().name().toString();
            return case_2 === entry_name;
          });
          if (!case_) {
            throw new TypeError("no such enum entry: ".concat(entry_name, " in ").concat(union_));
          }
          var key = _stellarBase.xdr.ScVal.scvSymbol(entry_name);
          switch (case_.switch()) {
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0(): {
              return _stellarBase.xdr.ScVal.scvVec([key]);
            }
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0(): {
              var types = case_.tupleCase().type();
              if (Array.isArray(val.values)) {
                if (val.values.length != types.length) {
                  throw new TypeError("union ".concat(union_, " expects ").concat(types.length, " values, but got ").concat(val.values.length));
                }
                var scvals = val.values.map(function(v, i) {
                  return _this3.nativeToScVal(v, types[i]);
                });
                scvals.unshift(key);
                return _stellarBase.xdr.ScVal.scvVec(scvals);
              }
              throw new Error("failed to parse union case ".concat(case_, " with ").concat(val));
            }
            default:
              throw new Error("failed to parse union ".concat(union_, " with ").concat(val));
          }
        }
      }, {
        key: "nativeToStruct",
        value: function nativeToStruct(val, struct) {
          var _this4 = this;
          var fields = struct.fields();
          if (fields.some(isNumeric)) {
            if (!fields.every(isNumeric)) {
              throw new Error("mixed numeric and non-numeric field names are not allowed");
            }
            return _stellarBase.xdr.ScVal.scvVec(fields.map(function(_, i) {
              return _this4.nativeToScVal(val[i], fields[i].type());
            }));
          }
          return _stellarBase.xdr.ScVal.scvMap(fields.map(function(field) {
            var name = field.name().toString();
            return new _stellarBase.xdr.ScMapEntry({
              key: _this4.nativeToScVal(name, _stellarBase.xdr.ScSpecTypeDef.scSpecTypeSymbol()),
              val: _this4.nativeToScVal(val[name], field.type())
            });
          }));
        }
      }, {
        key: "nativeToEnum",
        value: function nativeToEnum(val, enum_) {
          if (enum_.cases().some(function(entry) {
            return entry.value() === val;
          })) {
            return _stellarBase.xdr.ScVal.scvU32(val);
          }
          throw new TypeError("no such enum entry: ".concat(val, " in ").concat(enum_));
        }
      }, {
        key: "scValStrToNative",
        value: function scValStrToNative(scv, typeDef) {
          return this.scValToNative(_stellarBase.xdr.ScVal.fromXDR(scv, "base64"), typeDef);
        }
      }, {
        key: "scValToNative",
        value: function scValToNative2(scv, typeDef) {
          var _this5 = this;
          var t2 = typeDef.switch();
          var value = t2.value;
          if (value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {
            return this.scValUdtToNative(scv, typeDef.udt());
          }
          switch (scv.switch().value) {
            case _stellarBase.xdr.ScValType.scvVoid().value:
              return void 0;
            case _stellarBase.xdr.ScValType.scvU64().value:
            case _stellarBase.xdr.ScValType.scvI64().value:
            case _stellarBase.xdr.ScValType.scvU128().value:
            case _stellarBase.xdr.ScValType.scvI128().value:
            case _stellarBase.xdr.ScValType.scvU256().value:
            case _stellarBase.xdr.ScValType.scvI256().value:
              return (0, _stellarBase.scValToBigInt)(scv);
            case _stellarBase.xdr.ScValType.scvVec().value: {
              if (value == _stellarBase.xdr.ScSpecType.scSpecTypeVec().value) {
                var _scv$vec;
                var vec = typeDef.vec();
                return ((_scv$vec = scv.vec()) !== null && _scv$vec !== void 0 ? _scv$vec : []).map(function(elm) {
                  return _this5.scValToNative(elm, vec.elementType());
                });
              } else if (value == _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value) {
                var _scv$vec2;
                var tuple = typeDef.tuple();
                var valTypes = tuple.valueTypes();
                return ((_scv$vec2 = scv.vec()) !== null && _scv$vec2 !== void 0 ? _scv$vec2 : []).map(function(elm, i) {
                  return _this5.scValToNative(elm, valTypes[i]);
                });
              }
              throw new TypeError("Type ".concat(typeDef, " was not vec, but ").concat(scv, " is"));
            }
            case _stellarBase.xdr.ScValType.scvAddress().value:
              return _stellarBase.Address.fromScVal(scv).toString();
            case _stellarBase.xdr.ScValType.scvMap().value: {
              var _scv$map;
              var map = (_scv$map = scv.map()) !== null && _scv$map !== void 0 ? _scv$map : [];
              if (value == _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {
                var type_ = typeDef.map();
                var keyType = type_.keyType();
                var valueType = type_.valueType();
                var res = map.map(function(entry) {
                  return [_this5.scValToNative(entry.key(), keyType), _this5.scValToNative(entry.val(), valueType)];
                });
                return res;
              }
              throw new TypeError("ScSpecType ".concat(t2.name, " was not map, but ").concat(JSON.stringify(scv, null, 2), " is"));
            }
            case _stellarBase.xdr.ScValType.scvBool().value:
            case _stellarBase.xdr.ScValType.scvU32().value:
            case _stellarBase.xdr.ScValType.scvI32().value:
            case _stellarBase.xdr.ScValType.scvBytes().value:
              return scv.value();
            case _stellarBase.xdr.ScValType.scvString().value:
            case _stellarBase.xdr.ScValType.scvSymbol().value: {
              var _scv$value;
              if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeString().value && value !== _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value) {
                throw new Error("ScSpecType ".concat(t2.name, " was not string or symbol, but ").concat(JSON.stringify(scv, null, 2), " is"));
              }
              return (_scv$value = scv.value()) === null || _scv$value === void 0 ? void 0 : _scv$value.toString();
            }
            case _stellarBase.xdr.ScValType.scvTimepoint().value:
            case _stellarBase.xdr.ScValType.scvDuration().value:
              return (0, _stellarBase.scValToBigInt)(_stellarBase.xdr.ScVal.scvU64(scv.u64()));
            default:
              throw new TypeError("failed to convert ".concat(JSON.stringify(scv, null, 2), " to native type from type ").concat(t2.name));
          }
        }
      }, {
        key: "scValUdtToNative",
        value: function scValUdtToNative(scv, udt) {
          var entry = this.findEntry(udt.name().toString());
          switch (entry.switch()) {
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              return this.enumToNative(scv);
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.structToNative(scv, entry.udtStructV0());
            case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.unionToNative(scv, entry.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(udt.name().toString(), ": ").concat(entry));
          }
        }
      }, {
        key: "unionToNative",
        value: function unionToNative(val, udt) {
          var _this6 = this;
          var vec = val.vec();
          if (!vec) {
            throw new Error("".concat(JSON.stringify(val, null, 2), " is not a vec"));
          }
          if (vec.length === 0 && udt.cases.length !== 0) {
            throw new Error("".concat(val, " has length 0, but the there are at least one case in the union"));
          }
          var name = vec[0].sym().toString();
          if (vec[0].switch().value != _stellarBase.xdr.ScValType.scvSymbol().value) {
            throw new Error("{vec[0]} is not a symbol");
          }
          var entry = udt.cases().find(findCase(name));
          if (!entry) {
            throw new Error("failed to find entry ".concat(name, " in union {udt.name().toString()}"));
          }
          var res = {
            tag: name
          };
          if (entry.switch().value === _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
            var tuple = entry.tupleCase();
            var ty = tuple.type();
            var values = ty.map(function(entry2, i) {
              return _this6.scValToNative(vec[i + 1], entry2);
            });
            res.values = values;
          }
          return res;
        }
      }, {
        key: "structToNative",
        value: function structToNative(val, udt) {
          var _this7 = this, _val$map;
          var res = {};
          var fields = udt.fields();
          if (fields.some(isNumeric)) {
            var _val$vec;
            var r3 = (_val$vec = val.vec()) === null || _val$vec === void 0 ? void 0 : _val$vec.map(function(entry, i) {
              return _this7.scValToNative(entry, fields[i].type());
            });
            return r3;
          }
          (_val$map = val.map()) === null || _val$map === void 0 || _val$map.forEach(function(entry, i) {
            var field = fields[i];
            res[field.name().toString()] = _this7.scValToNative(entry.val(), field.type());
          });
          return res;
        }
      }, {
        key: "enumToNative",
        value: function enumToNative(scv) {
          if (scv.switch().value !== _stellarBase.xdr.ScValType.scvU32().value) {
            throw new Error("Enum must have a u32 value");
          }
          var num = scv.u32();
          return num;
        }
      }, {
        key: "errorCases",
        value: function errorCases() {
          return this.entries.filter(function(entry) {
            return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
          }).flatMap(function(entry) {
            return entry.value().cases();
          });
        }
      }, {
        key: "jsonSchema",
        value: function jsonSchema(funcName) {
          var definitions = {};
          var _iterator = _createForOfIteratorHelper(this.entries), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var entry = _step.value;
              switch (entry.switch().value) {
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value: {
                  var _udt = entry.udtEnumV0();
                  definitions[_udt.name().toString()] = enumToJsonSchema(_udt);
                  break;
                }
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value: {
                  var _udt2 = entry.udtStructV0();
                  definitions[_udt2.name().toString()] = structToJsonSchema(_udt2);
                  break;
                }
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:
                  var udt = entry.udtUnionV0();
                  definitions[udt.name().toString()] = unionToJsonSchema(udt);
                  break;
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value: {
                  var fn = entry.functionV0();
                  var fnName = fn.name().toString();
                  var _functionToJsonSchema = functionToJsonSchema(fn), input = _functionToJsonSchema.input;
                  definitions[fnName] = input;
                  break;
                }
                case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value: {
                }
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          var res = {
            $schema: "http://json-schema.org/draft-07/schema#",
            definitions: _objectSpread(_objectSpread({}, PRIMITIVE_DEFINITONS), definitions)
          };
          if (funcName) {
            res["$ref"] = "#/definitions/".concat(funcName);
          }
          return res;
        }
      }]);
    }();
    function stringToScVal(str, ty) {
      switch (ty.value) {
        case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:
          return _stellarBase.xdr.ScVal.scvString(str);
        case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:
          return _stellarBase.xdr.ScVal.scvSymbol(str);
        case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value: {
          var addr = _stellarBase.Address.fromString(str);
          return _stellarBase.xdr.ScVal.scvAddress(addr.toScAddress());
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
          return new _stellarBase.XdrLargeInt("u64", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
          return new _stellarBase.XdrLargeInt("i64", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
          return new _stellarBase.XdrLargeInt("u128", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
          return new _stellarBase.XdrLargeInt("i128", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
          return new _stellarBase.XdrLargeInt("u256", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:
          return new _stellarBase.XdrLargeInt("i256", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:
          return _stellarBase.xdr.ScVal.scvBytes(Buffer.from(str, "base64"));
        default:
          throw new TypeError("invalid type ".concat(ty.name, " specified for string value"));
      }
    }
    function isNumeric(field) {
      return /^\d+$/.test(field.name().toString());
    }
    function findCase(name) {
      return function matches(entry) {
        switch (entry.switch().value) {
          case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
            var tuple = entry.tupleCase();
            return tuple.name().toString() === name;
          }
          case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
            var void_case = entry.voidCase();
            return void_case.name().toString() === name;
          }
          default:
            return false;
        }
      };
    }
    var PRIMITIVE_DEFINITONS = {
      U32: {
        type: "integer",
        minimum: 0,
        maximum: 4294967295
      },
      I32: {
        type: "integer",
        minimum: -2147483648,
        maximum: 2147483647
      },
      U64: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 20
      },
      I64: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 21
      },
      U128: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 39
      },
      I128: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 40
      },
      U256: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 78
      },
      I256: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 79
      },
      Address: {
        type: "string",
        format: "address",
        description: "Address can be a public key or contract id"
      },
      ScString: {
        type: "string",
        description: "ScString is a string"
      },
      ScSymbol: {
        type: "string",
        description: "ScString is a string"
      },
      DataUrl: {
        type: "string",
        pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
      }
    };
    function typeRef(typeDef) {
      var t2 = typeDef.switch();
      var value = t2.value;
      var ref;
      switch (value) {
        case _stellarBase.xdr.ScSpecType.scSpecTypeVal().value: {
          ref = "Val";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBool().value: {
          return {
            type: "boolean"
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value: {
          return {
            type: "null"
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeError().value: {
          ref = "Error";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value: {
          ref = "U32";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value: {
          ref = "I32";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value: {
          ref = "U64";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value: {
          ref = "I64";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeTimepoint().value: {
          throw new Error("Timepoint type not supported");
          ref = "Timepoint";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeDuration().value: {
          throw new Error("Duration not supported");
          ref = "Duration";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value: {
          ref = "U128";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value: {
          ref = "I128";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value: {
          ref = "U256";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value: {
          ref = "I256";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value: {
          ref = "DataUrl";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeString().value: {
          ref = "ScString";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value: {
          ref = "ScSymbol";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value: {
          ref = "Address";
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value: {
          var opt = typeDef.option();
          return typeRef(opt.valueType());
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeResult().value: {
          break;
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value: {
          var arr = typeDef.vec();
          var _ref3 = typeRef(arr.elementType());
          return {
            type: "array",
            items: _ref3
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value: {
          var map = typeDef.map();
          var items = [typeRef(map.keyType()), typeRef(map.valueType())];
          return {
            type: "array",
            items: {
              type: "array",
              items,
              minItems: 2,
              maxItems: 2
            }
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value: {
          var tuple = typeDef.tuple();
          var minItems = tuple.valueTypes().length;
          var maxItems = minItems;
          var _items = tuple.valueTypes().map(typeRef);
          return {
            type: "array",
            items: _items,
            minItems,
            maxItems
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value: {
          var _arr = typeDef.bytesN();
          return {
            $ref: "#/definitions/DataUrl",
            maxLength: _arr.n()
          };
        }
        case _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value: {
          var udt = typeDef.udt();
          ref = udt.name().toString();
          break;
        }
      }
      return {
        $ref: "#/definitions/".concat(ref)
      };
    }
    function isRequired(typeDef) {
      return typeDef.switch().value != _stellarBase.xdr.ScSpecType.scSpecTypeOption().value;
    }
    function structToJsonSchema(udt) {
      var fields = udt.fields();
      if (fields.some(isNumeric)) {
        if (!fields.every(isNumeric)) {
          throw new Error("mixed numeric and non-numeric field names are not allowed");
        }
        var items = fields.map(function(_, i) {
          return typeRef(fields[i].type());
        });
        return {
          type: "array",
          items,
          minItems: fields.length,
          maxItems: fields.length
        };
      }
      var description = udt.doc().toString();
      var _args_and_required = args_and_required(fields), properties = _args_and_required.properties, required = _args_and_required.required;
      properties["additionalProperties"] = false;
      return {
        description,
        properties,
        required,
        type: "object"
      };
    }
    function args_and_required(input) {
      var properties = {};
      var required = [];
      var _iterator2 = _createForOfIteratorHelper(input), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var arg = _step2.value;
          var type_ = arg.type();
          var name = arg.name().toString();
          properties[name] = typeRef(type_);
          if (isRequired(type_)) {
            required.push(name);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      var res = {
        properties
      };
      if (required.length > 0) {
        res.required = required;
      }
      return res;
    }
    function functionToJsonSchema(func) {
      var _args_and_required2 = args_and_required(func.inputs()), properties = _args_and_required2.properties, required = _args_and_required2.required;
      var args = {
        additionalProperties: false,
        properties,
        type: "object"
      };
      if ((required === null || required === void 0 ? void 0 : required.length) > 0) {
        args.required = required;
      }
      var input = {
        properties: {
          args
        }
      };
      var outputs = func.outputs();
      var output = outputs.length > 0 ? typeRef(outputs[0]) : typeRef(_stellarBase.xdr.ScSpecTypeDef.scSpecTypeVoid());
      var description = func.doc().toString();
      if (description.length > 0) {
        input.description = description;
      }
      input.additionalProperties = false;
      output.additionalProperties = false;
      return {
        input,
        output
      };
    }
    function unionToJsonSchema(udt) {
      var description = udt.doc().toString();
      var cases = udt.cases();
      var oneOf = [];
      var _iterator3 = _createForOfIteratorHelper(cases), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var case_ = _step3.value;
          switch (case_.switch().value) {
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
              var c = case_.voidCase();
              var title = c.name().toString();
              oneOf.push({
                type: "object",
                title,
                properties: {
                  tag: title
                },
                additionalProperties: false,
                required: ["tag"]
              });
              break;
            }
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
              var _c = case_.tupleCase();
              var _title = _c.name().toString();
              oneOf.push({
                type: "object",
                title: _title,
                properties: {
                  tag: _title,
                  values: {
                    type: "array",
                    items: _c.type().map(typeRef)
                  }
                },
                required: ["tag", "values"],
                additionalProperties: false
              });
            }
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      var res = {
        oneOf
      };
      if (description.length > 0) {
        res.description = description;
      }
      return res;
    }
    function enumToJsonSchema(udt) {
      var description = udt.doc().toString();
      var cases = udt.cases();
      var oneOf = [];
      var _iterator4 = _createForOfIteratorHelper(cases), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var case_ = _step4.value;
          var title = case_.name().toString();
          var _description = case_.doc().toString();
          oneOf.push({
            description: _description,
            title,
            enum: [case_.value()],
            type: "number"
          });
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      var res = {
        oneOf
      };
      if (description.length > 0) {
        res.description = description;
      }
      return res;
    }
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/index.js
var require_rpc2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/rpc/index.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      Server: true,
      Durability: true,
      AxiosClient: true,
      parseRawSimulation: true,
      parseRawEvents: true
    };
    Object.defineProperty(exports, "AxiosClient", {
      enumerable: true,
      get: function get() {
        return _axios.default;
      }
    });
    Object.defineProperty(exports, "Durability", {
      enumerable: true,
      get: function get() {
        return _server.Durability;
      }
    });
    Object.defineProperty(exports, "Server", {
      enumerable: true,
      get: function get() {
        return _server.Server;
      }
    });
    exports.default = void 0;
    Object.defineProperty(exports, "parseRawEvents", {
      enumerable: true,
      get: function get() {
        return _parsers.parseRawEvents;
      }
    });
    Object.defineProperty(exports, "parseRawSimulation", {
      enumerable: true,
      get: function get() {
        return _parsers.parseRawSimulation;
      }
    });
    var _api = require_api2();
    Object.keys(_api).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _api[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _api[key];
        }
      });
    });
    var _server = require_server2();
    var _axios = _interopRequireDefault(require_axios3());
    var _parsers = require_parsers2();
    var _transaction = require_transaction3();
    Object.keys(_transaction).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _transaction[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _transaction[key];
        }
      });
    });
    function _interopRequireDefault(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    var _default = exports.default = module.exports;
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/client.js
var require_client2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Client = void 0;
    var _spec = require_spec2();
    var _rpc = require_rpc2();
    var _assembled_transaction = require_assembled_transaction2();
    var _utils = require_utils2();
    var _excluded = ["method"];
    function _typeof(o2) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
        return typeof o3;
      } : function(o3) {
        return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
      }, _typeof(o2);
    }
    function _regeneratorRuntime() {
      "use strict";
      _regeneratorRuntime = function _regeneratorRuntime2() {
        return e2;
      };
      var t2, e2 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r4) {
        t3[e3] = r4.value;
      }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
      function define2(t3, e3, r4) {
        return Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }), t3[e3];
      }
      try {
        define2({}, "");
      } catch (t3) {
        define2 = function define3(t4, e3, r4) {
          return t4[e3] = r4;
        };
      }
      function wrap(t3, e3, r4, n3) {
        var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
        return o2(a2, "_invoke", { value: makeInvokeMethod(t3, r4, c2) }), a2;
      }
      function tryCatch(t3, e3, r4) {
        try {
          return { type: "normal", arg: t3.call(e3, r4) };
        } catch (t4) {
          return { type: "throw", arg: t4 };
        }
      }
      e2.wrap = wrap;
      var h = "suspendedStart", l2 = "suspendedYield", f = "executing", s = "completed", y = {};
      function Generator() {
      }
      function GeneratorFunction() {
      }
      function GeneratorFunctionPrototype() {
      }
      var p = {};
      define2(p, a, function() {
        return this;
      });
      var d = Object.getPrototypeOf, v = d && d(d(values([])));
      v && v !== r3 && n2.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
      function defineIteratorMethods(t3) {
        ["next", "throw", "return"].forEach(function(e3) {
          define2(t3, e3, function(t4) {
            return this._invoke(e3, t4);
          });
        });
      }
      function AsyncIterator(t3, e3) {
        function invoke(r5, o3, i2, a2) {
          var c2 = tryCatch(t3[r5], t3, o3);
          if ("throw" !== c2.type) {
            var u2 = c2.arg, h2 = u2.value;
            return h2 && "object" == _typeof(h2) && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
              invoke("next", t4, i2, a2);
            }, function(t4) {
              invoke("throw", t4, i2, a2);
            }) : e3.resolve(h2).then(function(t4) {
              u2.value = t4, i2(u2);
            }, function(t4) {
              return invoke("throw", t4, i2, a2);
            });
          }
          a2(c2.arg);
        }
        var r4;
        o2(this, "_invoke", { value: function value(t4, n3) {
          function callInvokeWithMethodAndArg() {
            return new e3(function(e4, r5) {
              invoke(t4, n3, e4, r5);
            });
          }
          return r4 = r4 ? r4.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } });
      }
      function makeInvokeMethod(e3, r4, n3) {
        var o3 = h;
        return function(i2, a2) {
          if (o3 === f) throw Error("Generator is already running");
          if (o3 === s) {
            if ("throw" === i2) throw a2;
            return { value: t2, done: true };
          }
          for (n3.method = i2, n3.arg = a2; ; ) {
            var c2 = n3.delegate;
            if (c2) {
              var u2 = maybeInvokeDelegate(c2, n3);
              if (u2) {
                if (u2 === y) continue;
                return u2;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;
            else if ("throw" === n3.method) {
              if (o3 === h) throw o3 = s, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            o3 = f;
            var p2 = tryCatch(e3, r4, n3);
            if ("normal" === p2.type) {
              if (o3 = n3.done ? s : l2, p2.arg === y) continue;
              return { value: p2.arg, done: n3.done };
            }
            "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
          }
        };
      }
      function maybeInvokeDelegate(e3, r4) {
        var n3 = r4.method, o3 = e3.iterator[n3];
        if (o3 === t2) return r4.delegate = null, "throw" === n3 && e3.iterator.return && (r4.method = "return", r4.arg = t2, maybeInvokeDelegate(e3, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
        var i2 = tryCatch(o3, e3.iterator, r4.arg);
        if ("throw" === i2.type) return r4.method = "throw", r4.arg = i2.arg, r4.delegate = null, y;
        var a2 = i2.arg;
        return a2 ? a2.done ? (r4[e3.resultName] = a2.value, r4.next = e3.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = t2), r4.delegate = null, y) : a2 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, y);
      }
      function pushTryEntry(t3) {
        var e3 = { tryLoc: t3[0] };
        1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
      }
      function resetTryEntry(t3) {
        var e3 = t3.completion || {};
        e3.type = "normal", delete e3.arg, t3.completion = e3;
      }
      function Context(t3) {
        this.tryEntries = [{ tryLoc: "root" }], t3.forEach(pushTryEntry, this), this.reset(true);
      }
      function values(e3) {
        if (e3 || "" === e3) {
          var r4 = e3[a];
          if (r4) return r4.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var o3 = -1, i2 = function next() {
              for (; ++o3 < e3.length; ) if (n2.call(e3, o3)) return next.value = e3[o3], next.done = false, next;
              return next.value = t2, next.done = true, next;
            };
            return i2.next = i2;
          }
        }
        throw new TypeError(_typeof(e3) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", { value: GeneratorFunctionPrototype, configurable: true }), o2(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
        var e3 = "function" == typeof t3 && t3.constructor;
        return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
      }, e2.mark = function(t3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define2(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
      }, e2.awrap = function(t3) {
        return { __await: t3 };
      }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
        return this;
      }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r4, n3, o3, i2) {
        void 0 === i2 && (i2 = Promise);
        var a2 = new AsyncIterator(wrap(t3, r4, n3, o3), i2);
        return e2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(t4) {
          return t4.done ? t4.value : a2.next();
        });
      }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
        return this;
      }), define2(g, "toString", function() {
        return "[object Generator]";
      }), e2.keys = function(t3) {
        var e3 = Object(t3), r4 = [];
        for (var n3 in e3) r4.push(n3);
        return r4.reverse(), function next() {
          for (; r4.length; ) {
            var t4 = r4.pop();
            if (t4 in e3) return next.value = t4, next.done = false, next;
          }
          return next.done = true, next;
        };
      }, e2.values = values, Context.prototype = { constructor: Context, reset: function reset(e3) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3) for (var r4 in this) "t" === r4.charAt(0) && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t2);
      }, stop: function stop() {
        this.done = true;
        var t3 = this.tryEntries[0].completion;
        if ("throw" === t3.type) throw t3.arg;
        return this.rval;
      }, dispatchException: function dispatchException(e3) {
        if (this.done) throw e3;
        var r4 = this;
        function handle(n3, o4) {
          return a2.type = "throw", a2.arg = e3, r4.next = n3, o4 && (r4.method = "next", r4.arg = t2), !!o4;
        }
        for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
          var i2 = this.tryEntries[o3], a2 = i2.completion;
          if ("root" === i2.tryLoc) return handle("end");
          if (i2.tryLoc <= this.prev) {
            var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
            if (c2 && u2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            } else if (c2) {
              if (this.prev < i2.catchLoc) return handle(i2.catchLoc, true);
            } else {
              if (!u2) throw Error("try statement without catch or finally");
              if (this.prev < i2.finallyLoc) return handle(i2.finallyLoc);
            }
          }
        }
      }, abrupt: function abrupt(t3, e3) {
        for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
          var o3 = this.tryEntries[r4];
          if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
            var i2 = o3;
            break;
          }
        }
        i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
        var a2 = i2 ? i2.completion : {};
        return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
      }, complete: function complete(t3, e3) {
        if ("throw" === t3.type) throw t3.arg;
        return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
      }, finish: function finish(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.finallyLoc === t3) return this.complete(r4.completion, r4.afterLoc), resetTryEntry(r4), y;
        }
      }, catch: function _catch(t3) {
        for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
          var r4 = this.tryEntries[e3];
          if (r4.tryLoc === t3) {
            var n3 = r4.completion;
            if ("throw" === n3.type) {
              var o3 = n3.arg;
              resetTryEntry(r4);
            }
            return o3;
          }
        }
        throw Error("illegal catch attempt");
      }, delegateYield: function delegateYield(e3, r4, n3) {
        return this.delegate = { iterator: values(e3), resultName: r4, nextLoc: n3 }, "next" === this.method && (this.arg = t2), y;
      } }, e2;
    }
    function asyncGeneratorStep(n2, t2, e2, r3, o2, a, c) {
      try {
        var i = n2[a](c), u = i.value;
      } catch (n3) {
        return void e2(n3);
      }
      i.done ? t2(u) : Promise.resolve(u).then(r3, o2);
    }
    function _asyncToGenerator(n2) {
      return function() {
        var t2 = this, e2 = arguments;
        return new Promise(function(r3, o2) {
          var a = n2.apply(t2, e2);
          function _next(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "next", n3);
          }
          function _throw(n3) {
            asyncGeneratorStep(a, r3, o2, _next, _throw, "throw", n3);
          }
          _next(void 0);
        });
      };
    }
    function ownKeys(e2, r3) {
      var t2 = Object.keys(e2);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(e2);
        r3 && (o2 = o2.filter(function(r4) {
          return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
        })), t2.push.apply(t2, o2);
      }
      return t2;
    }
    function _objectSpread(e2) {
      for (var r3 = 1; r3 < arguments.length; r3++) {
        var t2 = null != arguments[r3] ? arguments[r3] : {};
        r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
          _defineProperty(e2, r4, t2[r4]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
          Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
        });
      }
      return e2;
    }
    function _objectWithoutProperties(e2, t2) {
      if (null == e2) return {};
      var o2, r3, i = _objectWithoutPropertiesLoose(e2, t2);
      if (Object.getOwnPropertySymbols) {
        var n2 = Object.getOwnPropertySymbols(e2);
        for (r3 = 0; r3 < n2.length; r3++) o2 = n2[r3], t2.indexOf(o2) >= 0 || {}.propertyIsEnumerable.call(e2, o2) && (i[o2] = e2[o2]);
      }
      return i;
    }
    function _objectWithoutPropertiesLoose(r3, e2) {
      if (null == r3) return {};
      var t2 = {};
      for (var n2 in r3) if ({}.hasOwnProperty.call(r3, n2)) {
        if (e2.indexOf(n2) >= 0) continue;
        t2[n2] = r3[n2];
      }
      return t2;
    }
    function _classCallCheck(a, n2) {
      if (!(a instanceof n2)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e2, r3) {
      for (var t2 = 0; t2 < r3.length; t2++) {
        var o2 = r3[t2];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
      }
    }
    function _createClass(e2, r3, t2) {
      return r3 && _defineProperties(e2.prototype, r3), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
    }
    function _defineProperty(e2, r3, t2) {
      return (r3 = _toPropertyKey(r3)) in e2 ? Object.defineProperty(e2, r3, { value: t2, enumerable: true, configurable: true, writable: true }) : e2[r3] = t2, e2;
    }
    function _toPropertyKey(t2) {
      var i = _toPrimitive(t2, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t2, r3) {
      if ("object" != _typeof(t2) || !t2) return t2;
      var e2 = t2[Symbol.toPrimitive];
      if (void 0 !== e2) {
        var i = e2.call(t2, r3 || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r3 ? String : Number)(t2);
    }
    var Client3 = exports.Client = function() {
      function Client4(spec, options) {
        var _this = this;
        _classCallCheck(this, Client4);
        _defineProperty(this, "txFromJSON", function(json) {
          var _JSON$parse = JSON.parse(json), method = _JSON$parse.method, tx = _objectWithoutProperties(_JSON$parse, _excluded);
          return _assembled_transaction.AssembledTransaction.fromJSON(_objectSpread(_objectSpread({}, _this.options), {}, {
            method,
            parseResultXdr: function parseResultXdr(result) {
              return _this.spec.funcResToNative(method, result);
            }
          }), tx);
        });
        this.spec = spec;
        this.options = options;
        this.spec.funcs().forEach(function(xdrFn) {
          var method = xdrFn.name().toString();
          var assembleTransaction = function assembleTransaction2(args, methodOptions) {
            return _assembled_transaction.AssembledTransaction.build(_objectSpread(_objectSpread(_objectSpread({
              method,
              args: args && spec.funcArgsToScVals(method, args)
            }, options), methodOptions), {}, {
              errorTypes: spec.errorCases().reduce(function(acc, curr) {
                return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr.value(), {
                  message: curr.doc().toString()
                }));
              }, {}),
              parseResultXdr: function parseResultXdr(result) {
                return spec.funcResToNative(method, result);
              }
            }));
          };
          _this[method] = spec.getFunc(method).inputs().length === 0 ? function(opts) {
            return assembleTransaction(void 0, opts);
          } : assembleTransaction;
        });
      }
      return _createClass(Client4, null, [{
        key: "fromWasmHash",
        value: function() {
          var _fromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(wasmHash, options) {
            var format, rpcUrl, allowHttp, serverOpts, server, wasm, _args = arguments;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  format = _args.length > 2 && _args[2] !== void 0 ? _args[2] : "hex";
                  if (!(!options || !options.rpcUrl)) {
                    _context.next = 3;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 3:
                  rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;
                  serverOpts = {
                    allowHttp
                  };
                  server = new _rpc.Server(rpcUrl, serverOpts);
                  _context.next = 8;
                  return server.getContractWasmByHash(wasmHash, format);
                case 8:
                  wasm = _context.sent;
                  return _context.abrupt("return", Client4.fromWasm(wasm, options));
                case 10:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));
          function fromWasmHash(_x, _x2) {
            return _fromWasmHash.apply(this, arguments);
          }
          return fromWasmHash;
        }()
      }, {
        key: "fromWasm",
        value: function() {
          var _fromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(wasm, options) {
            var wasmModule, xdrSections, bufferSection, specEntryArray, spec;
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return WebAssembly.compile(wasm);
                case 2:
                  wasmModule = _context2.sent;
                  xdrSections = WebAssembly.Module.customSections(wasmModule, "contractspecv0");
                  if (!(xdrSections.length === 0)) {
                    _context2.next = 6;
                    break;
                  }
                  throw new Error("Could not obtain contract spec from wasm");
                case 6:
                  bufferSection = Buffer.from(xdrSections[0]);
                  specEntryArray = (0, _utils.processSpecEntryStream)(bufferSection);
                  spec = new _spec.Spec(specEntryArray);
                  return _context2.abrupt("return", new Client4(spec, options));
                case 10:
                case "end":
                  return _context2.stop();
              }
            }, _callee2);
          }));
          function fromWasm(_x3, _x4) {
            return _fromWasm.apply(this, arguments);
          }
          return fromWasm;
        }()
      }, {
        key: "from",
        value: function() {
          var _from = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(options) {
            var rpcUrl, contractId, allowHttp, serverOpts, server, wasm;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  if (!(!options || !options.rpcUrl || !options.contractId)) {
                    _context3.next = 2;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl and contractId");
                case 2:
                  rpcUrl = options.rpcUrl, contractId = options.contractId, allowHttp = options.allowHttp;
                  serverOpts = {
                    allowHttp
                  };
                  server = new _rpc.Server(rpcUrl, serverOpts);
                  _context3.next = 7;
                  return server.getContractWasmByContractId(contractId);
                case 7:
                  wasm = _context3.sent;
                  return _context3.abrupt("return", Client4.fromWasm(wasm, options));
                case 9:
                case "end":
                  return _context3.stop();
              }
            }, _callee3);
          }));
          function from(_x5) {
            return _from.apply(this, arguments);
          }
          return from;
        }()
      }]);
    }();
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/types.js
var require_types2 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
  }
});

// node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/index.js
var require_contract3 = __commonJS({
  "node_modules/passkey-factory-sdk/node_modules/@stellar/stellar-sdk/lib/contract/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _assembled_transaction = require_assembled_transaction2();
    Object.keys(_assembled_transaction).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _assembled_transaction[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _assembled_transaction[key];
        }
      });
    });
    var _basic_node_signer = require_basic_node_signer2();
    Object.keys(_basic_node_signer).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _basic_node_signer[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _basic_node_signer[key];
        }
      });
    });
    var _client = require_client2();
    Object.keys(_client).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _client[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _client[key];
        }
      });
    });
    var _rust_result = require_rust_result2();
    Object.keys(_rust_result).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _rust_result[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _rust_result[key];
        }
      });
    });
    var _sent_transaction = require_sent_transaction2();
    Object.keys(_sent_transaction).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _sent_transaction[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _sent_transaction[key];
        }
      });
    });
    var _spec = require_spec2();
    Object.keys(_spec).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _spec[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _spec[key];
        }
      });
    });
    var _types = require_types2();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _types[key];
        }
      });
    });
  }
});

// node_modules/passkey-kit/node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js
var require_stellar_sdk_min = __commonJS({
  "node_modules/passkey-kit/node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js"(exports, module) {
    !function(e2, t2) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t2() : "function" == typeof define && define.amd ? define("StellarSdk", [], t2) : "object" == typeof exports ? exports.StellarSdk = t2() : e2.StellarSdk = t2();
    }(self, () => (() => {
      var e2 = { 3740: function(e3) {
        var t3;
        t3 = () => (() => {
          var e4 = { 616: (e5, t5, r5) => {
            "use strict";
            r5.d(t5, { A: () => o2 });
            var n2 = r5(287);
            n2.hp.alloc(1).subarray(0, 1) instanceof n2.hp || (n2.hp.prototype.subarray = function(e6, t6) {
              const r6 = Uint8Array.prototype.subarray.call(this, e6, t6);
              return Object.setPrototypeOf(r6, n2.hp.prototype), r6;
            });
            const o2 = n2.hp;
          }, 281: (e5, t5, r5) => {
            const n2 = r5(164);
            e5.exports = n2;
          }, 164: (e5, t5, r5) => {
            "use strict";
            r5.r(t5), r5.d(t5, { Array: () => M, Bool: () => j, Double: () => P, Enum: () => q, Float: () => A, Hyper: () => k, Int: () => w, LargeInt: () => _, Opaque: () => B, Option: () => F, Quadruple: () => R, Reference: () => K, String: () => C, Struct: () => H, Union: () => X, UnsignedHyper: () => x, UnsignedInt: () => O, VarArray: () => D, VarOpaque: () => U, Void: () => V, XdrReader: () => u, XdrWriter: () => f, config: () => te });
            class n2 extends TypeError {
              constructor(e6) {
                super(`XDR Write Error: ${e6}`);
              }
            }
            class o2 extends TypeError {
              constructor(e6) {
                super(`XDR Read Error: ${e6}`);
              }
            }
            class i extends TypeError {
              constructor(e6) {
                super(`XDR Type Definition Error: ${e6}`);
              }
            }
            class a extends i {
              constructor() {
                super("method not implemented, it should be overloaded in the descendant class.");
              }
            }
            var s = r5(616).A;
            class u {
              constructor(e6) {
                __publicField(this, "_buffer");
                __publicField(this, "_length");
                __publicField(this, "_index");
                if (!s.isBuffer(e6)) {
                  if (!(e6 instanceof Array || Array.isArray(e6) || ArrayBuffer.isView(e6))) throw new o2(`source invalid: ${e6}`);
                  e6 = s.from(e6);
                }
                this._buffer = e6, this._length = e6.length, this._index = 0;
              }
              get eof() {
                return this._index === this._length;
              }
              advance(e6) {
                const t6 = this._index;
                if (this._index += e6, this._length < this._index) throw new o2("attempt to read outside the boundary of the buffer");
                const r6 = 4 - (e6 % 4 || 4);
                if (r6 > 0) {
                  for (let e7 = 0; e7 < r6; e7++) if (0 !== this._buffer[this._index + e7]) throw new o2("invalid padding");
                  this._index += r6;
                }
                return t6;
              }
              rewind() {
                this._index = 0;
              }
              read(e6) {
                const t6 = this.advance(e6);
                return this._buffer.subarray(t6, t6 + e6);
              }
              readInt32BE() {
                return this._buffer.readInt32BE(this.advance(4));
              }
              readUInt32BE() {
                return this._buffer.readUInt32BE(this.advance(4));
              }
              readBigInt64BE() {
                return this._buffer.readBigInt64BE(this.advance(8));
              }
              readBigUInt64BE() {
                return this._buffer.readBigUInt64BE(this.advance(8));
              }
              readFloatBE() {
                return this._buffer.readFloatBE(this.advance(4));
              }
              readDoubleBE() {
                return this._buffer.readDoubleBE(this.advance(8));
              }
              ensureInputConsumed() {
                if (this._index !== this._length) throw new o2("invalid XDR contract typecast - source buffer not entirely consumed");
              }
            }
            var c = r5(616).A;
            const l2 = 8192;
            class f {
              constructor(e6) {
                __publicField(this, "_buffer");
                __publicField(this, "_length");
                __publicField(this, "_index", 0);
                "number" == typeof e6 ? e6 = c.allocUnsafe(e6) : e6 instanceof c || (e6 = c.allocUnsafe(l2)), this._buffer = e6, this._length = e6.length;
              }
              alloc(e6) {
                const t6 = this._index;
                return this._index += e6, this._length < this._index && this.resize(this._index), t6;
              }
              resize(e6) {
                const t6 = Math.ceil(e6 / l2) * l2, r6 = c.allocUnsafe(t6);
                this._buffer.copy(r6, 0, 0, this._length), this._buffer = r6, this._length = t6;
              }
              finalize() {
                return this._buffer.subarray(0, this._index);
              }
              toArray() {
                return [...this.finalize()];
              }
              write(e6, t6) {
                if ("string" == typeof e6) {
                  const r7 = this.alloc(t6);
                  this._buffer.write(e6, r7, "utf8");
                } else {
                  e6 instanceof c || (e6 = c.from(e6));
                  const r7 = this.alloc(t6);
                  e6.copy(this._buffer, r7, 0, t6);
                }
                const r6 = 4 - (t6 % 4 || 4);
                if (r6 > 0) {
                  const e7 = this.alloc(r6);
                  this._buffer.fill(0, e7, this._index);
                }
              }
              writeInt32BE(e6) {
                const t6 = this.alloc(4);
                this._buffer.writeInt32BE(e6, t6);
              }
              writeUInt32BE(e6) {
                const t6 = this.alloc(4);
                this._buffer.writeUInt32BE(e6, t6);
              }
              writeBigInt64BE(e6) {
                const t6 = this.alloc(8);
                this._buffer.writeBigInt64BE(e6, t6);
              }
              writeBigUInt64BE(e6) {
                const t6 = this.alloc(8);
                this._buffer.writeBigUInt64BE(e6, t6);
              }
              writeFloatBE(e6) {
                const t6 = this.alloc(4);
                this._buffer.writeFloatBE(e6, t6);
              }
              writeDoubleBE(e6) {
                const t6 = this.alloc(8);
                this._buffer.writeDoubleBE(e6, t6);
              }
            }
            __publicField(f, "bufferChunkSize", l2);
            var p = r5(616).A;
            class h {
              toXDR(e6 = "raw") {
                if (!this.write) return this.constructor.toXDR(this, e6);
                const t6 = new f();
                return this.write(this, t6), v(t6.finalize(), e6);
              }
              fromXDR(e6, t6 = "raw") {
                if (!this.read) return this.constructor.fromXDR(e6, t6);
                const r6 = new u(g(e6, t6)), n3 = this.read(r6);
                return r6.ensureInputConsumed(), n3;
              }
              validateXDR(e6, t6 = "raw") {
                try {
                  return this.fromXDR(e6, t6), true;
                } catch (e7) {
                  return false;
                }
              }
              static toXDR(e6, t6 = "raw") {
                const r6 = new f();
                return this.write(e6, r6), v(r6.finalize(), t6);
              }
              static fromXDR(e6, t6 = "raw") {
                const r6 = new u(g(e6, t6)), n3 = this.read(r6);
                return r6.ensureInputConsumed(), n3;
              }
              static validateXDR(e6, t6 = "raw") {
                try {
                  return this.fromXDR(e6, t6), true;
                } catch (e7) {
                  return false;
                }
              }
            }
            class d extends h {
              static read(e6) {
                throw new a();
              }
              static write(e6, t6) {
                throw new a();
              }
              static isValid(e6) {
                return false;
              }
            }
            class y extends h {
              isValid(e6) {
                return false;
              }
            }
            class m extends TypeError {
              constructor(e6) {
                super(`Invalid format ${e6}, must be one of "raw", "hex", "base64"`);
              }
            }
            function v(e6, t6) {
              switch (t6) {
                case "raw":
                  return e6;
                case "hex":
                  return e6.toString("hex");
                case "base64":
                  return e6.toString("base64");
                default:
                  throw new m(t6);
              }
            }
            function g(e6, t6) {
              switch (t6) {
                case "raw":
                  return e6;
                case "hex":
                  return p.from(e6, "hex");
                case "base64":
                  return p.from(e6, "base64");
                default:
                  throw new m(t6);
              }
            }
            const b = 2147483647;
            class w extends d {
              static read(e6) {
                return e6.readInt32BE();
              }
              static write(e6, t6) {
                if ("number" != typeof e6) throw new n2("not a number");
                if ((0 | e6) !== e6) throw new n2("invalid i32 value");
                t6.writeInt32BE(e6);
              }
              static isValid(e6) {
                return "number" == typeof e6 && (0 | e6) === e6 && e6 >= -2147483648 && e6 <= b;
              }
            }
            function S(e6, t6, r6) {
              if ("bigint" != typeof e6) throw new TypeError("Expected bigint 'value', got " + typeof e6);
              const n3 = t6 / r6;
              if (1 === n3) return [e6];
              if (r6 < 32 || r6 > 128 || 2 !== n3 && 4 !== n3 && 8 !== n3) throw new TypeError(`invalid bigint (${e6}) and slice size (${t6} -> ${r6}) combination`);
              const o3 = BigInt(r6), i2 = new Array(n3);
              for (let t7 = 0; t7 < n3; t7++) i2[t7] = BigInt.asIntN(r6, e6), e6 >>= o3;
              return i2;
            }
            function E(e6, t6) {
              if (t6) return [0n, (1n << BigInt(e6)) - 1n];
              const r6 = 1n << BigInt(e6 - 1);
              return [0n - r6, r6 - 1n];
            }
            w.MAX_VALUE = b, w.MIN_VALUE = 2147483648;
            class _ extends d {
              constructor(e6) {
                super(), this._value = function(e7, t6, r6) {
                  e7 instanceof Array ? e7.length && e7[0] instanceof Array && (e7 = e7[0]) : e7 = [e7];
                  const n3 = t6 / e7.length;
                  switch (n3) {
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                      break;
                    default:
                      throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${e7}`);
                  }
                  try {
                    for (let t7 = 0; t7 < e7.length; t7++) "bigint" != typeof e7[t7] && (e7[t7] = BigInt(e7[t7].valueOf()));
                  } catch (t7) {
                    throw new TypeError(`expected bigint-like values, got: ${e7} (${t7})`);
                  }
                  if (r6 && 1 === e7.length && e7[0] < 0n) throw new RangeError(`expected a positive value, got: ${e7}`);
                  let o3 = BigInt.asUintN(n3, e7[0]);
                  for (let t7 = 1; t7 < e7.length; t7++) o3 |= BigInt.asUintN(n3, e7[t7]) << BigInt(t7 * n3);
                  r6 || (o3 = BigInt.asIntN(t6, o3));
                  const [i2, a2] = E(t6, r6);
                  if (o3 >= i2 && o3 <= a2) return o3;
                  throw new TypeError(`bigint values [${e7}] for ${function(e8, t7) {
                    return `${t7 ? "u" : "i"}${e8}`;
                  }(t6, r6)} out of range [${i2}, ${a2}]: ${o3}`);
                }(e6, this.size, this.unsigned);
              }
              get unsigned() {
                throw new a();
              }
              get size() {
                throw new a();
              }
              slice(e6) {
                return S(this._value, this.size, e6);
              }
              toString() {
                return this._value.toString();
              }
              toJSON() {
                return { _value: this._value.toString() };
              }
              toBigInt() {
                return BigInt(this._value);
              }
              static read(e6) {
                const { size: t6 } = this.prototype;
                return 64 === t6 ? new this(e6.readBigUInt64BE()) : new this(...Array.from({ length: t6 / 64 }, () => e6.readBigUInt64BE()).reverse());
              }
              static write(e6, t6) {
                if (e6 instanceof this) e6 = e6._value;
                else if ("bigint" != typeof e6 || e6 > this.MAX_VALUE || e6 < this.MIN_VALUE) throw new n2(`${e6} is not a ${this.name}`);
                const { unsigned: r6, size: o3 } = this.prototype;
                if (64 === o3) r6 ? t6.writeBigUInt64BE(e6) : t6.writeBigInt64BE(e6);
                else for (const n3 of S(e6, o3, 64).reverse()) r6 ? t6.writeBigUInt64BE(n3) : t6.writeBigInt64BE(n3);
              }
              static isValid(e6) {
                return "bigint" == typeof e6 || e6 instanceof this;
              }
              static fromString(e6) {
                return new this(e6);
              }
              static defineIntBoundaries() {
                const [e6, t6] = E(this.prototype.size, this.prototype.unsigned);
                this.MIN_VALUE = e6, this.MAX_VALUE = t6;
              }
            }
            __publicField(_, "MAX_VALUE", 0n);
            __publicField(_, "MIN_VALUE", 0n);
            class k extends _ {
              constructor(...e6) {
                super(e6);
              }
              get low() {
                return 0 | Number(0xffffffffn & this._value);
              }
              get high() {
                return 0 | Number(this._value >> 32n);
              }
              get size() {
                return 64;
              }
              get unsigned() {
                return false;
              }
              static fromBits(e6, t6) {
                return new this(e6, t6);
              }
            }
            k.defineIntBoundaries();
            const T = 4294967295;
            class O extends d {
              static read(e6) {
                return e6.readUInt32BE();
              }
              static write(e6, t6) {
                if ("number" != typeof e6 || !(e6 >= 0 && e6 <= T) || e6 % 1 != 0) throw new n2("invalid u32 value");
                t6.writeUInt32BE(e6);
              }
              static isValid(e6) {
                return "number" == typeof e6 && e6 % 1 == 0 && e6 >= 0 && e6 <= T;
              }
            }
            O.MAX_VALUE = T, O.MIN_VALUE = 0;
            class x extends _ {
              constructor(...e6) {
                super(e6);
              }
              get low() {
                return 0 | Number(0xffffffffn & this._value);
              }
              get high() {
                return 0 | Number(this._value >> 32n);
              }
              get size() {
                return 64;
              }
              get unsigned() {
                return true;
              }
              static fromBits(e6, t6) {
                return new this(e6, t6);
              }
            }
            x.defineIntBoundaries();
            class A extends d {
              static read(e6) {
                return e6.readFloatBE();
              }
              static write(e6, t6) {
                if ("number" != typeof e6) throw new n2("not a number");
                t6.writeFloatBE(e6);
              }
              static isValid(e6) {
                return "number" == typeof e6;
              }
            }
            class P extends d {
              static read(e6) {
                return e6.readDoubleBE();
              }
              static write(e6, t6) {
                if ("number" != typeof e6) throw new n2("not a number");
                t6.writeDoubleBE(e6);
              }
              static isValid(e6) {
                return "number" == typeof e6;
              }
            }
            class R extends d {
              static read() {
                throw new i("quadruple not supported");
              }
              static write() {
                throw new i("quadruple not supported");
              }
              static isValid() {
                return false;
              }
            }
            class j extends d {
              static read(e6) {
                const t6 = w.read(e6);
                switch (t6) {
                  case 0:
                    return false;
                  case 1:
                    return true;
                  default:
                    throw new o2(`got ${t6} when trying to read a bool`);
                }
              }
              static write(e6, t6) {
                const r6 = e6 ? 1 : 0;
                w.write(r6, t6);
              }
              static isValid(e6) {
                return "boolean" == typeof e6;
              }
            }
            var I = r5(616).A;
            class C extends y {
              constructor(e6 = O.MAX_VALUE) {
                super(), this._maxLength = e6;
              }
              read(e6) {
                const t6 = O.read(e6);
                if (t6 > this._maxLength) throw new o2(`saw ${t6} length String, max allowed is ${this._maxLength}`);
                return e6.read(t6);
              }
              readString(e6) {
                return this.read(e6).toString("utf8");
              }
              write(e6, t6) {
                const r6 = "string" == typeof e6 ? I.byteLength(e6, "utf8") : e6.length;
                if (r6 > this._maxLength) throw new n2(`got ${e6.length} bytes, max allowed is ${this._maxLength}`);
                O.write(r6, t6), t6.write(e6, r6);
              }
              isValid(e6) {
                return "string" == typeof e6 ? I.byteLength(e6, "utf8") <= this._maxLength : !!(e6 instanceof Array || I.isBuffer(e6)) && e6.length <= this._maxLength;
              }
            }
            var L = r5(616).A;
            class B extends y {
              constructor(e6) {
                super(), this._length = e6;
              }
              read(e6) {
                return e6.read(this._length);
              }
              write(e6, t6) {
                const { length: r6 } = e6;
                if (r6 !== this._length) throw new n2(`got ${e6.length} bytes, expected ${this._length}`);
                t6.write(e6, r6);
              }
              isValid(e6) {
                return L.isBuffer(e6) && e6.length === this._length;
              }
            }
            var N = r5(616).A;
            class U extends y {
              constructor(e6 = O.MAX_VALUE) {
                super(), this._maxLength = e6;
              }
              read(e6) {
                const t6 = O.read(e6);
                if (t6 > this._maxLength) throw new o2(`saw ${t6} length VarOpaque, max allowed is ${this._maxLength}`);
                return e6.read(t6);
              }
              write(e6, t6) {
                const { length: r6 } = e6;
                if (e6.length > this._maxLength) throw new n2(`got ${e6.length} bytes, max allowed is ${this._maxLength}`);
                O.write(r6, t6), t6.write(e6, r6);
              }
              isValid(e6) {
                return N.isBuffer(e6) && e6.length <= this._maxLength;
              }
            }
            class M extends y {
              constructor(e6, t6) {
                super(), this._childType = e6, this._length = t6;
              }
              read(e6) {
                const t6 = new r5.g.Array(this._length);
                for (let r6 = 0; r6 < this._length; r6++) t6[r6] = this._childType.read(e6);
                return t6;
              }
              write(e6, t6) {
                if (!(e6 instanceof r5.g.Array)) throw new n2("value is not array");
                if (e6.length !== this._length) throw new n2(`got array of size ${e6.length}, expected ${this._length}`);
                for (const r6 of e6) this._childType.write(r6, t6);
              }
              isValid(e6) {
                if (!(e6 instanceof r5.g.Array) || e6.length !== this._length) return false;
                for (const t6 of e6) if (!this._childType.isValid(t6)) return false;
                return true;
              }
            }
            class D extends y {
              constructor(e6, t6 = O.MAX_VALUE) {
                super(), this._childType = e6, this._maxLength = t6;
              }
              read(e6) {
                const t6 = O.read(e6);
                if (t6 > this._maxLength) throw new o2(`saw ${t6} length VarArray, max allowed is ${this._maxLength}`);
                const r6 = new Array(t6);
                for (let n3 = 0; n3 < t6; n3++) r6[n3] = this._childType.read(e6);
                return r6;
              }
              write(e6, t6) {
                if (!(e6 instanceof Array)) throw new n2("value is not array");
                if (e6.length > this._maxLength) throw new n2(`got array of size ${e6.length}, max allowed is ${this._maxLength}`);
                O.write(e6.length, t6);
                for (const r6 of e6) this._childType.write(r6, t6);
              }
              isValid(e6) {
                if (!(e6 instanceof Array) || e6.length > this._maxLength) return false;
                for (const t6 of e6) if (!this._childType.isValid(t6)) return false;
                return true;
              }
            }
            class F extends d {
              constructor(e6) {
                super(), this._childType = e6;
              }
              read(e6) {
                if (j.read(e6)) return this._childType.read(e6);
              }
              write(e6, t6) {
                const r6 = null != e6;
                j.write(r6, t6), r6 && this._childType.write(e6, t6);
              }
              isValid(e6) {
                return null == e6 || this._childType.isValid(e6);
              }
            }
            class V extends d {
              static read() {
              }
              static write(e6) {
                if (void 0 !== e6) throw new n2("trying to write value to a void slot");
              }
              static isValid(e6) {
                return void 0 === e6;
              }
            }
            class q extends d {
              constructor(e6, t6) {
                super(), this.name = e6, this.value = t6;
              }
              static read(e6) {
                const t6 = w.read(e6), r6 = this._byValue[t6];
                if (void 0 === r6) throw new o2(`unknown ${this.enumName} member for value ${t6}`);
                return r6;
              }
              static write(e6, t6) {
                if (!(e6 instanceof this)) throw new n2(`unknown ${e6} is not a ${this.enumName}`);
                w.write(e6.value, t6);
              }
              static isValid(e6) {
                return e6 instanceof this;
              }
              static members() {
                return this._members;
              }
              static values() {
                return Object.values(this._members);
              }
              static fromName(e6) {
                const t6 = this._members[e6];
                if (!t6) throw new TypeError(`${e6} is not a member of ${this.enumName}`);
                return t6;
              }
              static fromValue(e6) {
                const t6 = this._byValue[e6];
                if (void 0 === t6) throw new TypeError(`${e6} is not a value of any member of ${this.enumName}`);
                return t6;
              }
              static create(e6, t6, r6) {
                const n3 = class extends q {
                };
                n3.enumName = t6, e6.results[t6] = n3, n3._members = {}, n3._byValue = {};
                for (const [e7, t7] of Object.entries(r6)) {
                  const r7 = new n3(e7, t7);
                  n3._members[e7] = r7, n3._byValue[t7] = r7, n3[e7] = () => r7;
                }
                return n3;
              }
            }
            class K extends d {
              resolve() {
                throw new i('"resolve" method should be implemented in the descendant class');
              }
            }
            class H extends d {
              constructor(e6) {
                super(), this._attributes = e6 || {};
              }
              static read(e6) {
                const t6 = {};
                for (const [r6, n3] of this._fields) t6[r6] = n3.read(e6);
                return new this(t6);
              }
              static write(e6, t6) {
                if (!(e6 instanceof this)) throw new n2(`${e6} is not a ${this.structName}`);
                for (const [r6, n3] of this._fields) {
                  const o3 = e6._attributes[r6];
                  n3.write(o3, t6);
                }
              }
              static isValid(e6) {
                return e6 instanceof this;
              }
              static create(e6, t6, r6) {
                const n3 = class extends H {
                };
                n3.structName = t6, e6.results[t6] = n3;
                const o3 = new Array(r6.length);
                for (let t7 = 0; t7 < r6.length; t7++) {
                  const i2 = r6[t7], a2 = i2[0];
                  let s2 = i2[1];
                  s2 instanceof K && (s2 = s2.resolve(e6)), o3[t7] = [a2, s2], n3.prototype[a2] = z(a2);
                }
                return n3._fields = o3, n3;
              }
            }
            function z(e6) {
              return function(t6) {
                return void 0 !== t6 && (this._attributes[e6] = t6), this._attributes[e6];
              };
            }
            class X extends y {
              constructor(e6, t6) {
                super(), this.set(e6, t6);
              }
              set(e6, t6) {
                "string" == typeof e6 && (e6 = this.constructor._switchOn.fromName(e6)), this._switch = e6;
                const r6 = this.constructor.armForSwitch(this._switch);
                this._arm = r6, this._armType = r6 === V ? V : this.constructor._arms[r6], this._value = t6;
              }
              get(e6 = this._arm) {
                if (this._arm !== V && this._arm !== e6) throw new TypeError(`${e6} not set`);
                return this._value;
              }
              switch() {
                return this._switch;
              }
              arm() {
                return this._arm;
              }
              armType() {
                return this._armType;
              }
              value() {
                return this._value;
              }
              static armForSwitch(e6) {
                const t6 = this._switches.get(e6);
                if (void 0 !== t6) return t6;
                if (this._defaultArm) return this._defaultArm;
                throw new TypeError(`Bad union switch: ${e6}`);
              }
              static armTypeForArm(e6) {
                return e6 === V ? V : this._arms[e6];
              }
              static read(e6) {
                const t6 = this._switchOn.read(e6), r6 = this.armForSwitch(t6), n3 = r6 === V ? V : this._arms[r6];
                let o3;
                return o3 = void 0 !== n3 ? n3.read(e6) : r6.read(e6), new this(t6, o3);
              }
              static write(e6, t6) {
                if (!(e6 instanceof this)) throw new n2(`${e6} is not a ${this.unionName}`);
                this._switchOn.write(e6.switch(), t6), e6.armType().write(e6.value(), t6);
              }
              static isValid(e6) {
                return e6 instanceof this;
              }
              static create(e6, t6, r6) {
                const n3 = class extends X {
                };
                n3.unionName = t6, e6.results[t6] = n3, r6.switchOn instanceof K ? n3._switchOn = r6.switchOn.resolve(e6) : n3._switchOn = r6.switchOn, n3._switches = /* @__PURE__ */ new Map(), n3._arms = {};
                let o3 = r6.defaultArm;
                o3 instanceof K && (o3 = o3.resolve(e6)), n3._defaultArm = o3;
                for (const [e7, t7] of r6.switches) {
                  const r7 = "string" == typeof e7 ? n3._switchOn.fromName(e7) : e7;
                  n3._switches.set(r7, t7);
                }
                if (void 0 !== n3._switchOn.values) for (const e7 of n3._switchOn.values()) n3[e7.name] = function(t7) {
                  return new n3(e7, t7);
                }, n3.prototype[e7.name] = function(t7) {
                  return this.set(e7, t7);
                };
                if (r6.arms) for (const [t7, o4] of Object.entries(r6.arms)) n3._arms[t7] = o4 instanceof K ? o4.resolve(e6) : o4, o4 !== V && (n3.prototype[t7] = function() {
                  return this.get(t7);
                });
                return n3;
              }
            }
            class G extends K {
              constructor(e6) {
                super(), this.name = e6;
              }
              resolve(e6) {
                return e6.definitions[this.name].resolve(e6);
              }
            }
            class W extends K {
              constructor(e6, t6, r6 = false) {
                super(), this.childReference = e6, this.length = t6, this.variable = r6;
              }
              resolve(e6) {
                let t6 = this.childReference, r6 = this.length;
                return t6 instanceof K && (t6 = t6.resolve(e6)), r6 instanceof K && (r6 = r6.resolve(e6)), this.variable ? new D(t6, r6) : new M(t6, r6);
              }
            }
            class $ extends K {
              constructor(e6) {
                super(), this.childReference = e6, this.name = e6.name;
              }
              resolve(e6) {
                let t6 = this.childReference;
                return t6 instanceof K && (t6 = t6.resolve(e6)), new F(t6);
              }
            }
            class Q extends K {
              constructor(e6, t6) {
                super(), this.sizedType = e6, this.length = t6;
              }
              resolve(e6) {
                let t6 = this.length;
                return t6 instanceof K && (t6 = t6.resolve(e6)), new this.sizedType(t6);
              }
            }
            class Y {
              constructor(e6, t6, r6) {
                this.constructor = e6, this.name = t6, this.config = r6;
              }
              resolve(e6) {
                return this.name in e6.results ? e6.results[this.name] : this.constructor(e6, this.name, this.config);
              }
            }
            function J(e6, t6, r6) {
              return r6 instanceof K && (r6 = r6.resolve(e6)), e6.results[t6] = r6, r6;
            }
            function Z(e6, t6, r6) {
              return e6.results[t6] = r6, r6;
            }
            class ee {
              constructor(e6) {
                this._destination = e6, this._definitions = {};
              }
              enum(e6, t6) {
                const r6 = new Y(q.create, e6, t6);
                this.define(e6, r6);
              }
              struct(e6, t6) {
                const r6 = new Y(H.create, e6, t6);
                this.define(e6, r6);
              }
              union(e6, t6) {
                const r6 = new Y(X.create, e6, t6);
                this.define(e6, r6);
              }
              typedef(e6, t6) {
                const r6 = new Y(J, e6, t6);
                this.define(e6, r6);
              }
              const(e6, t6) {
                const r6 = new Y(Z, e6, t6);
                this.define(e6, r6);
              }
              void() {
                return V;
              }
              bool() {
                return j;
              }
              int() {
                return w;
              }
              hyper() {
                return k;
              }
              uint() {
                return O;
              }
              uhyper() {
                return x;
              }
              float() {
                return A;
              }
              double() {
                return P;
              }
              quadruple() {
                return R;
              }
              string(e6) {
                return new Q(C, e6);
              }
              opaque(e6) {
                return new Q(B, e6);
              }
              varOpaque(e6) {
                return new Q(U, e6);
              }
              array(e6, t6) {
                return new W(e6, t6);
              }
              varArray(e6, t6) {
                return new W(e6, t6, true);
              }
              option(e6) {
                return new $(e6);
              }
              define(e6, t6) {
                if (void 0 !== this._destination[e6]) throw new i(`${e6} is already defined`);
                this._definitions[e6] = t6;
              }
              lookup(e6) {
                return new G(e6);
              }
              resolve() {
                for (const e6 of Object.values(this._definitions)) e6.resolve({ definitions: this._definitions, results: this._destination });
              }
            }
            function te(e6, t6 = {}) {
              if (e6) {
                const r6 = new ee(t6);
                e6(r6), r6.resolve();
              }
              return t6;
            }
          }, 526: (e5, t5) => {
            "use strict";
            t5.byteLength = function(e6) {
              var t6 = s(e6), r6 = t6[0], n3 = t6[1];
              return 3 * (r6 + n3) / 4 - n3;
            }, t5.toByteArray = function(e6) {
              var t6, r6, i2 = s(e6), a2 = i2[0], u2 = i2[1], c = new o2(function(e7, t7, r7) {
                return 3 * (t7 + r7) / 4 - r7;
              }(0, a2, u2)), l2 = 0, f = u2 > 0 ? a2 - 4 : a2;
              for (r6 = 0; r6 < f; r6 += 4) t6 = n2[e6.charCodeAt(r6)] << 18 | n2[e6.charCodeAt(r6 + 1)] << 12 | n2[e6.charCodeAt(r6 + 2)] << 6 | n2[e6.charCodeAt(r6 + 3)], c[l2++] = t6 >> 16 & 255, c[l2++] = t6 >> 8 & 255, c[l2++] = 255 & t6;
              return 2 === u2 && (t6 = n2[e6.charCodeAt(r6)] << 2 | n2[e6.charCodeAt(r6 + 1)] >> 4, c[l2++] = 255 & t6), 1 === u2 && (t6 = n2[e6.charCodeAt(r6)] << 10 | n2[e6.charCodeAt(r6 + 1)] << 4 | n2[e6.charCodeAt(r6 + 2)] >> 2, c[l2++] = t6 >> 8 & 255, c[l2++] = 255 & t6), c;
            }, t5.fromByteArray = function(e6) {
              for (var t6, n3 = e6.length, o3 = n3 % 3, i2 = [], a2 = 16383, s2 = 0, c = n3 - o3; s2 < c; s2 += a2) i2.push(u(e6, s2, s2 + a2 > c ? c : s2 + a2));
              return 1 === o3 ? (t6 = e6[n3 - 1], i2.push(r5[t6 >> 2] + r5[t6 << 4 & 63] + "==")) : 2 === o3 && (t6 = (e6[n3 - 2] << 8) + e6[n3 - 1], i2.push(r5[t6 >> 10] + r5[t6 >> 4 & 63] + r5[t6 << 2 & 63] + "=")), i2.join("");
            };
            for (var r5 = [], n2 = [], o2 = "undefined" != typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0; a < 64; ++a) r5[a] = i[a], n2[i.charCodeAt(a)] = a;
            function s(e6) {
              var t6 = e6.length;
              if (t6 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
              var r6 = e6.indexOf("=");
              return -1 === r6 && (r6 = t6), [r6, r6 === t6 ? 0 : 4 - r6 % 4];
            }
            function u(e6, t6, n3) {
              for (var o3, i2, a2 = [], s2 = t6; s2 < n3; s2 += 3) o3 = (e6[s2] << 16 & 16711680) + (e6[s2 + 1] << 8 & 65280) + (255 & e6[s2 + 2]), a2.push(r5[(i2 = o3) >> 18 & 63] + r5[i2 >> 12 & 63] + r5[i2 >> 6 & 63] + r5[63 & i2]);
              return a2.join("");
            }
            n2["-".charCodeAt(0)] = 62, n2["_".charCodeAt(0)] = 63;
          }, 287: (e5, t5, r5) => {
            "use strict";
            const n2 = r5(526), o2 = r5(251), i = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
            t5.hp = u, t5.IS = 50;
            const a = 2147483647;
            function s(e6) {
              if (e6 > a) throw new RangeError('The value "' + e6 + '" is invalid for option "size"');
              const t6 = new Uint8Array(e6);
              return Object.setPrototypeOf(t6, u.prototype), t6;
            }
            function u(e6, t6, r6) {
              if ("number" == typeof e6) {
                if ("string" == typeof t6) throw new TypeError('The "string" argument must be of type string. Received type number');
                return f(e6);
              }
              return c(e6, t6, r6);
            }
            function c(e6, t6, r6) {
              if ("string" == typeof e6) return function(e7, t7) {
                if ("string" == typeof t7 && "" !== t7 || (t7 = "utf8"), !u.isEncoding(t7)) throw new TypeError("Unknown encoding: " + t7);
                const r7 = 0 | y(e7, t7);
                let n4 = s(r7);
                const o4 = n4.write(e7, t7);
                return o4 !== r7 && (n4 = n4.slice(0, o4)), n4;
              }(e6, t6);
              if (ArrayBuffer.isView(e6)) return function(e7) {
                if ($(e7, Uint8Array)) {
                  const t7 = new Uint8Array(e7);
                  return h(t7.buffer, t7.byteOffset, t7.byteLength);
                }
                return p(e7);
              }(e6);
              if (null == e6) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e6);
              if ($(e6, ArrayBuffer) || e6 && $(e6.buffer, ArrayBuffer)) return h(e6, t6, r6);
              if ("undefined" != typeof SharedArrayBuffer && ($(e6, SharedArrayBuffer) || e6 && $(e6.buffer, SharedArrayBuffer))) return h(e6, t6, r6);
              if ("number" == typeof e6) throw new TypeError('The "value" argument must not be of type number. Received type number');
              const n3 = e6.valueOf && e6.valueOf();
              if (null != n3 && n3 !== e6) return u.from(n3, t6, r6);
              const o3 = function(e7) {
                if (u.isBuffer(e7)) {
                  const t7 = 0 | d(e7.length), r7 = s(t7);
                  return 0 === r7.length || e7.copy(r7, 0, 0, t7), r7;
                }
                return void 0 !== e7.length ? "number" != typeof e7.length || Q(e7.length) ? s(0) : p(e7) : "Buffer" === e7.type && Array.isArray(e7.data) ? p(e7.data) : void 0;
              }(e6);
              if (o3) return o3;
              if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e6[Symbol.toPrimitive]) return u.from(e6[Symbol.toPrimitive]("string"), t6, r6);
              throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e6);
            }
            function l2(e6) {
              if ("number" != typeof e6) throw new TypeError('"size" argument must be of type number');
              if (e6 < 0) throw new RangeError('The value "' + e6 + '" is invalid for option "size"');
            }
            function f(e6) {
              return l2(e6), s(e6 < 0 ? 0 : 0 | d(e6));
            }
            function p(e6) {
              const t6 = e6.length < 0 ? 0 : 0 | d(e6.length), r6 = s(t6);
              for (let n3 = 0; n3 < t6; n3 += 1) r6[n3] = 255 & e6[n3];
              return r6;
            }
            function h(e6, t6, r6) {
              if (t6 < 0 || e6.byteLength < t6) throw new RangeError('"offset" is outside of buffer bounds');
              if (e6.byteLength < t6 + (r6 || 0)) throw new RangeError('"length" is outside of buffer bounds');
              let n3;
              return n3 = void 0 === t6 && void 0 === r6 ? new Uint8Array(e6) : void 0 === r6 ? new Uint8Array(e6, t6) : new Uint8Array(e6, t6, r6), Object.setPrototypeOf(n3, u.prototype), n3;
            }
            function d(e6) {
              if (e6 >= a) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a.toString(16) + " bytes");
              return 0 | e6;
            }
            function y(e6, t6) {
              if (u.isBuffer(e6)) return e6.length;
              if (ArrayBuffer.isView(e6) || $(e6, ArrayBuffer)) return e6.byteLength;
              if ("string" != typeof e6) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e6);
              const r6 = e6.length, n3 = arguments.length > 2 && true === arguments[2];
              if (!n3 && 0 === r6) return 0;
              let o3 = false;
              for (; ; ) switch (t6) {
                case "ascii":
                case "latin1":
                case "binary":
                  return r6;
                case "utf8":
                case "utf-8":
                  return X(e6).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * r6;
                case "hex":
                  return r6 >>> 1;
                case "base64":
                  return G(e6).length;
                default:
                  if (o3) return n3 ? -1 : X(e6).length;
                  t6 = ("" + t6).toLowerCase(), o3 = true;
              }
            }
            function m(e6, t6, r6) {
              let n3 = false;
              if ((void 0 === t6 || t6 < 0) && (t6 = 0), t6 > this.length) return "";
              if ((void 0 === r6 || r6 > this.length) && (r6 = this.length), r6 <= 0) return "";
              if ((r6 >>>= 0) <= (t6 >>>= 0)) return "";
              for (e6 || (e6 = "utf8"); ; ) switch (e6) {
                case "hex":
                  return R(this, t6, r6);
                case "utf8":
                case "utf-8":
                  return O(this, t6, r6);
                case "ascii":
                  return A(this, t6, r6);
                case "latin1":
                case "binary":
                  return P(this, t6, r6);
                case "base64":
                  return T(this, t6, r6);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return j(this, t6, r6);
                default:
                  if (n3) throw new TypeError("Unknown encoding: " + e6);
                  e6 = (e6 + "").toLowerCase(), n3 = true;
              }
            }
            function v(e6, t6, r6) {
              const n3 = e6[t6];
              e6[t6] = e6[r6], e6[r6] = n3;
            }
            function g(e6, t6, r6, n3, o3) {
              if (0 === e6.length) return -1;
              if ("string" == typeof r6 ? (n3 = r6, r6 = 0) : r6 > 2147483647 ? r6 = 2147483647 : r6 < -2147483648 && (r6 = -2147483648), Q(r6 = +r6) && (r6 = o3 ? 0 : e6.length - 1), r6 < 0 && (r6 = e6.length + r6), r6 >= e6.length) {
                if (o3) return -1;
                r6 = e6.length - 1;
              } else if (r6 < 0) {
                if (!o3) return -1;
                r6 = 0;
              }
              if ("string" == typeof t6 && (t6 = u.from(t6, n3)), u.isBuffer(t6)) return 0 === t6.length ? -1 : b(e6, t6, r6, n3, o3);
              if ("number" == typeof t6) return t6 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o3 ? Uint8Array.prototype.indexOf.call(e6, t6, r6) : Uint8Array.prototype.lastIndexOf.call(e6, t6, r6) : b(e6, [t6], r6, n3, o3);
              throw new TypeError("val must be string, number or Buffer");
            }
            function b(e6, t6, r6, n3, o3) {
              let i2, a2 = 1, s2 = e6.length, u2 = t6.length;
              if (void 0 !== n3 && ("ucs2" === (n3 = String(n3).toLowerCase()) || "ucs-2" === n3 || "utf16le" === n3 || "utf-16le" === n3)) {
                if (e6.length < 2 || t6.length < 2) return -1;
                a2 = 2, s2 /= 2, u2 /= 2, r6 /= 2;
              }
              function c2(e7, t7) {
                return 1 === a2 ? e7[t7] : e7.readUInt16BE(t7 * a2);
              }
              if (o3) {
                let n4 = -1;
                for (i2 = r6; i2 < s2; i2++) if (c2(e6, i2) === c2(t6, -1 === n4 ? 0 : i2 - n4)) {
                  if (-1 === n4 && (n4 = i2), i2 - n4 + 1 === u2) return n4 * a2;
                } else -1 !== n4 && (i2 -= i2 - n4), n4 = -1;
              } else for (r6 + u2 > s2 && (r6 = s2 - u2), i2 = r6; i2 >= 0; i2--) {
                let r7 = true;
                for (let n4 = 0; n4 < u2; n4++) if (c2(e6, i2 + n4) !== c2(t6, n4)) {
                  r7 = false;
                  break;
                }
                if (r7) return i2;
              }
              return -1;
            }
            function w(e6, t6, r6, n3) {
              r6 = Number(r6) || 0;
              const o3 = e6.length - r6;
              n3 ? (n3 = Number(n3)) > o3 && (n3 = o3) : n3 = o3;
              const i2 = t6.length;
              let a2;
              for (n3 > i2 / 2 && (n3 = i2 / 2), a2 = 0; a2 < n3; ++a2) {
                const n4 = parseInt(t6.substr(2 * a2, 2), 16);
                if (Q(n4)) return a2;
                e6[r6 + a2] = n4;
              }
              return a2;
            }
            function S(e6, t6, r6, n3) {
              return W(X(t6, e6.length - r6), e6, r6, n3);
            }
            function E(e6, t6, r6, n3) {
              return W(function(e7) {
                const t7 = [];
                for (let r7 = 0; r7 < e7.length; ++r7) t7.push(255 & e7.charCodeAt(r7));
                return t7;
              }(t6), e6, r6, n3);
            }
            function _(e6, t6, r6, n3) {
              return W(G(t6), e6, r6, n3);
            }
            function k(e6, t6, r6, n3) {
              return W(function(e7, t7) {
                let r7, n4, o3;
                const i2 = [];
                for (let a2 = 0; a2 < e7.length && !((t7 -= 2) < 0); ++a2) r7 = e7.charCodeAt(a2), n4 = r7 >> 8, o3 = r7 % 256, i2.push(o3), i2.push(n4);
                return i2;
              }(t6, e6.length - r6), e6, r6, n3);
            }
            function T(e6, t6, r6) {
              return 0 === t6 && r6 === e6.length ? n2.fromByteArray(e6) : n2.fromByteArray(e6.slice(t6, r6));
            }
            function O(e6, t6, r6) {
              r6 = Math.min(e6.length, r6);
              const n3 = [];
              let o3 = t6;
              for (; o3 < r6; ) {
                const t7 = e6[o3];
                let i2 = null, a2 = t7 > 239 ? 4 : t7 > 223 ? 3 : t7 > 191 ? 2 : 1;
                if (o3 + a2 <= r6) {
                  let r7, n4, s2, u2;
                  switch (a2) {
                    case 1:
                      t7 < 128 && (i2 = t7);
                      break;
                    case 2:
                      r7 = e6[o3 + 1], 128 == (192 & r7) && (u2 = (31 & t7) << 6 | 63 & r7, u2 > 127 && (i2 = u2));
                      break;
                    case 3:
                      r7 = e6[o3 + 1], n4 = e6[o3 + 2], 128 == (192 & r7) && 128 == (192 & n4) && (u2 = (15 & t7) << 12 | (63 & r7) << 6 | 63 & n4, u2 > 2047 && (u2 < 55296 || u2 > 57343) && (i2 = u2));
                      break;
                    case 4:
                      r7 = e6[o3 + 1], n4 = e6[o3 + 2], s2 = e6[o3 + 3], 128 == (192 & r7) && 128 == (192 & n4) && 128 == (192 & s2) && (u2 = (15 & t7) << 18 | (63 & r7) << 12 | (63 & n4) << 6 | 63 & s2, u2 > 65535 && u2 < 1114112 && (i2 = u2));
                  }
                }
                null === i2 ? (i2 = 65533, a2 = 1) : i2 > 65535 && (i2 -= 65536, n3.push(i2 >>> 10 & 1023 | 55296), i2 = 56320 | 1023 & i2), n3.push(i2), o3 += a2;
              }
              return function(e7) {
                const t7 = e7.length;
                if (t7 <= x) return String.fromCharCode.apply(String, e7);
                let r7 = "", n4 = 0;
                for (; n4 < t7; ) r7 += String.fromCharCode.apply(String, e7.slice(n4, n4 += x));
                return r7;
              }(n3);
            }
            u.TYPED_ARRAY_SUPPORT = function() {
              try {
                const e6 = new Uint8Array(1), t6 = { foo: function() {
                  return 42;
                } };
                return Object.setPrototypeOf(t6, Uint8Array.prototype), Object.setPrototypeOf(e6, t6), 42 === e6.foo();
              } catch (e6) {
                return false;
              }
            }(), u.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u.prototype, "parent", { enumerable: true, get: function() {
              if (u.isBuffer(this)) return this.buffer;
            } }), Object.defineProperty(u.prototype, "offset", { enumerable: true, get: function() {
              if (u.isBuffer(this)) return this.byteOffset;
            } }), u.poolSize = 8192, u.from = function(e6, t6, r6) {
              return c(e6, t6, r6);
            }, Object.setPrototypeOf(u.prototype, Uint8Array.prototype), Object.setPrototypeOf(u, Uint8Array), u.alloc = function(e6, t6, r6) {
              return function(e7, t7, r7) {
                return l2(e7), e7 <= 0 ? s(e7) : void 0 !== t7 ? "string" == typeof r7 ? s(e7).fill(t7, r7) : s(e7).fill(t7) : s(e7);
              }(e6, t6, r6);
            }, u.allocUnsafe = function(e6) {
              return f(e6);
            }, u.allocUnsafeSlow = function(e6) {
              return f(e6);
            }, u.isBuffer = function(e6) {
              return null != e6 && true === e6._isBuffer && e6 !== u.prototype;
            }, u.compare = function(e6, t6) {
              if ($(e6, Uint8Array) && (e6 = u.from(e6, e6.offset, e6.byteLength)), $(t6, Uint8Array) && (t6 = u.from(t6, t6.offset, t6.byteLength)), !u.isBuffer(e6) || !u.isBuffer(t6)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
              if (e6 === t6) return 0;
              let r6 = e6.length, n3 = t6.length;
              for (let o3 = 0, i2 = Math.min(r6, n3); o3 < i2; ++o3) if (e6[o3] !== t6[o3]) {
                r6 = e6[o3], n3 = t6[o3];
                break;
              }
              return r6 < n3 ? -1 : n3 < r6 ? 1 : 0;
            }, u.isEncoding = function(e6) {
              switch (String(e6).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return true;
                default:
                  return false;
              }
            }, u.concat = function(e6, t6) {
              if (!Array.isArray(e6)) throw new TypeError('"list" argument must be an Array of Buffers');
              if (0 === e6.length) return u.alloc(0);
              let r6;
              if (void 0 === t6) for (t6 = 0, r6 = 0; r6 < e6.length; ++r6) t6 += e6[r6].length;
              const n3 = u.allocUnsafe(t6);
              let o3 = 0;
              for (r6 = 0; r6 < e6.length; ++r6) {
                let t7 = e6[r6];
                if ($(t7, Uint8Array)) o3 + t7.length > n3.length ? (u.isBuffer(t7) || (t7 = u.from(t7)), t7.copy(n3, o3)) : Uint8Array.prototype.set.call(n3, t7, o3);
                else {
                  if (!u.isBuffer(t7)) throw new TypeError('"list" argument must be an Array of Buffers');
                  t7.copy(n3, o3);
                }
                o3 += t7.length;
              }
              return n3;
            }, u.byteLength = y, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
              const e6 = this.length;
              if (e6 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
              for (let t6 = 0; t6 < e6; t6 += 2) v(this, t6, t6 + 1);
              return this;
            }, u.prototype.swap32 = function() {
              const e6 = this.length;
              if (e6 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
              for (let t6 = 0; t6 < e6; t6 += 4) v(this, t6, t6 + 3), v(this, t6 + 1, t6 + 2);
              return this;
            }, u.prototype.swap64 = function() {
              const e6 = this.length;
              if (e6 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
              for (let t6 = 0; t6 < e6; t6 += 8) v(this, t6, t6 + 7), v(this, t6 + 1, t6 + 6), v(this, t6 + 2, t6 + 5), v(this, t6 + 3, t6 + 4);
              return this;
            }, u.prototype.toString = function() {
              const e6 = this.length;
              return 0 === e6 ? "" : 0 === arguments.length ? O(this, 0, e6) : m.apply(this, arguments);
            }, u.prototype.toLocaleString = u.prototype.toString, u.prototype.equals = function(e6) {
              if (!u.isBuffer(e6)) throw new TypeError("Argument must be a Buffer");
              return this === e6 || 0 === u.compare(this, e6);
            }, u.prototype.inspect = function() {
              let e6 = "";
              const r6 = t5.IS;
              return e6 = this.toString("hex", 0, r6).replace(/(.{2})/g, "$1 ").trim(), this.length > r6 && (e6 += " ... "), "<Buffer " + e6 + ">";
            }, i && (u.prototype[i] = u.prototype.inspect), u.prototype.compare = function(e6, t6, r6, n3, o3) {
              if ($(e6, Uint8Array) && (e6 = u.from(e6, e6.offset, e6.byteLength)), !u.isBuffer(e6)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e6);
              if (void 0 === t6 && (t6 = 0), void 0 === r6 && (r6 = e6 ? e6.length : 0), void 0 === n3 && (n3 = 0), void 0 === o3 && (o3 = this.length), t6 < 0 || r6 > e6.length || n3 < 0 || o3 > this.length) throw new RangeError("out of range index");
              if (n3 >= o3 && t6 >= r6) return 0;
              if (n3 >= o3) return -1;
              if (t6 >= r6) return 1;
              if (this === e6) return 0;
              let i2 = (o3 >>>= 0) - (n3 >>>= 0), a2 = (r6 >>>= 0) - (t6 >>>= 0);
              const s2 = Math.min(i2, a2), c2 = this.slice(n3, o3), l3 = e6.slice(t6, r6);
              for (let e7 = 0; e7 < s2; ++e7) if (c2[e7] !== l3[e7]) {
                i2 = c2[e7], a2 = l3[e7];
                break;
              }
              return i2 < a2 ? -1 : a2 < i2 ? 1 : 0;
            }, u.prototype.includes = function(e6, t6, r6) {
              return -1 !== this.indexOf(e6, t6, r6);
            }, u.prototype.indexOf = function(e6, t6, r6) {
              return g(this, e6, t6, r6, true);
            }, u.prototype.lastIndexOf = function(e6, t6, r6) {
              return g(this, e6, t6, r6, false);
            }, u.prototype.write = function(e6, t6, r6, n3) {
              if (void 0 === t6) n3 = "utf8", r6 = this.length, t6 = 0;
              else if (void 0 === r6 && "string" == typeof t6) n3 = t6, r6 = this.length, t6 = 0;
              else {
                if (!isFinite(t6)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                t6 >>>= 0, isFinite(r6) ? (r6 >>>= 0, void 0 === n3 && (n3 = "utf8")) : (n3 = r6, r6 = void 0);
              }
              const o3 = this.length - t6;
              if ((void 0 === r6 || r6 > o3) && (r6 = o3), e6.length > 0 && (r6 < 0 || t6 < 0) || t6 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
              n3 || (n3 = "utf8");
              let i2 = false;
              for (; ; ) switch (n3) {
                case "hex":
                  return w(this, e6, t6, r6);
                case "utf8":
                case "utf-8":
                  return S(this, e6, t6, r6);
                case "ascii":
                case "latin1":
                case "binary":
                  return E(this, e6, t6, r6);
                case "base64":
                  return _(this, e6, t6, r6);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return k(this, e6, t6, r6);
                default:
                  if (i2) throw new TypeError("Unknown encoding: " + n3);
                  n3 = ("" + n3).toLowerCase(), i2 = true;
              }
            }, u.prototype.toJSON = function() {
              return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
            };
            const x = 4096;
            function A(e6, t6, r6) {
              let n3 = "";
              r6 = Math.min(e6.length, r6);
              for (let o3 = t6; o3 < r6; ++o3) n3 += String.fromCharCode(127 & e6[o3]);
              return n3;
            }
            function P(e6, t6, r6) {
              let n3 = "";
              r6 = Math.min(e6.length, r6);
              for (let o3 = t6; o3 < r6; ++o3) n3 += String.fromCharCode(e6[o3]);
              return n3;
            }
            function R(e6, t6, r6) {
              const n3 = e6.length;
              (!t6 || t6 < 0) && (t6 = 0), (!r6 || r6 < 0 || r6 > n3) && (r6 = n3);
              let o3 = "";
              for (let n4 = t6; n4 < r6; ++n4) o3 += Y[e6[n4]];
              return o3;
            }
            function j(e6, t6, r6) {
              const n3 = e6.slice(t6, r6);
              let o3 = "";
              for (let e7 = 0; e7 < n3.length - 1; e7 += 2) o3 += String.fromCharCode(n3[e7] + 256 * n3[e7 + 1]);
              return o3;
            }
            function I(e6, t6, r6) {
              if (e6 % 1 != 0 || e6 < 0) throw new RangeError("offset is not uint");
              if (e6 + t6 > r6) throw new RangeError("Trying to access beyond buffer length");
            }
            function C(e6, t6, r6, n3, o3, i2) {
              if (!u.isBuffer(e6)) throw new TypeError('"buffer" argument must be a Buffer instance');
              if (t6 > o3 || t6 < i2) throw new RangeError('"value" argument is out of bounds');
              if (r6 + n3 > e6.length) throw new RangeError("Index out of range");
            }
            function L(e6, t6, r6, n3, o3) {
              q(t6, n3, o3, e6, r6, 7);
              let i2 = Number(t6 & BigInt(4294967295));
              e6[r6++] = i2, i2 >>= 8, e6[r6++] = i2, i2 >>= 8, e6[r6++] = i2, i2 >>= 8, e6[r6++] = i2;
              let a2 = Number(t6 >> BigInt(32) & BigInt(4294967295));
              return e6[r6++] = a2, a2 >>= 8, e6[r6++] = a2, a2 >>= 8, e6[r6++] = a2, a2 >>= 8, e6[r6++] = a2, r6;
            }
            function B(e6, t6, r6, n3, o3) {
              q(t6, n3, o3, e6, r6, 7);
              let i2 = Number(t6 & BigInt(4294967295));
              e6[r6 + 7] = i2, i2 >>= 8, e6[r6 + 6] = i2, i2 >>= 8, e6[r6 + 5] = i2, i2 >>= 8, e6[r6 + 4] = i2;
              let a2 = Number(t6 >> BigInt(32) & BigInt(4294967295));
              return e6[r6 + 3] = a2, a2 >>= 8, e6[r6 + 2] = a2, a2 >>= 8, e6[r6 + 1] = a2, a2 >>= 8, e6[r6] = a2, r6 + 8;
            }
            function N(e6, t6, r6, n3, o3, i2) {
              if (r6 + n3 > e6.length) throw new RangeError("Index out of range");
              if (r6 < 0) throw new RangeError("Index out of range");
            }
            function U(e6, t6, r6, n3, i2) {
              return t6 = +t6, r6 >>>= 0, i2 || N(e6, 0, r6, 4), o2.write(e6, t6, r6, n3, 23, 4), r6 + 4;
            }
            function M(e6, t6, r6, n3, i2) {
              return t6 = +t6, r6 >>>= 0, i2 || N(e6, 0, r6, 8), o2.write(e6, t6, r6, n3, 52, 8), r6 + 8;
            }
            u.prototype.slice = function(e6, t6) {
              const r6 = this.length;
              (e6 = ~~e6) < 0 ? (e6 += r6) < 0 && (e6 = 0) : e6 > r6 && (e6 = r6), (t6 = void 0 === t6 ? r6 : ~~t6) < 0 ? (t6 += r6) < 0 && (t6 = 0) : t6 > r6 && (t6 = r6), t6 < e6 && (t6 = e6);
              const n3 = this.subarray(e6, t6);
              return Object.setPrototypeOf(n3, u.prototype), n3;
            }, u.prototype.readUintLE = u.prototype.readUIntLE = function(e6, t6, r6) {
              e6 >>>= 0, t6 >>>= 0, r6 || I(e6, t6, this.length);
              let n3 = this[e6], o3 = 1, i2 = 0;
              for (; ++i2 < t6 && (o3 *= 256); ) n3 += this[e6 + i2] * o3;
              return n3;
            }, u.prototype.readUintBE = u.prototype.readUIntBE = function(e6, t6, r6) {
              e6 >>>= 0, t6 >>>= 0, r6 || I(e6, t6, this.length);
              let n3 = this[e6 + --t6], o3 = 1;
              for (; t6 > 0 && (o3 *= 256); ) n3 += this[e6 + --t6] * o3;
              return n3;
            }, u.prototype.readUint8 = u.prototype.readUInt8 = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 1, this.length), this[e6];
            }, u.prototype.readUint16LE = u.prototype.readUInt16LE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 2, this.length), this[e6] | this[e6 + 1] << 8;
            }, u.prototype.readUint16BE = u.prototype.readUInt16BE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 2, this.length), this[e6] << 8 | this[e6 + 1];
            }, u.prototype.readUint32LE = u.prototype.readUInt32LE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 4, this.length), (this[e6] | this[e6 + 1] << 8 | this[e6 + 2] << 16) + 16777216 * this[e6 + 3];
            }, u.prototype.readUint32BE = u.prototype.readUInt32BE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 4, this.length), 16777216 * this[e6] + (this[e6 + 1] << 16 | this[e6 + 2] << 8 | this[e6 + 3]);
            }, u.prototype.readBigUInt64LE = J(function(e6) {
              K(e6 >>>= 0, "offset");
              const t6 = this[e6], r6 = this[e6 + 7];
              void 0 !== t6 && void 0 !== r6 || H(e6, this.length - 8);
              const n3 = t6 + 256 * this[++e6] + 65536 * this[++e6] + this[++e6] * 2 ** 24, o3 = this[++e6] + 256 * this[++e6] + 65536 * this[++e6] + r6 * 2 ** 24;
              return BigInt(n3) + (BigInt(o3) << BigInt(32));
            }), u.prototype.readBigUInt64BE = J(function(e6) {
              K(e6 >>>= 0, "offset");
              const t6 = this[e6], r6 = this[e6 + 7];
              void 0 !== t6 && void 0 !== r6 || H(e6, this.length - 8);
              const n3 = t6 * 2 ** 24 + 65536 * this[++e6] + 256 * this[++e6] + this[++e6], o3 = this[++e6] * 2 ** 24 + 65536 * this[++e6] + 256 * this[++e6] + r6;
              return (BigInt(n3) << BigInt(32)) + BigInt(o3);
            }), u.prototype.readIntLE = function(e6, t6, r6) {
              e6 >>>= 0, t6 >>>= 0, r6 || I(e6, t6, this.length);
              let n3 = this[e6], o3 = 1, i2 = 0;
              for (; ++i2 < t6 && (o3 *= 256); ) n3 += this[e6 + i2] * o3;
              return o3 *= 128, n3 >= o3 && (n3 -= Math.pow(2, 8 * t6)), n3;
            }, u.prototype.readIntBE = function(e6, t6, r6) {
              e6 >>>= 0, t6 >>>= 0, r6 || I(e6, t6, this.length);
              let n3 = t6, o3 = 1, i2 = this[e6 + --n3];
              for (; n3 > 0 && (o3 *= 256); ) i2 += this[e6 + --n3] * o3;
              return o3 *= 128, i2 >= o3 && (i2 -= Math.pow(2, 8 * t6)), i2;
            }, u.prototype.readInt8 = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 1, this.length), 128 & this[e6] ? -1 * (255 - this[e6] + 1) : this[e6];
            }, u.prototype.readInt16LE = function(e6, t6) {
              e6 >>>= 0, t6 || I(e6, 2, this.length);
              const r6 = this[e6] | this[e6 + 1] << 8;
              return 32768 & r6 ? 4294901760 | r6 : r6;
            }, u.prototype.readInt16BE = function(e6, t6) {
              e6 >>>= 0, t6 || I(e6, 2, this.length);
              const r6 = this[e6 + 1] | this[e6] << 8;
              return 32768 & r6 ? 4294901760 | r6 : r6;
            }, u.prototype.readInt32LE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 4, this.length), this[e6] | this[e6 + 1] << 8 | this[e6 + 2] << 16 | this[e6 + 3] << 24;
            }, u.prototype.readInt32BE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 4, this.length), this[e6] << 24 | this[e6 + 1] << 16 | this[e6 + 2] << 8 | this[e6 + 3];
            }, u.prototype.readBigInt64LE = J(function(e6) {
              K(e6 >>>= 0, "offset");
              const t6 = this[e6], r6 = this[e6 + 7];
              void 0 !== t6 && void 0 !== r6 || H(e6, this.length - 8);
              const n3 = this[e6 + 4] + 256 * this[e6 + 5] + 65536 * this[e6 + 6] + (r6 << 24);
              return (BigInt(n3) << BigInt(32)) + BigInt(t6 + 256 * this[++e6] + 65536 * this[++e6] + this[++e6] * 2 ** 24);
            }), u.prototype.readBigInt64BE = J(function(e6) {
              K(e6 >>>= 0, "offset");
              const t6 = this[e6], r6 = this[e6 + 7];
              void 0 !== t6 && void 0 !== r6 || H(e6, this.length - 8);
              const n3 = (t6 << 24) + 65536 * this[++e6] + 256 * this[++e6] + this[++e6];
              return (BigInt(n3) << BigInt(32)) + BigInt(this[++e6] * 2 ** 24 + 65536 * this[++e6] + 256 * this[++e6] + r6);
            }), u.prototype.readFloatLE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 4, this.length), o2.read(this, e6, true, 23, 4);
            }, u.prototype.readFloatBE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 4, this.length), o2.read(this, e6, false, 23, 4);
            }, u.prototype.readDoubleLE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 8, this.length), o2.read(this, e6, true, 52, 8);
            }, u.prototype.readDoubleBE = function(e6, t6) {
              return e6 >>>= 0, t6 || I(e6, 8, this.length), o2.read(this, e6, false, 52, 8);
            }, u.prototype.writeUintLE = u.prototype.writeUIntLE = function(e6, t6, r6, n3) {
              e6 = +e6, t6 >>>= 0, r6 >>>= 0, n3 || C(this, e6, t6, r6, Math.pow(2, 8 * r6) - 1, 0);
              let o3 = 1, i2 = 0;
              for (this[t6] = 255 & e6; ++i2 < r6 && (o3 *= 256); ) this[t6 + i2] = e6 / o3 & 255;
              return t6 + r6;
            }, u.prototype.writeUintBE = u.prototype.writeUIntBE = function(e6, t6, r6, n3) {
              e6 = +e6, t6 >>>= 0, r6 >>>= 0, n3 || C(this, e6, t6, r6, Math.pow(2, 8 * r6) - 1, 0);
              let o3 = r6 - 1, i2 = 1;
              for (this[t6 + o3] = 255 & e6; --o3 >= 0 && (i2 *= 256); ) this[t6 + o3] = e6 / i2 & 255;
              return t6 + r6;
            }, u.prototype.writeUint8 = u.prototype.writeUInt8 = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 1, 255, 0), this[t6] = 255 & e6, t6 + 1;
            }, u.prototype.writeUint16LE = u.prototype.writeUInt16LE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 2, 65535, 0), this[t6] = 255 & e6, this[t6 + 1] = e6 >>> 8, t6 + 2;
            }, u.prototype.writeUint16BE = u.prototype.writeUInt16BE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 2, 65535, 0), this[t6] = e6 >>> 8, this[t6 + 1] = 255 & e6, t6 + 2;
            }, u.prototype.writeUint32LE = u.prototype.writeUInt32LE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 4, 4294967295, 0), this[t6 + 3] = e6 >>> 24, this[t6 + 2] = e6 >>> 16, this[t6 + 1] = e6 >>> 8, this[t6] = 255 & e6, t6 + 4;
            }, u.prototype.writeUint32BE = u.prototype.writeUInt32BE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 4, 4294967295, 0), this[t6] = e6 >>> 24, this[t6 + 1] = e6 >>> 16, this[t6 + 2] = e6 >>> 8, this[t6 + 3] = 255 & e6, t6 + 4;
            }, u.prototype.writeBigUInt64LE = J(function(e6, t6 = 0) {
              return L(this, e6, t6, BigInt(0), BigInt("0xffffffffffffffff"));
            }), u.prototype.writeBigUInt64BE = J(function(e6, t6 = 0) {
              return B(this, e6, t6, BigInt(0), BigInt("0xffffffffffffffff"));
            }), u.prototype.writeIntLE = function(e6, t6, r6, n3) {
              if (e6 = +e6, t6 >>>= 0, !n3) {
                const n4 = Math.pow(2, 8 * r6 - 1);
                C(this, e6, t6, r6, n4 - 1, -n4);
              }
              let o3 = 0, i2 = 1, a2 = 0;
              for (this[t6] = 255 & e6; ++o3 < r6 && (i2 *= 256); ) e6 < 0 && 0 === a2 && 0 !== this[t6 + o3 - 1] && (a2 = 1), this[t6 + o3] = (e6 / i2 | 0) - a2 & 255;
              return t6 + r6;
            }, u.prototype.writeIntBE = function(e6, t6, r6, n3) {
              if (e6 = +e6, t6 >>>= 0, !n3) {
                const n4 = Math.pow(2, 8 * r6 - 1);
                C(this, e6, t6, r6, n4 - 1, -n4);
              }
              let o3 = r6 - 1, i2 = 1, a2 = 0;
              for (this[t6 + o3] = 255 & e6; --o3 >= 0 && (i2 *= 256); ) e6 < 0 && 0 === a2 && 0 !== this[t6 + o3 + 1] && (a2 = 1), this[t6 + o3] = (e6 / i2 | 0) - a2 & 255;
              return t6 + r6;
            }, u.prototype.writeInt8 = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 1, 127, -128), e6 < 0 && (e6 = 255 + e6 + 1), this[t6] = 255 & e6, t6 + 1;
            }, u.prototype.writeInt16LE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 2, 32767, -32768), this[t6] = 255 & e6, this[t6 + 1] = e6 >>> 8, t6 + 2;
            }, u.prototype.writeInt16BE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 2, 32767, -32768), this[t6] = e6 >>> 8, this[t6 + 1] = 255 & e6, t6 + 2;
            }, u.prototype.writeInt32LE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 4, 2147483647, -2147483648), this[t6] = 255 & e6, this[t6 + 1] = e6 >>> 8, this[t6 + 2] = e6 >>> 16, this[t6 + 3] = e6 >>> 24, t6 + 4;
            }, u.prototype.writeInt32BE = function(e6, t6, r6) {
              return e6 = +e6, t6 >>>= 0, r6 || C(this, e6, t6, 4, 2147483647, -2147483648), e6 < 0 && (e6 = 4294967295 + e6 + 1), this[t6] = e6 >>> 24, this[t6 + 1] = e6 >>> 16, this[t6 + 2] = e6 >>> 8, this[t6 + 3] = 255 & e6, t6 + 4;
            }, u.prototype.writeBigInt64LE = J(function(e6, t6 = 0) {
              return L(this, e6, t6, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), u.prototype.writeBigInt64BE = J(function(e6, t6 = 0) {
              return B(this, e6, t6, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), u.prototype.writeFloatLE = function(e6, t6, r6) {
              return U(this, e6, t6, true, r6);
            }, u.prototype.writeFloatBE = function(e6, t6, r6) {
              return U(this, e6, t6, false, r6);
            }, u.prototype.writeDoubleLE = function(e6, t6, r6) {
              return M(this, e6, t6, true, r6);
            }, u.prototype.writeDoubleBE = function(e6, t6, r6) {
              return M(this, e6, t6, false, r6);
            }, u.prototype.copy = function(e6, t6, r6, n3) {
              if (!u.isBuffer(e6)) throw new TypeError("argument should be a Buffer");
              if (r6 || (r6 = 0), n3 || 0 === n3 || (n3 = this.length), t6 >= e6.length && (t6 = e6.length), t6 || (t6 = 0), n3 > 0 && n3 < r6 && (n3 = r6), n3 === r6) return 0;
              if (0 === e6.length || 0 === this.length) return 0;
              if (t6 < 0) throw new RangeError("targetStart out of bounds");
              if (r6 < 0 || r6 >= this.length) throw new RangeError("Index out of range");
              if (n3 < 0) throw new RangeError("sourceEnd out of bounds");
              n3 > this.length && (n3 = this.length), e6.length - t6 < n3 - r6 && (n3 = e6.length - t6 + r6);
              const o3 = n3 - r6;
              return this === e6 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t6, r6, n3) : Uint8Array.prototype.set.call(e6, this.subarray(r6, n3), t6), o3;
            }, u.prototype.fill = function(e6, t6, r6, n3) {
              if ("string" == typeof e6) {
                if ("string" == typeof t6 ? (n3 = t6, t6 = 0, r6 = this.length) : "string" == typeof r6 && (n3 = r6, r6 = this.length), void 0 !== n3 && "string" != typeof n3) throw new TypeError("encoding must be a string");
                if ("string" == typeof n3 && !u.isEncoding(n3)) throw new TypeError("Unknown encoding: " + n3);
                if (1 === e6.length) {
                  const t7 = e6.charCodeAt(0);
                  ("utf8" === n3 && t7 < 128 || "latin1" === n3) && (e6 = t7);
                }
              } else "number" == typeof e6 ? e6 &= 255 : "boolean" == typeof e6 && (e6 = Number(e6));
              if (t6 < 0 || this.length < t6 || this.length < r6) throw new RangeError("Out of range index");
              if (r6 <= t6) return this;
              let o3;
              if (t6 >>>= 0, r6 = void 0 === r6 ? this.length : r6 >>> 0, e6 || (e6 = 0), "number" == typeof e6) for (o3 = t6; o3 < r6; ++o3) this[o3] = e6;
              else {
                const i2 = u.isBuffer(e6) ? e6 : u.from(e6, n3), a2 = i2.length;
                if (0 === a2) throw new TypeError('The value "' + e6 + '" is invalid for argument "value"');
                for (o3 = 0; o3 < r6 - t6; ++o3) this[o3 + t6] = i2[o3 % a2];
              }
              return this;
            };
            const D = {};
            function F(e6, t6, r6) {
              D[e6] = class extends r6 {
                constructor() {
                  super(), Object.defineProperty(this, "message", { value: t6.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e6}]`, this.stack, delete this.name;
                }
                get code() {
                  return e6;
                }
                set code(e7) {
                  Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: e7, writable: true });
                }
                toString() {
                  return `${this.name} [${e6}]: ${this.message}`;
                }
              };
            }
            function V(e6) {
              let t6 = "", r6 = e6.length;
              const n3 = "-" === e6[0] ? 1 : 0;
              for (; r6 >= n3 + 4; r6 -= 3) t6 = `_${e6.slice(r6 - 3, r6)}${t6}`;
              return `${e6.slice(0, r6)}${t6}`;
            }
            function q(e6, t6, r6, n3, o3, i2) {
              if (e6 > r6 || e6 < t6) {
                const n4 = "bigint" == typeof t6 ? "n" : "";
                let o4;
                throw o4 = i2 > 3 ? 0 === t6 || t6 === BigInt(0) ? `>= 0${n4} and < 2${n4} ** ${8 * (i2 + 1)}${n4}` : `>= -(2${n4} ** ${8 * (i2 + 1) - 1}${n4}) and < 2 ** ${8 * (i2 + 1) - 1}${n4}` : `>= ${t6}${n4} and <= ${r6}${n4}`, new D.ERR_OUT_OF_RANGE("value", o4, e6);
              }
              !function(e7, t7, r7) {
                K(t7, "offset"), void 0 !== e7[t7] && void 0 !== e7[t7 + r7] || H(t7, e7.length - (r7 + 1));
              }(n3, o3, i2);
            }
            function K(e6, t6) {
              if ("number" != typeof e6) throw new D.ERR_INVALID_ARG_TYPE(t6, "number", e6);
            }
            function H(e6, t6, r6) {
              if (Math.floor(e6) !== e6) throw K(e6, r6), new D.ERR_OUT_OF_RANGE(r6 || "offset", "an integer", e6);
              if (t6 < 0) throw new D.ERR_BUFFER_OUT_OF_BOUNDS();
              throw new D.ERR_OUT_OF_RANGE(r6 || "offset", `>= ${r6 ? 1 : 0} and <= ${t6}`, e6);
            }
            F("ERR_BUFFER_OUT_OF_BOUNDS", function(e6) {
              return e6 ? `${e6} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
            }, RangeError), F("ERR_INVALID_ARG_TYPE", function(e6, t6) {
              return `The "${e6}" argument must be of type number. Received type ${typeof t6}`;
            }, TypeError), F("ERR_OUT_OF_RANGE", function(e6, t6, r6) {
              let n3 = `The value of "${e6}" is out of range.`, o3 = r6;
              return Number.isInteger(r6) && Math.abs(r6) > 2 ** 32 ? o3 = V(String(r6)) : "bigint" == typeof r6 && (o3 = String(r6), (r6 > BigInt(2) ** BigInt(32) || r6 < -(BigInt(2) ** BigInt(32))) && (o3 = V(o3)), o3 += "n"), n3 += ` It must be ${t6}. Received ${o3}`, n3;
            }, RangeError);
            const z = /[^+/0-9A-Za-z-_]/g;
            function X(e6, t6) {
              let r6;
              t6 = t6 || 1 / 0;
              const n3 = e6.length;
              let o3 = null;
              const i2 = [];
              for (let a2 = 0; a2 < n3; ++a2) {
                if (r6 = e6.charCodeAt(a2), r6 > 55295 && r6 < 57344) {
                  if (!o3) {
                    if (r6 > 56319) {
                      (t6 -= 3) > -1 && i2.push(239, 191, 189);
                      continue;
                    }
                    if (a2 + 1 === n3) {
                      (t6 -= 3) > -1 && i2.push(239, 191, 189);
                      continue;
                    }
                    o3 = r6;
                    continue;
                  }
                  if (r6 < 56320) {
                    (t6 -= 3) > -1 && i2.push(239, 191, 189), o3 = r6;
                    continue;
                  }
                  r6 = 65536 + (o3 - 55296 << 10 | r6 - 56320);
                } else o3 && (t6 -= 3) > -1 && i2.push(239, 191, 189);
                if (o3 = null, r6 < 128) {
                  if ((t6 -= 1) < 0) break;
                  i2.push(r6);
                } else if (r6 < 2048) {
                  if ((t6 -= 2) < 0) break;
                  i2.push(r6 >> 6 | 192, 63 & r6 | 128);
                } else if (r6 < 65536) {
                  if ((t6 -= 3) < 0) break;
                  i2.push(r6 >> 12 | 224, r6 >> 6 & 63 | 128, 63 & r6 | 128);
                } else {
                  if (!(r6 < 1114112)) throw new Error("Invalid code point");
                  if ((t6 -= 4) < 0) break;
                  i2.push(r6 >> 18 | 240, r6 >> 12 & 63 | 128, r6 >> 6 & 63 | 128, 63 & r6 | 128);
                }
              }
              return i2;
            }
            function G(e6) {
              return n2.toByteArray(function(e7) {
                if ((e7 = (e7 = e7.split("=")[0]).trim().replace(z, "")).length < 2) return "";
                for (; e7.length % 4 != 0; ) e7 += "=";
                return e7;
              }(e6));
            }
            function W(e6, t6, r6, n3) {
              let o3;
              for (o3 = 0; o3 < n3 && !(o3 + r6 >= t6.length || o3 >= e6.length); ++o3) t6[o3 + r6] = e6[o3];
              return o3;
            }
            function $(e6, t6) {
              return e6 instanceof t6 || null != e6 && null != e6.constructor && null != e6.constructor.name && e6.constructor.name === t6.name;
            }
            function Q(e6) {
              return e6 != e6;
            }
            const Y = function() {
              const e6 = "0123456789abcdef", t6 = new Array(256);
              for (let r6 = 0; r6 < 16; ++r6) {
                const n3 = 16 * r6;
                for (let o3 = 0; o3 < 16; ++o3) t6[n3 + o3] = e6[r6] + e6[o3];
              }
              return t6;
            }();
            function J(e6) {
              return "undefined" == typeof BigInt ? Z : e6;
            }
            function Z() {
              throw new Error("BigInt not supported");
            }
          }, 251: (e5, t5) => {
            t5.read = function(e6, t6, r5, n2, o2) {
              var i, a, s = 8 * o2 - n2 - 1, u = (1 << s) - 1, c = u >> 1, l2 = -7, f = r5 ? o2 - 1 : 0, p = r5 ? -1 : 1, h = e6[t6 + f];
              for (f += p, i = h & (1 << -l2) - 1, h >>= -l2, l2 += s; l2 > 0; i = 256 * i + e6[t6 + f], f += p, l2 -= 8) ;
              for (a = i & (1 << -l2) - 1, i >>= -l2, l2 += n2; l2 > 0; a = 256 * a + e6[t6 + f], f += p, l2 -= 8) ;
              if (0 === i) i = 1 - c;
              else {
                if (i === u) return a ? NaN : 1 / 0 * (h ? -1 : 1);
                a += Math.pow(2, n2), i -= c;
              }
              return (h ? -1 : 1) * a * Math.pow(2, i - n2);
            }, t5.write = function(e6, t6, r5, n2, o2, i) {
              var a, s, u, c = 8 * i - o2 - 1, l2 = (1 << c) - 1, f = l2 >> 1, p = 23 === o2 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, h = n2 ? 0 : i - 1, d = n2 ? 1 : -1, y = t6 < 0 || 0 === t6 && 1 / t6 < 0 ? 1 : 0;
              for (t6 = Math.abs(t6), isNaN(t6) || t6 === 1 / 0 ? (s = isNaN(t6) ? 1 : 0, a = l2) : (a = Math.floor(Math.log(t6) / Math.LN2), t6 * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), (t6 += a + f >= 1 ? p / u : p * Math.pow(2, 1 - f)) * u >= 2 && (a++, u /= 2), a + f >= l2 ? (s = 0, a = l2) : a + f >= 1 ? (s = (t6 * u - 1) * Math.pow(2, o2), a += f) : (s = t6 * Math.pow(2, f - 1) * Math.pow(2, o2), a = 0)); o2 >= 8; e6[r5 + h] = 255 & s, h += d, s /= 256, o2 -= 8) ;
              for (a = a << o2 | s, c += o2; c > 0; e6[r5 + h] = 255 & a, h += d, a /= 256, c -= 8) ;
              e6[r5 + h - d] |= 128 * y;
            };
          } }, t4 = {};
          function r4(n2) {
            var o2 = t4[n2];
            if (void 0 !== o2) return o2.exports;
            var i = t4[n2] = { exports: {} };
            return e4[n2](i, i.exports, r4), i.exports;
          }
          return r4.d = (e5, t5) => {
            for (var n2 in t5) r4.o(t5, n2) && !r4.o(e5, n2) && Object.defineProperty(e5, n2, { enumerable: true, get: t5[n2] });
          }, r4.g = function() {
            if ("object" == typeof globalThis) return globalThis;
            try {
              return this || new Function("return this")();
            } catch (e5) {
              if ("object" == typeof window) return window;
            }
          }(), r4.o = (e5, t5) => Object.prototype.hasOwnProperty.call(e5, t5), r4.r = (e5) => {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e5, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e5, "__esModule", { value: true });
          }, r4(281);
        })(), e3.exports = t3();
      }, 2135: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Account = void 0;
        var n2, o2 = (n2 = r4(1242)) && n2.__esModule ? n2 : { default: n2 }, i = r4(7120);
        function a(e4) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, a(e4);
        }
        function s(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, u(n3.key), n3);
          }
        }
        function u(e4) {
          var t4 = function(e5, t5) {
            if ("object" != a(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != a(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == a(t4) ? t4 : t4 + "";
        }
        t3.Account = function() {
          return function(e4, t4, r5) {
            return t4 && s(e4.prototype, t4), r5 && s(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4, r5) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), i.StrKey.isValidMed25519PublicKey(t4)) throw new Error("accountId is an M-address; use MuxedAccount instead");
            if (!i.StrKey.isValidEd25519PublicKey(t4)) throw new Error("accountId is invalid");
            if ("string" != typeof r5) throw new Error("sequence must be of type string");
            this._accountId = t4, this.sequence = new o2.default(r5);
          }, [{ key: "accountId", value: function() {
            return this._accountId;
          } }, { key: "sequenceNumber", value: function() {
            return this.sequence.toString();
          } }, { key: "incrementSequenceNumber", value: function() {
            this.sequence = this.sequence.plus(1);
          } }]);
        }();
      }, 1180: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Address = void 0;
        var n2, o2 = r4(7120), i = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
        function a(e4) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, a(e4);
        }
        function s(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, u(n3.key), n3);
          }
        }
        function u(e4) {
          var t4 = function(e5, t5) {
            if ("object" != a(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != a(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == a(t4) ? t4 : t4 + "";
        }
        t3.Address = function() {
          function e4(t4) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), o2.StrKey.isValidEd25519PublicKey(t4)) this._type = "account", this._key = o2.StrKey.decodeEd25519PublicKey(t4);
            else {
              if (!o2.StrKey.isValidContract(t4)) throw new Error("Unsupported address type");
              this._type = "contract", this._key = o2.StrKey.decodeContract(t4);
            }
          }
          return function(e5, t4, r5) {
            return t4 && s(e5.prototype, t4), r5 && s(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(e4, [{ key: "toString", value: function() {
            switch (this._type) {
              case "account":
                return o2.StrKey.encodeEd25519PublicKey(this._key);
              case "contract":
                return o2.StrKey.encodeContract(this._key);
              default:
                throw new Error("Unsupported address type");
            }
          } }, { key: "toScVal", value: function() {
            return i.default.ScVal.scvAddress(this.toScAddress());
          } }, { key: "toScAddress", value: function() {
            switch (this._type) {
              case "account":
                return i.default.ScAddress.scAddressTypeAccount(i.default.PublicKey.publicKeyTypeEd25519(this._key));
              case "contract":
                return i.default.ScAddress.scAddressTypeContract(this._key);
              default:
                throw new Error("Unsupported address type");
            }
          } }, { key: "toBuffer", value: function() {
            return this._key;
          } }], [{ key: "fromString", value: function(t4) {
            return new e4(t4);
          } }, { key: "account", value: function(t4) {
            return new e4(o2.StrKey.encodeEd25519PublicKey(t4));
          } }, { key: "contract", value: function(t4) {
            return new e4(o2.StrKey.encodeContract(t4));
          } }, { key: "fromScVal", value: function(t4) {
            return e4.fromScAddress(t4.address());
          } }, { key: "fromScAddress", value: function(t4) {
            switch (t4.switch()) {
              case i.default.ScAddressType.scAddressTypeAccount():
                return e4.account(t4.accountId().ed25519());
              case i.default.ScAddressType.scAddressTypeContract():
                return e4.contract(t4.contractId());
              default:
                throw new Error("Unsupported address type");
            }
          } }]);
        }();
      }, 1764: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Asset = void 0;
        var o2, i = r4(645), a = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, s = r4(6691), u = r4(7120), c = r4(9152);
        function l2(e4) {
          return l2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, l2(e4);
        }
        function f(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, p(n3.key), n3);
          }
        }
        function p(e4) {
          var t4 = function(e5, t5) {
            if ("object" != l2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != l2(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == l2(t4) ? t4 : t4 + "";
        }
        t3.Asset = function() {
          function e4(t4, r5) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), !/^[a-zA-Z0-9]{1,12}$/.test(t4)) throw new Error("Asset code is invalid (maximum alphanumeric, 12 characters at max)");
            if ("xlm" !== String(t4).toLowerCase() && !r5) throw new Error("Issuer cannot be null");
            if (r5 && !u.StrKey.isValidEd25519PublicKey(r5)) throw new Error("Issuer is invalid");
            "xlm" === String(t4).toLowerCase() ? this.code = "XLM" : this.code = t4, this.issuer = r5;
          }
          return function(e5, t4, r5) {
            return t4 && f(e5.prototype, t4), r5 && f(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(e4, [{ key: "toXDRObject", value: function() {
            return this._toXDRObject(a.default.Asset);
          } }, { key: "toChangeTrustXDRObject", value: function() {
            return this._toXDRObject(a.default.ChangeTrustAsset);
          } }, { key: "toTrustLineXDRObject", value: function() {
            return this._toXDRObject(a.default.TrustLineAsset);
          } }, { key: "contractId", value: function(e5) {
            var t4 = (0, c.hash)(n2.from(e5)), r5 = a.default.HashIdPreimage.envelopeTypeContractId(new a.default.HashIdPreimageContractId({ networkId: t4, contractIdPreimage: a.default.ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject()) }));
            return u.StrKey.encodeContract((0, c.hash)(r5.toXDR()));
          } }, { key: "_toXDRObject", value: function() {
            var e5, t4, r5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a.default.Asset;
            if (this.isNative()) return r5.assetTypeNative();
            this.code.length <= 4 ? (e5 = a.default.AlphaNum4, t4 = "assetTypeCreditAlphanum4") : (e5 = a.default.AlphaNum12, t4 = "assetTypeCreditAlphanum12");
            var n3 = this.code.length <= 4 ? 4 : 12;
            return new r5(t4, new e5({ assetCode: this.code.padEnd(n3, "\0"), issuer: s.Keypair.fromPublicKey(this.issuer).xdrAccountId() }));
          } }, { key: "getCode", value: function() {
            if (void 0 !== this.code) return String(this.code);
          } }, { key: "getIssuer", value: function() {
            if (void 0 !== this.issuer) return String(this.issuer);
          } }, { key: "getAssetType", value: function() {
            switch (this.getRawAssetType()) {
              case a.default.AssetType.assetTypeNative():
                return "native";
              case a.default.AssetType.assetTypeCreditAlphanum4():
                return "credit_alphanum4";
              case a.default.AssetType.assetTypeCreditAlphanum12():
                return "credit_alphanum12";
              default:
                return "unknown";
            }
          } }, { key: "getRawAssetType", value: function() {
            return this.isNative() ? a.default.AssetType.assetTypeNative() : this.code.length <= 4 ? a.default.AssetType.assetTypeCreditAlphanum4() : a.default.AssetType.assetTypeCreditAlphanum12();
          } }, { key: "isNative", value: function() {
            return !this.issuer;
          } }, { key: "equals", value: function(e5) {
            return this.code === e5.getCode() && this.issuer === e5.getIssuer();
          } }, { key: "toString", value: function() {
            return this.isNative() ? "native" : "".concat(this.getCode(), ":").concat(this.getIssuer());
          } }], [{ key: "native", value: function() {
            return new e4("XLM");
          } }, { key: "fromOperation", value: function(e5) {
            var t4, r5;
            switch (e5.switch()) {
              case a.default.AssetType.assetTypeNative():
                return this.native();
              case a.default.AssetType.assetTypeCreditAlphanum4():
                t4 = e5.alphaNum4();
              case a.default.AssetType.assetTypeCreditAlphanum12():
                return t4 = t4 || e5.alphaNum12(), r5 = u.StrKey.encodeEd25519PublicKey(t4.issuer().ed25519()), new this((0, i.trimEnd)(t4.assetCode(), "\0"), r5);
              default:
                throw new Error("Invalid asset type: ".concat(e5.switch().name));
            }
          } }, { key: "compare", value: function(t4, r5) {
            if (!(t4 && t4 instanceof e4)) throw new Error("assetA is invalid");
            if (!(r5 && r5 instanceof e4)) throw new Error("assetB is invalid");
            if (t4.equals(r5)) return 0;
            var n3 = t4.getRawAssetType().value, o3 = r5.getRawAssetType().value;
            if (n3 !== o3) return n3 < o3 ? -1 : 1;
            var i2 = h(t4.getCode(), r5.getCode());
            return 0 !== i2 ? i2 : h(t4.getIssuer(), r5.getIssuer());
          } }]);
        }();
        function h(e4, t4) {
          return n2.compare(n2.from(e4, "ascii"), n2.from(t4, "ascii"));
        }
      }, 5328: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.authorizeEntry = y, t3.authorizeInvocation = function(e4, t4, r5) {
          var n3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "", o3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : u.Networks.FUTURENET, s2 = a.Keypair.random().rawPublicKey(), c2 = new i.default.Int64((p2 = s2, p2.subarray(0, 8).reduce(function(e5, t5) {
            return e5 << 8 | t5;
          }, 0))), f2 = n3 || e4.publicKey();
          var p2;
          if (!f2) throw new Error("authorizeInvocation requires publicKey parameter");
          return y(new i.default.SorobanAuthorizationEntry({ rootInvocation: r5, credentials: i.default.SorobanCredentials.sorobanCredentialsAddress(new i.default.SorobanAddressCredentials({ address: new l2.Address(f2).toScAddress(), nonce: c2, signatureExpirationLedger: 0, signature: i.default.ScVal.scvVec([]) })) }), e4, t4, o3);
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(6691), s = r4(7120), u = r4(6202), c = r4(9152), l2 = r4(1180), f = r4(7177);
        function p(e4) {
          return p = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, p(e4);
        }
        function h() {
          h = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof b ? t5 : b, a3 = Object.create(i3.prototype), s3 = new I(n4 || []);
            return o3(a3, "_invoke", { value: A(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var d2 = "suspendedStart", y2 = "suspendedYield", m2 = "executing", v = "completed", g = {};
          function b() {
          }
          function w() {
          }
          function S() {
          }
          var E = {};
          c2(E, a2, function() {
            return this;
          });
          var _ = Object.getPrototypeOf, k = _ && _(_(C([])));
          k && k !== r5 && n3.call(k, a2) && (E = k);
          var T = S.prototype = b.prototype = Object.create(E);
          function O(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function x(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == p(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function A(t5, r6, n4) {
            var o4 = d2;
            return function(i3, a3) {
              if (o4 === m2) throw Error("Generator is already running");
              if (o4 === v) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = P(s3, n4);
                  if (u3) {
                    if (u3 === g) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === d2) throw o4 = v, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = m2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? v : y2, c3.arg === g) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = v, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function P(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, P(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), g;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, g;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, g) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, g);
          }
          function R(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function j(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function I(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(R, this), this.reset(true);
          }
          function C(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(p(t5) + " is not iterable");
          }
          return w.prototype = S, o3(T, "constructor", { value: S, configurable: true }), o3(S, "constructor", { value: w, configurable: true }), w.displayName = c2(S, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === w || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, S) : (e5.__proto__ = S, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(T), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, O(x.prototype), c2(x.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = x, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new x(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, O(T), c2(T, u2, "Generator"), c2(T, a2, function() {
            return this;
          }), c2(T, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = C, I.prototype = { constructor: I, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(j), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, g) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), g;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), j(r6), g;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  j(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: C(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), g;
          } }, t4;
        }
        function d(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function y(e4, t4, r5) {
          return m.apply(this, arguments);
        }
        function m() {
          var e4;
          return e4 = h().mark(function e5(t4, r5, o3) {
            var p2, d2, y2, m2, v, g, b, w, S, E = arguments;
            return h().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  if (p2 = E.length > 3 && void 0 !== E[3] ? E[3] : u.Networks.FUTURENET, t4.credentials().switch().value === i.default.SorobanCredentialsType.sorobanCredentialsAddress().value) {
                    e6.next = 3;
                    break;
                  }
                  return e6.abrupt("return", t4);
                case 3:
                  if (d2 = i.default.SorobanAuthorizationEntry.fromXDR(t4.toXDR()), (y2 = d2.credentials().address()).signatureExpirationLedger(o3), m2 = (0, c.hash)(n2.from(p2)), v = i.default.HashIdPreimage.envelopeTypeSorobanAuthorization(new i.default.HashIdPreimageSorobanAuthorization({ networkId: m2, nonce: y2.nonce(), invocation: d2.rootInvocation(), signatureExpirationLedger: y2.signatureExpirationLedger() })), g = (0, c.hash)(v.toXDR()), "function" != typeof r5) {
                    e6.next = 17;
                    break;
                  }
                  return e6.t0 = n2, e6.next = 13, r5(v);
                case 13:
                  e6.t1 = e6.sent, b = e6.t0.from.call(e6.t0, e6.t1), e6.next = 18;
                  break;
                case 17:
                  b = n2.from(r5.sign(g));
                case 18:
                  if (w = l2.Address.fromScAddress(y2.address()).toString(), a.Keypair.fromPublicKey(w).verify(g, b)) {
                    e6.next = 21;
                    break;
                  }
                  throw new Error("signature doesn't match payload");
                case 21:
                  return S = (0, f.nativeToScVal)({ public_key: s.StrKey.decodeEd25519PublicKey(w), signature: b }, { type: { public_key: ["symbol", null], signature: ["symbol", null] } }), y2.signature(i.default.ScVal.scvVec([S])), e6.abrupt("return", d2);
                case 24:
                case "end":
                  return e6.stop();
              }
            }, e5);
          }), m = function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                d(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                d(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          }, m.apply(this, arguments);
        }
      }, 1387: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Claimant = void 0;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6691), a = r4(7120);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, c(n3.key), n3);
          }
        }
        function c(e4) {
          var t4 = function(e5, t5) {
            if ("object" != s(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != s(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == s(t4) ? t4 : t4 + "";
        }
        t3.Claimant = function() {
          return function(e4, t4, r5) {
            return t4 && u(e4.prototype, t4), r5 && u(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4, r5) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), t4 && !a.StrKey.isValidEd25519PublicKey(t4)) throw new Error("Destination is invalid");
            if (this._destination = t4, r5) {
              if (!(r5 instanceof o2.default.ClaimPredicate)) throw new Error("Predicate should be an xdr.ClaimPredicate");
              this._predicate = r5;
            } else this._predicate = o2.default.ClaimPredicate.claimPredicateUnconditional();
          }, [{ key: "toXDRObject", value: function() {
            var e4 = new o2.default.ClaimantV0({ destination: i.Keypair.fromPublicKey(this._destination).xdrAccountId(), predicate: this._predicate });
            return o2.default.Claimant.claimantTypeV0(e4);
          } }, { key: "destination", get: function() {
            return this._destination;
          }, set: function(e4) {
            throw new Error("Claimant is immutable");
          } }, { key: "predicate", get: function() {
            return this._predicate;
          }, set: function(e4) {
            throw new Error("Claimant is immutable");
          } }], [{ key: "predicateUnconditional", value: function() {
            return o2.default.ClaimPredicate.claimPredicateUnconditional();
          } }, { key: "predicateAnd", value: function(e4, t4) {
            if (!(e4 instanceof o2.default.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
            if (!(t4 instanceof o2.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return o2.default.ClaimPredicate.claimPredicateAnd([e4, t4]);
          } }, { key: "predicateOr", value: function(e4, t4) {
            if (!(e4 instanceof o2.default.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
            if (!(t4 instanceof o2.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return o2.default.ClaimPredicate.claimPredicateOr([e4, t4]);
          } }, { key: "predicateNot", value: function(e4) {
            if (!(e4 instanceof o2.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return o2.default.ClaimPredicate.claimPredicateNot(e4);
          } }, { key: "predicateBeforeAbsoluteTime", value: function(e4) {
            return o2.default.ClaimPredicate.claimPredicateBeforeAbsoluteTime(o2.default.Int64.fromString(e4));
          } }, { key: "predicateBeforeRelativeTime", value: function(e4) {
            return o2.default.ClaimPredicate.claimPredicateBeforeRelativeTime(o2.default.Int64.fromString(e4));
          } }, { key: "fromXDR", value: function(e4) {
            var t4;
            if (e4.switch() === o2.default.ClaimantType.claimantTypeV0()) return t4 = e4.v0(), new this(a.StrKey.encodeEd25519PublicKey(t4.destination().ed25519()), t4.predicate());
            throw new Error("Invalid claimant type: ".concat(e4.switch().name));
          } }]);
        }();
      }, 7452: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Contract = void 0;
        var n2, o2 = r4(1180), i = r4(7237), a = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, s = r4(7120);
        function u(e4) {
          return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, u(e4);
        }
        function c(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, l2(n3.key), n3);
          }
        }
        function l2(e4) {
          var t4 = function(e5, t5) {
            if ("object" != u(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != u(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == u(t4) ? t4 : t4 + "";
        }
        t3.Contract = function() {
          return function(e4, t4, r5) {
            return t4 && c(e4.prototype, t4), r5 && c(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4) {
            !function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4);
            try {
              this._id = s.StrKey.decodeContract(t4);
            } catch (e5) {
              throw new Error("Invalid contract ID: ".concat(t4));
            }
          }, [{ key: "contractId", value: function() {
            return s.StrKey.encodeContract(this._id);
          } }, { key: "toString", value: function() {
            return this.contractId();
          } }, { key: "address", value: function() {
            return o2.Address.contract(this._id);
          } }, { key: "call", value: function(e4) {
            for (var t4 = arguments.length, r5 = new Array(t4 > 1 ? t4 - 1 : 0), n3 = 1; n3 < t4; n3++) r5[n3 - 1] = arguments[n3];
            return i.Operation.invokeContractFunction({ contract: this.address().toString(), function: e4, args: r5 });
          } }, { key: "getFootprint", value: function() {
            return a.default.LedgerKey.contractData(new a.default.LedgerKeyContractData({ contract: this.address().toScAddress(), key: a.default.ScVal.scvLedgerKeyContractInstance(), durability: a.default.ContractDataDurability.persistent() }));
          } }]);
        }();
      }, 3919: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.humanizeEvents = function(e4) {
          return e4.map(function(e5) {
            return e5 instanceof o2.default.DiagnosticEvent ? f(e5.event()) : f(e5);
          });
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(7120), a = r4(7177);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function c(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? u(Object(r5), true).forEach(function(t5) {
              l2(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : u(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function l2(e4, t4, r5) {
          return (t4 = function(e5) {
            var t5 = function(e6, t6) {
              if ("object" != s(e6) || !e6) return e6;
              var r6 = e6[Symbol.toPrimitive];
              if (void 0 !== r6) {
                var n3 = r6.call(e6, t6 || "default");
                if ("object" != s(n3)) return n3;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return ("string" === t6 ? String : Number)(e6);
            }(e5, "string");
            return "symbol" == s(t5) ? t5 : t5 + "";
          }(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function f(e4) {
          return c(c({}, null != e4.contractId() && { contractId: i.StrKey.encodeContract(e4.contractId()) }), {}, { type: e4.type().name, topics: e4.body().value().topics().map(function(e5) {
            return (0, a.scValToNative)(e5);
          }), data: (0, a.scValToNative)(e4.body().value().data()) });
        }
      }, 9260: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        function o2(e4) {
          return o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, o2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.FeeBumpTransaction = void 0;
        var i, a = (i = r4(1918)) && i.__esModule ? i : { default: i }, s = r4(9152), u = r4(380), c = r4(3758), l2 = r4(6160);
        function f(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, p(n3.key), n3);
          }
        }
        function p(e4) {
          var t4 = function(e5, t5) {
            if ("object" != o2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != o2(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == o2(t4) ? t4 : t4 + "";
        }
        function h(e4, t4, r5) {
          return t4 = y(t4), function(e5, t5) {
            if (t5 && ("object" == o2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, d() ? Reflect.construct(t4, r5 || [], y(e4).constructor) : t4.apply(e4, r5));
        }
        function d() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (d = function() {
            return !!e4;
          })();
        }
        function y(e4) {
          return y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, y(e4);
        }
        function m(e4, t4) {
          return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, m(e4, t4);
        }
        t3.FeeBumpTransaction = function(e4) {
          function t4(e5, r5) {
            var o3;
            if (function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), "string" == typeof e5) {
              var i2 = n2.from(e5, "base64");
              e5 = a.default.TransactionEnvelope.fromXDR(i2);
            }
            var s2 = e5.switch();
            if (s2 !== a.default.EnvelopeType.envelopeTypeTxFeeBump()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ".concat(s2.name, "."));
            var c2 = e5.value(), f2 = c2.tx(), p2 = f2.fee().toString();
            o3 = h(this, t4, [f2, (c2.signatures() || []).slice(), p2, r5]);
            var d2 = a.default.TransactionEnvelope.envelopeTypeTx(f2.innerTx().v1());
            return o3._feeSource = (0, l2.encodeMuxedAccountToAddress)(o3.tx.feeSource()), o3._innerTransaction = new u.Transaction(d2, r5), o3;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && m(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && f(e5.prototype, t5), r5 && f(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "innerTransaction", get: function() {
            return this._innerTransaction;
          } }, { key: "operations", get: function() {
            return this._innerTransaction.operations;
          } }, { key: "feeSource", get: function() {
            return this._feeSource;
          } }, { key: "signatureBase", value: function() {
            var e5 = new a.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);
            return new a.default.TransactionSignaturePayload({ networkId: a.default.Hash.fromXDR((0, s.hash)(this.networkPassphrase)), taggedTransaction: e5 }).toXDR();
          } }, { key: "toEnvelope", value: function() {
            var e5 = new a.default.FeeBumpTransactionEnvelope({ tx: a.default.FeeBumpTransaction.fromXDR(this.tx.toXDR()), signatures: this.signatures.slice() });
            return new a.default.TransactionEnvelope.envelopeTypeTxFeeBump(e5);
          } }]);
        }(c.TransactionBase);
      }, 7938: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        function o2(e4) {
          if ("function" != typeof WeakMap) return null;
          var t4 = /* @__PURE__ */ new WeakMap(), r5 = /* @__PURE__ */ new WeakMap();
          return (o2 = function(e5) {
            return e5 ? r5 : t4;
          })(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = void 0;
        var i = function(e4, t4) {
          if (!t4 && e4 && e4.__esModule) return e4;
          if (null === e4 || "object" != n2(e4) && "function" != typeof e4) return { default: e4 };
          var r5 = o2(t4);
          if (r5 && r5.has(e4)) return r5.get(e4);
          var i2 = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var s in e4) if ("default" !== s && {}.hasOwnProperty.call(e4, s)) {
            var u = a ? Object.getOwnPropertyDescriptor(e4, s) : null;
            u && (u.get || u.set) ? Object.defineProperty(i2, s, u) : i2[s] = e4[s];
          }
          return i2.default = e4, r5 && r5.set(e4, i2), i2;
        }(r4(3740)).config(function(e4) {
          var t4 = 1024;
          e4.typedef("Value", e4.varOpaque()), e4.struct("ScpBallot", [["counter", e4.lookup("Uint32")], ["value", e4.lookup("Value")]]), e4.enum("ScpStatementType", { scpStPrepare: 0, scpStConfirm: 1, scpStExternalize: 2, scpStNominate: 3 }), e4.struct("ScpNomination", [["quorumSetHash", e4.lookup("Hash")], ["votes", e4.varArray(e4.lookup("Value"), 2147483647)], ["accepted", e4.varArray(e4.lookup("Value"), 2147483647)]]), e4.struct("ScpStatementPrepare", [["quorumSetHash", e4.lookup("Hash")], ["ballot", e4.lookup("ScpBallot")], ["prepared", e4.option(e4.lookup("ScpBallot"))], ["preparedPrime", e4.option(e4.lookup("ScpBallot"))], ["nC", e4.lookup("Uint32")], ["nH", e4.lookup("Uint32")]]), e4.struct("ScpStatementConfirm", [["ballot", e4.lookup("ScpBallot")], ["nPrepared", e4.lookup("Uint32")], ["nCommit", e4.lookup("Uint32")], ["nH", e4.lookup("Uint32")], ["quorumSetHash", e4.lookup("Hash")]]), e4.struct("ScpStatementExternalize", [["commit", e4.lookup("ScpBallot")], ["nH", e4.lookup("Uint32")], ["commitQuorumSetHash", e4.lookup("Hash")]]), e4.union("ScpStatementPledges", { switchOn: e4.lookup("ScpStatementType"), switchName: "type", switches: [["scpStPrepare", "prepare"], ["scpStConfirm", "confirm"], ["scpStExternalize", "externalize"], ["scpStNominate", "nominate"]], arms: { prepare: e4.lookup("ScpStatementPrepare"), confirm: e4.lookup("ScpStatementConfirm"), externalize: e4.lookup("ScpStatementExternalize"), nominate: e4.lookup("ScpNomination") } }), e4.struct("ScpStatement", [["nodeId", e4.lookup("NodeId")], ["slotIndex", e4.lookup("Uint64")], ["pledges", e4.lookup("ScpStatementPledges")]]), e4.struct("ScpEnvelope", [["statement", e4.lookup("ScpStatement")], ["signature", e4.lookup("Signature")]]), e4.struct("ScpQuorumSet", [["threshold", e4.lookup("Uint32")], ["validators", e4.varArray(e4.lookup("NodeId"), 2147483647)], ["innerSets", e4.varArray(e4.lookup("ScpQuorumSet"), 2147483647)]]), e4.typedef("Thresholds", e4.opaque(4)), e4.typedef("String32", e4.string(32)), e4.typedef("String64", e4.string(64)), e4.typedef("SequenceNumber", e4.lookup("Int64")), e4.typedef("DataValue", e4.varOpaque(64)), e4.typedef("PoolId", e4.lookup("Hash")), e4.typedef("AssetCode4", e4.opaque(4)), e4.typedef("AssetCode12", e4.opaque(12)), e4.enum("AssetType", { assetTypeNative: 0, assetTypeCreditAlphanum4: 1, assetTypeCreditAlphanum12: 2, assetTypePoolShare: 3 }), e4.union("AssetCode", { switchOn: e4.lookup("AssetType"), switchName: "type", switches: [["assetTypeCreditAlphanum4", "assetCode4"], ["assetTypeCreditAlphanum12", "assetCode12"]], arms: { assetCode4: e4.lookup("AssetCode4"), assetCode12: e4.lookup("AssetCode12") } }), e4.struct("AlphaNum4", [["assetCode", e4.lookup("AssetCode4")], ["issuer", e4.lookup("AccountId")]]), e4.struct("AlphaNum12", [["assetCode", e4.lookup("AssetCode12")], ["issuer", e4.lookup("AccountId")]]), e4.union("Asset", { switchOn: e4.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", e4.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"]], arms: { alphaNum4: e4.lookup("AlphaNum4"), alphaNum12: e4.lookup("AlphaNum12") } }), e4.struct("Price", [["n", e4.lookup("Int32")], ["d", e4.lookup("Int32")]]), e4.struct("Liabilities", [["buying", e4.lookup("Int64")], ["selling", e4.lookup("Int64")]]), e4.enum("ThresholdIndices", { thresholdMasterWeight: 0, thresholdLow: 1, thresholdMed: 2, thresholdHigh: 3 }), e4.enum("LedgerEntryType", { account: 0, trustline: 1, offer: 2, data: 3, claimableBalance: 4, liquidityPool: 5, contractData: 6, contractCode: 7, configSetting: 8, ttl: 9 }), e4.struct("Signer", [["key", e4.lookup("SignerKey")], ["weight", e4.lookup("Uint32")]]), e4.enum("AccountFlags", { authRequiredFlag: 1, authRevocableFlag: 2, authImmutableFlag: 4, authClawbackEnabledFlag: 8 }), e4.const("MASK_ACCOUNT_FLAGS", 7), e4.const("MASK_ACCOUNT_FLAGS_V17", 15), e4.const("MAX_SIGNERS", 20), e4.typedef("SponsorshipDescriptor", e4.option(e4.lookup("AccountId"))), e4.struct("AccountEntryExtensionV3", [["ext", e4.lookup("ExtensionPoint")], ["seqLedger", e4.lookup("Uint32")], ["seqTime", e4.lookup("TimePoint")]]), e4.union("AccountEntryExtensionV2Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [3, "v3"]], arms: { v3: e4.lookup("AccountEntryExtensionV3") } }), e4.struct("AccountEntryExtensionV2", [["numSponsored", e4.lookup("Uint32")], ["numSponsoring", e4.lookup("Uint32")], ["signerSponsoringIDs", e4.varArray(e4.lookup("SponsorshipDescriptor"), e4.lookup("MAX_SIGNERS"))], ["ext", e4.lookup("AccountEntryExtensionV2Ext")]]), e4.union("AccountEntryExtensionV1Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [2, "v2"]], arms: { v2: e4.lookup("AccountEntryExtensionV2") } }), e4.struct("AccountEntryExtensionV1", [["liabilities", e4.lookup("Liabilities")], ["ext", e4.lookup("AccountEntryExtensionV1Ext")]]), e4.union("AccountEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("AccountEntryExtensionV1") } }), e4.struct("AccountEntry", [["accountId", e4.lookup("AccountId")], ["balance", e4.lookup("Int64")], ["seqNum", e4.lookup("SequenceNumber")], ["numSubEntries", e4.lookup("Uint32")], ["inflationDest", e4.option(e4.lookup("AccountId"))], ["flags", e4.lookup("Uint32")], ["homeDomain", e4.lookup("String32")], ["thresholds", e4.lookup("Thresholds")], ["signers", e4.varArray(e4.lookup("Signer"), e4.lookup("MAX_SIGNERS"))], ["ext", e4.lookup("AccountEntryExt")]]), e4.enum("TrustLineFlags", { authorizedFlag: 1, authorizedToMaintainLiabilitiesFlag: 2, trustlineClawbackEnabledFlag: 4 }), e4.const("MASK_TRUSTLINE_FLAGS", 1), e4.const("MASK_TRUSTLINE_FLAGS_V13", 3), e4.const("MASK_TRUSTLINE_FLAGS_V17", 7), e4.enum("LiquidityPoolType", { liquidityPoolConstantProduct: 0 }), e4.union("TrustLineAsset", { switchOn: e4.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", e4.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPoolId"]], arms: { alphaNum4: e4.lookup("AlphaNum4"), alphaNum12: e4.lookup("AlphaNum12"), liquidityPoolId: e4.lookup("PoolId") } }), e4.union("TrustLineEntryExtensionV2Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("TrustLineEntryExtensionV2", [["liquidityPoolUseCount", e4.lookup("Int32")], ["ext", e4.lookup("TrustLineEntryExtensionV2Ext")]]), e4.union("TrustLineEntryV1Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [2, "v2"]], arms: { v2: e4.lookup("TrustLineEntryExtensionV2") } }), e4.struct("TrustLineEntryV1", [["liabilities", e4.lookup("Liabilities")], ["ext", e4.lookup("TrustLineEntryV1Ext")]]), e4.union("TrustLineEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("TrustLineEntryV1") } }), e4.struct("TrustLineEntry", [["accountId", e4.lookup("AccountId")], ["asset", e4.lookup("TrustLineAsset")], ["balance", e4.lookup("Int64")], ["limit", e4.lookup("Int64")], ["flags", e4.lookup("Uint32")], ["ext", e4.lookup("TrustLineEntryExt")]]), e4.enum("OfferEntryFlags", { passiveFlag: 1 }), e4.const("MASK_OFFERENTRY_FLAGS", 1), e4.union("OfferEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("OfferEntry", [["sellerId", e4.lookup("AccountId")], ["offerId", e4.lookup("Int64")], ["selling", e4.lookup("Asset")], ["buying", e4.lookup("Asset")], ["amount", e4.lookup("Int64")], ["price", e4.lookup("Price")], ["flags", e4.lookup("Uint32")], ["ext", e4.lookup("OfferEntryExt")]]), e4.union("DataEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("DataEntry", [["accountId", e4.lookup("AccountId")], ["dataName", e4.lookup("String64")], ["dataValue", e4.lookup("DataValue")], ["ext", e4.lookup("DataEntryExt")]]), e4.enum("ClaimPredicateType", { claimPredicateUnconditional: 0, claimPredicateAnd: 1, claimPredicateOr: 2, claimPredicateNot: 3, claimPredicateBeforeAbsoluteTime: 4, claimPredicateBeforeRelativeTime: 5 }), e4.union("ClaimPredicate", { switchOn: e4.lookup("ClaimPredicateType"), switchName: "type", switches: [["claimPredicateUnconditional", e4.void()], ["claimPredicateAnd", "andPredicates"], ["claimPredicateOr", "orPredicates"], ["claimPredicateNot", "notPredicate"], ["claimPredicateBeforeAbsoluteTime", "absBefore"], ["claimPredicateBeforeRelativeTime", "relBefore"]], arms: { andPredicates: e4.varArray(e4.lookup("ClaimPredicate"), 2), orPredicates: e4.varArray(e4.lookup("ClaimPredicate"), 2), notPredicate: e4.option(e4.lookup("ClaimPredicate")), absBefore: e4.lookup("Int64"), relBefore: e4.lookup("Int64") } }), e4.enum("ClaimantType", { claimantTypeV0: 0 }), e4.struct("ClaimantV0", [["destination", e4.lookup("AccountId")], ["predicate", e4.lookup("ClaimPredicate")]]), e4.union("Claimant", { switchOn: e4.lookup("ClaimantType"), switchName: "type", switches: [["claimantTypeV0", "v0"]], arms: { v0: e4.lookup("ClaimantV0") } }), e4.enum("ClaimableBalanceIdType", { claimableBalanceIdTypeV0: 0 }), e4.union("ClaimableBalanceId", { switchOn: e4.lookup("ClaimableBalanceIdType"), switchName: "type", switches: [["claimableBalanceIdTypeV0", "v0"]], arms: { v0: e4.lookup("Hash") } }), e4.enum("ClaimableBalanceFlags", { claimableBalanceClawbackEnabledFlag: 1 }), e4.const("MASK_CLAIMABLE_BALANCE_FLAGS", 1), e4.union("ClaimableBalanceEntryExtensionV1Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("ClaimableBalanceEntryExtensionV1", [["ext", e4.lookup("ClaimableBalanceEntryExtensionV1Ext")], ["flags", e4.lookup("Uint32")]]), e4.union("ClaimableBalanceEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("ClaimableBalanceEntryExtensionV1") } }), e4.struct("ClaimableBalanceEntry", [["balanceId", e4.lookup("ClaimableBalanceId")], ["claimants", e4.varArray(e4.lookup("Claimant"), 10)], ["asset", e4.lookup("Asset")], ["amount", e4.lookup("Int64")], ["ext", e4.lookup("ClaimableBalanceEntryExt")]]), e4.struct("LiquidityPoolConstantProductParameters", [["assetA", e4.lookup("Asset")], ["assetB", e4.lookup("Asset")], ["fee", e4.lookup("Int32")]]), e4.struct("LiquidityPoolEntryConstantProduct", [["params", e4.lookup("LiquidityPoolConstantProductParameters")], ["reserveA", e4.lookup("Int64")], ["reserveB", e4.lookup("Int64")], ["totalPoolShares", e4.lookup("Int64")], ["poolSharesTrustLineCount", e4.lookup("Int64")]]), e4.union("LiquidityPoolEntryBody", { switchOn: e4.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: e4.lookup("LiquidityPoolEntryConstantProduct") } }), e4.struct("LiquidityPoolEntry", [["liquidityPoolId", e4.lookup("PoolId")], ["body", e4.lookup("LiquidityPoolEntryBody")]]), e4.enum("ContractDataDurability", { temporary: 0, persistent: 1 }), e4.struct("ContractDataEntry", [["ext", e4.lookup("ExtensionPoint")], ["contract", e4.lookup("ScAddress")], ["key", e4.lookup("ScVal")], ["durability", e4.lookup("ContractDataDurability")], ["val", e4.lookup("ScVal")]]), e4.struct("ContractCodeCostInputs", [["ext", e4.lookup("ExtensionPoint")], ["nInstructions", e4.lookup("Uint32")], ["nFunctions", e4.lookup("Uint32")], ["nGlobals", e4.lookup("Uint32")], ["nTableEntries", e4.lookup("Uint32")], ["nTypes", e4.lookup("Uint32")], ["nDataSegments", e4.lookup("Uint32")], ["nElemSegments", e4.lookup("Uint32")], ["nImports", e4.lookup("Uint32")], ["nExports", e4.lookup("Uint32")], ["nDataSegmentBytes", e4.lookup("Uint32")]]), e4.struct("ContractCodeEntryV1", [["ext", e4.lookup("ExtensionPoint")], ["costInputs", e4.lookup("ContractCodeCostInputs")]]), e4.union("ContractCodeEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("ContractCodeEntryV1") } }), e4.struct("ContractCodeEntry", [["ext", e4.lookup("ContractCodeEntryExt")], ["hash", e4.lookup("Hash")], ["code", e4.varOpaque()]]), e4.struct("TtlEntry", [["keyHash", e4.lookup("Hash")], ["liveUntilLedgerSeq", e4.lookup("Uint32")]]), e4.union("LedgerEntryExtensionV1Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("LedgerEntryExtensionV1", [["sponsoringId", e4.lookup("SponsorshipDescriptor")], ["ext", e4.lookup("LedgerEntryExtensionV1Ext")]]), e4.union("LedgerEntryData", { switchOn: e4.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: e4.lookup("AccountEntry"), trustLine: e4.lookup("TrustLineEntry"), offer: e4.lookup("OfferEntry"), data: e4.lookup("DataEntry"), claimableBalance: e4.lookup("ClaimableBalanceEntry"), liquidityPool: e4.lookup("LiquidityPoolEntry"), contractData: e4.lookup("ContractDataEntry"), contractCode: e4.lookup("ContractCodeEntry"), configSetting: e4.lookup("ConfigSettingEntry"), ttl: e4.lookup("TtlEntry") } }), e4.union("LedgerEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("LedgerEntryExtensionV1") } }), e4.struct("LedgerEntry", [["lastModifiedLedgerSeq", e4.lookup("Uint32")], ["data", e4.lookup("LedgerEntryData")], ["ext", e4.lookup("LedgerEntryExt")]]), e4.struct("LedgerKeyAccount", [["accountId", e4.lookup("AccountId")]]), e4.struct("LedgerKeyTrustLine", [["accountId", e4.lookup("AccountId")], ["asset", e4.lookup("TrustLineAsset")]]), e4.struct("LedgerKeyOffer", [["sellerId", e4.lookup("AccountId")], ["offerId", e4.lookup("Int64")]]), e4.struct("LedgerKeyData", [["accountId", e4.lookup("AccountId")], ["dataName", e4.lookup("String64")]]), e4.struct("LedgerKeyClaimableBalance", [["balanceId", e4.lookup("ClaimableBalanceId")]]), e4.struct("LedgerKeyLiquidityPool", [["liquidityPoolId", e4.lookup("PoolId")]]), e4.struct("LedgerKeyContractData", [["contract", e4.lookup("ScAddress")], ["key", e4.lookup("ScVal")], ["durability", e4.lookup("ContractDataDurability")]]), e4.struct("LedgerKeyContractCode", [["hash", e4.lookup("Hash")]]), e4.struct("LedgerKeyConfigSetting", [["configSettingId", e4.lookup("ConfigSettingId")]]), e4.struct("LedgerKeyTtl", [["keyHash", e4.lookup("Hash")]]), e4.union("LedgerKey", { switchOn: e4.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: e4.lookup("LedgerKeyAccount"), trustLine: e4.lookup("LedgerKeyTrustLine"), offer: e4.lookup("LedgerKeyOffer"), data: e4.lookup("LedgerKeyData"), claimableBalance: e4.lookup("LedgerKeyClaimableBalance"), liquidityPool: e4.lookup("LedgerKeyLiquidityPool"), contractData: e4.lookup("LedgerKeyContractData"), contractCode: e4.lookup("LedgerKeyContractCode"), configSetting: e4.lookup("LedgerKeyConfigSetting"), ttl: e4.lookup("LedgerKeyTtl") } }), e4.enum("EnvelopeType", { envelopeTypeTxV0: 0, envelopeTypeScp: 1, envelopeTypeTx: 2, envelopeTypeAuth: 3, envelopeTypeScpvalue: 4, envelopeTypeTxFeeBump: 5, envelopeTypeOpId: 6, envelopeTypePoolRevokeOpId: 7, envelopeTypeContractId: 8, envelopeTypeSorobanAuthorization: 9 }), e4.typedef("UpgradeType", e4.varOpaque(128)), e4.enum("StellarValueType", { stellarValueBasic: 0, stellarValueSigned: 1 }), e4.struct("LedgerCloseValueSignature", [["nodeId", e4.lookup("NodeId")], ["signature", e4.lookup("Signature")]]), e4.union("StellarValueExt", { switchOn: e4.lookup("StellarValueType"), switchName: "v", switches: [["stellarValueBasic", e4.void()], ["stellarValueSigned", "lcValueSignature"]], arms: { lcValueSignature: e4.lookup("LedgerCloseValueSignature") } }), e4.struct("StellarValue", [["txSetHash", e4.lookup("Hash")], ["closeTime", e4.lookup("TimePoint")], ["upgrades", e4.varArray(e4.lookup("UpgradeType"), 6)], ["ext", e4.lookup("StellarValueExt")]]), e4.const("MASK_LEDGER_HEADER_FLAGS", 7), e4.enum("LedgerHeaderFlags", { disableLiquidityPoolTradingFlag: 1, disableLiquidityPoolDepositFlag: 2, disableLiquidityPoolWithdrawalFlag: 4 }), e4.union("LedgerHeaderExtensionV1Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("LedgerHeaderExtensionV1", [["flags", e4.lookup("Uint32")], ["ext", e4.lookup("LedgerHeaderExtensionV1Ext")]]), e4.union("LedgerHeaderExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("LedgerHeaderExtensionV1") } }), e4.struct("LedgerHeader", [["ledgerVersion", e4.lookup("Uint32")], ["previousLedgerHash", e4.lookup("Hash")], ["scpValue", e4.lookup("StellarValue")], ["txSetResultHash", e4.lookup("Hash")], ["bucketListHash", e4.lookup("Hash")], ["ledgerSeq", e4.lookup("Uint32")], ["totalCoins", e4.lookup("Int64")], ["feePool", e4.lookup("Int64")], ["inflationSeq", e4.lookup("Uint32")], ["idPool", e4.lookup("Uint64")], ["baseFee", e4.lookup("Uint32")], ["baseReserve", e4.lookup("Uint32")], ["maxTxSetSize", e4.lookup("Uint32")], ["skipList", e4.array(e4.lookup("Hash"), 4)], ["ext", e4.lookup("LedgerHeaderExt")]]), e4.enum("LedgerUpgradeType", { ledgerUpgradeVersion: 1, ledgerUpgradeBaseFee: 2, ledgerUpgradeMaxTxSetSize: 3, ledgerUpgradeBaseReserve: 4, ledgerUpgradeFlags: 5, ledgerUpgradeConfig: 6, ledgerUpgradeMaxSorobanTxSetSize: 7 }), e4.struct("ConfigUpgradeSetKey", [["contractId", e4.lookup("Hash")], ["contentHash", e4.lookup("Hash")]]), e4.union("LedgerUpgrade", { switchOn: e4.lookup("LedgerUpgradeType"), switchName: "type", switches: [["ledgerUpgradeVersion", "newLedgerVersion"], ["ledgerUpgradeBaseFee", "newBaseFee"], ["ledgerUpgradeMaxTxSetSize", "newMaxTxSetSize"], ["ledgerUpgradeBaseReserve", "newBaseReserve"], ["ledgerUpgradeFlags", "newFlags"], ["ledgerUpgradeConfig", "newConfig"], ["ledgerUpgradeMaxSorobanTxSetSize", "newMaxSorobanTxSetSize"]], arms: { newLedgerVersion: e4.lookup("Uint32"), newBaseFee: e4.lookup("Uint32"), newMaxTxSetSize: e4.lookup("Uint32"), newBaseReserve: e4.lookup("Uint32"), newFlags: e4.lookup("Uint32"), newConfig: e4.lookup("ConfigUpgradeSetKey"), newMaxSorobanTxSetSize: e4.lookup("Uint32") } }), e4.struct("ConfigUpgradeSet", [["updatedEntry", e4.varArray(e4.lookup("ConfigSettingEntry"), 2147483647)]]), e4.enum("BucketEntryType", { metaentry: -1, liveentry: 0, deadentry: 1, initentry: 2 }), e4.union("BucketMetadataExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("BucketMetadata", [["ledgerVersion", e4.lookup("Uint32")], ["ext", e4.lookup("BucketMetadataExt")]]), e4.union("BucketEntry", { switchOn: e4.lookup("BucketEntryType"), switchName: "type", switches: [["liveentry", "liveEntry"], ["initentry", "liveEntry"], ["deadentry", "deadEntry"], ["metaentry", "metaEntry"]], arms: { liveEntry: e4.lookup("LedgerEntry"), deadEntry: e4.lookup("LedgerKey"), metaEntry: e4.lookup("BucketMetadata") } }), e4.enum("TxSetComponentType", { txsetCompTxsMaybeDiscountedFee: 0 }), e4.struct("TxSetComponentTxsMaybeDiscountedFee", [["baseFee", e4.option(e4.lookup("Int64"))], ["txes", e4.varArray(e4.lookup("TransactionEnvelope"), 2147483647)]]), e4.union("TxSetComponent", { switchOn: e4.lookup("TxSetComponentType"), switchName: "type", switches: [["txsetCompTxsMaybeDiscountedFee", "txsMaybeDiscountedFee"]], arms: { txsMaybeDiscountedFee: e4.lookup("TxSetComponentTxsMaybeDiscountedFee") } }), e4.union("TransactionPhase", { switchOn: e4.int(), switchName: "v", switches: [[0, "v0Components"]], arms: { v0Components: e4.varArray(e4.lookup("TxSetComponent"), 2147483647) } }), e4.struct("TransactionSet", [["previousLedgerHash", e4.lookup("Hash")], ["txes", e4.varArray(e4.lookup("TransactionEnvelope"), 2147483647)]]), e4.struct("TransactionSetV1", [["previousLedgerHash", e4.lookup("Hash")], ["phases", e4.varArray(e4.lookup("TransactionPhase"), 2147483647)]]), e4.union("GeneralizedTransactionSet", { switchOn: e4.int(), switchName: "v", switches: [[1, "v1TxSet"]], arms: { v1TxSet: e4.lookup("TransactionSetV1") } }), e4.struct("TransactionResultPair", [["transactionHash", e4.lookup("Hash")], ["result", e4.lookup("TransactionResult")]]), e4.struct("TransactionResultSet", [["results", e4.varArray(e4.lookup("TransactionResultPair"), 2147483647)]]), e4.union("TransactionHistoryEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "generalizedTxSet"]], arms: { generalizedTxSet: e4.lookup("GeneralizedTransactionSet") } }), e4.struct("TransactionHistoryEntry", [["ledgerSeq", e4.lookup("Uint32")], ["txSet", e4.lookup("TransactionSet")], ["ext", e4.lookup("TransactionHistoryEntryExt")]]), e4.union("TransactionHistoryResultEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("TransactionHistoryResultEntry", [["ledgerSeq", e4.lookup("Uint32")], ["txResultSet", e4.lookup("TransactionResultSet")], ["ext", e4.lookup("TransactionHistoryResultEntryExt")]]), e4.union("LedgerHeaderHistoryEntryExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("LedgerHeaderHistoryEntry", [["hash", e4.lookup("Hash")], ["header", e4.lookup("LedgerHeader")], ["ext", e4.lookup("LedgerHeaderHistoryEntryExt")]]), e4.struct("LedgerScpMessages", [["ledgerSeq", e4.lookup("Uint32")], ["messages", e4.varArray(e4.lookup("ScpEnvelope"), 2147483647)]]), e4.struct("ScpHistoryEntryV0", [["quorumSets", e4.varArray(e4.lookup("ScpQuorumSet"), 2147483647)], ["ledgerMessages", e4.lookup("LedgerScpMessages")]]), e4.union("ScpHistoryEntry", { switchOn: e4.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: e4.lookup("ScpHistoryEntryV0") } }), e4.enum("LedgerEntryChangeType", { ledgerEntryCreated: 0, ledgerEntryUpdated: 1, ledgerEntryRemoved: 2, ledgerEntryState: 3 }), e4.union("LedgerEntryChange", { switchOn: e4.lookup("LedgerEntryChangeType"), switchName: "type", switches: [["ledgerEntryCreated", "created"], ["ledgerEntryUpdated", "updated"], ["ledgerEntryRemoved", "removed"], ["ledgerEntryState", "state"]], arms: { created: e4.lookup("LedgerEntry"), updated: e4.lookup("LedgerEntry"), removed: e4.lookup("LedgerKey"), state: e4.lookup("LedgerEntry") } }), e4.typedef("LedgerEntryChanges", e4.varArray(e4.lookup("LedgerEntryChange"), 2147483647)), e4.struct("OperationMeta", [["changes", e4.lookup("LedgerEntryChanges")]]), e4.struct("TransactionMetaV1", [["txChanges", e4.lookup("LedgerEntryChanges")], ["operations", e4.varArray(e4.lookup("OperationMeta"), 2147483647)]]), e4.struct("TransactionMetaV2", [["txChangesBefore", e4.lookup("LedgerEntryChanges")], ["operations", e4.varArray(e4.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", e4.lookup("LedgerEntryChanges")]]), e4.enum("ContractEventType", { system: 0, contract: 1, diagnostic: 2 }), e4.struct("ContractEventV0", [["topics", e4.varArray(e4.lookup("ScVal"), 2147483647)], ["data", e4.lookup("ScVal")]]), e4.union("ContractEventBody", { switchOn: e4.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: e4.lookup("ContractEventV0") } }), e4.struct("ContractEvent", [["ext", e4.lookup("ExtensionPoint")], ["contractId", e4.option(e4.lookup("Hash"))], ["type", e4.lookup("ContractEventType")], ["body", e4.lookup("ContractEventBody")]]), e4.struct("DiagnosticEvent", [["inSuccessfulContractCall", e4.bool()], ["event", e4.lookup("ContractEvent")]]), e4.struct("SorobanTransactionMetaExtV1", [["ext", e4.lookup("ExtensionPoint")], ["totalNonRefundableResourceFeeCharged", e4.lookup("Int64")], ["totalRefundableResourceFeeCharged", e4.lookup("Int64")], ["rentFeeCharged", e4.lookup("Int64")]]), e4.union("SorobanTransactionMetaExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("SorobanTransactionMetaExtV1") } }), e4.struct("SorobanTransactionMeta", [["ext", e4.lookup("SorobanTransactionMetaExt")], ["events", e4.varArray(e4.lookup("ContractEvent"), 2147483647)], ["returnValue", e4.lookup("ScVal")], ["diagnosticEvents", e4.varArray(e4.lookup("DiagnosticEvent"), 2147483647)]]), e4.struct("TransactionMetaV3", [["ext", e4.lookup("ExtensionPoint")], ["txChangesBefore", e4.lookup("LedgerEntryChanges")], ["operations", e4.varArray(e4.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", e4.lookup("LedgerEntryChanges")], ["sorobanMeta", e4.option(e4.lookup("SorobanTransactionMeta"))]]), e4.struct("InvokeHostFunctionSuccessPreImage", [["returnValue", e4.lookup("ScVal")], ["events", e4.varArray(e4.lookup("ContractEvent"), 2147483647)]]), e4.union("TransactionMeta", { switchOn: e4.int(), switchName: "v", switches: [[0, "operations"], [1, "v1"], [2, "v2"], [3, "v3"]], arms: { operations: e4.varArray(e4.lookup("OperationMeta"), 2147483647), v1: e4.lookup("TransactionMetaV1"), v2: e4.lookup("TransactionMetaV2"), v3: e4.lookup("TransactionMetaV3") } }), e4.struct("TransactionResultMeta", [["result", e4.lookup("TransactionResultPair")], ["feeProcessing", e4.lookup("LedgerEntryChanges")], ["txApplyProcessing", e4.lookup("TransactionMeta")]]), e4.struct("UpgradeEntryMeta", [["upgrade", e4.lookup("LedgerUpgrade")], ["changes", e4.lookup("LedgerEntryChanges")]]), e4.struct("LedgerCloseMetaV0", [["ledgerHeader", e4.lookup("LedgerHeaderHistoryEntry")], ["txSet", e4.lookup("TransactionSet")], ["txProcessing", e4.varArray(e4.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", e4.varArray(e4.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", e4.varArray(e4.lookup("ScpHistoryEntry"), 2147483647)]]), e4.struct("LedgerCloseMetaExtV1", [["ext", e4.lookup("ExtensionPoint")], ["sorobanFeeWrite1Kb", e4.lookup("Int64")]]), e4.union("LedgerCloseMetaExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "v1"]], arms: { v1: e4.lookup("LedgerCloseMetaExtV1") } }), e4.struct("LedgerCloseMetaV1", [["ext", e4.lookup("LedgerCloseMetaExt")], ["ledgerHeader", e4.lookup("LedgerHeaderHistoryEntry")], ["txSet", e4.lookup("GeneralizedTransactionSet")], ["txProcessing", e4.varArray(e4.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", e4.varArray(e4.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", e4.varArray(e4.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfBucketList", e4.lookup("Uint64")], ["evictedTemporaryLedgerKeys", e4.varArray(e4.lookup("LedgerKey"), 2147483647)], ["evictedPersistentLedgerEntries", e4.varArray(e4.lookup("LedgerEntry"), 2147483647)]]), e4.union("LedgerCloseMeta", { switchOn: e4.int(), switchName: "v", switches: [[0, "v0"], [1, "v1"]], arms: { v0: e4.lookup("LedgerCloseMetaV0"), v1: e4.lookup("LedgerCloseMetaV1") } }), e4.enum("ErrorCode", { errMisc: 0, errData: 1, errConf: 2, errAuth: 3, errLoad: 4 }), e4.struct("Error", [["code", e4.lookup("ErrorCode")], ["msg", e4.string(100)]]), e4.struct("SendMore", [["numMessages", e4.lookup("Uint32")]]), e4.struct("SendMoreExtended", [["numMessages", e4.lookup("Uint32")], ["numBytes", e4.lookup("Uint32")]]), e4.struct("AuthCert", [["pubkey", e4.lookup("Curve25519Public")], ["expiration", e4.lookup("Uint64")], ["sig", e4.lookup("Signature")]]), e4.struct("Hello", [["ledgerVersion", e4.lookup("Uint32")], ["overlayVersion", e4.lookup("Uint32")], ["overlayMinVersion", e4.lookup("Uint32")], ["networkId", e4.lookup("Hash")], ["versionStr", e4.string(100)], ["listeningPort", e4.int()], ["peerId", e4.lookup("NodeId")], ["cert", e4.lookup("AuthCert")], ["nonce", e4.lookup("Uint256")]]), e4.const("AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED", 200), e4.struct("Auth", [["flags", e4.int()]]), e4.enum("IpAddrType", { iPv4: 0, iPv6: 1 }), e4.union("PeerAddressIp", { switchOn: e4.lookup("IpAddrType"), switchName: "type", switches: [["iPv4", "ipv4"], ["iPv6", "ipv6"]], arms: { ipv4: e4.opaque(4), ipv6: e4.opaque(16) } }), e4.struct("PeerAddress", [["ip", e4.lookup("PeerAddressIp")], ["port", e4.lookup("Uint32")], ["numFailures", e4.lookup("Uint32")]]), e4.enum("MessageType", { errorMsg: 0, auth: 2, dontHave: 3, getPeers: 4, peers: 5, getTxSet: 6, txSet: 7, generalizedTxSet: 17, transaction: 8, getScpQuorumset: 9, scpQuorumset: 10, scpMessage: 11, getScpState: 12, hello: 13, surveyRequest: 14, surveyResponse: 15, sendMore: 16, sendMoreExtended: 20, floodAdvert: 18, floodDemand: 19 }), e4.struct("DontHave", [["type", e4.lookup("MessageType")], ["reqHash", e4.lookup("Uint256")]]), e4.enum("SurveyMessageCommandType", { surveyTopology: 0 }), e4.enum("SurveyMessageResponseType", { surveyTopologyResponseV0: 0, surveyTopologyResponseV1: 1 }), e4.struct("SurveyRequestMessage", [["surveyorPeerId", e4.lookup("NodeId")], ["surveyedPeerId", e4.lookup("NodeId")], ["ledgerNum", e4.lookup("Uint32")], ["encryptionKey", e4.lookup("Curve25519Public")], ["commandType", e4.lookup("SurveyMessageCommandType")]]), e4.struct("SignedSurveyRequestMessage", [["requestSignature", e4.lookup("Signature")], ["request", e4.lookup("SurveyRequestMessage")]]), e4.typedef("EncryptedBody", e4.varOpaque(64e3)), e4.struct("SurveyResponseMessage", [["surveyorPeerId", e4.lookup("NodeId")], ["surveyedPeerId", e4.lookup("NodeId")], ["ledgerNum", e4.lookup("Uint32")], ["commandType", e4.lookup("SurveyMessageCommandType")], ["encryptedBody", e4.lookup("EncryptedBody")]]), e4.struct("SignedSurveyResponseMessage", [["responseSignature", e4.lookup("Signature")], ["response", e4.lookup("SurveyResponseMessage")]]), e4.struct("PeerStats", [["id", e4.lookup("NodeId")], ["versionStr", e4.string(100)], ["messagesRead", e4.lookup("Uint64")], ["messagesWritten", e4.lookup("Uint64")], ["bytesRead", e4.lookup("Uint64")], ["bytesWritten", e4.lookup("Uint64")], ["secondsConnected", e4.lookup("Uint64")], ["uniqueFloodBytesRecv", e4.lookup("Uint64")], ["duplicateFloodBytesRecv", e4.lookup("Uint64")], ["uniqueFetchBytesRecv", e4.lookup("Uint64")], ["duplicateFetchBytesRecv", e4.lookup("Uint64")], ["uniqueFloodMessageRecv", e4.lookup("Uint64")], ["duplicateFloodMessageRecv", e4.lookup("Uint64")], ["uniqueFetchMessageRecv", e4.lookup("Uint64")], ["duplicateFetchMessageRecv", e4.lookup("Uint64")]]), e4.typedef("PeerStatList", e4.varArray(e4.lookup("PeerStats"), 25)), e4.struct("TopologyResponseBodyV0", [["inboundPeers", e4.lookup("PeerStatList")], ["outboundPeers", e4.lookup("PeerStatList")], ["totalInboundPeerCount", e4.lookup("Uint32")], ["totalOutboundPeerCount", e4.lookup("Uint32")]]), e4.struct("TopologyResponseBodyV1", [["inboundPeers", e4.lookup("PeerStatList")], ["outboundPeers", e4.lookup("PeerStatList")], ["totalInboundPeerCount", e4.lookup("Uint32")], ["totalOutboundPeerCount", e4.lookup("Uint32")], ["maxInboundPeerCount", e4.lookup("Uint32")], ["maxOutboundPeerCount", e4.lookup("Uint32")]]), e4.union("SurveyResponseBody", { switchOn: e4.lookup("SurveyMessageResponseType"), switchName: "type", switches: [["surveyTopologyResponseV0", "topologyResponseBodyV0"], ["surveyTopologyResponseV1", "topologyResponseBodyV1"]], arms: { topologyResponseBodyV0: e4.lookup("TopologyResponseBodyV0"), topologyResponseBodyV1: e4.lookup("TopologyResponseBodyV1") } }), e4.const("TX_ADVERT_VECTOR_MAX_SIZE", 1e3), e4.typedef("TxAdvertVector", e4.varArray(e4.lookup("Hash"), e4.lookup("TX_ADVERT_VECTOR_MAX_SIZE"))), e4.struct("FloodAdvert", [["txHashes", e4.lookup("TxAdvertVector")]]), e4.const("TX_DEMAND_VECTOR_MAX_SIZE", 1e3), e4.typedef("TxDemandVector", e4.varArray(e4.lookup("Hash"), e4.lookup("TX_DEMAND_VECTOR_MAX_SIZE"))), e4.struct("FloodDemand", [["txHashes", e4.lookup("TxDemandVector")]]), e4.union("StellarMessage", { switchOn: e4.lookup("MessageType"), switchName: "type", switches: [["errorMsg", "error"], ["hello", "hello"], ["auth", "auth"], ["dontHave", "dontHave"], ["getPeers", e4.void()], ["peers", "peers"], ["getTxSet", "txSetHash"], ["txSet", "txSet"], ["generalizedTxSet", "generalizedTxSet"], ["transaction", "transaction"], ["surveyRequest", "signedSurveyRequestMessage"], ["surveyResponse", "signedSurveyResponseMessage"], ["getScpQuorumset", "qSetHash"], ["scpQuorumset", "qSet"], ["scpMessage", "envelope"], ["getScpState", "getScpLedgerSeq"], ["sendMore", "sendMoreMessage"], ["sendMoreExtended", "sendMoreExtendedMessage"], ["floodAdvert", "floodAdvert"], ["floodDemand", "floodDemand"]], arms: { error: e4.lookup("Error"), hello: e4.lookup("Hello"), auth: e4.lookup("Auth"), dontHave: e4.lookup("DontHave"), peers: e4.varArray(e4.lookup("PeerAddress"), 100), txSetHash: e4.lookup("Uint256"), txSet: e4.lookup("TransactionSet"), generalizedTxSet: e4.lookup("GeneralizedTransactionSet"), transaction: e4.lookup("TransactionEnvelope"), signedSurveyRequestMessage: e4.lookup("SignedSurveyRequestMessage"), signedSurveyResponseMessage: e4.lookup("SignedSurveyResponseMessage"), qSetHash: e4.lookup("Uint256"), qSet: e4.lookup("ScpQuorumSet"), envelope: e4.lookup("ScpEnvelope"), getScpLedgerSeq: e4.lookup("Uint32"), sendMoreMessage: e4.lookup("SendMore"), sendMoreExtendedMessage: e4.lookup("SendMoreExtended"), floodAdvert: e4.lookup("FloodAdvert"), floodDemand: e4.lookup("FloodDemand") } }), e4.struct("AuthenticatedMessageV0", [["sequence", e4.lookup("Uint64")], ["message", e4.lookup("StellarMessage")], ["mac", e4.lookup("HmacSha256Mac")]]), e4.union("AuthenticatedMessage", { switchOn: e4.lookup("Uint32"), switchName: "v", switches: [[0, "v0"]], arms: { v0: e4.lookup("AuthenticatedMessageV0") } }), e4.const("MAX_OPS_PER_TX", 100), e4.union("LiquidityPoolParameters", { switchOn: e4.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: e4.lookup("LiquidityPoolConstantProductParameters") } }), e4.struct("MuxedAccountMed25519", [["id", e4.lookup("Uint64")], ["ed25519", e4.lookup("Uint256")]]), e4.union("MuxedAccount", { switchOn: e4.lookup("CryptoKeyType"), switchName: "type", switches: [["keyTypeEd25519", "ed25519"], ["keyTypeMuxedEd25519", "med25519"]], arms: { ed25519: e4.lookup("Uint256"), med25519: e4.lookup("MuxedAccountMed25519") } }), e4.struct("DecoratedSignature", [["hint", e4.lookup("SignatureHint")], ["signature", e4.lookup("Signature")]]), e4.enum("OperationType", { createAccount: 0, payment: 1, pathPaymentStrictReceive: 2, manageSellOffer: 3, createPassiveSellOffer: 4, setOptions: 5, changeTrust: 6, allowTrust: 7, accountMerge: 8, inflation: 9, manageData: 10, bumpSequence: 11, manageBuyOffer: 12, pathPaymentStrictSend: 13, createClaimableBalance: 14, claimClaimableBalance: 15, beginSponsoringFutureReserves: 16, endSponsoringFutureReserves: 17, revokeSponsorship: 18, clawback: 19, clawbackClaimableBalance: 20, setTrustLineFlags: 21, liquidityPoolDeposit: 22, liquidityPoolWithdraw: 23, invokeHostFunction: 24, extendFootprintTtl: 25, restoreFootprint: 26 }), e4.struct("CreateAccountOp", [["destination", e4.lookup("AccountId")], ["startingBalance", e4.lookup("Int64")]]), e4.struct("PaymentOp", [["destination", e4.lookup("MuxedAccount")], ["asset", e4.lookup("Asset")], ["amount", e4.lookup("Int64")]]), e4.struct("PathPaymentStrictReceiveOp", [["sendAsset", e4.lookup("Asset")], ["sendMax", e4.lookup("Int64")], ["destination", e4.lookup("MuxedAccount")], ["destAsset", e4.lookup("Asset")], ["destAmount", e4.lookup("Int64")], ["path", e4.varArray(e4.lookup("Asset"), 5)]]), e4.struct("PathPaymentStrictSendOp", [["sendAsset", e4.lookup("Asset")], ["sendAmount", e4.lookup("Int64")], ["destination", e4.lookup("MuxedAccount")], ["destAsset", e4.lookup("Asset")], ["destMin", e4.lookup("Int64")], ["path", e4.varArray(e4.lookup("Asset"), 5)]]), e4.struct("ManageSellOfferOp", [["selling", e4.lookup("Asset")], ["buying", e4.lookup("Asset")], ["amount", e4.lookup("Int64")], ["price", e4.lookup("Price")], ["offerId", e4.lookup("Int64")]]), e4.struct("ManageBuyOfferOp", [["selling", e4.lookup("Asset")], ["buying", e4.lookup("Asset")], ["buyAmount", e4.lookup("Int64")], ["price", e4.lookup("Price")], ["offerId", e4.lookup("Int64")]]), e4.struct("CreatePassiveSellOfferOp", [["selling", e4.lookup("Asset")], ["buying", e4.lookup("Asset")], ["amount", e4.lookup("Int64")], ["price", e4.lookup("Price")]]), e4.struct("SetOptionsOp", [["inflationDest", e4.option(e4.lookup("AccountId"))], ["clearFlags", e4.option(e4.lookup("Uint32"))], ["setFlags", e4.option(e4.lookup("Uint32"))], ["masterWeight", e4.option(e4.lookup("Uint32"))], ["lowThreshold", e4.option(e4.lookup("Uint32"))], ["medThreshold", e4.option(e4.lookup("Uint32"))], ["highThreshold", e4.option(e4.lookup("Uint32"))], ["homeDomain", e4.option(e4.lookup("String32"))], ["signer", e4.option(e4.lookup("Signer"))]]), e4.union("ChangeTrustAsset", { switchOn: e4.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", e4.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPool"]], arms: { alphaNum4: e4.lookup("AlphaNum4"), alphaNum12: e4.lookup("AlphaNum12"), liquidityPool: e4.lookup("LiquidityPoolParameters") } }), e4.struct("ChangeTrustOp", [["line", e4.lookup("ChangeTrustAsset")], ["limit", e4.lookup("Int64")]]), e4.struct("AllowTrustOp", [["trustor", e4.lookup("AccountId")], ["asset", e4.lookup("AssetCode")], ["authorize", e4.lookup("Uint32")]]), e4.struct("ManageDataOp", [["dataName", e4.lookup("String64")], ["dataValue", e4.option(e4.lookup("DataValue"))]]), e4.struct("BumpSequenceOp", [["bumpTo", e4.lookup("SequenceNumber")]]), e4.struct("CreateClaimableBalanceOp", [["asset", e4.lookup("Asset")], ["amount", e4.lookup("Int64")], ["claimants", e4.varArray(e4.lookup("Claimant"), 10)]]), e4.struct("ClaimClaimableBalanceOp", [["balanceId", e4.lookup("ClaimableBalanceId")]]), e4.struct("BeginSponsoringFutureReservesOp", [["sponsoredId", e4.lookup("AccountId")]]), e4.enum("RevokeSponsorshipType", { revokeSponsorshipLedgerEntry: 0, revokeSponsorshipSigner: 1 }), e4.struct("RevokeSponsorshipOpSigner", [["accountId", e4.lookup("AccountId")], ["signerKey", e4.lookup("SignerKey")]]), e4.union("RevokeSponsorshipOp", { switchOn: e4.lookup("RevokeSponsorshipType"), switchName: "type", switches: [["revokeSponsorshipLedgerEntry", "ledgerKey"], ["revokeSponsorshipSigner", "signer"]], arms: { ledgerKey: e4.lookup("LedgerKey"), signer: e4.lookup("RevokeSponsorshipOpSigner") } }), e4.struct("ClawbackOp", [["asset", e4.lookup("Asset")], ["from", e4.lookup("MuxedAccount")], ["amount", e4.lookup("Int64")]]), e4.struct("ClawbackClaimableBalanceOp", [["balanceId", e4.lookup("ClaimableBalanceId")]]), e4.struct("SetTrustLineFlagsOp", [["trustor", e4.lookup("AccountId")], ["asset", e4.lookup("Asset")], ["clearFlags", e4.lookup("Uint32")], ["setFlags", e4.lookup("Uint32")]]), e4.const("LIQUIDITY_POOL_FEE_V18", 30), e4.struct("LiquidityPoolDepositOp", [["liquidityPoolId", e4.lookup("PoolId")], ["maxAmountA", e4.lookup("Int64")], ["maxAmountB", e4.lookup("Int64")], ["minPrice", e4.lookup("Price")], ["maxPrice", e4.lookup("Price")]]), e4.struct("LiquidityPoolWithdrawOp", [["liquidityPoolId", e4.lookup("PoolId")], ["amount", e4.lookup("Int64")], ["minAmountA", e4.lookup("Int64")], ["minAmountB", e4.lookup("Int64")]]), e4.enum("HostFunctionType", { hostFunctionTypeInvokeContract: 0, hostFunctionTypeCreateContract: 1, hostFunctionTypeUploadContractWasm: 2 }), e4.enum("ContractIdPreimageType", { contractIdPreimageFromAddress: 0, contractIdPreimageFromAsset: 1 }), e4.struct("ContractIdPreimageFromAddress", [["address", e4.lookup("ScAddress")], ["salt", e4.lookup("Uint256")]]), e4.union("ContractIdPreimage", { switchOn: e4.lookup("ContractIdPreimageType"), switchName: "type", switches: [["contractIdPreimageFromAddress", "fromAddress"], ["contractIdPreimageFromAsset", "fromAsset"]], arms: { fromAddress: e4.lookup("ContractIdPreimageFromAddress"), fromAsset: e4.lookup("Asset") } }), e4.struct("CreateContractArgs", [["contractIdPreimage", e4.lookup("ContractIdPreimage")], ["executable", e4.lookup("ContractExecutable")]]), e4.struct("InvokeContractArgs", [["contractAddress", e4.lookup("ScAddress")], ["functionName", e4.lookup("ScSymbol")], ["args", e4.varArray(e4.lookup("ScVal"), 2147483647)]]), e4.union("HostFunction", { switchOn: e4.lookup("HostFunctionType"), switchName: "type", switches: [["hostFunctionTypeInvokeContract", "invokeContract"], ["hostFunctionTypeCreateContract", "createContract"], ["hostFunctionTypeUploadContractWasm", "wasm"]], arms: { invokeContract: e4.lookup("InvokeContractArgs"), createContract: e4.lookup("CreateContractArgs"), wasm: e4.varOpaque() } }), e4.enum("SorobanAuthorizedFunctionType", { sorobanAuthorizedFunctionTypeContractFn: 0, sorobanAuthorizedFunctionTypeCreateContractHostFn: 1 }), e4.union("SorobanAuthorizedFunction", { switchOn: e4.lookup("SorobanAuthorizedFunctionType"), switchName: "type", switches: [["sorobanAuthorizedFunctionTypeContractFn", "contractFn"], ["sorobanAuthorizedFunctionTypeCreateContractHostFn", "createContractHostFn"]], arms: { contractFn: e4.lookup("InvokeContractArgs"), createContractHostFn: e4.lookup("CreateContractArgs") } }), e4.struct("SorobanAuthorizedInvocation", [["function", e4.lookup("SorobanAuthorizedFunction")], ["subInvocations", e4.varArray(e4.lookup("SorobanAuthorizedInvocation"), 2147483647)]]), e4.struct("SorobanAddressCredentials", [["address", e4.lookup("ScAddress")], ["nonce", e4.lookup("Int64")], ["signatureExpirationLedger", e4.lookup("Uint32")], ["signature", e4.lookup("ScVal")]]), e4.enum("SorobanCredentialsType", { sorobanCredentialsSourceAccount: 0, sorobanCredentialsAddress: 1 }), e4.union("SorobanCredentials", { switchOn: e4.lookup("SorobanCredentialsType"), switchName: "type", switches: [["sorobanCredentialsSourceAccount", e4.void()], ["sorobanCredentialsAddress", "address"]], arms: { address: e4.lookup("SorobanAddressCredentials") } }), e4.struct("SorobanAuthorizationEntry", [["credentials", e4.lookup("SorobanCredentials")], ["rootInvocation", e4.lookup("SorobanAuthorizedInvocation")]]), e4.struct("InvokeHostFunctionOp", [["hostFunction", e4.lookup("HostFunction")], ["auth", e4.varArray(e4.lookup("SorobanAuthorizationEntry"), 2147483647)]]), e4.struct("ExtendFootprintTtlOp", [["ext", e4.lookup("ExtensionPoint")], ["extendTo", e4.lookup("Uint32")]]), e4.struct("RestoreFootprintOp", [["ext", e4.lookup("ExtensionPoint")]]), e4.union("OperationBody", { switchOn: e4.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountOp"], ["payment", "paymentOp"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveOp"], ["manageSellOffer", "manageSellOfferOp"], ["createPassiveSellOffer", "createPassiveSellOfferOp"], ["setOptions", "setOptionsOp"], ["changeTrust", "changeTrustOp"], ["allowTrust", "allowTrustOp"], ["accountMerge", "destination"], ["inflation", e4.void()], ["manageData", "manageDataOp"], ["bumpSequence", "bumpSequenceOp"], ["manageBuyOffer", "manageBuyOfferOp"], ["pathPaymentStrictSend", "pathPaymentStrictSendOp"], ["createClaimableBalance", "createClaimableBalanceOp"], ["claimClaimableBalance", "claimClaimableBalanceOp"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesOp"], ["endSponsoringFutureReserves", e4.void()], ["revokeSponsorship", "revokeSponsorshipOp"], ["clawback", "clawbackOp"], ["clawbackClaimableBalance", "clawbackClaimableBalanceOp"], ["setTrustLineFlags", "setTrustLineFlagsOp"], ["liquidityPoolDeposit", "liquidityPoolDepositOp"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawOp"], ["invokeHostFunction", "invokeHostFunctionOp"], ["extendFootprintTtl", "extendFootprintTtlOp"], ["restoreFootprint", "restoreFootprintOp"]], arms: { createAccountOp: e4.lookup("CreateAccountOp"), paymentOp: e4.lookup("PaymentOp"), pathPaymentStrictReceiveOp: e4.lookup("PathPaymentStrictReceiveOp"), manageSellOfferOp: e4.lookup("ManageSellOfferOp"), createPassiveSellOfferOp: e4.lookup("CreatePassiveSellOfferOp"), setOptionsOp: e4.lookup("SetOptionsOp"), changeTrustOp: e4.lookup("ChangeTrustOp"), allowTrustOp: e4.lookup("AllowTrustOp"), destination: e4.lookup("MuxedAccount"), manageDataOp: e4.lookup("ManageDataOp"), bumpSequenceOp: e4.lookup("BumpSequenceOp"), manageBuyOfferOp: e4.lookup("ManageBuyOfferOp"), pathPaymentStrictSendOp: e4.lookup("PathPaymentStrictSendOp"), createClaimableBalanceOp: e4.lookup("CreateClaimableBalanceOp"), claimClaimableBalanceOp: e4.lookup("ClaimClaimableBalanceOp"), beginSponsoringFutureReservesOp: e4.lookup("BeginSponsoringFutureReservesOp"), revokeSponsorshipOp: e4.lookup("RevokeSponsorshipOp"), clawbackOp: e4.lookup("ClawbackOp"), clawbackClaimableBalanceOp: e4.lookup("ClawbackClaimableBalanceOp"), setTrustLineFlagsOp: e4.lookup("SetTrustLineFlagsOp"), liquidityPoolDepositOp: e4.lookup("LiquidityPoolDepositOp"), liquidityPoolWithdrawOp: e4.lookup("LiquidityPoolWithdrawOp"), invokeHostFunctionOp: e4.lookup("InvokeHostFunctionOp"), extendFootprintTtlOp: e4.lookup("ExtendFootprintTtlOp"), restoreFootprintOp: e4.lookup("RestoreFootprintOp") } }), e4.struct("Operation", [["sourceAccount", e4.option(e4.lookup("MuxedAccount"))], ["body", e4.lookup("OperationBody")]]), e4.struct("HashIdPreimageOperationId", [["sourceAccount", e4.lookup("AccountId")], ["seqNum", e4.lookup("SequenceNumber")], ["opNum", e4.lookup("Uint32")]]), e4.struct("HashIdPreimageRevokeId", [["sourceAccount", e4.lookup("AccountId")], ["seqNum", e4.lookup("SequenceNumber")], ["opNum", e4.lookup("Uint32")], ["liquidityPoolId", e4.lookup("PoolId")], ["asset", e4.lookup("Asset")]]), e4.struct("HashIdPreimageContractId", [["networkId", e4.lookup("Hash")], ["contractIdPreimage", e4.lookup("ContractIdPreimage")]]), e4.struct("HashIdPreimageSorobanAuthorization", [["networkId", e4.lookup("Hash")], ["nonce", e4.lookup("Int64")], ["signatureExpirationLedger", e4.lookup("Uint32")], ["invocation", e4.lookup("SorobanAuthorizedInvocation")]]), e4.union("HashIdPreimage", { switchOn: e4.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeOpId", "operationId"], ["envelopeTypePoolRevokeOpId", "revokeId"], ["envelopeTypeContractId", "contractId"], ["envelopeTypeSorobanAuthorization", "sorobanAuthorization"]], arms: { operationId: e4.lookup("HashIdPreimageOperationId"), revokeId: e4.lookup("HashIdPreimageRevokeId"), contractId: e4.lookup("HashIdPreimageContractId"), sorobanAuthorization: e4.lookup("HashIdPreimageSorobanAuthorization") } }), e4.enum("MemoType", { memoNone: 0, memoText: 1, memoId: 2, memoHash: 3, memoReturn: 4 }), e4.union("Memo", { switchOn: e4.lookup("MemoType"), switchName: "type", switches: [["memoNone", e4.void()], ["memoText", "text"], ["memoId", "id"], ["memoHash", "hash"], ["memoReturn", "retHash"]], arms: { text: e4.string(28), id: e4.lookup("Uint64"), hash: e4.lookup("Hash"), retHash: e4.lookup("Hash") } }), e4.struct("TimeBounds", [["minTime", e4.lookup("TimePoint")], ["maxTime", e4.lookup("TimePoint")]]), e4.struct("LedgerBounds", [["minLedger", e4.lookup("Uint32")], ["maxLedger", e4.lookup("Uint32")]]), e4.struct("PreconditionsV2", [["timeBounds", e4.option(e4.lookup("TimeBounds"))], ["ledgerBounds", e4.option(e4.lookup("LedgerBounds"))], ["minSeqNum", e4.option(e4.lookup("SequenceNumber"))], ["minSeqAge", e4.lookup("Duration")], ["minSeqLedgerGap", e4.lookup("Uint32")], ["extraSigners", e4.varArray(e4.lookup("SignerKey"), 2)]]), e4.enum("PreconditionType", { precondNone: 0, precondTime: 1, precondV2: 2 }), e4.union("Preconditions", { switchOn: e4.lookup("PreconditionType"), switchName: "type", switches: [["precondNone", e4.void()], ["precondTime", "timeBounds"], ["precondV2", "v2"]], arms: { timeBounds: e4.lookup("TimeBounds"), v2: e4.lookup("PreconditionsV2") } }), e4.struct("LedgerFootprint", [["readOnly", e4.varArray(e4.lookup("LedgerKey"), 2147483647)], ["readWrite", e4.varArray(e4.lookup("LedgerKey"), 2147483647)]]), e4.struct("SorobanResources", [["footprint", e4.lookup("LedgerFootprint")], ["instructions", e4.lookup("Uint32")], ["readBytes", e4.lookup("Uint32")], ["writeBytes", e4.lookup("Uint32")]]), e4.struct("SorobanTransactionData", [["ext", e4.lookup("ExtensionPoint")], ["resources", e4.lookup("SorobanResources")], ["resourceFee", e4.lookup("Int64")]]), e4.union("TransactionV0Ext", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("TransactionV0", [["sourceAccountEd25519", e4.lookup("Uint256")], ["fee", e4.lookup("Uint32")], ["seqNum", e4.lookup("SequenceNumber")], ["timeBounds", e4.option(e4.lookup("TimeBounds"))], ["memo", e4.lookup("Memo")], ["operations", e4.varArray(e4.lookup("Operation"), e4.lookup("MAX_OPS_PER_TX"))], ["ext", e4.lookup("TransactionV0Ext")]]), e4.struct("TransactionV0Envelope", [["tx", e4.lookup("TransactionV0")], ["signatures", e4.varArray(e4.lookup("DecoratedSignature"), 20)]]), e4.union("TransactionExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()], [1, "sorobanData"]], arms: { sorobanData: e4.lookup("SorobanTransactionData") } }), e4.struct("Transaction", [["sourceAccount", e4.lookup("MuxedAccount")], ["fee", e4.lookup("Uint32")], ["seqNum", e4.lookup("SequenceNumber")], ["cond", e4.lookup("Preconditions")], ["memo", e4.lookup("Memo")], ["operations", e4.varArray(e4.lookup("Operation"), e4.lookup("MAX_OPS_PER_TX"))], ["ext", e4.lookup("TransactionExt")]]), e4.struct("TransactionV1Envelope", [["tx", e4.lookup("Transaction")], ["signatures", e4.varArray(e4.lookup("DecoratedSignature"), 20)]]), e4.union("FeeBumpTransactionInnerTx", { switchOn: e4.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "v1"]], arms: { v1: e4.lookup("TransactionV1Envelope") } }), e4.union("FeeBumpTransactionExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("FeeBumpTransaction", [["feeSource", e4.lookup("MuxedAccount")], ["fee", e4.lookup("Int64")], ["innerTx", e4.lookup("FeeBumpTransactionInnerTx")], ["ext", e4.lookup("FeeBumpTransactionExt")]]), e4.struct("FeeBumpTransactionEnvelope", [["tx", e4.lookup("FeeBumpTransaction")], ["signatures", e4.varArray(e4.lookup("DecoratedSignature"), 20)]]), e4.union("TransactionEnvelope", { switchOn: e4.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTxV0", "v0"], ["envelopeTypeTx", "v1"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { v0: e4.lookup("TransactionV0Envelope"), v1: e4.lookup("TransactionV1Envelope"), feeBump: e4.lookup("FeeBumpTransactionEnvelope") } }), e4.union("TransactionSignaturePayloadTaggedTransaction", { switchOn: e4.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "tx"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { tx: e4.lookup("Transaction"), feeBump: e4.lookup("FeeBumpTransaction") } }), e4.struct("TransactionSignaturePayload", [["networkId", e4.lookup("Hash")], ["taggedTransaction", e4.lookup("TransactionSignaturePayloadTaggedTransaction")]]), e4.enum("ClaimAtomType", { claimAtomTypeV0: 0, claimAtomTypeOrderBook: 1, claimAtomTypeLiquidityPool: 2 }), e4.struct("ClaimOfferAtomV0", [["sellerEd25519", e4.lookup("Uint256")], ["offerId", e4.lookup("Int64")], ["assetSold", e4.lookup("Asset")], ["amountSold", e4.lookup("Int64")], ["assetBought", e4.lookup("Asset")], ["amountBought", e4.lookup("Int64")]]), e4.struct("ClaimOfferAtom", [["sellerId", e4.lookup("AccountId")], ["offerId", e4.lookup("Int64")], ["assetSold", e4.lookup("Asset")], ["amountSold", e4.lookup("Int64")], ["assetBought", e4.lookup("Asset")], ["amountBought", e4.lookup("Int64")]]), e4.struct("ClaimLiquidityAtom", [["liquidityPoolId", e4.lookup("PoolId")], ["assetSold", e4.lookup("Asset")], ["amountSold", e4.lookup("Int64")], ["assetBought", e4.lookup("Asset")], ["amountBought", e4.lookup("Int64")]]), e4.union("ClaimAtom", { switchOn: e4.lookup("ClaimAtomType"), switchName: "type", switches: [["claimAtomTypeV0", "v0"], ["claimAtomTypeOrderBook", "orderBook"], ["claimAtomTypeLiquidityPool", "liquidityPool"]], arms: { v0: e4.lookup("ClaimOfferAtomV0"), orderBook: e4.lookup("ClaimOfferAtom"), liquidityPool: e4.lookup("ClaimLiquidityAtom") } }), e4.enum("CreateAccountResultCode", { createAccountSuccess: 0, createAccountMalformed: -1, createAccountUnderfunded: -2, createAccountLowReserve: -3, createAccountAlreadyExist: -4 }), e4.union("CreateAccountResult", { switchOn: e4.lookup("CreateAccountResultCode"), switchName: "code", switches: [["createAccountSuccess", e4.void()], ["createAccountMalformed", e4.void()], ["createAccountUnderfunded", e4.void()], ["createAccountLowReserve", e4.void()], ["createAccountAlreadyExist", e4.void()]], arms: {} }), e4.enum("PaymentResultCode", { paymentSuccess: 0, paymentMalformed: -1, paymentUnderfunded: -2, paymentSrcNoTrust: -3, paymentSrcNotAuthorized: -4, paymentNoDestination: -5, paymentNoTrust: -6, paymentNotAuthorized: -7, paymentLineFull: -8, paymentNoIssuer: -9 }), e4.union("PaymentResult", { switchOn: e4.lookup("PaymentResultCode"), switchName: "code", switches: [["paymentSuccess", e4.void()], ["paymentMalformed", e4.void()], ["paymentUnderfunded", e4.void()], ["paymentSrcNoTrust", e4.void()], ["paymentSrcNotAuthorized", e4.void()], ["paymentNoDestination", e4.void()], ["paymentNoTrust", e4.void()], ["paymentNotAuthorized", e4.void()], ["paymentLineFull", e4.void()], ["paymentNoIssuer", e4.void()]], arms: {} }), e4.enum("PathPaymentStrictReceiveResultCode", { pathPaymentStrictReceiveSuccess: 0, pathPaymentStrictReceiveMalformed: -1, pathPaymentStrictReceiveUnderfunded: -2, pathPaymentStrictReceiveSrcNoTrust: -3, pathPaymentStrictReceiveSrcNotAuthorized: -4, pathPaymentStrictReceiveNoDestination: -5, pathPaymentStrictReceiveNoTrust: -6, pathPaymentStrictReceiveNotAuthorized: -7, pathPaymentStrictReceiveLineFull: -8, pathPaymentStrictReceiveNoIssuer: -9, pathPaymentStrictReceiveTooFewOffers: -10, pathPaymentStrictReceiveOfferCrossSelf: -11, pathPaymentStrictReceiveOverSendmax: -12 }), e4.struct("SimplePaymentResult", [["destination", e4.lookup("AccountId")], ["asset", e4.lookup("Asset")], ["amount", e4.lookup("Int64")]]), e4.struct("PathPaymentStrictReceiveResultSuccess", [["offers", e4.varArray(e4.lookup("ClaimAtom"), 2147483647)], ["last", e4.lookup("SimplePaymentResult")]]), e4.union("PathPaymentStrictReceiveResult", { switchOn: e4.lookup("PathPaymentStrictReceiveResultCode"), switchName: "code", switches: [["pathPaymentStrictReceiveSuccess", "success"], ["pathPaymentStrictReceiveMalformed", e4.void()], ["pathPaymentStrictReceiveUnderfunded", e4.void()], ["pathPaymentStrictReceiveSrcNoTrust", e4.void()], ["pathPaymentStrictReceiveSrcNotAuthorized", e4.void()], ["pathPaymentStrictReceiveNoDestination", e4.void()], ["pathPaymentStrictReceiveNoTrust", e4.void()], ["pathPaymentStrictReceiveNotAuthorized", e4.void()], ["pathPaymentStrictReceiveLineFull", e4.void()], ["pathPaymentStrictReceiveNoIssuer", "noIssuer"], ["pathPaymentStrictReceiveTooFewOffers", e4.void()], ["pathPaymentStrictReceiveOfferCrossSelf", e4.void()], ["pathPaymentStrictReceiveOverSendmax", e4.void()]], arms: { success: e4.lookup("PathPaymentStrictReceiveResultSuccess"), noIssuer: e4.lookup("Asset") } }), e4.enum("PathPaymentStrictSendResultCode", { pathPaymentStrictSendSuccess: 0, pathPaymentStrictSendMalformed: -1, pathPaymentStrictSendUnderfunded: -2, pathPaymentStrictSendSrcNoTrust: -3, pathPaymentStrictSendSrcNotAuthorized: -4, pathPaymentStrictSendNoDestination: -5, pathPaymentStrictSendNoTrust: -6, pathPaymentStrictSendNotAuthorized: -7, pathPaymentStrictSendLineFull: -8, pathPaymentStrictSendNoIssuer: -9, pathPaymentStrictSendTooFewOffers: -10, pathPaymentStrictSendOfferCrossSelf: -11, pathPaymentStrictSendUnderDestmin: -12 }), e4.struct("PathPaymentStrictSendResultSuccess", [["offers", e4.varArray(e4.lookup("ClaimAtom"), 2147483647)], ["last", e4.lookup("SimplePaymentResult")]]), e4.union("PathPaymentStrictSendResult", { switchOn: e4.lookup("PathPaymentStrictSendResultCode"), switchName: "code", switches: [["pathPaymentStrictSendSuccess", "success"], ["pathPaymentStrictSendMalformed", e4.void()], ["pathPaymentStrictSendUnderfunded", e4.void()], ["pathPaymentStrictSendSrcNoTrust", e4.void()], ["pathPaymentStrictSendSrcNotAuthorized", e4.void()], ["pathPaymentStrictSendNoDestination", e4.void()], ["pathPaymentStrictSendNoTrust", e4.void()], ["pathPaymentStrictSendNotAuthorized", e4.void()], ["pathPaymentStrictSendLineFull", e4.void()], ["pathPaymentStrictSendNoIssuer", "noIssuer"], ["pathPaymentStrictSendTooFewOffers", e4.void()], ["pathPaymentStrictSendOfferCrossSelf", e4.void()], ["pathPaymentStrictSendUnderDestmin", e4.void()]], arms: { success: e4.lookup("PathPaymentStrictSendResultSuccess"), noIssuer: e4.lookup("Asset") } }), e4.enum("ManageSellOfferResultCode", { manageSellOfferSuccess: 0, manageSellOfferMalformed: -1, manageSellOfferSellNoTrust: -2, manageSellOfferBuyNoTrust: -3, manageSellOfferSellNotAuthorized: -4, manageSellOfferBuyNotAuthorized: -5, manageSellOfferLineFull: -6, manageSellOfferUnderfunded: -7, manageSellOfferCrossSelf: -8, manageSellOfferSellNoIssuer: -9, manageSellOfferBuyNoIssuer: -10, manageSellOfferNotFound: -11, manageSellOfferLowReserve: -12 }), e4.enum("ManageOfferEffect", { manageOfferCreated: 0, manageOfferUpdated: 1, manageOfferDeleted: 2 }), e4.union("ManageOfferSuccessResultOffer", { switchOn: e4.lookup("ManageOfferEffect"), switchName: "effect", switches: [["manageOfferCreated", "offer"], ["manageOfferUpdated", "offer"], ["manageOfferDeleted", e4.void()]], arms: { offer: e4.lookup("OfferEntry") } }), e4.struct("ManageOfferSuccessResult", [["offersClaimed", e4.varArray(e4.lookup("ClaimAtom"), 2147483647)], ["offer", e4.lookup("ManageOfferSuccessResultOffer")]]), e4.union("ManageSellOfferResult", { switchOn: e4.lookup("ManageSellOfferResultCode"), switchName: "code", switches: [["manageSellOfferSuccess", "success"], ["manageSellOfferMalformed", e4.void()], ["manageSellOfferSellNoTrust", e4.void()], ["manageSellOfferBuyNoTrust", e4.void()], ["manageSellOfferSellNotAuthorized", e4.void()], ["manageSellOfferBuyNotAuthorized", e4.void()], ["manageSellOfferLineFull", e4.void()], ["manageSellOfferUnderfunded", e4.void()], ["manageSellOfferCrossSelf", e4.void()], ["manageSellOfferSellNoIssuer", e4.void()], ["manageSellOfferBuyNoIssuer", e4.void()], ["manageSellOfferNotFound", e4.void()], ["manageSellOfferLowReserve", e4.void()]], arms: { success: e4.lookup("ManageOfferSuccessResult") } }), e4.enum("ManageBuyOfferResultCode", { manageBuyOfferSuccess: 0, manageBuyOfferMalformed: -1, manageBuyOfferSellNoTrust: -2, manageBuyOfferBuyNoTrust: -3, manageBuyOfferSellNotAuthorized: -4, manageBuyOfferBuyNotAuthorized: -5, manageBuyOfferLineFull: -6, manageBuyOfferUnderfunded: -7, manageBuyOfferCrossSelf: -8, manageBuyOfferSellNoIssuer: -9, manageBuyOfferBuyNoIssuer: -10, manageBuyOfferNotFound: -11, manageBuyOfferLowReserve: -12 }), e4.union("ManageBuyOfferResult", { switchOn: e4.lookup("ManageBuyOfferResultCode"), switchName: "code", switches: [["manageBuyOfferSuccess", "success"], ["manageBuyOfferMalformed", e4.void()], ["manageBuyOfferSellNoTrust", e4.void()], ["manageBuyOfferBuyNoTrust", e4.void()], ["manageBuyOfferSellNotAuthorized", e4.void()], ["manageBuyOfferBuyNotAuthorized", e4.void()], ["manageBuyOfferLineFull", e4.void()], ["manageBuyOfferUnderfunded", e4.void()], ["manageBuyOfferCrossSelf", e4.void()], ["manageBuyOfferSellNoIssuer", e4.void()], ["manageBuyOfferBuyNoIssuer", e4.void()], ["manageBuyOfferNotFound", e4.void()], ["manageBuyOfferLowReserve", e4.void()]], arms: { success: e4.lookup("ManageOfferSuccessResult") } }), e4.enum("SetOptionsResultCode", { setOptionsSuccess: 0, setOptionsLowReserve: -1, setOptionsTooManySigners: -2, setOptionsBadFlags: -3, setOptionsInvalidInflation: -4, setOptionsCantChange: -5, setOptionsUnknownFlag: -6, setOptionsThresholdOutOfRange: -7, setOptionsBadSigner: -8, setOptionsInvalidHomeDomain: -9, setOptionsAuthRevocableRequired: -10 }), e4.union("SetOptionsResult", { switchOn: e4.lookup("SetOptionsResultCode"), switchName: "code", switches: [["setOptionsSuccess", e4.void()], ["setOptionsLowReserve", e4.void()], ["setOptionsTooManySigners", e4.void()], ["setOptionsBadFlags", e4.void()], ["setOptionsInvalidInflation", e4.void()], ["setOptionsCantChange", e4.void()], ["setOptionsUnknownFlag", e4.void()], ["setOptionsThresholdOutOfRange", e4.void()], ["setOptionsBadSigner", e4.void()], ["setOptionsInvalidHomeDomain", e4.void()], ["setOptionsAuthRevocableRequired", e4.void()]], arms: {} }), e4.enum("ChangeTrustResultCode", { changeTrustSuccess: 0, changeTrustMalformed: -1, changeTrustNoIssuer: -2, changeTrustInvalidLimit: -3, changeTrustLowReserve: -4, changeTrustSelfNotAllowed: -5, changeTrustTrustLineMissing: -6, changeTrustCannotDelete: -7, changeTrustNotAuthMaintainLiabilities: -8 }), e4.union("ChangeTrustResult", { switchOn: e4.lookup("ChangeTrustResultCode"), switchName: "code", switches: [["changeTrustSuccess", e4.void()], ["changeTrustMalformed", e4.void()], ["changeTrustNoIssuer", e4.void()], ["changeTrustInvalidLimit", e4.void()], ["changeTrustLowReserve", e4.void()], ["changeTrustSelfNotAllowed", e4.void()], ["changeTrustTrustLineMissing", e4.void()], ["changeTrustCannotDelete", e4.void()], ["changeTrustNotAuthMaintainLiabilities", e4.void()]], arms: {} }), e4.enum("AllowTrustResultCode", { allowTrustSuccess: 0, allowTrustMalformed: -1, allowTrustNoTrustLine: -2, allowTrustTrustNotRequired: -3, allowTrustCantRevoke: -4, allowTrustSelfNotAllowed: -5, allowTrustLowReserve: -6 }), e4.union("AllowTrustResult", { switchOn: e4.lookup("AllowTrustResultCode"), switchName: "code", switches: [["allowTrustSuccess", e4.void()], ["allowTrustMalformed", e4.void()], ["allowTrustNoTrustLine", e4.void()], ["allowTrustTrustNotRequired", e4.void()], ["allowTrustCantRevoke", e4.void()], ["allowTrustSelfNotAllowed", e4.void()], ["allowTrustLowReserve", e4.void()]], arms: {} }), e4.enum("AccountMergeResultCode", { accountMergeSuccess: 0, accountMergeMalformed: -1, accountMergeNoAccount: -2, accountMergeImmutableSet: -3, accountMergeHasSubEntries: -4, accountMergeSeqnumTooFar: -5, accountMergeDestFull: -6, accountMergeIsSponsor: -7 }), e4.union("AccountMergeResult", { switchOn: e4.lookup("AccountMergeResultCode"), switchName: "code", switches: [["accountMergeSuccess", "sourceAccountBalance"], ["accountMergeMalformed", e4.void()], ["accountMergeNoAccount", e4.void()], ["accountMergeImmutableSet", e4.void()], ["accountMergeHasSubEntries", e4.void()], ["accountMergeSeqnumTooFar", e4.void()], ["accountMergeDestFull", e4.void()], ["accountMergeIsSponsor", e4.void()]], arms: { sourceAccountBalance: e4.lookup("Int64") } }), e4.enum("InflationResultCode", { inflationSuccess: 0, inflationNotTime: -1 }), e4.struct("InflationPayout", [["destination", e4.lookup("AccountId")], ["amount", e4.lookup("Int64")]]), e4.union("InflationResult", { switchOn: e4.lookup("InflationResultCode"), switchName: "code", switches: [["inflationSuccess", "payouts"], ["inflationNotTime", e4.void()]], arms: { payouts: e4.varArray(e4.lookup("InflationPayout"), 2147483647) } }), e4.enum("ManageDataResultCode", { manageDataSuccess: 0, manageDataNotSupportedYet: -1, manageDataNameNotFound: -2, manageDataLowReserve: -3, manageDataInvalidName: -4 }), e4.union("ManageDataResult", { switchOn: e4.lookup("ManageDataResultCode"), switchName: "code", switches: [["manageDataSuccess", e4.void()], ["manageDataNotSupportedYet", e4.void()], ["manageDataNameNotFound", e4.void()], ["manageDataLowReserve", e4.void()], ["manageDataInvalidName", e4.void()]], arms: {} }), e4.enum("BumpSequenceResultCode", { bumpSequenceSuccess: 0, bumpSequenceBadSeq: -1 }), e4.union("BumpSequenceResult", { switchOn: e4.lookup("BumpSequenceResultCode"), switchName: "code", switches: [["bumpSequenceSuccess", e4.void()], ["bumpSequenceBadSeq", e4.void()]], arms: {} }), e4.enum("CreateClaimableBalanceResultCode", { createClaimableBalanceSuccess: 0, createClaimableBalanceMalformed: -1, createClaimableBalanceLowReserve: -2, createClaimableBalanceNoTrust: -3, createClaimableBalanceNotAuthorized: -4, createClaimableBalanceUnderfunded: -5 }), e4.union("CreateClaimableBalanceResult", { switchOn: e4.lookup("CreateClaimableBalanceResultCode"), switchName: "code", switches: [["createClaimableBalanceSuccess", "balanceId"], ["createClaimableBalanceMalformed", e4.void()], ["createClaimableBalanceLowReserve", e4.void()], ["createClaimableBalanceNoTrust", e4.void()], ["createClaimableBalanceNotAuthorized", e4.void()], ["createClaimableBalanceUnderfunded", e4.void()]], arms: { balanceId: e4.lookup("ClaimableBalanceId") } }), e4.enum("ClaimClaimableBalanceResultCode", { claimClaimableBalanceSuccess: 0, claimClaimableBalanceDoesNotExist: -1, claimClaimableBalanceCannotClaim: -2, claimClaimableBalanceLineFull: -3, claimClaimableBalanceNoTrust: -4, claimClaimableBalanceNotAuthorized: -5 }), e4.union("ClaimClaimableBalanceResult", { switchOn: e4.lookup("ClaimClaimableBalanceResultCode"), switchName: "code", switches: [["claimClaimableBalanceSuccess", e4.void()], ["claimClaimableBalanceDoesNotExist", e4.void()], ["claimClaimableBalanceCannotClaim", e4.void()], ["claimClaimableBalanceLineFull", e4.void()], ["claimClaimableBalanceNoTrust", e4.void()], ["claimClaimableBalanceNotAuthorized", e4.void()]], arms: {} }), e4.enum("BeginSponsoringFutureReservesResultCode", { beginSponsoringFutureReservesSuccess: 0, beginSponsoringFutureReservesMalformed: -1, beginSponsoringFutureReservesAlreadySponsored: -2, beginSponsoringFutureReservesRecursive: -3 }), e4.union("BeginSponsoringFutureReservesResult", { switchOn: e4.lookup("BeginSponsoringFutureReservesResultCode"), switchName: "code", switches: [["beginSponsoringFutureReservesSuccess", e4.void()], ["beginSponsoringFutureReservesMalformed", e4.void()], ["beginSponsoringFutureReservesAlreadySponsored", e4.void()], ["beginSponsoringFutureReservesRecursive", e4.void()]], arms: {} }), e4.enum("EndSponsoringFutureReservesResultCode", { endSponsoringFutureReservesSuccess: 0, endSponsoringFutureReservesNotSponsored: -1 }), e4.union("EndSponsoringFutureReservesResult", { switchOn: e4.lookup("EndSponsoringFutureReservesResultCode"), switchName: "code", switches: [["endSponsoringFutureReservesSuccess", e4.void()], ["endSponsoringFutureReservesNotSponsored", e4.void()]], arms: {} }), e4.enum("RevokeSponsorshipResultCode", { revokeSponsorshipSuccess: 0, revokeSponsorshipDoesNotExist: -1, revokeSponsorshipNotSponsor: -2, revokeSponsorshipLowReserve: -3, revokeSponsorshipOnlyTransferable: -4, revokeSponsorshipMalformed: -5 }), e4.union("RevokeSponsorshipResult", { switchOn: e4.lookup("RevokeSponsorshipResultCode"), switchName: "code", switches: [["revokeSponsorshipSuccess", e4.void()], ["revokeSponsorshipDoesNotExist", e4.void()], ["revokeSponsorshipNotSponsor", e4.void()], ["revokeSponsorshipLowReserve", e4.void()], ["revokeSponsorshipOnlyTransferable", e4.void()], ["revokeSponsorshipMalformed", e4.void()]], arms: {} }), e4.enum("ClawbackResultCode", { clawbackSuccess: 0, clawbackMalformed: -1, clawbackNotClawbackEnabled: -2, clawbackNoTrust: -3, clawbackUnderfunded: -4 }), e4.union("ClawbackResult", { switchOn: e4.lookup("ClawbackResultCode"), switchName: "code", switches: [["clawbackSuccess", e4.void()], ["clawbackMalformed", e4.void()], ["clawbackNotClawbackEnabled", e4.void()], ["clawbackNoTrust", e4.void()], ["clawbackUnderfunded", e4.void()]], arms: {} }), e4.enum("ClawbackClaimableBalanceResultCode", { clawbackClaimableBalanceSuccess: 0, clawbackClaimableBalanceDoesNotExist: -1, clawbackClaimableBalanceNotIssuer: -2, clawbackClaimableBalanceNotClawbackEnabled: -3 }), e4.union("ClawbackClaimableBalanceResult", { switchOn: e4.lookup("ClawbackClaimableBalanceResultCode"), switchName: "code", switches: [["clawbackClaimableBalanceSuccess", e4.void()], ["clawbackClaimableBalanceDoesNotExist", e4.void()], ["clawbackClaimableBalanceNotIssuer", e4.void()], ["clawbackClaimableBalanceNotClawbackEnabled", e4.void()]], arms: {} }), e4.enum("SetTrustLineFlagsResultCode", { setTrustLineFlagsSuccess: 0, setTrustLineFlagsMalformed: -1, setTrustLineFlagsNoTrustLine: -2, setTrustLineFlagsCantRevoke: -3, setTrustLineFlagsInvalidState: -4, setTrustLineFlagsLowReserve: -5 }), e4.union("SetTrustLineFlagsResult", { switchOn: e4.lookup("SetTrustLineFlagsResultCode"), switchName: "code", switches: [["setTrustLineFlagsSuccess", e4.void()], ["setTrustLineFlagsMalformed", e4.void()], ["setTrustLineFlagsNoTrustLine", e4.void()], ["setTrustLineFlagsCantRevoke", e4.void()], ["setTrustLineFlagsInvalidState", e4.void()], ["setTrustLineFlagsLowReserve", e4.void()]], arms: {} }), e4.enum("LiquidityPoolDepositResultCode", { liquidityPoolDepositSuccess: 0, liquidityPoolDepositMalformed: -1, liquidityPoolDepositNoTrust: -2, liquidityPoolDepositNotAuthorized: -3, liquidityPoolDepositUnderfunded: -4, liquidityPoolDepositLineFull: -5, liquidityPoolDepositBadPrice: -6, liquidityPoolDepositPoolFull: -7 }), e4.union("LiquidityPoolDepositResult", { switchOn: e4.lookup("LiquidityPoolDepositResultCode"), switchName: "code", switches: [["liquidityPoolDepositSuccess", e4.void()], ["liquidityPoolDepositMalformed", e4.void()], ["liquidityPoolDepositNoTrust", e4.void()], ["liquidityPoolDepositNotAuthorized", e4.void()], ["liquidityPoolDepositUnderfunded", e4.void()], ["liquidityPoolDepositLineFull", e4.void()], ["liquidityPoolDepositBadPrice", e4.void()], ["liquidityPoolDepositPoolFull", e4.void()]], arms: {} }), e4.enum("LiquidityPoolWithdrawResultCode", { liquidityPoolWithdrawSuccess: 0, liquidityPoolWithdrawMalformed: -1, liquidityPoolWithdrawNoTrust: -2, liquidityPoolWithdrawUnderfunded: -3, liquidityPoolWithdrawLineFull: -4, liquidityPoolWithdrawUnderMinimum: -5 }), e4.union("LiquidityPoolWithdrawResult", { switchOn: e4.lookup("LiquidityPoolWithdrawResultCode"), switchName: "code", switches: [["liquidityPoolWithdrawSuccess", e4.void()], ["liquidityPoolWithdrawMalformed", e4.void()], ["liquidityPoolWithdrawNoTrust", e4.void()], ["liquidityPoolWithdrawUnderfunded", e4.void()], ["liquidityPoolWithdrawLineFull", e4.void()], ["liquidityPoolWithdrawUnderMinimum", e4.void()]], arms: {} }), e4.enum("InvokeHostFunctionResultCode", { invokeHostFunctionSuccess: 0, invokeHostFunctionMalformed: -1, invokeHostFunctionTrapped: -2, invokeHostFunctionResourceLimitExceeded: -3, invokeHostFunctionEntryArchived: -4, invokeHostFunctionInsufficientRefundableFee: -5 }), e4.union("InvokeHostFunctionResult", { switchOn: e4.lookup("InvokeHostFunctionResultCode"), switchName: "code", switches: [["invokeHostFunctionSuccess", "success"], ["invokeHostFunctionMalformed", e4.void()], ["invokeHostFunctionTrapped", e4.void()], ["invokeHostFunctionResourceLimitExceeded", e4.void()], ["invokeHostFunctionEntryArchived", e4.void()], ["invokeHostFunctionInsufficientRefundableFee", e4.void()]], arms: { success: e4.lookup("Hash") } }), e4.enum("ExtendFootprintTtlResultCode", { extendFootprintTtlSuccess: 0, extendFootprintTtlMalformed: -1, extendFootprintTtlResourceLimitExceeded: -2, extendFootprintTtlInsufficientRefundableFee: -3 }), e4.union("ExtendFootprintTtlResult", { switchOn: e4.lookup("ExtendFootprintTtlResultCode"), switchName: "code", switches: [["extendFootprintTtlSuccess", e4.void()], ["extendFootprintTtlMalformed", e4.void()], ["extendFootprintTtlResourceLimitExceeded", e4.void()], ["extendFootprintTtlInsufficientRefundableFee", e4.void()]], arms: {} }), e4.enum("RestoreFootprintResultCode", { restoreFootprintSuccess: 0, restoreFootprintMalformed: -1, restoreFootprintResourceLimitExceeded: -2, restoreFootprintInsufficientRefundableFee: -3 }), e4.union("RestoreFootprintResult", { switchOn: e4.lookup("RestoreFootprintResultCode"), switchName: "code", switches: [["restoreFootprintSuccess", e4.void()], ["restoreFootprintMalformed", e4.void()], ["restoreFootprintResourceLimitExceeded", e4.void()], ["restoreFootprintInsufficientRefundableFee", e4.void()]], arms: {} }), e4.enum("OperationResultCode", { opInner: 0, opBadAuth: -1, opNoAccount: -2, opNotSupported: -3, opTooManySubentries: -4, opExceededWorkLimit: -5, opTooManySponsoring: -6 }), e4.union("OperationResultTr", { switchOn: e4.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountResult"], ["payment", "paymentResult"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveResult"], ["manageSellOffer", "manageSellOfferResult"], ["createPassiveSellOffer", "createPassiveSellOfferResult"], ["setOptions", "setOptionsResult"], ["changeTrust", "changeTrustResult"], ["allowTrust", "allowTrustResult"], ["accountMerge", "accountMergeResult"], ["inflation", "inflationResult"], ["manageData", "manageDataResult"], ["bumpSequence", "bumpSeqResult"], ["manageBuyOffer", "manageBuyOfferResult"], ["pathPaymentStrictSend", "pathPaymentStrictSendResult"], ["createClaimableBalance", "createClaimableBalanceResult"], ["claimClaimableBalance", "claimClaimableBalanceResult"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesResult"], ["endSponsoringFutureReserves", "endSponsoringFutureReservesResult"], ["revokeSponsorship", "revokeSponsorshipResult"], ["clawback", "clawbackResult"], ["clawbackClaimableBalance", "clawbackClaimableBalanceResult"], ["setTrustLineFlags", "setTrustLineFlagsResult"], ["liquidityPoolDeposit", "liquidityPoolDepositResult"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawResult"], ["invokeHostFunction", "invokeHostFunctionResult"], ["extendFootprintTtl", "extendFootprintTtlResult"], ["restoreFootprint", "restoreFootprintResult"]], arms: { createAccountResult: e4.lookup("CreateAccountResult"), paymentResult: e4.lookup("PaymentResult"), pathPaymentStrictReceiveResult: e4.lookup("PathPaymentStrictReceiveResult"), manageSellOfferResult: e4.lookup("ManageSellOfferResult"), createPassiveSellOfferResult: e4.lookup("ManageSellOfferResult"), setOptionsResult: e4.lookup("SetOptionsResult"), changeTrustResult: e4.lookup("ChangeTrustResult"), allowTrustResult: e4.lookup("AllowTrustResult"), accountMergeResult: e4.lookup("AccountMergeResult"), inflationResult: e4.lookup("InflationResult"), manageDataResult: e4.lookup("ManageDataResult"), bumpSeqResult: e4.lookup("BumpSequenceResult"), manageBuyOfferResult: e4.lookup("ManageBuyOfferResult"), pathPaymentStrictSendResult: e4.lookup("PathPaymentStrictSendResult"), createClaimableBalanceResult: e4.lookup("CreateClaimableBalanceResult"), claimClaimableBalanceResult: e4.lookup("ClaimClaimableBalanceResult"), beginSponsoringFutureReservesResult: e4.lookup("BeginSponsoringFutureReservesResult"), endSponsoringFutureReservesResult: e4.lookup("EndSponsoringFutureReservesResult"), revokeSponsorshipResult: e4.lookup("RevokeSponsorshipResult"), clawbackResult: e4.lookup("ClawbackResult"), clawbackClaimableBalanceResult: e4.lookup("ClawbackClaimableBalanceResult"), setTrustLineFlagsResult: e4.lookup("SetTrustLineFlagsResult"), liquidityPoolDepositResult: e4.lookup("LiquidityPoolDepositResult"), liquidityPoolWithdrawResult: e4.lookup("LiquidityPoolWithdrawResult"), invokeHostFunctionResult: e4.lookup("InvokeHostFunctionResult"), extendFootprintTtlResult: e4.lookup("ExtendFootprintTtlResult"), restoreFootprintResult: e4.lookup("RestoreFootprintResult") } }), e4.union("OperationResult", { switchOn: e4.lookup("OperationResultCode"), switchName: "code", switches: [["opInner", "tr"], ["opBadAuth", e4.void()], ["opNoAccount", e4.void()], ["opNotSupported", e4.void()], ["opTooManySubentries", e4.void()], ["opExceededWorkLimit", e4.void()], ["opTooManySponsoring", e4.void()]], arms: { tr: e4.lookup("OperationResultTr") } }), e4.enum("TransactionResultCode", { txFeeBumpInnerSuccess: 1, txSuccess: 0, txFailed: -1, txTooEarly: -2, txTooLate: -3, txMissingOperation: -4, txBadSeq: -5, txBadAuth: -6, txInsufficientBalance: -7, txNoAccount: -8, txInsufficientFee: -9, txBadAuthExtra: -10, txInternalError: -11, txNotSupported: -12, txFeeBumpInnerFailed: -13, txBadSponsorship: -14, txBadMinSeqAgeOrGap: -15, txMalformed: -16, txSorobanInvalid: -17 }), e4.union("InnerTransactionResultResult", { switchOn: e4.lookup("TransactionResultCode"), switchName: "code", switches: [["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", e4.void()], ["txTooLate", e4.void()], ["txMissingOperation", e4.void()], ["txBadSeq", e4.void()], ["txBadAuth", e4.void()], ["txInsufficientBalance", e4.void()], ["txNoAccount", e4.void()], ["txInsufficientFee", e4.void()], ["txBadAuthExtra", e4.void()], ["txInternalError", e4.void()], ["txNotSupported", e4.void()], ["txBadSponsorship", e4.void()], ["txBadMinSeqAgeOrGap", e4.void()], ["txMalformed", e4.void()], ["txSorobanInvalid", e4.void()]], arms: { results: e4.varArray(e4.lookup("OperationResult"), 2147483647) } }), e4.union("InnerTransactionResultExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("InnerTransactionResult", [["feeCharged", e4.lookup("Int64")], ["result", e4.lookup("InnerTransactionResultResult")], ["ext", e4.lookup("InnerTransactionResultExt")]]), e4.struct("InnerTransactionResultPair", [["transactionHash", e4.lookup("Hash")], ["result", e4.lookup("InnerTransactionResult")]]), e4.union("TransactionResultResult", { switchOn: e4.lookup("TransactionResultCode"), switchName: "code", switches: [["txFeeBumpInnerSuccess", "innerResultPair"], ["txFeeBumpInnerFailed", "innerResultPair"], ["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", e4.void()], ["txTooLate", e4.void()], ["txMissingOperation", e4.void()], ["txBadSeq", e4.void()], ["txBadAuth", e4.void()], ["txInsufficientBalance", e4.void()], ["txNoAccount", e4.void()], ["txInsufficientFee", e4.void()], ["txBadAuthExtra", e4.void()], ["txInternalError", e4.void()], ["txNotSupported", e4.void()], ["txBadSponsorship", e4.void()], ["txBadMinSeqAgeOrGap", e4.void()], ["txMalformed", e4.void()], ["txSorobanInvalid", e4.void()]], arms: { innerResultPair: e4.lookup("InnerTransactionResultPair"), results: e4.varArray(e4.lookup("OperationResult"), 2147483647) } }), e4.union("TransactionResultExt", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.struct("TransactionResult", [["feeCharged", e4.lookup("Int64")], ["result", e4.lookup("TransactionResultResult")], ["ext", e4.lookup("TransactionResultExt")]]), e4.typedef("Hash", e4.opaque(32)), e4.typedef("Uint256", e4.opaque(32)), e4.typedef("Uint32", e4.uint()), e4.typedef("Int32", e4.int()), e4.typedef("Uint64", e4.uhyper()), e4.typedef("Int64", e4.hyper()), e4.typedef("TimePoint", e4.lookup("Uint64")), e4.typedef("Duration", e4.lookup("Uint64")), e4.union("ExtensionPoint", { switchOn: e4.int(), switchName: "v", switches: [[0, e4.void()]], arms: {} }), e4.enum("CryptoKeyType", { keyTypeEd25519: 0, keyTypePreAuthTx: 1, keyTypeHashX: 2, keyTypeEd25519SignedPayload: 3, keyTypeMuxedEd25519: 256 }), e4.enum("PublicKeyType", { publicKeyTypeEd25519: 0 }), e4.enum("SignerKeyType", { signerKeyTypeEd25519: 0, signerKeyTypePreAuthTx: 1, signerKeyTypeHashX: 2, signerKeyTypeEd25519SignedPayload: 3 }), e4.union("PublicKey", { switchOn: e4.lookup("PublicKeyType"), switchName: "type", switches: [["publicKeyTypeEd25519", "ed25519"]], arms: { ed25519: e4.lookup("Uint256") } }), e4.struct("SignerKeyEd25519SignedPayload", [["ed25519", e4.lookup("Uint256")], ["payload", e4.varOpaque(64)]]), e4.union("SignerKey", { switchOn: e4.lookup("SignerKeyType"), switchName: "type", switches: [["signerKeyTypeEd25519", "ed25519"], ["signerKeyTypePreAuthTx", "preAuthTx"], ["signerKeyTypeHashX", "hashX"], ["signerKeyTypeEd25519SignedPayload", "ed25519SignedPayload"]], arms: { ed25519: e4.lookup("Uint256"), preAuthTx: e4.lookup("Uint256"), hashX: e4.lookup("Uint256"), ed25519SignedPayload: e4.lookup("SignerKeyEd25519SignedPayload") } }), e4.typedef("Signature", e4.varOpaque(64)), e4.typedef("SignatureHint", e4.opaque(4)), e4.typedef("NodeId", e4.lookup("PublicKey")), e4.typedef("AccountId", e4.lookup("PublicKey")), e4.struct("Curve25519Secret", [["key", e4.opaque(32)]]), e4.struct("Curve25519Public", [["key", e4.opaque(32)]]), e4.struct("HmacSha256Key", [["key", e4.opaque(32)]]), e4.struct("HmacSha256Mac", [["mac", e4.opaque(32)]]), e4.enum("ScValType", { scvBool: 0, scvVoid: 1, scvError: 2, scvU32: 3, scvI32: 4, scvU64: 5, scvI64: 6, scvTimepoint: 7, scvDuration: 8, scvU128: 9, scvI128: 10, scvU256: 11, scvI256: 12, scvBytes: 13, scvString: 14, scvSymbol: 15, scvVec: 16, scvMap: 17, scvAddress: 18, scvContractInstance: 19, scvLedgerKeyContractInstance: 20, scvLedgerKeyNonce: 21 }), e4.enum("ScErrorType", { sceContract: 0, sceWasmVm: 1, sceContext: 2, sceStorage: 3, sceObject: 4, sceCrypto: 5, sceEvents: 6, sceBudget: 7, sceValue: 8, sceAuth: 9 }), e4.enum("ScErrorCode", { scecArithDomain: 0, scecIndexBounds: 1, scecInvalidInput: 2, scecMissingValue: 3, scecExistingValue: 4, scecExceededLimit: 5, scecInvalidAction: 6, scecInternalError: 7, scecUnexpectedType: 8, scecUnexpectedSize: 9 }), e4.union("ScError", { switchOn: e4.lookup("ScErrorType"), switchName: "type", switches: [["sceContract", "contractCode"], ["sceWasmVm", "code"], ["sceContext", "code"], ["sceStorage", "code"], ["sceObject", "code"], ["sceCrypto", "code"], ["sceEvents", "code"], ["sceBudget", "code"], ["sceValue", "code"], ["sceAuth", "code"]], arms: { contractCode: e4.lookup("Uint32"), code: e4.lookup("ScErrorCode") } }), e4.struct("UInt128Parts", [["hi", e4.lookup("Uint64")], ["lo", e4.lookup("Uint64")]]), e4.struct("Int128Parts", [["hi", e4.lookup("Int64")], ["lo", e4.lookup("Uint64")]]), e4.struct("UInt256Parts", [["hiHi", e4.lookup("Uint64")], ["hiLo", e4.lookup("Uint64")], ["loHi", e4.lookup("Uint64")], ["loLo", e4.lookup("Uint64")]]), e4.struct("Int256Parts", [["hiHi", e4.lookup("Int64")], ["hiLo", e4.lookup("Uint64")], ["loHi", e4.lookup("Uint64")], ["loLo", e4.lookup("Uint64")]]), e4.enum("ContractExecutableType", { contractExecutableWasm: 0, contractExecutableStellarAsset: 1 }), e4.union("ContractExecutable", { switchOn: e4.lookup("ContractExecutableType"), switchName: "type", switches: [["contractExecutableWasm", "wasmHash"], ["contractExecutableStellarAsset", e4.void()]], arms: { wasmHash: e4.lookup("Hash") } }), e4.enum("ScAddressType", { scAddressTypeAccount: 0, scAddressTypeContract: 1 }), e4.union("ScAddress", { switchOn: e4.lookup("ScAddressType"), switchName: "type", switches: [["scAddressTypeAccount", "accountId"], ["scAddressTypeContract", "contractId"]], arms: { accountId: e4.lookup("AccountId"), contractId: e4.lookup("Hash") } }), e4.const("SCSYMBOL_LIMIT", 32), e4.typedef("ScVec", e4.varArray(e4.lookup("ScVal"), 2147483647)), e4.typedef("ScMap", e4.varArray(e4.lookup("ScMapEntry"), 2147483647)), e4.typedef("ScBytes", e4.varOpaque()), e4.typedef("ScString", e4.string()), e4.typedef("ScSymbol", e4.string(32)), e4.struct("ScNonceKey", [["nonce", e4.lookup("Int64")]]), e4.struct("ScContractInstance", [["executable", e4.lookup("ContractExecutable")], ["storage", e4.option(e4.lookup("ScMap"))]]), e4.union("ScVal", { switchOn: e4.lookup("ScValType"), switchName: "type", switches: [["scvBool", "b"], ["scvVoid", e4.void()], ["scvError", "error"], ["scvU32", "u32"], ["scvI32", "i32"], ["scvU64", "u64"], ["scvI64", "i64"], ["scvTimepoint", "timepoint"], ["scvDuration", "duration"], ["scvU128", "u128"], ["scvI128", "i128"], ["scvU256", "u256"], ["scvI256", "i256"], ["scvBytes", "bytes"], ["scvString", "str"], ["scvSymbol", "sym"], ["scvVec", "vec"], ["scvMap", "map"], ["scvAddress", "address"], ["scvLedgerKeyContractInstance", e4.void()], ["scvLedgerKeyNonce", "nonceKey"], ["scvContractInstance", "instance"]], arms: { b: e4.bool(), error: e4.lookup("ScError"), u32: e4.lookup("Uint32"), i32: e4.lookup("Int32"), u64: e4.lookup("Uint64"), i64: e4.lookup("Int64"), timepoint: e4.lookup("TimePoint"), duration: e4.lookup("Duration"), u128: e4.lookup("UInt128Parts"), i128: e4.lookup("Int128Parts"), u256: e4.lookup("UInt256Parts"), i256: e4.lookup("Int256Parts"), bytes: e4.lookup("ScBytes"), str: e4.lookup("ScString"), sym: e4.lookup("ScSymbol"), vec: e4.option(e4.lookup("ScVec")), map: e4.option(e4.lookup("ScMap")), address: e4.lookup("ScAddress"), nonceKey: e4.lookup("ScNonceKey"), instance: e4.lookup("ScContractInstance") } }), e4.struct("ScMapEntry", [["key", e4.lookup("ScVal")], ["val", e4.lookup("ScVal")]]), e4.enum("ScEnvMetaKind", { scEnvMetaKindInterfaceVersion: 0 }), e4.union("ScEnvMetaEntry", { switchOn: e4.lookup("ScEnvMetaKind"), switchName: "kind", switches: [["scEnvMetaKindInterfaceVersion", "interfaceVersion"]], arms: { interfaceVersion: e4.lookup("Uint64") } }), e4.struct("ScMetaV0", [["key", e4.string()], ["val", e4.string()]]), e4.enum("ScMetaKind", { scMetaV0: 0 }), e4.union("ScMetaEntry", { switchOn: e4.lookup("ScMetaKind"), switchName: "kind", switches: [["scMetaV0", "v0"]], arms: { v0: e4.lookup("ScMetaV0") } }), e4.const("SC_SPEC_DOC_LIMIT", 1024), e4.enum("ScSpecType", { scSpecTypeVal: 0, scSpecTypeBool: 1, scSpecTypeVoid: 2, scSpecTypeError: 3, scSpecTypeU32: 4, scSpecTypeI32: 5, scSpecTypeU64: 6, scSpecTypeI64: 7, scSpecTypeTimepoint: 8, scSpecTypeDuration: 9, scSpecTypeU128: 10, scSpecTypeI128: 11, scSpecTypeU256: 12, scSpecTypeI256: 13, scSpecTypeBytes: 14, scSpecTypeString: 16, scSpecTypeSymbol: 17, scSpecTypeAddress: 19, scSpecTypeOption: 1e3, scSpecTypeResult: 1001, scSpecTypeVec: 1002, scSpecTypeMap: 1004, scSpecTypeTuple: 1005, scSpecTypeBytesN: 1006, scSpecTypeUdt: 2e3 }), e4.struct("ScSpecTypeOption", [["valueType", e4.lookup("ScSpecTypeDef")]]), e4.struct("ScSpecTypeResult", [["okType", e4.lookup("ScSpecTypeDef")], ["errorType", e4.lookup("ScSpecTypeDef")]]), e4.struct("ScSpecTypeVec", [["elementType", e4.lookup("ScSpecTypeDef")]]), e4.struct("ScSpecTypeMap", [["keyType", e4.lookup("ScSpecTypeDef")], ["valueType", e4.lookup("ScSpecTypeDef")]]), e4.struct("ScSpecTypeTuple", [["valueTypes", e4.varArray(e4.lookup("ScSpecTypeDef"), 12)]]), e4.struct("ScSpecTypeBytesN", [["n", e4.lookup("Uint32")]]), e4.struct("ScSpecTypeUdt", [["name", e4.string(60)]]), e4.union("ScSpecTypeDef", { switchOn: e4.lookup("ScSpecType"), switchName: "type", switches: [["scSpecTypeVal", e4.void()], ["scSpecTypeBool", e4.void()], ["scSpecTypeVoid", e4.void()], ["scSpecTypeError", e4.void()], ["scSpecTypeU32", e4.void()], ["scSpecTypeI32", e4.void()], ["scSpecTypeU64", e4.void()], ["scSpecTypeI64", e4.void()], ["scSpecTypeTimepoint", e4.void()], ["scSpecTypeDuration", e4.void()], ["scSpecTypeU128", e4.void()], ["scSpecTypeI128", e4.void()], ["scSpecTypeU256", e4.void()], ["scSpecTypeI256", e4.void()], ["scSpecTypeBytes", e4.void()], ["scSpecTypeString", e4.void()], ["scSpecTypeSymbol", e4.void()], ["scSpecTypeAddress", e4.void()], ["scSpecTypeOption", "option"], ["scSpecTypeResult", "result"], ["scSpecTypeVec", "vec"], ["scSpecTypeMap", "map"], ["scSpecTypeTuple", "tuple"], ["scSpecTypeBytesN", "bytesN"], ["scSpecTypeUdt", "udt"]], arms: { option: e4.lookup("ScSpecTypeOption"), result: e4.lookup("ScSpecTypeResult"), vec: e4.lookup("ScSpecTypeVec"), map: e4.lookup("ScSpecTypeMap"), tuple: e4.lookup("ScSpecTypeTuple"), bytesN: e4.lookup("ScSpecTypeBytesN"), udt: e4.lookup("ScSpecTypeUdt") } }), e4.struct("ScSpecUdtStructFieldV0", [["doc", e4.string(t4)], ["name", e4.string(30)], ["type", e4.lookup("ScSpecTypeDef")]]), e4.struct("ScSpecUdtStructV0", [["doc", e4.string(t4)], ["lib", e4.string(80)], ["name", e4.string(60)], ["fields", e4.varArray(e4.lookup("ScSpecUdtStructFieldV0"), 40)]]), e4.struct("ScSpecUdtUnionCaseVoidV0", [["doc", e4.string(t4)], ["name", e4.string(60)]]), e4.struct("ScSpecUdtUnionCaseTupleV0", [["doc", e4.string(t4)], ["name", e4.string(60)], ["type", e4.varArray(e4.lookup("ScSpecTypeDef"), 12)]]), e4.enum("ScSpecUdtUnionCaseV0Kind", { scSpecUdtUnionCaseVoidV0: 0, scSpecUdtUnionCaseTupleV0: 1 }), e4.union("ScSpecUdtUnionCaseV0", { switchOn: e4.lookup("ScSpecUdtUnionCaseV0Kind"), switchName: "kind", switches: [["scSpecUdtUnionCaseVoidV0", "voidCase"], ["scSpecUdtUnionCaseTupleV0", "tupleCase"]], arms: { voidCase: e4.lookup("ScSpecUdtUnionCaseVoidV0"), tupleCase: e4.lookup("ScSpecUdtUnionCaseTupleV0") } }), e4.struct("ScSpecUdtUnionV0", [["doc", e4.string(t4)], ["lib", e4.string(80)], ["name", e4.string(60)], ["cases", e4.varArray(e4.lookup("ScSpecUdtUnionCaseV0"), 50)]]), e4.struct("ScSpecUdtEnumCaseV0", [["doc", e4.string(t4)], ["name", e4.string(60)], ["value", e4.lookup("Uint32")]]), e4.struct("ScSpecUdtEnumV0", [["doc", e4.string(t4)], ["lib", e4.string(80)], ["name", e4.string(60)], ["cases", e4.varArray(e4.lookup("ScSpecUdtEnumCaseV0"), 50)]]), e4.struct("ScSpecUdtErrorEnumCaseV0", [["doc", e4.string(t4)], ["name", e4.string(60)], ["value", e4.lookup("Uint32")]]), e4.struct("ScSpecUdtErrorEnumV0", [["doc", e4.string(t4)], ["lib", e4.string(80)], ["name", e4.string(60)], ["cases", e4.varArray(e4.lookup("ScSpecUdtErrorEnumCaseV0"), 50)]]), e4.struct("ScSpecFunctionInputV0", [["doc", e4.string(t4)], ["name", e4.string(30)], ["type", e4.lookup("ScSpecTypeDef")]]), e4.struct("ScSpecFunctionV0", [["doc", e4.string(t4)], ["name", e4.lookup("ScSymbol")], ["inputs", e4.varArray(e4.lookup("ScSpecFunctionInputV0"), 10)], ["outputs", e4.varArray(e4.lookup("ScSpecTypeDef"), 1)]]), e4.enum("ScSpecEntryKind", { scSpecEntryFunctionV0: 0, scSpecEntryUdtStructV0: 1, scSpecEntryUdtUnionV0: 2, scSpecEntryUdtEnumV0: 3, scSpecEntryUdtErrorEnumV0: 4 }), e4.union("ScSpecEntry", { switchOn: e4.lookup("ScSpecEntryKind"), switchName: "kind", switches: [["scSpecEntryFunctionV0", "functionV0"], ["scSpecEntryUdtStructV0", "udtStructV0"], ["scSpecEntryUdtUnionV0", "udtUnionV0"], ["scSpecEntryUdtEnumV0", "udtEnumV0"], ["scSpecEntryUdtErrorEnumV0", "udtErrorEnumV0"]], arms: { functionV0: e4.lookup("ScSpecFunctionV0"), udtStructV0: e4.lookup("ScSpecUdtStructV0"), udtUnionV0: e4.lookup("ScSpecUdtUnionV0"), udtEnumV0: e4.lookup("ScSpecUdtEnumV0"), udtErrorEnumV0: e4.lookup("ScSpecUdtErrorEnumV0") } }), e4.struct("ConfigSettingContractExecutionLanesV0", [["ledgerMaxTxCount", e4.lookup("Uint32")]]), e4.struct("ConfigSettingContractComputeV0", [["ledgerMaxInstructions", e4.lookup("Int64")], ["txMaxInstructions", e4.lookup("Int64")], ["feeRatePerInstructionsIncrement", e4.lookup("Int64")], ["txMemoryLimit", e4.lookup("Uint32")]]), e4.struct("ConfigSettingContractLedgerCostV0", [["ledgerMaxReadLedgerEntries", e4.lookup("Uint32")], ["ledgerMaxReadBytes", e4.lookup("Uint32")], ["ledgerMaxWriteLedgerEntries", e4.lookup("Uint32")], ["ledgerMaxWriteBytes", e4.lookup("Uint32")], ["txMaxReadLedgerEntries", e4.lookup("Uint32")], ["txMaxReadBytes", e4.lookup("Uint32")], ["txMaxWriteLedgerEntries", e4.lookup("Uint32")], ["txMaxWriteBytes", e4.lookup("Uint32")], ["feeReadLedgerEntry", e4.lookup("Int64")], ["feeWriteLedgerEntry", e4.lookup("Int64")], ["feeRead1Kb", e4.lookup("Int64")], ["bucketListTargetSizeBytes", e4.lookup("Int64")], ["writeFee1KbBucketListLow", e4.lookup("Int64")], ["writeFee1KbBucketListHigh", e4.lookup("Int64")], ["bucketListWriteFeeGrowthFactor", e4.lookup("Uint32")]]), e4.struct("ConfigSettingContractHistoricalDataV0", [["feeHistorical1Kb", e4.lookup("Int64")]]), e4.struct("ConfigSettingContractEventsV0", [["txMaxContractEventsSizeBytes", e4.lookup("Uint32")], ["feeContractEvents1Kb", e4.lookup("Int64")]]), e4.struct("ConfigSettingContractBandwidthV0", [["ledgerMaxTxsSizeBytes", e4.lookup("Uint32")], ["txMaxSizeBytes", e4.lookup("Uint32")], ["feeTxSize1Kb", e4.lookup("Int64")]]), e4.enum("ContractCostType", { wasmInsnExec: 0, memAlloc: 1, memCpy: 2, memCmp: 3, dispatchHostFunction: 4, visitObject: 5, valSer: 6, valDeser: 7, computeSha256Hash: 8, computeEd25519PubKey: 9, verifyEd25519Sig: 10, vmInstantiation: 11, vmCachedInstantiation: 12, invokeVmFunction: 13, computeKeccak256Hash: 14, decodeEcdsaCurve256Sig: 15, recoverEcdsaSecp256k1Key: 16, int256AddSub: 17, int256Mul: 18, int256Div: 19, int256Pow: 20, int256Shift: 21, chaCha20DrawBytes: 22, parseWasmInstructions: 23, parseWasmFunctions: 24, parseWasmGlobals: 25, parseWasmTableEntries: 26, parseWasmTypes: 27, parseWasmDataSegments: 28, parseWasmElemSegments: 29, parseWasmImports: 30, parseWasmExports: 31, parseWasmDataSegmentBytes: 32, instantiateWasmInstructions: 33, instantiateWasmFunctions: 34, instantiateWasmGlobals: 35, instantiateWasmTableEntries: 36, instantiateWasmTypes: 37, instantiateWasmDataSegments: 38, instantiateWasmElemSegments: 39, instantiateWasmImports: 40, instantiateWasmExports: 41, instantiateWasmDataSegmentBytes: 42, sec1DecodePointUncompressed: 43, verifyEcdsaSecp256r1Sig: 44 }), e4.struct("ContractCostParamEntry", [["ext", e4.lookup("ExtensionPoint")], ["constTerm", e4.lookup("Int64")], ["linearTerm", e4.lookup("Int64")]]), e4.struct("StateArchivalSettings", [["maxEntryTtl", e4.lookup("Uint32")], ["minTemporaryTtl", e4.lookup("Uint32")], ["minPersistentTtl", e4.lookup("Uint32")], ["persistentRentRateDenominator", e4.lookup("Int64")], ["tempRentRateDenominator", e4.lookup("Int64")], ["maxEntriesToArchive", e4.lookup("Uint32")], ["bucketListSizeWindowSampleSize", e4.lookup("Uint32")], ["bucketListWindowSamplePeriod", e4.lookup("Uint32")], ["evictionScanSize", e4.lookup("Uint32")], ["startingEvictionScanLevel", e4.lookup("Uint32")]]), e4.struct("EvictionIterator", [["bucketListLevel", e4.lookup("Uint32")], ["isCurrBucket", e4.bool()], ["bucketFileOffset", e4.lookup("Uint64")]]), e4.const("CONTRACT_COST_COUNT_LIMIT", 1024), e4.typedef("ContractCostParams", e4.varArray(e4.lookup("ContractCostParamEntry"), e4.lookup("CONTRACT_COST_COUNT_LIMIT"))), e4.enum("ConfigSettingId", { configSettingContractMaxSizeBytes: 0, configSettingContractComputeV0: 1, configSettingContractLedgerCostV0: 2, configSettingContractHistoricalDataV0: 3, configSettingContractEventsV0: 4, configSettingContractBandwidthV0: 5, configSettingContractCostParamsCpuInstructions: 6, configSettingContractCostParamsMemoryBytes: 7, configSettingContractDataKeySizeBytes: 8, configSettingContractDataEntrySizeBytes: 9, configSettingStateArchival: 10, configSettingContractExecutionLanes: 11, configSettingBucketlistSizeWindow: 12, configSettingEvictionIterator: 13 }), e4.union("ConfigSettingEntry", { switchOn: e4.lookup("ConfigSettingId"), switchName: "configSettingId", switches: [["configSettingContractMaxSizeBytes", "contractMaxSizeBytes"], ["configSettingContractComputeV0", "contractCompute"], ["configSettingContractLedgerCostV0", "contractLedgerCost"], ["configSettingContractHistoricalDataV0", "contractHistoricalData"], ["configSettingContractEventsV0", "contractEvents"], ["configSettingContractBandwidthV0", "contractBandwidth"], ["configSettingContractCostParamsCpuInstructions", "contractCostParamsCpuInsns"], ["configSettingContractCostParamsMemoryBytes", "contractCostParamsMemBytes"], ["configSettingContractDataKeySizeBytes", "contractDataKeySizeBytes"], ["configSettingContractDataEntrySizeBytes", "contractDataEntrySizeBytes"], ["configSettingStateArchival", "stateArchivalSettings"], ["configSettingContractExecutionLanes", "contractExecutionLanes"], ["configSettingBucketlistSizeWindow", "bucketListSizeWindow"], ["configSettingEvictionIterator", "evictionIterator"]], arms: { contractMaxSizeBytes: e4.lookup("Uint32"), contractCompute: e4.lookup("ConfigSettingContractComputeV0"), contractLedgerCost: e4.lookup("ConfigSettingContractLedgerCostV0"), contractHistoricalData: e4.lookup("ConfigSettingContractHistoricalDataV0"), contractEvents: e4.lookup("ConfigSettingContractEventsV0"), contractBandwidth: e4.lookup("ConfigSettingContractBandwidthV0"), contractCostParamsCpuInsns: e4.lookup("ContractCostParams"), contractCostParamsMemBytes: e4.lookup("ContractCostParams"), contractDataKeySizeBytes: e4.lookup("Uint32"), contractDataEntrySizeBytes: e4.lookup("Uint32"), stateArchivalSettings: e4.lookup("StateArchivalSettings"), contractExecutionLanes: e4.lookup("ConfigSettingContractExecutionLanesV0"), bucketListSizeWindow: e4.varArray(e4.lookup("Uint64"), 2147483647), evictionIterator: e4.lookup("EvictionIterator") } });
        });
        t3.default = i;
      }, 5578: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.LiquidityPoolFeeV18 = void 0, t3.getLiquidityPoolId = function(e4) {
          var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if ("constant_product" !== e4) throw new Error("liquidityPoolType is invalid");
          var r5 = t4.assetA, o3 = t4.assetB, c = t4.fee;
          if (!(r5 && r5 instanceof a.Asset)) throw new Error("assetA is invalid");
          if (!(o3 && o3 instanceof a.Asset)) throw new Error("assetB is invalid");
          if (!c || c !== u) throw new Error("fee is invalid");
          if (-1 !== a.Asset.compare(r5, o3)) throw new Error("Assets are not in lexicographic order");
          var l2 = i.default.LiquidityPoolType.liquidityPoolConstantProduct().toXDR(), f = new i.default.LiquidityPoolConstantProductParameters({ assetA: r5.toXDRObject(), assetB: o3.toXDRObject(), fee: c }).toXDR(), p = n2.concat([l2, f]);
          return (0, s.hash)(p);
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(1764), s = r4(9152);
        var u = t3.LiquidityPoolFeeV18 = 30;
      }, 9152: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.hash = function(e4) {
          var t4 = new n2.sha256();
          return t4.update(e4, "utf8"), t4.digest();
        };
        var n2 = r4(2802);
      }, 356: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true });
        var n2 = { xdr: true, cereal: true, hash: true, sign: true, verify: true, FastSigning: true, getLiquidityPoolId: true, LiquidityPoolFeeV18: true, Keypair: true, UnsignedHyper: true, Hyper: true, TransactionBase: true, Transaction: true, FeeBumpTransaction: true, TransactionBuilder: true, TimeoutInfinite: true, BASE_FEE: true, Asset: true, LiquidityPoolAsset: true, LiquidityPoolId: true, Operation: true, AuthRequiredFlag: true, AuthRevocableFlag: true, AuthImmutableFlag: true, AuthClawbackEnabledFlag: true, Account: true, MuxedAccount: true, Claimant: true, Networks: true, StrKey: true, SignerKey: true, Soroban: true, decodeAddressToMuxedAccount: true, encodeMuxedAccountToAddress: true, extractBaseAddress: true, encodeMuxedAccount: true, Contract: true, Address: true };
        Object.defineProperty(t3, "Account", { enumerable: true, get: function() {
          return w.Account;
        } }), Object.defineProperty(t3, "Address", { enumerable: true, get: function() {
          return P.Address;
        } }), Object.defineProperty(t3, "Asset", { enumerable: true, get: function() {
          return y.Asset;
        } }), Object.defineProperty(t3, "AuthClawbackEnabledFlag", { enumerable: true, get: function() {
          return g.AuthClawbackEnabledFlag;
        } }), Object.defineProperty(t3, "AuthImmutableFlag", { enumerable: true, get: function() {
          return g.AuthImmutableFlag;
        } }), Object.defineProperty(t3, "AuthRequiredFlag", { enumerable: true, get: function() {
          return g.AuthRequiredFlag;
        } }), Object.defineProperty(t3, "AuthRevocableFlag", { enumerable: true, get: function() {
          return g.AuthRevocableFlag;
        } }), Object.defineProperty(t3, "BASE_FEE", { enumerable: true, get: function() {
          return d.BASE_FEE;
        } }), Object.defineProperty(t3, "Claimant", { enumerable: true, get: function() {
          return E.Claimant;
        } }), Object.defineProperty(t3, "Contract", { enumerable: true, get: function() {
          return A.Contract;
        } }), Object.defineProperty(t3, "FastSigning", { enumerable: true, get: function() {
          return s.FastSigning;
        } }), Object.defineProperty(t3, "FeeBumpTransaction", { enumerable: true, get: function() {
          return h.FeeBumpTransaction;
        } }), Object.defineProperty(t3, "Hyper", { enumerable: true, get: function() {
          return l2.Hyper;
        } }), Object.defineProperty(t3, "Keypair", { enumerable: true, get: function() {
          return c.Keypair;
        } }), Object.defineProperty(t3, "LiquidityPoolAsset", { enumerable: true, get: function() {
          return m.LiquidityPoolAsset;
        } }), Object.defineProperty(t3, "LiquidityPoolFeeV18", { enumerable: true, get: function() {
          return u.LiquidityPoolFeeV18;
        } }), Object.defineProperty(t3, "LiquidityPoolId", { enumerable: true, get: function() {
          return v.LiquidityPoolId;
        } }), Object.defineProperty(t3, "MuxedAccount", { enumerable: true, get: function() {
          return S.MuxedAccount;
        } }), Object.defineProperty(t3, "Networks", { enumerable: true, get: function() {
          return _.Networks;
        } }), Object.defineProperty(t3, "Operation", { enumerable: true, get: function() {
          return g.Operation;
        } }), Object.defineProperty(t3, "SignerKey", { enumerable: true, get: function() {
          return T.SignerKey;
        } }), Object.defineProperty(t3, "Soroban", { enumerable: true, get: function() {
          return O.Soroban;
        } }), Object.defineProperty(t3, "StrKey", { enumerable: true, get: function() {
          return k.StrKey;
        } }), Object.defineProperty(t3, "TimeoutInfinite", { enumerable: true, get: function() {
          return d.TimeoutInfinite;
        } }), Object.defineProperty(t3, "Transaction", { enumerable: true, get: function() {
          return p.Transaction;
        } }), Object.defineProperty(t3, "TransactionBase", { enumerable: true, get: function() {
          return f.TransactionBase;
        } }), Object.defineProperty(t3, "TransactionBuilder", { enumerable: true, get: function() {
          return d.TransactionBuilder;
        } }), Object.defineProperty(t3, "UnsignedHyper", { enumerable: true, get: function() {
          return l2.UnsignedHyper;
        } }), Object.defineProperty(t3, "cereal", { enumerable: true, get: function() {
          return i.default;
        } }), Object.defineProperty(t3, "decodeAddressToMuxedAccount", { enumerable: true, get: function() {
          return x.decodeAddressToMuxedAccount;
        } }), t3.default = void 0, Object.defineProperty(t3, "encodeMuxedAccount", { enumerable: true, get: function() {
          return x.encodeMuxedAccount;
        } }), Object.defineProperty(t3, "encodeMuxedAccountToAddress", { enumerable: true, get: function() {
          return x.encodeMuxedAccountToAddress;
        } }), Object.defineProperty(t3, "extractBaseAddress", { enumerable: true, get: function() {
          return x.extractBaseAddress;
        } }), Object.defineProperty(t3, "getLiquidityPoolId", { enumerable: true, get: function() {
          return u.getLiquidityPoolId;
        } }), Object.defineProperty(t3, "hash", { enumerable: true, get: function() {
          return a.hash;
        } }), Object.defineProperty(t3, "sign", { enumerable: true, get: function() {
          return s.sign;
        } }), Object.defineProperty(t3, "verify", { enumerable: true, get: function() {
          return s.verify;
        } }), Object.defineProperty(t3, "xdr", { enumerable: true, get: function() {
          return o2.default;
        } });
        var o2 = N(r4(1918)), i = N(r4(3335)), a = r4(9152), s = r4(15), u = r4(5578), c = r4(6691), l2 = r4(3740), f = r4(3758), p = r4(380), h = r4(9260), d = r4(6396), y = r4(1764), m = r4(2262), v = r4(9353), g = r4(7237), b = r4(4172);
        Object.keys(b).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === b[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return b[e4];
          } }));
        });
        var w = r4(2135), S = r4(2243), E = r4(1387), _ = r4(6202), k = r4(7120), T = r4(225), O = r4(4062), x = r4(6160), A = r4(7452), P = r4(1180), R = r4(8549);
        Object.keys(R).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === R[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return R[e4];
          } }));
        });
        var j = r4(7177);
        Object.keys(j).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === j[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return j[e4];
          } }));
        });
        var I = r4(3919);
        Object.keys(I).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === I[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return I[e4];
          } }));
        });
        var C = r4(4842);
        Object.keys(C).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === C[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return C[e4];
          } }));
        });
        var L = r4(5328);
        Object.keys(L).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === L[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return L[e4];
          } }));
        });
        var B = r4(3564);
        function N(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        Object.keys(B).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && (Object.prototype.hasOwnProperty.call(n2, e4) || e4 in t3 && t3[e4] === B[e4] || Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return B[e4];
          } }));
        });
        t3.default = e3.exports;
      }, 3564: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.buildInvocationTree = function e4(t4) {
          var r5 = t4.function(), a2 = {}, s = r5.value();
          switch (r5.switch().value) {
            case 0:
              a2.type = "execute", a2.args = { source: o2.Address.fromScAddress(s.contractAddress()).toString(), function: s.functionName(), args: s.args().map(function(e5) {
                return (0, i.scValToNative)(e5);
              }) };
              break;
            case 1:
              a2.type = "create", a2.args = {};
              var u = [s.executable(), s.contractIdPreimage()], c = u[0], l2 = u[1];
              if (!!c.switch().value != !!l2.switch().value) throw new Error("creation function appears invalid: ".concat(JSON.stringify(s), " (should be wasm+address or token+asset)"));
              switch (c.switch().value) {
                case 0:
                  var f = l2.fromAddress();
                  a2.args.type = "wasm", a2.args.wasm = { salt: f.salt().toString("hex"), hash: c.wasmHash().toString("hex"), address: o2.Address.fromScAddress(f.address()).toString() };
                  break;
                case 1:
                  a2.args.type = "sac", a2.args.asset = n2.Asset.fromOperation(l2.fromAsset()).toString();
                  break;
                default:
                  throw new Error("unknown creation type: ".concat(JSON.stringify(c)));
              }
              break;
            default:
              throw new Error("unknown invocation type (".concat(r5.switch(), "): ").concat(JSON.stringify(r5)));
          }
          return a2.invocations = t4.subInvocations().map(function(t5) {
            return e4(t5);
          }), a2;
        }, t3.walkInvocationTree = function(e4, t4) {
          a(e4, 1, t4);
        };
        var n2 = r4(1764), o2 = r4(1180), i = r4(7177);
        function a(e4, t4, r5, n3) {
          false !== r5(e4, t4, n3) && e4.subInvocations().forEach(function(n4) {
            return a(n4, t4 + 1, r5, e4);
          });
        }
      }, 3335: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = void 0;
        var n2 = r4(3740), o2 = { XdrWriter: n2.XdrWriter, XdrReader: n2.XdrReader };
        t3.default = o2;
      }, 6691: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Keypair = void 0;
        var o2 = c(r4(4940)), i = r4(15), a = r4(7120), s = r4(9152), u = c(r4(1918));
        function c(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        function l2(e4) {
          return l2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, l2(e4);
        }
        function f(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, p(n3.key), n3);
          }
        }
        function p(e4) {
          var t4 = function(e5, t5) {
            if ("object" != l2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != l2(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == l2(t4) ? t4 : t4 + "";
        }
        t3.Keypair = function() {
          return e4 = function e5(t5) {
            if (function(e6, t6) {
              if (!(e6 instanceof t6)) throw new TypeError("Cannot call a class as a function");
            }(this, e5), "ed25519" !== t5.type) throw new Error("Invalid keys type");
            if (this.type = t5.type, t5.secretKey) {
              if (t5.secretKey = n2.from(t5.secretKey), 32 !== t5.secretKey.length) throw new Error("secretKey length is invalid");
              if (this._secretSeed = t5.secretKey, this._publicKey = (0, i.generate)(t5.secretKey), this._secretKey = n2.concat([t5.secretKey, this._publicKey]), t5.publicKey && !this._publicKey.equals(n2.from(t5.publicKey))) throw new Error("secretKey does not match publicKey");
            } else if (this._publicKey = n2.from(t5.publicKey), 32 !== this._publicKey.length) throw new Error("publicKey length is invalid");
          }, r5 = [{ key: "fromSecret", value: function(e5) {
            var t5 = a.StrKey.decodeEd25519SecretSeed(e5);
            return this.fromRawEd25519Seed(t5);
          } }, { key: "fromRawEd25519Seed", value: function(e5) {
            return new this({ type: "ed25519", secretKey: e5 });
          } }, { key: "master", value: function(e5) {
            if (!e5) throw new Error("No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.");
            return this.fromRawEd25519Seed((0, s.hash)(e5));
          } }, { key: "fromPublicKey", value: function(e5) {
            if (32 !== (e5 = a.StrKey.decodeEd25519PublicKey(e5)).length) throw new Error("Invalid Stellar public key");
            return new this({ type: "ed25519", publicKey: e5 });
          } }, { key: "random", value: function() {
            var e5 = o2.default.randomBytes(32);
            return this.fromRawEd25519Seed(e5);
          } }], (t4 = [{ key: "xdrAccountId", value: function() {
            return new u.default.AccountId.publicKeyTypeEd25519(this._publicKey);
          } }, { key: "xdrPublicKey", value: function() {
            return new u.default.PublicKey.publicKeyTypeEd25519(this._publicKey);
          } }, { key: "xdrMuxedAccount", value: function(e5) {
            if (void 0 !== e5) {
              if ("string" != typeof e5) throw new TypeError("expected string for ID, got ".concat(l2(e5)));
              return u.default.MuxedAccount.keyTypeMuxedEd25519(new u.default.MuxedAccountMed25519({ id: u.default.Uint64.fromString(e5), ed25519: this._publicKey }));
            }
            return new u.default.MuxedAccount.keyTypeEd25519(this._publicKey);
          } }, { key: "rawPublicKey", value: function() {
            return this._publicKey;
          } }, { key: "signatureHint", value: function() {
            var e5 = this.xdrAccountId().toXDR();
            return e5.slice(e5.length - 4);
          } }, { key: "publicKey", value: function() {
            return a.StrKey.encodeEd25519PublicKey(this._publicKey);
          } }, { key: "secret", value: function() {
            if (!this._secretSeed) throw new Error("no secret key available");
            if ("ed25519" === this.type) return a.StrKey.encodeEd25519SecretSeed(this._secretSeed);
            throw new Error("Invalid Keypair type");
          } }, { key: "rawSecretKey", value: function() {
            return this._secretSeed;
          } }, { key: "canSign", value: function() {
            return !!this._secretKey;
          } }, { key: "sign", value: function(e5) {
            if (!this.canSign()) throw new Error("cannot sign: no secret key available");
            return (0, i.sign)(e5, this._secretKey);
          } }, { key: "verify", value: function(e5, t5) {
            return (0, i.verify)(e5, t5, this._publicKey);
          } }, { key: "signDecorated", value: function(e5) {
            var t5 = this.sign(e5), r6 = this.signatureHint();
            return new u.default.DecoratedSignature({ hint: r6, signature: t5 });
          } }, { key: "signPayloadDecorated", value: function(e5) {
            var t5 = this.sign(e5), r6 = this.signatureHint(), o3 = n2.from(e5.slice(-4));
            return o3.length < 4 && (o3 = n2.concat([o3, n2.alloc(4 - e5.length, 0)])), new u.default.DecoratedSignature({ hint: o3.map(function(e6, t6) {
              return e6 ^ r6[t6];
            }), signature: t5 });
          } }]) && f(e4.prototype, t4), r5 && f(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          var e4, t4, r5;
        }();
      }, 2262: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.LiquidityPoolAsset = void 0;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(1764), a = r4(5578);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function c(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? u(Object(r5), true).forEach(function(t5) {
              l2(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : u(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function l2(e4, t4, r5) {
          return (t4 = p(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function f(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, p(n3.key), n3);
          }
        }
        function p(e4) {
          var t4 = function(e5, t5) {
            if ("object" != s(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != s(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == s(t4) ? t4 : t4 + "";
        }
        t3.LiquidityPoolAsset = function() {
          return function(e4, t4, r5) {
            return t4 && f(e4.prototype, t4), r5 && f(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4, r5, n3) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), !(t4 && t4 instanceof i.Asset)) throw new Error("assetA is invalid");
            if (!(r5 && r5 instanceof i.Asset)) throw new Error("assetB is invalid");
            if (-1 !== i.Asset.compare(t4, r5)) throw new Error("Assets are not in lexicographic order");
            if (!n3 || n3 !== a.LiquidityPoolFeeV18) throw new Error("fee is invalid");
            this.assetA = t4, this.assetB = r5, this.fee = n3;
          }, [{ key: "toXDRObject", value: function() {
            var e4 = new o2.default.LiquidityPoolConstantProductParameters({ assetA: this.assetA.toXDRObject(), assetB: this.assetB.toXDRObject(), fee: this.fee }), t4 = new o2.default.LiquidityPoolParameters("liquidityPoolConstantProduct", e4);
            return new o2.default.ChangeTrustAsset("assetTypePoolShare", t4);
          } }, { key: "getLiquidityPoolParameters", value: function() {
            return c(c({}, this), {}, { assetA: this.assetA, assetB: this.assetB, fee: this.fee });
          } }, { key: "getAssetType", value: function() {
            return "liquidity_pool_shares";
          } }, { key: "equals", value: function(e4) {
            return this.assetA.equals(e4.assetA) && this.assetB.equals(e4.assetB) && this.fee === e4.fee;
          } }, { key: "toString", value: function() {
            var e4 = (0, a.getLiquidityPoolId)("constant_product", this.getLiquidityPoolParameters()).toString("hex");
            return "liquidity_pool:".concat(e4);
          } }], [{ key: "fromOperation", value: function(e4) {
            var t4 = e4.switch();
            if (t4 === o2.default.AssetType.assetTypePoolShare()) {
              var r5 = e4.liquidityPool().constantProduct();
              return new this(i.Asset.fromOperation(r5.assetA()), i.Asset.fromOperation(r5.assetB()), r5.fee());
            }
            throw new Error("Invalid asset type: ".concat(t4.name));
          } }]);
        }();
      }, 9353: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.LiquidityPoolId = void 0;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
        function i(e4) {
          return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, i(e4);
        }
        function a(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, s(n3.key), n3);
          }
        }
        function s(e4) {
          var t4 = function(e5, t5) {
            if ("object" != i(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != i(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == i(t4) ? t4 : t4 + "";
        }
        t3.LiquidityPoolId = function() {
          return function(e4, t4, r5) {
            return t4 && a(e4.prototype, t4), r5 && a(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), !t4) throw new Error("liquidityPoolId cannot be empty");
            if (!/^[a-f0-9]{64}$/.test(t4)) throw new Error("Liquidity pool ID is not a valid hash");
            this.liquidityPoolId = t4;
          }, [{ key: "toXDRObject", value: function() {
            var e4 = o2.default.PoolId.fromXDR(this.liquidityPoolId, "hex");
            return new o2.default.TrustLineAsset("assetTypePoolShare", e4);
          } }, { key: "getLiquidityPoolId", value: function() {
            return String(this.liquidityPoolId);
          } }, { key: "getAssetType", value: function() {
            return "liquidity_pool_shares";
          } }, { key: "equals", value: function(e4) {
            return this.liquidityPoolId === e4.getLiquidityPoolId();
          } }, { key: "toString", value: function() {
            return "liquidity_pool:".concat(this.liquidityPoolId);
          } }], [{ key: "fromOperation", value: function(e4) {
            var t4 = e4.switch();
            if (t4 === o2.default.AssetType.assetTypePoolShare()) return new this(e4.liquidityPoolId().toString("hex"));
            throw new Error("Invalid asset type: ".concat(t4.name));
          } }]);
        }();
      }, 4172: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.MemoText = t3.MemoReturn = t3.MemoNone = t3.MemoID = t3.MemoHash = t3.Memo = void 0;
        var o2 = r4(3740), i = s(r4(1242)), a = s(r4(1918));
        function s(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        function u(e4) {
          return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, u(e4);
        }
        function c(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, l2(n3.key), n3);
          }
        }
        function l2(e4) {
          var t4 = function(e5, t5) {
            if ("object" != u(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != u(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == u(t4) ? t4 : t4 + "";
        }
        var f = t3.MemoNone = "none", p = t3.MemoID = "id", h = t3.MemoText = "text", d = t3.MemoHash = "hash", y = t3.MemoReturn = "return";
        t3.Memo = function() {
          function e4(t5) {
            var r6 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
            switch (function(e5, t6) {
              if (!(e5 instanceof t6)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), this._type = t5, this._value = r6, this._type) {
              case f:
                break;
              case p:
                e4._validateIdValue(r6);
                break;
              case h:
                e4._validateTextValue(r6);
                break;
              case d:
              case y:
                e4._validateHashValue(r6), "string" == typeof r6 && (this._value = n2.from(r6, "hex"));
                break;
              default:
                throw new Error("Invalid memo type");
            }
          }
          return t4 = e4, s2 = [{ key: "_validateIdValue", value: function(e5) {
            var t5, r6 = new Error("Expects a int64 as a string. Got ".concat(e5));
            if ("string" != typeof e5) throw r6;
            try {
              t5 = new i.default(e5);
            } catch (e6) {
              throw r6;
            }
            if (!t5.isFinite()) throw r6;
            if (t5.isNaN()) throw r6;
          } }, { key: "_validateTextValue", value: function(e5) {
            if (!a.default.Memo.armTypeForArm("text").isValid(e5)) throw new Error("Expects string, array or buffer, max 28 bytes");
          } }, { key: "_validateHashValue", value: function(e5) {
            var t5, r6 = new Error("Expects a 32 byte hash value or hex encoded string. Got ".concat(e5));
            if (null == e5) throw r6;
            if ("string" == typeof e5) {
              if (!/^[0-9A-Fa-f]{64}$/g.test(e5)) throw r6;
              t5 = n2.from(e5, "hex");
            } else {
              if (!n2.isBuffer(e5)) throw r6;
              t5 = n2.from(e5);
            }
            if (!t5.length || 32 !== t5.length) throw r6;
          } }, { key: "none", value: function() {
            return new e4(f);
          } }, { key: "text", value: function(t5) {
            return new e4(h, t5);
          } }, { key: "id", value: function(t5) {
            return new e4(p, t5);
          } }, { key: "hash", value: function(t5) {
            return new e4(d, t5);
          } }, { key: "return", value: function(t5) {
            return new e4(y, t5);
          } }, { key: "fromXDRObject", value: function(t5) {
            switch (t5.arm()) {
              case "id":
                return e4.id(t5.value().toString());
              case "text":
                return e4.text(t5.value());
              case "hash":
                return e4.hash(t5.value());
              case "retHash":
                return e4.return(t5.value());
            }
            if (void 0 === t5.value()) return e4.none();
            throw new Error("Unknown type");
          } }], (r5 = [{ key: "type", get: function() {
            return this._type;
          }, set: function(e5) {
            throw new Error("Memo is immutable");
          } }, { key: "value", get: function() {
            switch (this._type) {
              case f:
                return null;
              case p:
              case h:
                return this._value;
              case d:
              case y:
                return n2.from(this._value);
              default:
                throw new Error("Invalid memo type");
            }
          }, set: function(e5) {
            throw new Error("Memo is immutable");
          } }, { key: "toXDRObject", value: function() {
            switch (this._type) {
              case f:
                return a.default.Memo.memoNone();
              case p:
                return a.default.Memo.memoId(o2.UnsignedHyper.fromString(this._value));
              case h:
                return a.default.Memo.memoText(this._value);
              case d:
                return a.default.Memo.memoHash(this._value);
              case y:
                return a.default.Memo.memoReturn(this._value);
              default:
                return null;
            }
          } }]) && c(t4.prototype, r5), s2 && c(t4, s2), Object.defineProperty(t4, "prototype", { writable: false }), t4;
          var t4, r5, s2;
        }();
      }, 2243: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.MuxedAccount = void 0;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(2135), a = r4(7120), s = r4(6160);
        function u(e4) {
          return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, u(e4);
        }
        function c(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, l2(n3.key), n3);
          }
        }
        function l2(e4) {
          var t4 = function(e5, t5) {
            if ("object" != u(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != u(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == u(t4) ? t4 : t4 + "";
        }
        t3.MuxedAccount = function() {
          function e4(t4, r5) {
            !function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4);
            var n3 = t4.accountId();
            if (!a.StrKey.isValidEd25519PublicKey(n3)) throw new Error("accountId is invalid");
            this.account = t4, this._muxedXdr = (0, s.encodeMuxedAccount)(n3, r5), this._mAddress = (0, s.encodeMuxedAccountToAddress)(this._muxedXdr), this._id = r5;
          }
          return function(e5, t4, r5) {
            return t4 && c(e5.prototype, t4), r5 && c(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(e4, [{ key: "baseAccount", value: function() {
            return this.account;
          } }, { key: "accountId", value: function() {
            return this._mAddress;
          } }, { key: "id", value: function() {
            return this._id;
          } }, { key: "setId", value: function(e5) {
            if ("string" != typeof e5) throw new Error("id should be a string representing a number (uint64)");
            return this._muxedXdr.med25519().id(o2.default.Uint64.fromString(e5)), this._mAddress = (0, s.encodeMuxedAccountToAddress)(this._muxedXdr), this._id = e5, this;
          } }, { key: "sequenceNumber", value: function() {
            return this.account.sequenceNumber();
          } }, { key: "incrementSequenceNumber", value: function() {
            return this.account.incrementSequenceNumber();
          } }, { key: "toXDRObject", value: function() {
            return this._muxedXdr;
          } }, { key: "equals", value: function(e5) {
            return this.accountId() === e5.accountId();
          } }], [{ key: "fromAddress", value: function(t4, r5) {
            var n3 = (0, s.decodeAddressToMuxedAccount)(t4), o3 = (0, s.extractBaseAddress)(t4), a2 = n3.med25519().id().toString();
            return new e4(new i.Account(o3, r5), a2);
          } }]);
        }();
      }, 6202: (e3, t3) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Networks = void 0;
        t3.Networks = { PUBLIC: "Public Global Stellar Network ; September 2015", TESTNET: "Test SDF Network ; September 2015", FUTURENET: "Test SDF Future Network ; October 2022", SANDBOX: "Local Sandbox Stellar Network ; September 2022", STANDALONE: "Standalone Network ; February 2017" };
      }, 8549: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), Object.defineProperty(t3, "Int128", { enumerable: true, get: function() {
          return a.Int128;
        } }), Object.defineProperty(t3, "Int256", { enumerable: true, get: function() {
          return s.Int256;
        } }), Object.defineProperty(t3, "ScInt", { enumerable: true, get: function() {
          return u.ScInt;
        } }), Object.defineProperty(t3, "Uint128", { enumerable: true, get: function() {
          return o2.Uint128;
        } }), Object.defineProperty(t3, "Uint256", { enumerable: true, get: function() {
          return i.Uint256;
        } }), Object.defineProperty(t3, "XdrLargeInt", { enumerable: true, get: function() {
          return n2.XdrLargeInt;
        } }), t3.scValToBigInt = function(e4) {
          var t4 = n2.XdrLargeInt.getType(e4.switch().name);
          switch (e4.switch().name) {
            case "scvU32":
            case "scvI32":
              return BigInt(e4.value());
            case "scvU64":
            case "scvI64":
              return new n2.XdrLargeInt(t4, e4.value()).toBigInt();
            case "scvU128":
            case "scvI128":
              return new n2.XdrLargeInt(t4, [e4.value().lo(), e4.value().hi()]).toBigInt();
            case "scvU256":
            case "scvI256":
              return new n2.XdrLargeInt(t4, [e4.value().loLo(), e4.value().loHi(), e4.value().hiLo(), e4.value().hiHi()]).toBigInt();
            default:
              throw TypeError("expected integer type, got ".concat(e4.switch()));
          }
        };
        var n2 = r4(7429), o2 = r4(6272), i = r4(8672), a = r4(5487), s = r4(4063), u = r4(3317);
      }, 5487: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Int128 = void 0;
        var o2 = r4(3740);
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, a(n3.key), n3);
          }
        }
        function a(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        function s(e4, t4, r5) {
          return t4 = c(t4), function(e5, t5) {
            if (t5 && ("object" == n2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, u() ? Reflect.construct(t4, r5 || [], c(e4).constructor) : t4.apply(e4, r5));
        }
        function u() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (u = function() {
            return !!e4;
          })();
        }
        function c(e4) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, c(e4);
        }
        function l2(e4, t4) {
          return l2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, l2(e4, t4);
        }
        (t3.Int128 = function(e4) {
          function t4() {
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4);
            for (var e5 = arguments.length, r6 = new Array(e5), n4 = 0; n4 < e5; n4++) r6[n4] = arguments[n4];
            return s(this, t4, [r6]);
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && l2(e5, t5);
          }(t4, e4), r5 = t4, (n3 = [{ key: "unsigned", get: function() {
            return false;
          } }, { key: "size", get: function() {
            return 128;
          } }]) && i(r5.prototype, n3), o3 && i(r5, o3), Object.defineProperty(r5, "prototype", { writable: false }), r5;
          var r5, n3, o3;
        }(o2.LargeInt)).defineIntBoundaries();
      }, 4063: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Int256 = void 0;
        var o2 = r4(3740);
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, a(n3.key), n3);
          }
        }
        function a(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        function s(e4, t4, r5) {
          return t4 = c(t4), function(e5, t5) {
            if (t5 && ("object" == n2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, u() ? Reflect.construct(t4, r5 || [], c(e4).constructor) : t4.apply(e4, r5));
        }
        function u() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (u = function() {
            return !!e4;
          })();
        }
        function c(e4) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, c(e4);
        }
        function l2(e4, t4) {
          return l2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, l2(e4, t4);
        }
        (t3.Int256 = function(e4) {
          function t4() {
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4);
            for (var e5 = arguments.length, r6 = new Array(e5), n4 = 0; n4 < e5; n4++) r6[n4] = arguments[n4];
            return s(this, t4, [r6]);
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && l2(e5, t5);
          }(t4, e4), r5 = t4, (n3 = [{ key: "unsigned", get: function() {
            return false;
          } }, { key: "size", get: function() {
            return 256;
          } }]) && i(r5.prototype, n3), o3 && i(r5, o3), Object.defineProperty(r5, "prototype", { writable: false }), r5;
          var r5, n3, o3;
        }(o2.LargeInt)).defineIntBoundaries();
      }, 3317: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.ScInt = void 0;
        var o2 = r4(7429);
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, a(n3.key), n3);
          }
        }
        function a(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        function s(e4, t4, r5) {
          return t4 = c(t4), function(e5, t5) {
            if (t5 && ("object" == n2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, u() ? Reflect.construct(t4, r5 || [], c(e4).constructor) : t4.apply(e4, r5));
        }
        function u() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (u = function() {
            return !!e4;
          })();
        }
        function c(e4) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, c(e4);
        }
        function l2(e4, t4) {
          return l2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, l2(e4, t4);
        }
        t3.ScInt = function(e4) {
          function t4(e5, r6) {
            var n4;
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4);
            var o4 = e5 < 0, i2 = null !== (n4 = null == r6 ? void 0 : r6.type) && void 0 !== n4 ? n4 : "";
            if (i2.startsWith("u") && o4) throw TypeError("specified type ".concat(r6.type, " yet negative (").concat(e5, ")"));
            if ("" === i2) {
              i2 = o4 ? "i" : "u";
              var a2 = function(e6) {
                var t5, r7 = e6.toString(2).length;
                return null !== (t5 = [64, 128, 256].find(function(e7) {
                  return r7 <= e7;
                })) && void 0 !== t5 ? t5 : r7;
              }(e5);
              switch (a2) {
                case 64:
                case 128:
                case 256:
                  i2 += a2.toString();
                  break;
                default:
                  throw RangeError("expected 64/128/256 bits for input (".concat(e5, "), got ").concat(a2));
              }
            }
            return s(this, t4, [i2, e5]);
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && l2(e5, t5);
          }(t4, e4), r5 = t4, n3 && i(r5.prototype, n3), o3 && i(r5, o3), Object.defineProperty(r5, "prototype", { writable: false }), r5;
          var r5, n3, o3;
        }(o2.XdrLargeInt);
      }, 6272: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Uint128 = void 0;
        var o2 = r4(3740);
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, a(n3.key), n3);
          }
        }
        function a(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        function s(e4, t4, r5) {
          return t4 = c(t4), function(e5, t5) {
            if (t5 && ("object" == n2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, u() ? Reflect.construct(t4, r5 || [], c(e4).constructor) : t4.apply(e4, r5));
        }
        function u() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (u = function() {
            return !!e4;
          })();
        }
        function c(e4) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, c(e4);
        }
        function l2(e4, t4) {
          return l2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, l2(e4, t4);
        }
        (t3.Uint128 = function(e4) {
          function t4() {
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4);
            for (var e5 = arguments.length, r6 = new Array(e5), n4 = 0; n4 < e5; n4++) r6[n4] = arguments[n4];
            return s(this, t4, [r6]);
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && l2(e5, t5);
          }(t4, e4), r5 = t4, (n3 = [{ key: "unsigned", get: function() {
            return true;
          } }, { key: "size", get: function() {
            return 128;
          } }]) && i(r5.prototype, n3), o3 && i(r5, o3), Object.defineProperty(r5, "prototype", { writable: false }), r5;
          var r5, n3, o3;
        }(o2.LargeInt)).defineIntBoundaries();
      }, 8672: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Uint256 = void 0;
        var o2 = r4(3740);
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, a(n3.key), n3);
          }
        }
        function a(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        function s(e4, t4, r5) {
          return t4 = c(t4), function(e5, t5) {
            if (t5 && ("object" == n2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, u() ? Reflect.construct(t4, r5 || [], c(e4).constructor) : t4.apply(e4, r5));
        }
        function u() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (u = function() {
            return !!e4;
          })();
        }
        function c(e4) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, c(e4);
        }
        function l2(e4, t4) {
          return l2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, l2(e4, t4);
        }
        (t3.Uint256 = function(e4) {
          function t4() {
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4);
            for (var e5 = arguments.length, r6 = new Array(e5), n4 = 0; n4 < e5; n4++) r6[n4] = arguments[n4];
            return s(this, t4, [r6]);
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && l2(e5, t5);
          }(t4, e4), r5 = t4, (n3 = [{ key: "unsigned", get: function() {
            return true;
          } }, { key: "size", get: function() {
            return 256;
          } }]) && i(r5.prototype, n3), o3 && i(r5, o3), Object.defineProperty(r5, "prototype", { writable: false }), r5;
          var r5, n3, o3;
        }(o2.LargeInt)).defineIntBoundaries();
      }, 7429: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.XdrLargeInt = void 0;
        var n2, o2 = r4(3740), i = r4(6272), a = r4(8672), s = r4(5487), u = r4(4063), c = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
        function l2(e4) {
          return l2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, l2(e4);
        }
        function f(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, h(n3.key), n3);
          }
        }
        function p(e4, t4, r5) {
          return (t4 = h(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function h(e4) {
          var t4 = function(e5, t5) {
            if ("object" != l2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != l2(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == l2(t4) ? t4 : t4 + "";
        }
        t3.XdrLargeInt = function() {
          return function(e4, t4, r5) {
            return t4 && f(e4.prototype, t4), r5 && f(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4, r5) {
            switch (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), p(this, "int", void 0), p(this, "type", void 0), r5 instanceof Array || (r5 = [r5]), r5 = r5.map(function(t5) {
              return "bigint" == typeof t5 ? t5 : t5 instanceof e4 ? t5.toBigInt() : BigInt(t5);
            }), t4) {
              case "i64":
                this.int = new o2.Hyper(r5);
                break;
              case "i128":
                this.int = new s.Int128(r5);
                break;
              case "i256":
                this.int = new u.Int256(r5);
                break;
              case "u64":
                this.int = new o2.UnsignedHyper(r5);
                break;
              case "u128":
                this.int = new i.Uint128(r5);
                break;
              case "u256":
                this.int = new a.Uint256(r5);
                break;
              default:
                throw TypeError("invalid type: ".concat(t4));
            }
            this.type = t4;
          }, [{ key: "toNumber", value: function() {
            var e4 = this.int.toBigInt();
            if (e4 > Number.MAX_SAFE_INTEGER || e4 < Number.MIN_SAFE_INTEGER) throw RangeError("value ".concat(e4, " not in range for Number ") + "[".concat(Number.MAX_SAFE_INTEGER, ", ").concat(Number.MIN_SAFE_INTEGER, "]"));
            return Number(e4);
          } }, { key: "toBigInt", value: function() {
            return this.int.toBigInt();
          } }, { key: "toI64", value: function() {
            this._sizeCheck(64);
            var e4 = this.toBigInt();
            if (BigInt.asIntN(64, e4) !== e4) throw RangeError("value too large for i64: ".concat(e4));
            return c.default.ScVal.scvI64(new c.default.Int64(e4));
          } }, { key: "toU64", value: function() {
            return this._sizeCheck(64), c.default.ScVal.scvU64(new c.default.Uint64(BigInt.asUintN(64, this.toBigInt())));
          } }, { key: "toI128", value: function() {
            this._sizeCheck(128);
            var e4 = this.int.toBigInt(), t4 = BigInt.asIntN(64, e4 >> 64n), r5 = BigInt.asUintN(64, e4);
            return c.default.ScVal.scvI128(new c.default.Int128Parts({ hi: new c.default.Int64(t4), lo: new c.default.Uint64(r5) }));
          } }, { key: "toU128", value: function() {
            this._sizeCheck(128);
            var e4 = this.int.toBigInt();
            return c.default.ScVal.scvU128(new c.default.UInt128Parts({ hi: new c.default.Uint64(BigInt.asUintN(64, e4 >> 64n)), lo: new c.default.Uint64(BigInt.asUintN(64, e4)) }));
          } }, { key: "toI256", value: function() {
            var e4 = this.int.toBigInt(), t4 = BigInt.asIntN(64, e4 >> 192n), r5 = BigInt.asUintN(64, e4 >> 128n), n3 = BigInt.asUintN(64, e4 >> 64n), o3 = BigInt.asUintN(64, e4);
            return c.default.ScVal.scvI256(new c.default.Int256Parts({ hiHi: new c.default.Int64(t4), hiLo: new c.default.Uint64(r5), loHi: new c.default.Uint64(n3), loLo: new c.default.Uint64(o3) }));
          } }, { key: "toU256", value: function() {
            var e4 = this.int.toBigInt(), t4 = BigInt.asUintN(64, e4 >> 192n), r5 = BigInt.asUintN(64, e4 >> 128n), n3 = BigInt.asUintN(64, e4 >> 64n), o3 = BigInt.asUintN(64, e4);
            return c.default.ScVal.scvU256(new c.default.UInt256Parts({ hiHi: new c.default.Uint64(t4), hiLo: new c.default.Uint64(r5), loHi: new c.default.Uint64(n3), loLo: new c.default.Uint64(o3) }));
          } }, { key: "toScVal", value: function() {
            switch (this.type) {
              case "i64":
                return this.toI64();
              case "i128":
                return this.toI128();
              case "i256":
                return this.toI256();
              case "u64":
                return this.toU64();
              case "u128":
                return this.toU128();
              case "u256":
                return this.toU256();
              default:
                throw TypeError("invalid type: ".concat(this.type));
            }
          } }, { key: "valueOf", value: function() {
            return this.int.valueOf();
          } }, { key: "toString", value: function() {
            return this.int.toString();
          } }, { key: "toJSON", value: function() {
            return { value: this.toBigInt().toString(), type: this.type };
          } }, { key: "_sizeCheck", value: function(e4) {
            if (this.int.size > e4) throw RangeError("value too large for ".concat(e4, " bits (").concat(this.type, ")"));
          } }], [{ key: "isType", value: function(e4) {
            switch (e4) {
              case "i64":
              case "i128":
              case "i256":
              case "u64":
              case "u128":
              case "u256":
                return true;
              default:
                return false;
            }
          } }, { key: "getType", value: function(e4) {
            return e4.slice(3).toLowerCase();
          } }]);
        }();
      }, 7237: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Operation = t3.AuthRevocableFlag = t3.AuthRequiredFlag = t3.AuthImmutableFlag = t3.AuthClawbackEnabledFlag = void 0;
        var n2 = r4(3740), o2 = m(r4(1242)), i = r4(645), a = r4(4151), s = r4(1764), u = r4(2262), c = r4(1387), l2 = r4(7120), f = r4(9353), p = m(r4(1918)), h = function(e4, t4) {
          if (!t4 && e4 && e4.__esModule) return e4;
          if (null === e4 || "object" != v(e4) && "function" != typeof e4) return { default: e4 };
          var r5 = y(t4);
          if (r5 && r5.has(e4)) return r5.get(e4);
          var n3 = { __proto__: null }, o3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var i2 in e4) if ("default" !== i2 && {}.hasOwnProperty.call(e4, i2)) {
            var a2 = o3 ? Object.getOwnPropertyDescriptor(e4, i2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(n3, i2, a2) : n3[i2] = e4[i2];
          }
          return n3.default = e4, r5 && r5.set(e4, n3), n3;
        }(r4(7511)), d = r4(6160);
        function y(e4) {
          if ("function" != typeof WeakMap) return null;
          var t4 = /* @__PURE__ */ new WeakMap(), r5 = /* @__PURE__ */ new WeakMap();
          return (y = function(e5) {
            return e5 ? r5 : t4;
          })(e4);
        }
        function m(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        function v(e4) {
          return v = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, v(e4);
        }
        function g(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, b(n3.key), n3);
          }
        }
        function b(e4) {
          var t4 = function(e5, t5) {
            if ("object" != v(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != v(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == v(t4) ? t4 : t4 + "";
        }
        var w = 1e7, S = (t3.AuthRequiredFlag = 1, t3.AuthRevocableFlag = 2, t3.AuthImmutableFlag = 4, t3.AuthClawbackEnabledFlag = 8, t3.Operation = function() {
          return e4 = function e5() {
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e5);
          }, r5 = [{ key: "setSourceAccount", value: function(e5, t5) {
            if (t5.source) try {
              e5.sourceAccount = (0, d.decodeAddressToMuxedAccount)(t5.source);
            } catch (e6) {
              throw new Error("Source address is invalid");
            }
          } }, { key: "fromXDRObject", value: function(e5) {
            var t5 = {};
            e5.sourceAccount() && (t5.source = (0, d.encodeMuxedAccountToAddress)(e5.sourceAccount()));
            var r6 = e5.body().value(), n3 = e5.body().switch().name;
            switch (n3) {
              case "createAccount":
                t5.type = "createAccount", t5.destination = E(r6.destination()), t5.startingBalance = this._fromXDRAmount(r6.startingBalance());
                break;
              case "payment":
                t5.type = "payment", t5.destination = (0, d.encodeMuxedAccountToAddress)(r6.destination()), t5.asset = s.Asset.fromOperation(r6.asset()), t5.amount = this._fromXDRAmount(r6.amount());
                break;
              case "pathPaymentStrictReceive":
                t5.type = "pathPaymentStrictReceive", t5.sendAsset = s.Asset.fromOperation(r6.sendAsset()), t5.sendMax = this._fromXDRAmount(r6.sendMax()), t5.destination = (0, d.encodeMuxedAccountToAddress)(r6.destination()), t5.destAsset = s.Asset.fromOperation(r6.destAsset()), t5.destAmount = this._fromXDRAmount(r6.destAmount()), t5.path = [];
                var o3 = r6.path();
                Object.keys(o3).forEach(function(e6) {
                  t5.path.push(s.Asset.fromOperation(o3[e6]));
                });
                break;
              case "pathPaymentStrictSend":
                t5.type = "pathPaymentStrictSend", t5.sendAsset = s.Asset.fromOperation(r6.sendAsset()), t5.sendAmount = this._fromXDRAmount(r6.sendAmount()), t5.destination = (0, d.encodeMuxedAccountToAddress)(r6.destination()), t5.destAsset = s.Asset.fromOperation(r6.destAsset()), t5.destMin = this._fromXDRAmount(r6.destMin()), t5.path = [];
                var a2 = r6.path();
                Object.keys(a2).forEach(function(e6) {
                  t5.path.push(s.Asset.fromOperation(a2[e6]));
                });
                break;
              case "changeTrust":
                t5.type = "changeTrust", r6.line().switch() === p.default.AssetType.assetTypePoolShare() ? t5.line = u.LiquidityPoolAsset.fromOperation(r6.line()) : t5.line = s.Asset.fromOperation(r6.line()), t5.limit = this._fromXDRAmount(r6.limit());
                break;
              case "allowTrust":
                t5.type = "allowTrust", t5.trustor = E(r6.trustor()), t5.assetCode = r6.asset().value().toString(), t5.assetCode = (0, i.trimEnd)(t5.assetCode, "\0"), t5.authorize = r6.authorize();
                break;
              case "setOptions":
                if (t5.type = "setOptions", r6.inflationDest() && (t5.inflationDest = E(r6.inflationDest())), t5.clearFlags = r6.clearFlags(), t5.setFlags = r6.setFlags(), t5.masterWeight = r6.masterWeight(), t5.lowThreshold = r6.lowThreshold(), t5.medThreshold = r6.medThreshold(), t5.highThreshold = r6.highThreshold(), t5.homeDomain = void 0 !== r6.homeDomain() ? r6.homeDomain().toString("ascii") : void 0, r6.signer()) {
                  var h2 = {}, y2 = r6.signer().key().arm();
                  if ("ed25519" === y2) h2.ed25519PublicKey = E(r6.signer().key());
                  else if ("preAuthTx" === y2) h2.preAuthTx = r6.signer().key().preAuthTx();
                  else if ("hashX" === y2) h2.sha256Hash = r6.signer().key().hashX();
                  else if ("ed25519SignedPayload" === y2) {
                    var m2 = r6.signer().key().ed25519SignedPayload();
                    h2.ed25519SignedPayload = l2.StrKey.encodeSignedPayload(m2.toXDR());
                  }
                  h2.weight = r6.signer().weight(), t5.signer = h2;
                }
                break;
              case "manageOffer":
              case "manageSellOffer":
                t5.type = "manageSellOffer", t5.selling = s.Asset.fromOperation(r6.selling()), t5.buying = s.Asset.fromOperation(r6.buying()), t5.amount = this._fromXDRAmount(r6.amount()), t5.price = this._fromXDRPrice(r6.price()), t5.offerId = r6.offerId().toString();
                break;
              case "manageBuyOffer":
                t5.type = "manageBuyOffer", t5.selling = s.Asset.fromOperation(r6.selling()), t5.buying = s.Asset.fromOperation(r6.buying()), t5.buyAmount = this._fromXDRAmount(r6.buyAmount()), t5.price = this._fromXDRPrice(r6.price()), t5.offerId = r6.offerId().toString();
                break;
              case "createPassiveOffer":
              case "createPassiveSellOffer":
                t5.type = "createPassiveSellOffer", t5.selling = s.Asset.fromOperation(r6.selling()), t5.buying = s.Asset.fromOperation(r6.buying()), t5.amount = this._fromXDRAmount(r6.amount()), t5.price = this._fromXDRPrice(r6.price());
                break;
              case "accountMerge":
                t5.type = "accountMerge", t5.destination = (0, d.encodeMuxedAccountToAddress)(r6);
                break;
              case "manageData":
                t5.type = "manageData", t5.name = r6.dataName().toString("ascii"), t5.value = r6.dataValue();
                break;
              case "inflation":
                t5.type = "inflation";
                break;
              case "bumpSequence":
                t5.type = "bumpSequence", t5.bumpTo = r6.bumpTo().toString();
                break;
              case "createClaimableBalance":
                t5.type = "createClaimableBalance", t5.asset = s.Asset.fromOperation(r6.asset()), t5.amount = this._fromXDRAmount(r6.amount()), t5.claimants = [], r6.claimants().forEach(function(e6) {
                  t5.claimants.push(c.Claimant.fromXDR(e6));
                });
                break;
              case "claimClaimableBalance":
                t5.type = "claimClaimableBalance", t5.balanceId = r6.toXDR("hex");
                break;
              case "beginSponsoringFutureReserves":
                t5.type = "beginSponsoringFutureReserves", t5.sponsoredId = E(r6.sponsoredId());
                break;
              case "endSponsoringFutureReserves":
                t5.type = "endSponsoringFutureReserves";
                break;
              case "revokeSponsorship":
                !function(e6, t6) {
                  switch (e6.switch().name) {
                    case "revokeSponsorshipLedgerEntry":
                      var r7 = e6.ledgerKey();
                      switch (r7.switch().name) {
                        case p.default.LedgerEntryType.account().name:
                          t6.type = "revokeAccountSponsorship", t6.account = E(r7.account().accountId());
                          break;
                        case p.default.LedgerEntryType.trustline().name:
                          t6.type = "revokeTrustlineSponsorship", t6.account = E(r7.trustLine().accountId());
                          var n4 = r7.trustLine().asset();
                          n4.switch() === p.default.AssetType.assetTypePoolShare() ? t6.asset = f.LiquidityPoolId.fromOperation(n4) : t6.asset = s.Asset.fromOperation(n4);
                          break;
                        case p.default.LedgerEntryType.offer().name:
                          t6.type = "revokeOfferSponsorship", t6.seller = E(r7.offer().sellerId()), t6.offerId = r7.offer().offerId().toString();
                          break;
                        case p.default.LedgerEntryType.data().name:
                          t6.type = "revokeDataSponsorship", t6.account = E(r7.data().accountId()), t6.name = r7.data().dataName().toString("ascii");
                          break;
                        case p.default.LedgerEntryType.claimableBalance().name:
                          t6.type = "revokeClaimableBalanceSponsorship", t6.balanceId = r7.claimableBalance().balanceId().toXDR("hex");
                          break;
                        case p.default.LedgerEntryType.liquidityPool().name:
                          t6.type = "revokeLiquidityPoolSponsorship", t6.liquidityPoolId = r7.liquidityPool().liquidityPoolId().toString("hex");
                          break;
                        default:
                          throw new Error("Unknown ledgerKey: ".concat(e6.switch().name));
                      }
                      break;
                    case "revokeSponsorshipSigner":
                      t6.type = "revokeSignerSponsorship", t6.account = E(e6.signer().accountId()), t6.signer = function(e7) {
                        var t7 = {};
                        switch (e7.switch().name) {
                          case p.default.SignerKeyType.signerKeyTypeEd25519().name:
                            t7.ed25519PublicKey = l2.StrKey.encodeEd25519PublicKey(e7.ed25519());
                            break;
                          case p.default.SignerKeyType.signerKeyTypePreAuthTx().name:
                            t7.preAuthTx = e7.preAuthTx().toString("hex");
                            break;
                          case p.default.SignerKeyType.signerKeyTypeHashX().name:
                            t7.sha256Hash = e7.hashX().toString("hex");
                            break;
                          default:
                            throw new Error("Unknown signerKey: ".concat(e7.switch().name));
                        }
                        return t7;
                      }(e6.signer().signerKey());
                      break;
                    default:
                      throw new Error("Unknown revokeSponsorship: ".concat(e6.switch().name));
                  }
                }(r6, t5);
                break;
              case "clawback":
                t5.type = "clawback", t5.amount = this._fromXDRAmount(r6.amount()), t5.from = (0, d.encodeMuxedAccountToAddress)(r6.from()), t5.asset = s.Asset.fromOperation(r6.asset());
                break;
              case "clawbackClaimableBalance":
                t5.type = "clawbackClaimableBalance", t5.balanceId = r6.toXDR("hex");
                break;
              case "setTrustLineFlags":
                t5.type = "setTrustLineFlags", t5.asset = s.Asset.fromOperation(r6.asset()), t5.trustor = E(r6.trustor());
                var v2 = r6.clearFlags(), g2 = r6.setFlags(), b2 = { authorized: p.default.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: p.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: p.default.TrustLineFlags.trustlineClawbackEnabledFlag() };
                t5.flags = {}, Object.keys(b2).forEach(function(e6) {
                  var r7;
                  t5.flags[e6] = (r7 = b2[e6].value, !!(g2 & r7) || !(v2 & r7) && void 0);
                });
                break;
              case "liquidityPoolDeposit":
                t5.type = "liquidityPoolDeposit", t5.liquidityPoolId = r6.liquidityPoolId().toString("hex"), t5.maxAmountA = this._fromXDRAmount(r6.maxAmountA()), t5.maxAmountB = this._fromXDRAmount(r6.maxAmountB()), t5.minPrice = this._fromXDRPrice(r6.minPrice()), t5.maxPrice = this._fromXDRPrice(r6.maxPrice());
                break;
              case "liquidityPoolWithdraw":
                t5.type = "liquidityPoolWithdraw", t5.liquidityPoolId = r6.liquidityPoolId().toString("hex"), t5.amount = this._fromXDRAmount(r6.amount()), t5.minAmountA = this._fromXDRAmount(r6.minAmountA()), t5.minAmountB = this._fromXDRAmount(r6.minAmountB());
                break;
              case "invokeHostFunction":
                var w2;
                t5.type = "invokeHostFunction", t5.func = r6.hostFunction(), t5.auth = null !== (w2 = r6.auth()) && void 0 !== w2 ? w2 : [];
                break;
              case "extendFootprintTtl":
                t5.type = "extendFootprintTtl", t5.extendTo = r6.extendTo();
                break;
              case "restoreFootprint":
                t5.type = "restoreFootprint";
                break;
              default:
                throw new Error("Unknown operation: ".concat(n3));
            }
            return t5;
          } }, { key: "isValidAmount", value: function(e5) {
            var t5, r6 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            if ("string" != typeof e5) return false;
            try {
              t5 = new o2.default(e5);
            } catch (e6) {
              return false;
            }
            return !(!r6 && t5.isZero() || t5.isNegative() || t5.times(w).gt(new o2.default("9223372036854775807").toString()) || t5.decimalPlaces() > 7 || t5.isNaN() || !t5.isFinite());
          } }, { key: "constructAmountRequirementsError", value: function(e5) {
            return "".concat(e5, " argument must be of type String, represent a positive number and have at most 7 digits after the decimal");
          } }, { key: "_checkUnsignedIntValue", value: function(e5, t5) {
            var r6 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
            if (void 0 !== t5) switch ("string" == typeof t5 && (t5 = parseFloat(t5)), true) {
              case ("number" != typeof t5 || !Number.isFinite(t5) || t5 % 1 != 0):
                throw new Error("".concat(e5, " value is invalid"));
              case t5 < 0:
                throw new Error("".concat(e5, " value must be unsigned"));
              case (!r6 || r6 && r6(t5, e5)):
                return t5;
              default:
                throw new Error("".concat(e5, " value is invalid"));
            }
          } }, { key: "_toXDRAmount", value: function(e5) {
            var t5 = new o2.default(e5).times(w);
            return n2.Hyper.fromString(t5.toString());
          } }, { key: "_fromXDRAmount", value: function(e5) {
            return new o2.default(e5).div(w).toFixed(7);
          } }, { key: "_fromXDRPrice", value: function(e5) {
            return new o2.default(e5.n()).div(new o2.default(e5.d())).toString();
          } }, { key: "_toXDRPrice", value: function(e5) {
            var t5;
            if (e5.n && e5.d) t5 = new p.default.Price(e5);
            else {
              var r6 = (0, a.best_r)(e5);
              t5 = new p.default.Price({ n: parseInt(r6[0], 10), d: parseInt(r6[1], 10) });
            }
            if (t5.n() < 0 || t5.d() < 0) throw new Error("price must be positive");
            return t5;
          } }], (t4 = null) && g(e4.prototype, t4), r5 && g(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          var e4, t4, r5;
        }());
        function E(e4) {
          return l2.StrKey.encodeEd25519PublicKey(e4.ed25519());
        }
        S.accountMerge = h.accountMerge, S.allowTrust = h.allowTrust, S.bumpSequence = h.bumpSequence, S.changeTrust = h.changeTrust, S.createAccount = h.createAccount, S.createClaimableBalance = h.createClaimableBalance, S.claimClaimableBalance = h.claimClaimableBalance, S.clawbackClaimableBalance = h.clawbackClaimableBalance, S.createPassiveSellOffer = h.createPassiveSellOffer, S.inflation = h.inflation, S.manageData = h.manageData, S.manageSellOffer = h.manageSellOffer, S.manageBuyOffer = h.manageBuyOffer, S.pathPaymentStrictReceive = h.pathPaymentStrictReceive, S.pathPaymentStrictSend = h.pathPaymentStrictSend, S.payment = h.payment, S.setOptions = h.setOptions, S.beginSponsoringFutureReserves = h.beginSponsoringFutureReserves, S.endSponsoringFutureReserves = h.endSponsoringFutureReserves, S.revokeAccountSponsorship = h.revokeAccountSponsorship, S.revokeTrustlineSponsorship = h.revokeTrustlineSponsorship, S.revokeOfferSponsorship = h.revokeOfferSponsorship, S.revokeDataSponsorship = h.revokeDataSponsorship, S.revokeClaimableBalanceSponsorship = h.revokeClaimableBalanceSponsorship, S.revokeLiquidityPoolSponsorship = h.revokeLiquidityPoolSponsorship, S.revokeSignerSponsorship = h.revokeSignerSponsorship, S.clawback = h.clawback, S.setTrustLineFlags = h.setTrustLineFlags, S.liquidityPoolDeposit = h.liquidityPoolDeposit, S.liquidityPoolWithdraw = h.liquidityPoolWithdraw, S.invokeHostFunction = h.invokeHostFunction, S.extendFootprintTtl = h.extendFootprintTtl, S.restoreFootprint = h.restoreFootprint, S.createStellarAssetContract = h.createStellarAssetContract, S.invokeContractFunction = h.invokeContractFunction, S.createCustomContract = h.createCustomContract, S.uploadContractWasm = h.uploadContractWasm;
      }, 4295: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.accountMerge = function(e4) {
          var t4 = {};
          try {
            t4.body = o2.default.OperationBody.accountMerge((0, i.decodeAddressToMuxedAccount)(e4.destination));
          } catch (e5) {
            throw new Error("destination is invalid");
          }
          return this.setSourceAccount(t4, e4), new o2.default.Operation(t4);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6160);
      }, 3683: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.allowTrust = function(e4) {
          if (!a.StrKey.isValidEd25519PublicKey(e4.trustor)) throw new Error("trustor is invalid");
          var t4 = {};
          if (t4.trustor = i.Keypair.fromPublicKey(e4.trustor).xdrAccountId(), e4.assetCode.length <= 4) {
            var r5 = e4.assetCode.padEnd(4, "\0");
            t4.asset = o2.default.AssetCode.assetTypeCreditAlphanum4(r5);
          } else {
            if (!(e4.assetCode.length <= 12)) throw new Error("Asset code must be 12 characters at max.");
            var n3 = e4.assetCode.padEnd(12, "\0");
            t4.asset = o2.default.AssetCode.assetTypeCreditAlphanum12(n3);
          }
          "boolean" == typeof e4.authorize ? e4.authorize ? t4.authorize = o2.default.TrustLineFlags.authorizedFlag().value : t4.authorize = 0 : t4.authorize = e4.authorize;
          var s = new o2.default.AllowTrustOp(t4), u = {};
          return u.body = o2.default.OperationBody.allowTrust(s), this.setSourceAccount(u, e4), new o2.default.Operation(u);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6691), a = r4(7120);
      }, 7505: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.beginSponsoringFutureReserves = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (!i.StrKey.isValidEd25519PublicKey(e4.sponsoredId)) throw new Error("sponsoredId is invalid");
          var t4 = new o2.default.BeginSponsoringFutureReservesOp({ sponsoredId: a.Keypair.fromPublicKey(e4.sponsoredId).xdrAccountId() }), r5 = {};
          return r5.body = o2.default.OperationBody.beginSponsoringFutureReserves(t4), this.setSourceAccount(r5, e4), new o2.default.Operation(r5);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(7120), a = r4(6691);
      }, 6183: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.bumpSequence = function(e4) {
          var t4 = {};
          if ("string" != typeof e4.bumpTo) throw new Error("bumpTo must be a string");
          try {
            new o2.default(e4.bumpTo);
          } catch (e5) {
            throw new Error("bumpTo must be a stringified number");
          }
          t4.bumpTo = n2.Hyper.fromString(e4.bumpTo);
          var r5 = new i.default.BumpSequenceOp(t4), a2 = {};
          return a2.body = i.default.OperationBody.bumpSequence(r5), this.setSourceAccount(a2, e4), new i.default.Operation(a2);
        };
        var n2 = r4(3740), o2 = a(r4(1242)), i = a(r4(1918));
        function a(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
      }, 2810: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.changeTrust = function(e4) {
          var t4 = {};
          if (e4.asset instanceof a.Asset) t4.line = e4.asset.toChangeTrustXDRObject();
          else {
            if (!(e4.asset instanceof s.LiquidityPoolAsset)) throw new TypeError("asset must be Asset or LiquidityPoolAsset");
            t4.line = e4.asset.toXDRObject();
          }
          if (void 0 !== e4.limit && !this.isValidAmount(e4.limit, true)) throw new TypeError(this.constructAmountRequirementsError("limit"));
          e4.limit ? t4.limit = this._toXDRAmount(e4.limit) : t4.limit = n2.Hyper.fromString(new o2.default(c).toString());
          e4.source && (t4.source = e4.source.masterKeypair);
          var r5 = new i.default.ChangeTrustOp(t4), u2 = {};
          return u2.body = i.default.OperationBody.changeTrust(r5), this.setSourceAccount(u2, e4), new i.default.Operation(u2);
        };
        var n2 = r4(3740), o2 = u(r4(1242)), i = u(r4(1918)), a = r4(1764), s = r4(2262);
        function u(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        var c = "9223372036854775807";
      }, 7239: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.claimClaimableBalance = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          i(e4.balanceId);
          var t4 = {};
          t4.balanceId = o2.default.ClaimableBalanceId.fromXDR(e4.balanceId, "hex");
          var r5 = new o2.default.ClaimClaimableBalanceOp(t4), n3 = {};
          return n3.body = o2.default.OperationBody.claimClaimableBalance(r5), this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        }, t3.validateClaimableBalanceId = i;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
        function i(e4) {
          if ("string" != typeof e4 || 72 !== e4.length) throw new Error("must provide a valid claimable balance id");
        }
      }, 7651: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.clawback = function(e4) {
          var t4 = {};
          if (!this.isValidAmount(e4.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          t4.amount = this._toXDRAmount(e4.amount), t4.asset = e4.asset.toXDRObject();
          try {
            t4.from = (0, i.decodeAddressToMuxedAccount)(e4.from);
          } catch (e5) {
            throw new Error("from address is invalid");
          }
          var r5 = { body: o2.default.OperationBody.clawback(new o2.default.ClawbackOp(t4)) };
          return this.setSourceAccount(r5, e4), new o2.default.Operation(r5);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6160);
      }, 2203: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.clawbackClaimableBalance = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          (0, i.validateClaimableBalanceId)(e4.balanceId);
          var t4 = { balanceId: o2.default.ClaimableBalanceId.fromXDR(e4.balanceId, "hex") }, r5 = { body: o2.default.OperationBody.clawbackClaimableBalance(new o2.default.ClawbackClaimableBalanceOp(t4)) };
          return this.setSourceAccount(r5, e4), new o2.default.Operation(r5);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(7239);
      }, 2115: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.createAccount = function(e4) {
          if (!a.StrKey.isValidEd25519PublicKey(e4.destination)) throw new Error("destination is invalid");
          if (!this.isValidAmount(e4.startingBalance, true)) throw new TypeError(this.constructAmountRequirementsError("startingBalance"));
          var t4 = {};
          t4.destination = i.Keypair.fromPublicKey(e4.destination).xdrAccountId(), t4.startingBalance = this._toXDRAmount(e4.startingBalance);
          var r5 = new o2.default.CreateAccountOp(t4), n3 = {};
          return n3.body = o2.default.OperationBody.createAccount(r5), this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6691), a = r4(7120);
      }, 4831: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.createClaimableBalance = function(e4) {
          if (!(e4.asset instanceof i.Asset)) throw new Error("must provide an asset for create claimable balance operation");
          if (!this.isValidAmount(e4.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (!Array.isArray(e4.claimants) || 0 === e4.claimants.length) throw new Error("must provide at least one claimant");
          var t4 = {};
          t4.asset = e4.asset.toXDRObject(), t4.amount = this._toXDRAmount(e4.amount), t4.claimants = Object.values(e4.claimants).map(function(e5) {
            return e5.toXDRObject();
          });
          var r5 = new o2.default.CreateClaimableBalanceOp(t4), n3 = {};
          return n3.body = o2.default.OperationBody.createClaimableBalance(r5), this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(1764);
      }, 9073: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.createPassiveSellOffer = function(e4) {
          var t4 = {};
          if (t4.selling = e4.selling.toXDRObject(), t4.buying = e4.buying.toXDRObject(), !this.isValidAmount(e4.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (t4.amount = this._toXDRAmount(e4.amount), void 0 === e4.price) throw new TypeError("price argument is required");
          t4.price = this._toXDRPrice(e4.price);
          var r5 = new o2.default.CreatePassiveSellOfferOp(t4), n3 = {};
          return n3.body = o2.default.OperationBody.createPassiveSellOffer(r5), this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 721: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.endSponsoringFutureReserves = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t4 = {};
          return t4.body = o2.default.OperationBody.endSponsoringFutureReserves(), this.setSourceAccount(t4, e4), new o2.default.Operation(t4);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 8752: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.extendFootprintTtl = function(e4) {
          var t4;
          if ((null !== (t4 = e4.extendTo) && void 0 !== t4 ? t4 : -1) <= 0) throw new RangeError("extendTo has to be positive");
          var r5 = new o2.default.ExtendFootprintTtlOp({ ext: new o2.default.ExtensionPoint(0), extendTo: e4.extendTo }), n3 = { body: o2.default.OperationBody.extendFootprintTtl(r5) };
          return this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 7511: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), Object.defineProperty(t3, "accountMerge", { enumerable: true, get: function() {
          return i.accountMerge;
        } }), Object.defineProperty(t3, "allowTrust", { enumerable: true, get: function() {
          return a.allowTrust;
        } }), Object.defineProperty(t3, "beginSponsoringFutureReserves", { enumerable: true, get: function() {
          return w.beginSponsoringFutureReserves;
        } }), Object.defineProperty(t3, "bumpSequence", { enumerable: true, get: function() {
          return s.bumpSequence;
        } }), Object.defineProperty(t3, "changeTrust", { enumerable: true, get: function() {
          return u.changeTrust;
        } }), Object.defineProperty(t3, "claimClaimableBalance", { enumerable: true, get: function() {
          return f.claimClaimableBalance;
        } }), Object.defineProperty(t3, "clawback", { enumerable: true, get: function() {
          return _.clawback;
        } }), Object.defineProperty(t3, "clawbackClaimableBalance", { enumerable: true, get: function() {
          return p.clawbackClaimableBalance;
        } }), Object.defineProperty(t3, "createAccount", { enumerable: true, get: function() {
          return c.createAccount;
        } }), Object.defineProperty(t3, "createClaimableBalance", { enumerable: true, get: function() {
          return l2.createClaimableBalance;
        } }), Object.defineProperty(t3, "createCustomContract", { enumerable: true, get: function() {
          return x.createCustomContract;
        } }), Object.defineProperty(t3, "createPassiveSellOffer", { enumerable: true, get: function() {
          return o2.createPassiveSellOffer;
        } }), Object.defineProperty(t3, "createStellarAssetContract", { enumerable: true, get: function() {
          return x.createStellarAssetContract;
        } }), Object.defineProperty(t3, "endSponsoringFutureReserves", { enumerable: true, get: function() {
          return S.endSponsoringFutureReserves;
        } }), Object.defineProperty(t3, "extendFootprintTtl", { enumerable: true, get: function() {
          return A.extendFootprintTtl;
        } }), Object.defineProperty(t3, "inflation", { enumerable: true, get: function() {
          return h.inflation;
        } }), Object.defineProperty(t3, "invokeContractFunction", { enumerable: true, get: function() {
          return x.invokeContractFunction;
        } }), Object.defineProperty(t3, "invokeHostFunction", { enumerable: true, get: function() {
          return x.invokeHostFunction;
        } }), Object.defineProperty(t3, "liquidityPoolDeposit", { enumerable: true, get: function() {
          return T.liquidityPoolDeposit;
        } }), Object.defineProperty(t3, "liquidityPoolWithdraw", { enumerable: true, get: function() {
          return O.liquidityPoolWithdraw;
        } }), Object.defineProperty(t3, "manageBuyOffer", { enumerable: true, get: function() {
          return y.manageBuyOffer;
        } }), Object.defineProperty(t3, "manageData", { enumerable: true, get: function() {
          return d.manageData;
        } }), Object.defineProperty(t3, "manageSellOffer", { enumerable: true, get: function() {
          return n2.manageSellOffer;
        } }), Object.defineProperty(t3, "pathPaymentStrictReceive", { enumerable: true, get: function() {
          return m.pathPaymentStrictReceive;
        } }), Object.defineProperty(t3, "pathPaymentStrictSend", { enumerable: true, get: function() {
          return v.pathPaymentStrictSend;
        } }), Object.defineProperty(t3, "payment", { enumerable: true, get: function() {
          return g.payment;
        } }), Object.defineProperty(t3, "restoreFootprint", { enumerable: true, get: function() {
          return P.restoreFootprint;
        } }), Object.defineProperty(t3, "revokeAccountSponsorship", { enumerable: true, get: function() {
          return E.revokeAccountSponsorship;
        } }), Object.defineProperty(t3, "revokeClaimableBalanceSponsorship", { enumerable: true, get: function() {
          return E.revokeClaimableBalanceSponsorship;
        } }), Object.defineProperty(t3, "revokeDataSponsorship", { enumerable: true, get: function() {
          return E.revokeDataSponsorship;
        } }), Object.defineProperty(t3, "revokeLiquidityPoolSponsorship", { enumerable: true, get: function() {
          return E.revokeLiquidityPoolSponsorship;
        } }), Object.defineProperty(t3, "revokeOfferSponsorship", { enumerable: true, get: function() {
          return E.revokeOfferSponsorship;
        } }), Object.defineProperty(t3, "revokeSignerSponsorship", { enumerable: true, get: function() {
          return E.revokeSignerSponsorship;
        } }), Object.defineProperty(t3, "revokeTrustlineSponsorship", { enumerable: true, get: function() {
          return E.revokeTrustlineSponsorship;
        } }), Object.defineProperty(t3, "setOptions", { enumerable: true, get: function() {
          return b.setOptions;
        } }), Object.defineProperty(t3, "setTrustLineFlags", { enumerable: true, get: function() {
          return k.setTrustLineFlags;
        } }), Object.defineProperty(t3, "uploadContractWasm", { enumerable: true, get: function() {
          return x.uploadContractWasm;
        } });
        var n2 = r4(862), o2 = r4(9073), i = r4(4295), a = r4(3683), s = r4(6183), u = r4(2810), c = r4(2115), l2 = r4(4831), f = r4(7239), p = r4(2203), h = r4(7421), d = r4(1411), y = r4(1922), m = r4(2075), v = r4(3874), g = r4(3533), b = r4(2018), w = r4(7505), S = r4(721), E = r4(7790), _ = r4(7651), k = r4(1804), T = r4(9845), O = r4(4737), x = r4(4403), A = r4(8752), P = r4(149);
      }, 7421: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.inflation = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t4 = {};
          return t4.body = o2.default.OperationBody.inflation(), this.setSourceAccount(t4, e4), new o2.default.Operation(t4);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 4403: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.createCustomContract = function(e4) {
          var t4 = n2.from(e4.salt || a.Keypair.random().xdrPublicKey().value());
          if (!e4.wasmHash || 32 !== e4.wasmHash.length) throw new TypeError("expected hash(contract WASM) in 'opts.wasmHash', got ".concat(e4.wasmHash));
          if (32 !== t4.length) throw new TypeError("expected 32-byte salt in 'opts.salt', got ".concat(e4.wasmHash));
          return this.invokeHostFunction({ source: e4.source, auth: e4.auth, func: i.default.HostFunction.hostFunctionTypeCreateContract(new i.default.CreateContractArgs({ executable: i.default.ContractExecutable.contractExecutableWasm(n2.from(e4.wasmHash)), contractIdPreimage: i.default.ContractIdPreimage.contractIdPreimageFromAddress(new i.default.ContractIdPreimageFromAddress({ address: e4.address.toScAddress(), salt: t4 })) })) });
        }, t3.createStellarAssetContract = function(e4) {
          var t4 = e4.asset;
          if ("string" == typeof t4) {
            var r5 = t4.split(":"), n3 = (l2 = 2, function(e5) {
              if (Array.isArray(e5)) return e5;
            }(s2 = r5) || function(e5, t5) {
              var r6 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
              if (null != r6) {
                var n4, o4, i2, a3, s3 = [], u2 = true, c2 = false;
                try {
                  if (i2 = (r6 = r6.call(e5)).next, 0 === t5) {
                    if (Object(r6) !== r6) return;
                    u2 = false;
                  } else for (; !(u2 = (n4 = i2.call(r6)).done) && (s3.push(n4.value), s3.length !== t5); u2 = true) ;
                } catch (e6) {
                  c2 = true, o4 = e6;
                } finally {
                  try {
                    if (!u2 && null != r6.return && (a3 = r6.return(), Object(a3) !== a3)) return;
                  } finally {
                    if (c2) throw o4;
                  }
                }
                return s3;
              }
            }(s2, l2) || function(e5, t5) {
              if (e5) {
                if ("string" == typeof e5) return c(e5, t5);
                var r6 = {}.toString.call(e5).slice(8, -1);
                return "Object" === r6 && e5.constructor && (r6 = e5.constructor.name), "Map" === r6 || "Set" === r6 ? Array.from(e5) : "Arguments" === r6 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r6) ? c(e5, t5) : void 0;
              }
            }(s2, l2) || function() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }()), o3 = n3[0], a2 = n3[1];
            t4 = new u.Asset(o3, a2);
          }
          var s2, l2;
          if (!(t4 instanceof u.Asset)) throw new TypeError("expected Asset in 'opts.asset', got ".concat(t4));
          return this.invokeHostFunction({ source: e4.source, auth: e4.auth, func: i.default.HostFunction.hostFunctionTypeCreateContract(new i.default.CreateContractArgs({ executable: i.default.ContractExecutable.contractExecutableStellarAsset(), contractIdPreimage: i.default.ContractIdPreimage.contractIdPreimageFromAsset(t4.toXDRObject()) })) });
        }, t3.invokeContractFunction = function(e4) {
          var t4 = new s.Address(e4.contract);
          if ("contract" !== t4._type) throw new TypeError("expected contract strkey instance, got ".concat(t4));
          return this.invokeHostFunction({ source: e4.source, auth: e4.auth, func: i.default.HostFunction.hostFunctionTypeInvokeContract(new i.default.InvokeContractArgs({ contractAddress: t4.toScAddress(), functionName: e4.function, args: e4.args })) });
        }, t3.invokeHostFunction = function(e4) {
          if (!e4.func) throw new TypeError("host function invocation ('func') required (got ".concat(JSON.stringify(e4), ")"));
          var t4 = new i.default.InvokeHostFunctionOp({ hostFunction: e4.func, auth: e4.auth || [] }), r5 = { body: i.default.OperationBody.invokeHostFunction(t4) };
          return this.setSourceAccount(r5, e4), new i.default.Operation(r5);
        }, t3.uploadContractWasm = function(e4) {
          return this.invokeHostFunction({ source: e4.source, auth: e4.auth, func: i.default.HostFunction.hostFunctionTypeUploadContractWasm(n2.from(e4.wasm)) });
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(6691), s = r4(1180), u = r4(1764);
        function c(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
      }, 9845: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.liquidityPoolDeposit = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t4 = e4.liquidityPoolId, r5 = e4.maxAmountA, n3 = e4.maxAmountB, i = e4.minPrice, a = e4.maxPrice, s = {};
          if (!t4) throw new TypeError("liquidityPoolId argument is required");
          if (s.liquidityPoolId = o2.default.PoolId.fromXDR(t4, "hex"), !this.isValidAmount(r5, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountA"));
          if (s.maxAmountA = this._toXDRAmount(r5), !this.isValidAmount(n3, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountB"));
          if (s.maxAmountB = this._toXDRAmount(n3), void 0 === i) throw new TypeError("minPrice argument is required");
          if (s.minPrice = this._toXDRPrice(i), void 0 === a) throw new TypeError("maxPrice argument is required");
          s.maxPrice = this._toXDRPrice(a);
          var u = new o2.default.LiquidityPoolDepositOp(s), c = { body: o2.default.OperationBody.liquidityPoolDeposit(u) };
          return this.setSourceAccount(c, e4), new o2.default.Operation(c);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 4737: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.liquidityPoolWithdraw = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t4 = {};
          if (!e4.liquidityPoolId) throw new TypeError("liquidityPoolId argument is required");
          if (t4.liquidityPoolId = o2.default.PoolId.fromXDR(e4.liquidityPoolId, "hex"), !this.isValidAmount(e4.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (t4.amount = this._toXDRAmount(e4.amount), !this.isValidAmount(e4.minAmountA, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountA"));
          if (t4.minAmountA = this._toXDRAmount(e4.minAmountA), !this.isValidAmount(e4.minAmountB, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountB"));
          t4.minAmountB = this._toXDRAmount(e4.minAmountB);
          var r5 = new o2.default.LiquidityPoolWithdrawOp(t4), n3 = { body: o2.default.OperationBody.liquidityPoolWithdraw(r5) };
          return this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 1922: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.manageBuyOffer = function(e4) {
          var t4 = {};
          if (t4.selling = e4.selling.toXDRObject(), t4.buying = e4.buying.toXDRObject(), !this.isValidAmount(e4.buyAmount, true)) throw new TypeError(this.constructAmountRequirementsError("buyAmount"));
          if (t4.buyAmount = this._toXDRAmount(e4.buyAmount), void 0 === e4.price) throw new TypeError("price argument is required");
          t4.price = this._toXDRPrice(e4.price), void 0 !== e4.offerId ? e4.offerId = e4.offerId.toString() : e4.offerId = "0";
          t4.offerId = o2.Hyper.fromString(e4.offerId);
          var r5 = new i.default.ManageBuyOfferOp(t4), n3 = {};
          return n3.body = i.default.OperationBody.manageBuyOffer(r5), this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        };
        var n2, o2 = r4(3740), i = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 1411: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.manageData = function(e4) {
          var t4 = {};
          if (!("string" == typeof e4.name && e4.name.length <= 64)) throw new Error("name must be a string, up to 64 characters");
          if (t4.dataName = e4.name, "string" != typeof e4.value && !n2.isBuffer(e4.value) && null !== e4.value) throw new Error("value must be a string, Buffer or null");
          "string" == typeof e4.value ? t4.dataValue = n2.from(e4.value) : t4.dataValue = e4.value;
          if (null !== t4.dataValue && t4.dataValue.length > 64) throw new Error("value cannot be longer that 64 bytes");
          var r5 = new i.default.ManageDataOp(t4), o3 = {};
          return o3.body = i.default.OperationBody.manageData(r5), this.setSourceAccount(o3, e4), new i.default.Operation(o3);
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 };
      }, 862: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.manageSellOffer = function(e4) {
          var t4 = {};
          if (t4.selling = e4.selling.toXDRObject(), t4.buying = e4.buying.toXDRObject(), !this.isValidAmount(e4.amount, true)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (t4.amount = this._toXDRAmount(e4.amount), void 0 === e4.price) throw new TypeError("price argument is required");
          t4.price = this._toXDRPrice(e4.price), void 0 !== e4.offerId ? e4.offerId = e4.offerId.toString() : e4.offerId = "0";
          t4.offerId = o2.Hyper.fromString(e4.offerId);
          var r5 = new i.default.ManageSellOfferOp(t4), n3 = {};
          return n3.body = i.default.OperationBody.manageSellOffer(r5), this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        };
        var n2, o2 = r4(3740), i = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 2075: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.pathPaymentStrictReceive = function(e4) {
          switch (true) {
            case !e4.sendAsset:
              throw new Error("Must specify a send asset");
            case !this.isValidAmount(e4.sendMax):
              throw new TypeError(this.constructAmountRequirementsError("sendMax"));
            case !e4.destAsset:
              throw new Error("Must provide a destAsset for a payment operation");
            case !this.isValidAmount(e4.destAmount):
              throw new TypeError(this.constructAmountRequirementsError("destAmount"));
          }
          var t4 = {};
          t4.sendAsset = e4.sendAsset.toXDRObject(), t4.sendMax = this._toXDRAmount(e4.sendMax);
          try {
            t4.destination = (0, i.decodeAddressToMuxedAccount)(e4.destination);
          } catch (e5) {
            throw new Error("destination is invalid");
          }
          t4.destAsset = e4.destAsset.toXDRObject(), t4.destAmount = this._toXDRAmount(e4.destAmount);
          var r5 = e4.path ? e4.path : [];
          t4.path = r5.map(function(e5) {
            return e5.toXDRObject();
          });
          var n3 = new o2.default.PathPaymentStrictReceiveOp(t4), a = {};
          return a.body = o2.default.OperationBody.pathPaymentStrictReceive(n3), this.setSourceAccount(a, e4), new o2.default.Operation(a);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6160);
      }, 3874: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.pathPaymentStrictSend = function(e4) {
          switch (true) {
            case !e4.sendAsset:
              throw new Error("Must specify a send asset");
            case !this.isValidAmount(e4.sendAmount):
              throw new TypeError(this.constructAmountRequirementsError("sendAmount"));
            case !e4.destAsset:
              throw new Error("Must provide a destAsset for a payment operation");
            case !this.isValidAmount(e4.destMin):
              throw new TypeError(this.constructAmountRequirementsError("destMin"));
          }
          var t4 = {};
          t4.sendAsset = e4.sendAsset.toXDRObject(), t4.sendAmount = this._toXDRAmount(e4.sendAmount);
          try {
            t4.destination = (0, i.decodeAddressToMuxedAccount)(e4.destination);
          } catch (e5) {
            throw new Error("destination is invalid");
          }
          t4.destAsset = e4.destAsset.toXDRObject(), t4.destMin = this._toXDRAmount(e4.destMin);
          var r5 = e4.path ? e4.path : [];
          t4.path = r5.map(function(e5) {
            return e5.toXDRObject();
          });
          var n3 = new o2.default.PathPaymentStrictSendOp(t4), a = {};
          return a.body = o2.default.OperationBody.pathPaymentStrictSend(n3), this.setSourceAccount(a, e4), new o2.default.Operation(a);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6160);
      }, 3533: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.payment = function(e4) {
          if (!e4.asset) throw new Error("Must provide an asset for a payment operation");
          if (!this.isValidAmount(e4.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          var t4 = {};
          try {
            t4.destination = (0, i.decodeAddressToMuxedAccount)(e4.destination);
          } catch (e5) {
            throw new Error("destination is invalid");
          }
          t4.asset = e4.asset.toXDRObject(), t4.amount = this._toXDRAmount(e4.amount);
          var r5 = new o2.default.PaymentOp(t4), n3 = {};
          return n3.body = o2.default.OperationBody.payment(r5), this.setSourceAccount(n3, e4), new o2.default.Operation(n3);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6160);
      }, 149: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.restoreFootprint = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t4 = new o2.default.RestoreFootprintOp({ ext: new o2.default.ExtensionPoint(0) }), r5 = { body: o2.default.OperationBody.restoreFootprint(t4) };
          return this.setSourceAccount(r5, null != e4 ? e4 : {}), new o2.default.Operation(r5);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
      }, 7790: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.revokeAccountSponsorship = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (!a.StrKey.isValidEd25519PublicKey(e4.account)) throw new Error("account is invalid");
          var t4 = i.default.LedgerKey.account(new i.default.LedgerKeyAccount({ accountId: s.Keypair.fromPublicKey(e4.account).xdrAccountId() })), r5 = i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t4), n3 = {};
          return n3.body = i.default.OperationBody.revokeSponsorship(r5), this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        }, t3.revokeClaimableBalanceSponsorship = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if ("string" != typeof e4.balanceId) throw new Error("balanceId is invalid");
          var t4 = i.default.LedgerKey.claimableBalance(new i.default.LedgerKeyClaimableBalance({ balanceId: i.default.ClaimableBalanceId.fromXDR(e4.balanceId, "hex") })), r5 = i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t4), n3 = {};
          return n3.body = i.default.OperationBody.revokeSponsorship(r5), this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        }, t3.revokeDataSponsorship = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (!a.StrKey.isValidEd25519PublicKey(e4.account)) throw new Error("account is invalid");
          if ("string" != typeof e4.name || e4.name.length > 64) throw new Error("name must be a string, up to 64 characters");
          var t4 = i.default.LedgerKey.data(new i.default.LedgerKeyData({ accountId: s.Keypair.fromPublicKey(e4.account).xdrAccountId(), dataName: e4.name })), r5 = i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t4), n3 = {};
          return n3.body = i.default.OperationBody.revokeSponsorship(r5), this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        }, t3.revokeLiquidityPoolSponsorship = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if ("string" != typeof e4.liquidityPoolId) throw new Error("liquidityPoolId is invalid");
          var t4 = i.default.LedgerKey.liquidityPool(new i.default.LedgerKeyLiquidityPool({ liquidityPoolId: i.default.PoolId.fromXDR(e4.liquidityPoolId, "hex") })), r5 = i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t4), n3 = { body: i.default.OperationBody.revokeSponsorship(r5) };
          return this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        }, t3.revokeOfferSponsorship = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (!a.StrKey.isValidEd25519PublicKey(e4.seller)) throw new Error("seller is invalid");
          if ("string" != typeof e4.offerId) throw new Error("offerId is invalid");
          var t4 = i.default.LedgerKey.offer(new i.default.LedgerKeyOffer({ sellerId: s.Keypair.fromPublicKey(e4.seller).xdrAccountId(), offerId: i.default.Int64.fromString(e4.offerId) })), r5 = i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(t4), n3 = {};
          return n3.body = i.default.OperationBody.revokeSponsorship(r5), this.setSourceAccount(n3, e4), new i.default.Operation(n3);
        }, t3.revokeSignerSponsorship = function() {
          var e4, t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (!a.StrKey.isValidEd25519PublicKey(t4.account)) throw new Error("account is invalid");
          if (t4.signer.ed25519PublicKey) {
            if (!a.StrKey.isValidEd25519PublicKey(t4.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
            var r5 = a.StrKey.decodeEd25519PublicKey(t4.signer.ed25519PublicKey);
            e4 = new i.default.SignerKey.signerKeyTypeEd25519(r5);
          } else if (t4.signer.preAuthTx) {
            var o3;
            if (o3 = "string" == typeof t4.signer.preAuthTx ? n2.from(t4.signer.preAuthTx, "hex") : t4.signer.preAuthTx, !n2.isBuffer(o3) || 32 !== o3.length) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
            e4 = new i.default.SignerKey.signerKeyTypePreAuthTx(o3);
          } else {
            if (!t4.signer.sha256Hash) throw new Error("signer is invalid");
            var u2;
            if (u2 = "string" == typeof t4.signer.sha256Hash ? n2.from(t4.signer.sha256Hash, "hex") : t4.signer.sha256Hash, !n2.isBuffer(u2) || 32 !== u2.length) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
            e4 = new i.default.SignerKey.signerKeyTypeHashX(u2);
          }
          var c2 = new i.default.RevokeSponsorshipOpSigner({ accountId: s.Keypair.fromPublicKey(t4.account).xdrAccountId(), signerKey: e4 }), l2 = i.default.RevokeSponsorshipOp.revokeSponsorshipSigner(c2), f = {};
          return f.body = i.default.OperationBody.revokeSponsorship(l2), this.setSourceAccount(f, t4), new i.default.Operation(f);
        }, t3.revokeTrustlineSponsorship = function() {
          var e4, t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (!a.StrKey.isValidEd25519PublicKey(t4.account)) throw new Error("account is invalid");
          if (t4.asset instanceof u.Asset) e4 = t4.asset.toTrustLineXDRObject();
          else {
            if (!(t4.asset instanceof c.LiquidityPoolId)) throw new TypeError("asset must be an Asset or LiquidityPoolId");
            e4 = t4.asset.toXDRObject();
          }
          var r5 = i.default.LedgerKey.trustline(new i.default.LedgerKeyTrustLine({ accountId: s.Keypair.fromPublicKey(t4.account).xdrAccountId(), asset: e4 })), n3 = i.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(r5), o3 = {};
          return o3.body = i.default.OperationBody.revokeSponsorship(n3), this.setSourceAccount(o3, t4), new i.default.Operation(o3);
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(7120), s = r4(6691), u = r4(1764), c = r4(9353);
      }, 2018: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.setOptions = function(e4) {
          var t4 = {};
          if (e4.inflationDest) {
            if (!s.StrKey.isValidEd25519PublicKey(e4.inflationDest)) throw new Error("inflationDest is invalid");
            t4.inflationDest = a.Keypair.fromPublicKey(e4.inflationDest).xdrAccountId();
          }
          if (t4.clearFlags = this._checkUnsignedIntValue("clearFlags", e4.clearFlags), t4.setFlags = this._checkUnsignedIntValue("setFlags", e4.setFlags), t4.masterWeight = this._checkUnsignedIntValue("masterWeight", e4.masterWeight, u), t4.lowThreshold = this._checkUnsignedIntValue("lowThreshold", e4.lowThreshold, u), t4.medThreshold = this._checkUnsignedIntValue("medThreshold", e4.medThreshold, u), t4.highThreshold = this._checkUnsignedIntValue("highThreshold", e4.highThreshold, u), void 0 !== e4.homeDomain && "string" != typeof e4.homeDomain) throw new TypeError("homeDomain argument must be of type String");
          if (t4.homeDomain = e4.homeDomain, e4.signer) {
            var r5, o3 = this._checkUnsignedIntValue("signer.weight", e4.signer.weight, u), c = 0;
            if (e4.signer.ed25519PublicKey) {
              if (!s.StrKey.isValidEd25519PublicKey(e4.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
              var l2 = s.StrKey.decodeEd25519PublicKey(e4.signer.ed25519PublicKey);
              r5 = new i.default.SignerKey.signerKeyTypeEd25519(l2), c += 1;
            }
            if (e4.signer.preAuthTx) {
              if ("string" == typeof e4.signer.preAuthTx && (e4.signer.preAuthTx = n2.from(e4.signer.preAuthTx, "hex")), !n2.isBuffer(e4.signer.preAuthTx) || 32 !== e4.signer.preAuthTx.length) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
              r5 = new i.default.SignerKey.signerKeyTypePreAuthTx(e4.signer.preAuthTx), c += 1;
            }
            if (e4.signer.sha256Hash) {
              if ("string" == typeof e4.signer.sha256Hash && (e4.signer.sha256Hash = n2.from(e4.signer.sha256Hash, "hex")), !n2.isBuffer(e4.signer.sha256Hash) || 32 !== e4.signer.sha256Hash.length) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
              r5 = new i.default.SignerKey.signerKeyTypeHashX(e4.signer.sha256Hash), c += 1;
            }
            if (e4.signer.ed25519SignedPayload) {
              if (!s.StrKey.isValidSignedPayload(e4.signer.ed25519SignedPayload)) throw new Error("signer.ed25519SignedPayload is invalid.");
              var f = s.StrKey.decodeSignedPayload(e4.signer.ed25519SignedPayload), p = i.default.SignerKeyEd25519SignedPayload.fromXDR(f);
              r5 = i.default.SignerKey.signerKeyTypeEd25519SignedPayload(p), c += 1;
            }
            if (1 !== c) throw new Error("Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.");
            t4.signer = new i.default.Signer({ key: r5, weight: o3 });
          }
          var h = new i.default.SetOptionsOp(t4), d = {};
          return d.body = i.default.OperationBody.setOptions(h), this.setSourceAccount(d, e4), new i.default.Operation(d);
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(6691), s = r4(7120);
        function u(e4, t4) {
          if (e4 >= 0 && e4 <= 255) return true;
          throw new Error("".concat(t4, " value must be between 0 and 255"));
        }
      }, 1804: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.setTrustLineFlags = function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t4 = {};
          if ("object" !== a(e4.flags) || 0 === Object.keys(e4.flags).length) throw new Error("opts.flags must be a map of boolean flags to modify");
          var r5 = { authorized: o2.default.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: o2.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: o2.default.TrustLineFlags.trustlineClawbackEnabledFlag() }, n3 = 0, s = 0;
          Object.keys(e4.flags).forEach(function(t5) {
            if (!Object.prototype.hasOwnProperty.call(r5, t5)) throw new Error("unsupported flag name specified: ".concat(t5));
            var o3 = e4.flags[t5], i2 = r5[t5].value;
            true === o3 ? s |= i2 : false === o3 && (n3 |= i2);
          }), t4.trustor = i.Keypair.fromPublicKey(e4.trustor).xdrAccountId(), t4.asset = e4.asset.toXDRObject(), t4.clearFlags = n3, t4.setFlags = s;
          var u = { body: o2.default.OperationBody.setTrustLineFlags(new o2.default.SetTrustLineFlagsOp(t4)) };
          return this.setSourceAccount(u, e4), new o2.default.Operation(u);
        };
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(6691);
        function a(e4) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, a(e4);
        }
      }, 7177: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.nativeToScVal = function e4(t4) {
          var r5, o3, l3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          switch (f(t4)) {
            case "object":
              if (null === t4) return i.default.ScVal.scvVoid();
              if (t4 instanceof i.default.ScVal) return t4;
              if (t4 instanceof a.Address) return t4.toScVal();
              if (t4 instanceof s.Contract) return t4.address().toScVal();
              if (t4 instanceof Uint8Array || n2.isBuffer(t4)) {
                var p, h = Uint8Array.from(t4);
                switch (null !== (p = null == l3 ? void 0 : l3.type) && void 0 !== p ? p : "bytes") {
                  case "bytes":
                    return i.default.ScVal.scvBytes(h);
                  case "symbol":
                    return i.default.ScVal.scvSymbol(h);
                  case "string":
                    return i.default.ScVal.scvString(h);
                  default:
                    throw new TypeError("invalid type (".concat(l3.type, ") specified for bytes-like value"));
                }
              }
              if (Array.isArray(t4)) {
                if (t4.length > 0 && t4.some(function(e5) {
                  return f(e5) !== f(t4[0]);
                })) throw new TypeError("array values (".concat(t4, ") must have the same type (types: ").concat(t4.map(function(e5) {
                  return f(e5);
                }).join(","), ")"));
                return i.default.ScVal.scvVec(t4.map(function(t5) {
                  return e4(t5, l3);
                }));
              }
              var d;
              if ("Object" !== (null !== (r5 = null === (o3 = t4.constructor) || void 0 === o3 ? void 0 : o3.name) && void 0 !== r5 ? r5 : "")) throw new TypeError("cannot interpret ".concat(null === (d = t4.constructor) || void 0 === d ? void 0 : d.name, " value as ScVal (").concat(JSON.stringify(t4), ")"));
              return i.default.ScVal.scvMap(Object.entries(t4).map(function(t5) {
                var r6, n3, o4 = c(t5, 2), a2 = o4[0], s2 = o4[1], u2 = c(null !== (r6 = (null !== (n3 = null == l3 ? void 0 : l3.type) && void 0 !== n3 ? n3 : {})[a2]) && void 0 !== r6 ? r6 : [null, null], 2), f2 = u2[0], p2 = u2[1], h2 = f2 ? { type: f2 } : {}, d2 = p2 ? { type: p2 } : {};
                return new i.default.ScMapEntry({ key: e4(a2, h2), val: e4(s2, d2) });
              }));
            case "number":
            case "bigint":
              switch (null == l3 ? void 0 : l3.type) {
                case "u32":
                  return i.default.ScVal.scvU32(t4);
                case "i32":
                  return i.default.ScVal.scvI32(t4);
              }
              return new u.ScInt(t4, { type: null == l3 ? void 0 : l3.type }).toScVal();
            case "string":
              var y, m = null !== (y = null == l3 ? void 0 : l3.type) && void 0 !== y ? y : "string";
              switch (m) {
                case "string":
                  return i.default.ScVal.scvString(t4);
                case "symbol":
                  return i.default.ScVal.scvSymbol(t4);
                case "address":
                  return new a.Address(t4).toScVal();
                default:
                  if (u.XdrLargeInt.isType(m)) return new u.XdrLargeInt(m, t4).toScVal();
                  throw new TypeError("invalid type (".concat(l3.type, ") specified for string value"));
              }
            case "boolean":
              return i.default.ScVal.scvBool(t4);
            case "undefined":
              return i.default.ScVal.scvVoid();
            case "function":
              return e4(t4());
            default:
              throw new TypeError("failed to convert typeof ".concat(f(t4), " (").concat(t4, ")"));
          }
        }, t3.scValToNative = function e4(t4) {
          var r5, o3;
          switch (t4.switch().value) {
            case i.default.ScValType.scvVoid().value:
              return null;
            case i.default.ScValType.scvU64().value:
            case i.default.ScValType.scvI64().value:
              return t4.value().toBigInt();
            case i.default.ScValType.scvU128().value:
            case i.default.ScValType.scvI128().value:
            case i.default.ScValType.scvU256().value:
            case i.default.ScValType.scvI256().value:
              return (0, u.scValToBigInt)(t4);
            case i.default.ScValType.scvVec().value:
              return (null !== (r5 = t4.vec()) && void 0 !== r5 ? r5 : []).map(e4);
            case i.default.ScValType.scvAddress().value:
              return a.Address.fromScVal(t4).toString();
            case i.default.ScValType.scvMap().value:
              return Object.fromEntries((null !== (o3 = t4.map()) && void 0 !== o3 ? o3 : []).map(function(t5) {
                return [e4(t5.key()), e4(t5.val())];
              }));
            case i.default.ScValType.scvBool().value:
            case i.default.ScValType.scvU32().value:
            case i.default.ScValType.scvI32().value:
            case i.default.ScValType.scvBytes().value:
              return t4.value();
            case i.default.ScValType.scvSymbol().value:
            case i.default.ScValType.scvString().value:
              var s2 = t4.value();
              if (n2.isBuffer(s2) || ArrayBuffer.isView(s2)) try {
                return new TextDecoder().decode(s2);
              } catch (e5) {
                return new Uint8Array(s2.buffer);
              }
              return s2;
            case i.default.ScValType.scvTimepoint().value:
            case i.default.ScValType.scvDuration().value:
              return new i.default.Uint64(t4.value()).toBigInt();
            case i.default.ScValType.scvError().value:
              if (t4.error().switch().value === i.default.ScErrorType.sceContract().value) return { type: "contract", code: t4.error().contractCode() };
              var c2 = t4.error();
              return { type: "system", code: c2.code().value, value: c2.code().name };
            default:
              return t4.value();
          }
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(1180), s = r4(7452), u = r4(8549);
        function c(e4, t4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || function(e5, t5) {
            var r5 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (null != r5) {
              var n3, o3, i2, a2, s2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r5 = r5.call(e5)).next, 0 === t5) {
                  if (Object(r5) !== r5) return;
                  u2 = false;
                } else for (; !(u2 = (n3 = i2.call(r5)).done) && (s2.push(n3.value), s2.length !== t5); u2 = true) ;
              } catch (e6) {
                c2 = true, o3 = e6;
              } finally {
                try {
                  if (!u2 && null != r5.return && (a2 = r5.return(), Object(a2) !== a2)) return;
                } finally {
                  if (c2) throw o3;
                }
              }
              return s2;
            }
          }(e4, t4) || function(e5, t5) {
            if (e5) {
              if ("string" == typeof e5) return l2(e5, t5);
              var r5 = {}.toString.call(e5).slice(8, -1);
              return "Object" === r5 && e5.constructor && (r5 = e5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? l2(e5, t5) : void 0;
            }
          }(e4, t4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function l2(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function f(e4) {
          return f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, f(e4);
        }
      }, 225: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.SignerKey = void 0;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 }, i = r4(7120);
        function a(e4) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, a(e4);
        }
        function s(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, u(n3.key), n3);
          }
        }
        function u(e4) {
          var t4 = function(e5, t5) {
            if ("object" != a(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != a(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == a(t4) ? t4 : t4 + "";
        }
        t3.SignerKey = function() {
          return function(e4, t4, r5) {
            return t4 && s(e4.prototype, t4), r5 && s(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4() {
            !function(e5, t4) {
              if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            }(this, e4);
          }, null, [{ key: "decodeAddress", value: function(e4) {
            var t4 = { ed25519PublicKey: o2.default.SignerKey.signerKeyTypeEd25519, preAuthTx: o2.default.SignerKey.signerKeyTypePreAuthTx, sha256Hash: o2.default.SignerKey.signerKeyTypeHashX, signedPayload: o2.default.SignerKey.signerKeyTypeEd25519SignedPayload }, r5 = i.StrKey.getVersionByteForPrefix(e4), n3 = t4[r5];
            if (!n3) throw new Error("invalid signer key type (".concat(r5, ")"));
            var a2 = (0, i.decodeCheck)(r5, e4);
            return n3("signedPayload" === r5 ? new o2.default.SignerKeyEd25519SignedPayload({ ed25519: a2.slice(0, 32), payload: a2.slice(36) }) : a2);
          } }, { key: "encodeSignerKey", value: function(e4) {
            var t4, r5;
            switch (e4.switch()) {
              case o2.default.SignerKeyType.signerKeyTypeEd25519():
                t4 = "ed25519PublicKey", r5 = e4.value();
                break;
              case o2.default.SignerKeyType.signerKeyTypePreAuthTx():
                t4 = "preAuthTx", r5 = e4.value();
                break;
              case o2.default.SignerKeyType.signerKeyTypeHashX():
                t4 = "sha256Hash", r5 = e4.value();
                break;
              case o2.default.SignerKeyType.signerKeyTypeEd25519SignedPayload():
                t4 = "signedPayload", r5 = e4.ed25519SignedPayload().toXDR("raw");
                break;
              default:
                throw new Error("invalid SignerKey (type: ".concat(e4.switch(), ")"));
            }
            return (0, i.encodeCheck)(t4, r5);
          } }]);
        }();
      }, 15: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.FastSigning = void 0, t3.generate = function(e4) {
          return o2.generate(e4);
        }, t3.sign = function(e4, t4) {
          return o2.sign(e4, t4);
        }, t3.verify = function(e4, t4, r5) {
          return o2.verify(e4, t4, r5);
        };
        var o2 = {};
        t3.FastSigning = "undefined" == typeof window ? function() {
          var e4;
          try {
            e4 = r4(Object(function() {
              var e5 = new Error("Cannot find module 'sodium-native'");
              throw e5.code = "MODULE_NOT_FOUND", e5;
            }()));
          } catch (e5) {
            return i();
          }
          return Object.keys(e4).length ? (o2.generate = function(t4) {
            var r5 = n2.alloc(e4.crypto_sign_PUBLICKEYBYTES), o3 = n2.alloc(e4.crypto_sign_SECRETKEYBYTES);
            return e4.crypto_sign_seed_keypair(r5, o3, t4), r5;
          }, o2.sign = function(t4, r5) {
            t4 = n2.from(t4);
            var o3 = n2.alloc(e4.crypto_sign_BYTES);
            return e4.crypto_sign_detached(o3, t4, r5), o3;
          }, o2.verify = function(t4, r5, o3) {
            t4 = n2.from(t4);
            try {
              return e4.crypto_sign_verify_detached(r5, t4, o3);
            } catch (e5) {
              return false;
            }
          }, true) : i();
        }() : i();
        function i() {
          var e4 = r4(4940);
          return o2.generate = function(t4) {
            var r5 = new Uint8Array(t4), o3 = e4.sign.keyPair.fromSeed(r5);
            return n2.from(o3.publicKey);
          }, o2.sign = function(t4, r5) {
            t4 = n2.from(t4), t4 = new Uint8Array(t4.toJSON().data), r5 = new Uint8Array(r5.toJSON().data);
            var o3 = e4.sign.detached(t4, r5);
            return n2.from(o3);
          }, o2.verify = function(t4, r5, o3) {
            return t4 = n2.from(t4), t4 = new Uint8Array(t4.toJSON().data), r5 = new Uint8Array(r5.toJSON().data), o3 = new Uint8Array(o3.toJSON().data), e4.sign.detached.verify(t4, r5, o3);
          }, false;
        }
      }, 4062: (e3, t3) => {
        "use strict";
        function r4(e4) {
          return r4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, r4(e4);
        }
        function n2(e4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || function(e5) {
            if ("undefined" != typeof Symbol && null != e5[Symbol.iterator] || null != e5["@@iterator"]) return Array.from(e5);
          }(e4) || function(e5, t4) {
            if (e5) {
              if ("string" == typeof e5) return o2(e5, t4);
              var r5 = {}.toString.call(e5).slice(8, -1);
              return "Object" === r5 && e5.constructor && (r5 = e5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? o2(e5, t4) : void 0;
            }
          }(e4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function o2(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, a(n3.key), n3);
          }
        }
        function a(e4) {
          var t4 = function(e5, t5) {
            if ("object" != r4(e5) || !e5) return e5;
            var n3 = e5[Symbol.toPrimitive];
            if (void 0 !== n3) {
              var o3 = n3.call(e5, t5 || "default");
              if ("object" != r4(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == r4(t4) ? t4 : t4 + "";
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Soroban = void 0;
        t3.Soroban = function() {
          return e4 = function e5() {
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e5);
          }, r5 = [{ key: "formatTokenAmount", value: function(e5, t5) {
            if (e5.includes(".")) throw new TypeError("No decimals are allowed");
            var r6 = e5;
            return t5 > 0 && (r6 = t5 > r6.length ? ["0", r6.toString().padStart(t5, "0")].join(".") : [r6.slice(0, -t5), r6.slice(-t5)].join(".")), r6.replace(/(\.\d*?)0+$/, "$1");
          } }, { key: "parseTokenAmount", value: function(e5, t5) {
            var r6, o3 = n2(e5.split(".").slice()), i2 = o3[0], a2 = o3[1];
            if (o3.slice(2).length) throw new Error("Invalid decimal value: ".concat(e5));
            return BigInt(i2 + (null !== (r6 = null == a2 ? void 0 : a2.padEnd(t5, "0")) && void 0 !== r6 ? r6 : "0".repeat(t5))).toString();
          } }], (t4 = null) && i(e4.prototype, t4), r5 && i(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          var e4, t4, r5;
        }();
      }, 4842: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.SorobanDataBuilder = void 0;
        var n2, o2 = (n2 = r4(1918)) && n2.__esModule ? n2 : { default: n2 };
        function i(e4) {
          return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, i(e4);
        }
        function a(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, s(n3.key), n3);
          }
        }
        function s(e4) {
          var t4 = function(e5, t5) {
            if ("object" != i(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != i(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == i(t4) ? t4 : t4 + "";
        }
        t3.SorobanDataBuilder = function() {
          return function(e4, t4, r5) {
            return t4 && a(e4.prototype, t4), r5 && a(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4) {
            var r5;
            !function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), function(e5, t5, r6) {
              (t5 = s(t5)) in e5 ? Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }) : e5[t5] = r6;
            }(this, "_data", void 0), r5 = t4 ? "string" == typeof t4 || ArrayBuffer.isView(t4) ? e4.fromXDR(t4) : e4.fromXDR(t4.toXDR()) : new o2.default.SorobanTransactionData({ resources: new o2.default.SorobanResources({ footprint: new o2.default.LedgerFootprint({ readOnly: [], readWrite: [] }), instructions: 0, readBytes: 0, writeBytes: 0 }), ext: new o2.default.ExtensionPoint(0), resourceFee: new o2.default.Int64(0) }), this._data = r5;
          }, [{ key: "setResourceFee", value: function(e4) {
            return this._data.resourceFee(new o2.default.Int64(e4)), this;
          } }, { key: "setResources", value: function(e4, t4, r5) {
            return this._data.resources().instructions(e4), this._data.resources().readBytes(t4), this._data.resources().writeBytes(r5), this;
          } }, { key: "appendFootprint", value: function(e4, t4) {
            return this.setFootprint(this.getReadOnly().concat(e4), this.getReadWrite().concat(t4));
          } }, { key: "setFootprint", value: function(e4, t4) {
            return null !== e4 && this.setReadOnly(e4), null !== t4 && this.setReadWrite(t4), this;
          } }, { key: "setReadOnly", value: function(e4) {
            return this._data.resources().footprint().readOnly(null != e4 ? e4 : []), this;
          } }, { key: "setReadWrite", value: function(e4) {
            return this._data.resources().footprint().readWrite(null != e4 ? e4 : []), this;
          } }, { key: "build", value: function() {
            return o2.default.SorobanTransactionData.fromXDR(this._data.toXDR());
          } }, { key: "getReadOnly", value: function() {
            return this.getFootprint().readOnly();
          } }, { key: "getReadWrite", value: function() {
            return this.getFootprint().readWrite();
          } }, { key: "getFootprint", value: function() {
            return this._data.resources().footprint();
          } }], [{ key: "fromXDR", value: function(e4) {
            return o2.default.SorobanTransactionData.fromXDR(e4, "string" == typeof e4 ? "base64" : "raw");
          } }]);
        }();
      }, 7120: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.StrKey = void 0, t3.decodeCheck = h, t3.encodeCheck = d;
        var o2, i = (o2 = r4(5360)) && o2.__esModule ? o2 : { default: o2 }, a = r4(1346);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, c(n3.key), n3);
          }
        }
        function c(e4) {
          var t4 = function(e5, t5) {
            if ("object" != s(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != s(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == s(t4) ? t4 : t4 + "";
        }
        var l2 = { ed25519PublicKey: 48, ed25519SecretSeed: 144, med25519PublicKey: 96, preAuthTx: 152, sha256Hash: 184, signedPayload: 120, contract: 16 }, f = { G: "ed25519PublicKey", S: "ed25519SecretSeed", M: "med25519PublicKey", T: "preAuthTx", X: "sha256Hash", P: "signedPayload", C: "contract" };
        t3.StrKey = function() {
          return function(e4, t4, r5) {
            return t4 && u(e4.prototype, t4), r5 && u(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4() {
            !function(e5, t4) {
              if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            }(this, e4);
          }, null, [{ key: "encodeEd25519PublicKey", value: function(e4) {
            return d("ed25519PublicKey", e4);
          } }, { key: "decodeEd25519PublicKey", value: function(e4) {
            return h("ed25519PublicKey", e4);
          } }, { key: "isValidEd25519PublicKey", value: function(e4) {
            return p("ed25519PublicKey", e4);
          } }, { key: "encodeEd25519SecretSeed", value: function(e4) {
            return d("ed25519SecretSeed", e4);
          } }, { key: "decodeEd25519SecretSeed", value: function(e4) {
            return h("ed25519SecretSeed", e4);
          } }, { key: "isValidEd25519SecretSeed", value: function(e4) {
            return p("ed25519SecretSeed", e4);
          } }, { key: "encodeMed25519PublicKey", value: function(e4) {
            return d("med25519PublicKey", e4);
          } }, { key: "decodeMed25519PublicKey", value: function(e4) {
            return h("med25519PublicKey", e4);
          } }, { key: "isValidMed25519PublicKey", value: function(e4) {
            return p("med25519PublicKey", e4);
          } }, { key: "encodePreAuthTx", value: function(e4) {
            return d("preAuthTx", e4);
          } }, { key: "decodePreAuthTx", value: function(e4) {
            return h("preAuthTx", e4);
          } }, { key: "encodeSha256Hash", value: function(e4) {
            return d("sha256Hash", e4);
          } }, { key: "decodeSha256Hash", value: function(e4) {
            return h("sha256Hash", e4);
          } }, { key: "encodeSignedPayload", value: function(e4) {
            return d("signedPayload", e4);
          } }, { key: "decodeSignedPayload", value: function(e4) {
            return h("signedPayload", e4);
          } }, { key: "isValidSignedPayload", value: function(e4) {
            return p("signedPayload", e4);
          } }, { key: "encodeContract", value: function(e4) {
            return d("contract", e4);
          } }, { key: "decodeContract", value: function(e4) {
            return h("contract", e4);
          } }, { key: "isValidContract", value: function(e4) {
            return p("contract", e4);
          } }, { key: "getVersionByteForPrefix", value: function(e4) {
            return f[e4[0]];
          } }]);
        }();
        function p(e4, t4) {
          if ("string" != typeof t4) return false;
          switch (e4) {
            case "ed25519PublicKey":
            case "ed25519SecretSeed":
            case "preAuthTx":
            case "sha256Hash":
            case "contract":
              if (56 !== t4.length) return false;
              break;
            case "med25519PublicKey":
              if (69 !== t4.length) return false;
              break;
            case "signedPayload":
              if (t4.length < 56 || t4.length > 165) return false;
              break;
            default:
              return false;
          }
          var r5 = "";
          try {
            r5 = h(e4, t4);
          } catch (e5) {
            return false;
          }
          switch (e4) {
            case "ed25519PublicKey":
            case "ed25519SecretSeed":
            case "preAuthTx":
            case "sha256Hash":
            case "contract":
              return 32 === r5.length;
            case "med25519PublicKey":
              return 40 === r5.length;
            case "signedPayload":
              return r5.length >= 40 && r5.length <= 100;
            default:
              return false;
          }
        }
        function h(e4, t4) {
          if ("string" != typeof t4) throw new TypeError("encoded argument must be of type String");
          var r5 = i.default.decode(t4), o3 = r5[0], s2 = r5.slice(0, -2), u2 = s2.slice(1), c2 = r5.slice(-2);
          if (t4 !== i.default.encode(r5)) throw new Error("invalid encoded string");
          var f2 = l2[e4];
          if (void 0 === f2) throw new Error("".concat(e4, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(l2).join(", ")));
          if (o3 !== f2) throw new Error("invalid version byte. expected ".concat(f2, ", got ").concat(o3));
          var p2 = y(s2);
          if (!(0, a.verifyChecksum)(p2, c2)) throw new Error("invalid checksum");
          return n2.from(u2);
        }
        function d(e4, t4) {
          if (null == t4) throw new Error("cannot encode null data");
          var r5 = l2[e4];
          if (void 0 === r5) throw new Error("".concat(e4, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(l2).join(", ")));
          t4 = n2.from(t4);
          var o3 = n2.from([r5]), a2 = n2.concat([o3, t4]), s2 = n2.from(y(a2)), u2 = n2.concat([a2, s2]);
          return i.default.encode(u2);
        }
        function y(e4) {
          for (var t4 = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920], r5 = 0, n3 = 0; n3 < e4.length; n3 += 1) {
            r5 = r5 << 8 ^ t4[r5 >> 8 ^ e4[n3]], r5 &= 65535;
          }
          var o3 = new Uint8Array(2);
          return o3[0] = 255 & r5, o3[1] = r5 >> 8 & 255, o3;
        }
      }, 380: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        function o2(e4) {
          return o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, o2(e4);
        }
        Object.defineProperty(t3, "__esModule", { value: true }), t3.Transaction = void 0;
        var i, a = (i = r4(1918)) && i.__esModule ? i : { default: i }, s = r4(9152), u = r4(7120), c = r4(7237), l2 = r4(4172), f = r4(3758), p = r4(6160);
        function h(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, d(n3.key), n3);
          }
        }
        function d(e4) {
          var t4 = function(e5, t5) {
            if ("object" != o2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != o2(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == o2(t4) ? t4 : t4 + "";
        }
        function y(e4, t4, r5) {
          return t4 = v(t4), function(e5, t5) {
            if (t5 && ("object" == o2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, m() ? Reflect.construct(t4, r5 || [], v(e4).constructor) : t4.apply(e4, r5));
        }
        function m() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (m = function() {
            return !!e4;
          })();
        }
        function v(e4) {
          return v = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, v(e4);
        }
        function g(e4, t4) {
          return g = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, g(e4, t4);
        }
        t3.Transaction = function(e4) {
          function t4(e5, r5) {
            var o3;
            if (function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), "string" == typeof e5) {
              var i2 = n2.from(e5, "base64");
              e5 = a.default.TransactionEnvelope.fromXDR(i2);
            }
            var s2 = e5.switch();
            if (s2 !== a.default.EnvelopeType.envelopeTypeTxV0() && s2 !== a.default.EnvelopeType.envelopeTypeTx()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(s2.name, "."));
            var l3 = e5.value(), f2 = l3.tx(), h2 = f2.fee().toString();
            if ((o3 = y(this, t4, [f2, (l3.signatures() || []).slice(), h2, r5]))._envelopeType = s2, o3._memo = f2.memo(), o3._sequence = f2.seqNum().toString(), o3._envelopeType === a.default.EnvelopeType.envelopeTypeTxV0()) o3._source = u.StrKey.encodeEd25519PublicKey(o3.tx.sourceAccountEd25519());
            else o3._source = (0, p.encodeMuxedAccountToAddress)(o3.tx.sourceAccount());
            var d2 = null, m2 = null;
            switch (o3._envelopeType) {
              case a.default.EnvelopeType.envelopeTypeTxV0():
                m2 = f2.timeBounds();
                break;
              case a.default.EnvelopeType.envelopeTypeTx():
                switch (f2.cond().switch()) {
                  case a.default.PreconditionType.precondTime():
                    m2 = f2.cond().timeBounds();
                    break;
                  case a.default.PreconditionType.precondV2():
                    m2 = (d2 = f2.cond().v2()).timeBounds();
                }
            }
            if (m2 && (o3._timeBounds = { minTime: m2.minTime().toString(), maxTime: m2.maxTime().toString() }), d2) {
              var v2 = d2.ledgerBounds();
              v2 && (o3._ledgerBounds = { minLedger: v2.minLedger(), maxLedger: v2.maxLedger() });
              var g2 = d2.minSeqNum();
              g2 && (o3._minAccountSequence = g2.toString()), o3._minAccountSequenceAge = d2.minSeqAge(), o3._minAccountSequenceLedgerGap = d2.minSeqLedgerGap(), o3._extraSigners = d2.extraSigners();
            }
            var b = f2.operations() || [];
            return o3._operations = b.map(function(e6) {
              return c.Operation.fromXDRObject(e6);
            }), o3;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && g(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && h(e5.prototype, t5), r5 && h(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "timeBounds", get: function() {
            return this._timeBounds;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "ledgerBounds", get: function() {
            return this._ledgerBounds;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequence", get: function() {
            return this._minAccountSequence;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequenceAge", get: function() {
            return this._minAccountSequenceAge;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequenceLedgerGap", get: function() {
            return this._minAccountSequenceLedgerGap;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "extraSigners", get: function() {
            return this._extraSigners;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "sequence", get: function() {
            return this._sequence;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "source", get: function() {
            return this._source;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "operations", get: function() {
            return this._operations;
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "memo", get: function() {
            return l2.Memo.fromXDRObject(this._memo);
          }, set: function(e5) {
            throw new Error("Transaction is immutable");
          } }, { key: "signatureBase", value: function() {
            var e5 = this.tx;
            this._envelopeType === a.default.EnvelopeType.envelopeTypeTxV0() && (e5 = a.default.Transaction.fromXDR(n2.concat([a.default.PublicKeyType.publicKeyTypeEd25519().toXDR(), e5.toXDR()])));
            var t5 = new a.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(e5);
            return new a.default.TransactionSignaturePayload({ networkId: a.default.Hash.fromXDR((0, s.hash)(this.networkPassphrase)), taggedTransaction: t5 }).toXDR();
          } }, { key: "toEnvelope", value: function() {
            var e5, t5 = this.tx.toXDR(), r5 = this.signatures.slice();
            switch (this._envelopeType) {
              case a.default.EnvelopeType.envelopeTypeTxV0():
                e5 = new a.default.TransactionEnvelope.envelopeTypeTxV0(new a.default.TransactionV0Envelope({ tx: a.default.TransactionV0.fromXDR(t5), signatures: r5 }));
                break;
              case a.default.EnvelopeType.envelopeTypeTx():
                e5 = new a.default.TransactionEnvelope.envelopeTypeTx(new a.default.TransactionV1Envelope({ tx: a.default.Transaction.fromXDR(t5), signatures: r5 }));
                break;
              default:
                throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(this._envelopeType.name, "."));
            }
            return e5;
          } }, { key: "getClaimableBalanceId", value: function(e5) {
            if (!Number.isInteger(e5) || e5 < 0 || e5 >= this.operations.length) throw new RangeError("invalid operation index");
            var t5 = this.operations[e5];
            try {
              t5 = c.Operation.createClaimableBalance(t5);
            } catch (e6) {
              throw new TypeError("expected createClaimableBalance, got ".concat(t5.type, ": ").concat(e6));
            }
            var r5 = u.StrKey.decodeEd25519PublicKey((0, p.extractBaseAddress)(this.source)), n3 = a.default.HashIdPreimage.envelopeTypeOpId(new a.default.HashIdPreimageOperationId({ sourceAccount: a.default.AccountId.publicKeyTypeEd25519(r5), seqNum: a.default.SequenceNumber.fromString(this.sequence), opNum: e5 })), o3 = (0, s.hash)(n3.toXDR("raw"));
            return a.default.ClaimableBalanceId.claimableBalanceIdTypeV0(o3).toXDR("hex");
          } }]);
        }(f.TransactionBase);
      }, 3758: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.TransactionBase = void 0;
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(9152), s = r4(6691);
        function u(e4) {
          return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, u(e4);
        }
        function c(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, l2(n3.key), n3);
          }
        }
        function l2(e4) {
          var t4 = function(e5, t5) {
            if ("object" != u(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != u(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == u(t4) ? t4 : t4 + "";
        }
        t3.TransactionBase = function() {
          return function(e4, t4, r5) {
            return t4 && c(e4.prototype, t4), r5 && c(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
          }(function e4(t4, r5, n3, o3) {
            if (function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), "string" != typeof o3) throw new Error("Invalid passphrase provided to Transaction: expected a string but got a ".concat(u(o3)));
            this._networkPassphrase = o3, this._tx = t4, this._signatures = r5, this._fee = n3;
          }, [{ key: "signatures", get: function() {
            return this._signatures;
          }, set: function(e4) {
            throw new Error("Transaction is immutable");
          } }, { key: "tx", get: function() {
            return this._tx;
          }, set: function(e4) {
            throw new Error("Transaction is immutable");
          } }, { key: "fee", get: function() {
            return this._fee;
          }, set: function(e4) {
            throw new Error("Transaction is immutable");
          } }, { key: "networkPassphrase", get: function() {
            return this._networkPassphrase;
          }, set: function(e4) {
            this._networkPassphrase = e4;
          } }, { key: "sign", value: function() {
            for (var e4 = this, t4 = this.hash(), r5 = arguments.length, n3 = new Array(r5), o3 = 0; o3 < r5; o3++) n3[o3] = arguments[o3];
            n3.forEach(function(r6) {
              var n4 = r6.signDecorated(t4);
              e4.signatures.push(n4);
            });
          } }, { key: "getKeypairSignature", value: function(e4) {
            return e4.sign(this.hash()).toString("base64");
          } }, { key: "addSignature", value: function() {
            var e4, t4, r5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", o3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
            if (!o3 || "string" != typeof o3) throw new Error("Invalid signature");
            if (!r5 || "string" != typeof r5) throw new Error("Invalid publicKey");
            var a2 = n2.from(o3, "base64");
            try {
              t4 = (e4 = s.Keypair.fromPublicKey(r5)).signatureHint();
            } catch (e5) {
              throw new Error("Invalid publicKey");
            }
            if (!e4.verify(this.hash(), a2)) throw new Error("Invalid signature");
            this.signatures.push(new i.default.DecoratedSignature({ hint: t4, signature: a2 }));
          } }, { key: "addDecoratedSignature", value: function(e4) {
            this.signatures.push(e4);
          } }, { key: "signHashX", value: function(e4) {
            if ("string" == typeof e4 && (e4 = n2.from(e4, "hex")), e4.length > 64) throw new Error("preimage cannnot be longer than 64 bytes");
            var t4 = e4, r5 = (0, a.hash)(e4), o3 = r5.slice(r5.length - 4);
            this.signatures.push(new i.default.DecoratedSignature({ hint: o3, signature: t4 }));
          } }, { key: "hash", value: function() {
            return (0, a.hash)(this.signatureBase());
          } }, { key: "signatureBase", value: function() {
            throw new Error("Implement in subclass");
          } }, { key: "toEnvelope", value: function() {
            throw new Error("Implement in subclass");
          } }, { key: "toXDR", value: function() {
            return this.toEnvelope().toXDR().toString("base64");
          } }]);
        }();
      }, 6396: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.TransactionBuilder = t3.TimeoutInfinite = t3.BASE_FEE = void 0, t3.isValidDate = T;
        var n2 = r4(3740), o2 = y(r4(1242)), i = y(r4(1918)), a = r4(2135), s = r4(2243), u = r4(6160), c = r4(380), l2 = r4(9260), f = r4(4842), p = r4(7120), h = r4(225), d = r4(4172);
        function y(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        function m(e4) {
          return m = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, m(e4);
        }
        function v(e4) {
          return function(e5) {
            if (Array.isArray(e5)) return g(e5);
          }(e4) || function(e5) {
            if ("undefined" != typeof Symbol && null != e5[Symbol.iterator] || null != e5["@@iterator"]) return Array.from(e5);
          }(e4) || function(e5, t4) {
            if (e5) {
              if ("string" == typeof e5) return g(e5, t4);
              var r5 = {}.toString.call(e5).slice(8, -1);
              return "Object" === r5 && e5.constructor && (r5 = e5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? g(e5, t4) : void 0;
            }
          }(e4) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function g(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function b(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function w(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? b(Object(r5), true).forEach(function(t5) {
              S(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : b(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function S(e4, t4, r5) {
          return (t4 = _(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function E(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, _(n3.key), n3);
          }
        }
        function _(e4) {
          var t4 = function(e5, t5) {
            if ("object" != m(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != m(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == m(t4) ? t4 : t4 + "";
        }
        var k = t3.BASE_FEE = "100";
        t3.TimeoutInfinite = 0, t3.TransactionBuilder = function() {
          function e4(t5) {
            var r6 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (function(e5, t6) {
              if (!(e5 instanceof t6)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), !t5) throw new Error("must specify source account for the transaction");
            if (void 0 === r6.fee) throw new Error("must specify fee for the transaction (in stroops)");
            this.source = t5, this.operations = [], this.baseFee = r6.fee, this.timebounds = r6.timebounds ? w({}, r6.timebounds) : null, this.ledgerbounds = r6.ledgerbounds ? w({}, r6.ledgerbounds) : null, this.minAccountSequence = r6.minAccountSequence || null, this.minAccountSequenceAge = r6.minAccountSequenceAge || null, this.minAccountSequenceLedgerGap = r6.minAccountSequenceLedgerGap || null, this.extraSigners = r6.extraSigners ? v(r6.extraSigners) : null, this.memo = r6.memo || d.Memo.none(), this.networkPassphrase = r6.networkPassphrase || null, this.sorobanData = r6.sorobanData ? new f.SorobanDataBuilder(r6.sorobanData).build() : null;
          }
          return t4 = e4, y2 = [{ key: "cloneFrom", value: function(t5) {
            var r6 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (!(t5 instanceof c.Transaction)) throw new TypeError("expected a 'Transaction', got: ".concat(t5));
            var n3, o3 = (BigInt(t5.sequence) - 1n).toString();
            if (p.StrKey.isValidMed25519PublicKey(t5.source)) n3 = s.MuxedAccount.fromAddress(t5.source, o3);
            else {
              if (!p.StrKey.isValidEd25519PublicKey(t5.source)) throw new TypeError("unsupported tx source account: ".concat(t5.source));
              n3 = new a.Account(t5.source, o3);
            }
            var i2 = new e4(n3, w({ fee: (parseInt(t5.fee, 10) / t5.operations.length || k).toString(), memo: t5.memo, networkPassphrase: t5.networkPassphrase, timebounds: t5.timeBounds, ledgerbounds: t5.ledgerBounds, minAccountSequence: t5.minAccountSequence, minAccountSequenceAge: t5.minAccountSequenceAge, minAccountSequenceLedgerGap: t5.minAccountSequenceLedgerGap, extraSigners: t5.extraSigners }, r6));
            return t5._tx.operations().forEach(function(e5) {
              return i2.addOperation(e5);
            }), i2;
          } }, { key: "buildFeeBumpTransaction", value: function(e5, t5, r6, n3) {
            var a2 = r6.operations.length, s2 = new o2.default(r6.fee).div(a2), c2 = new o2.default(t5);
            if (c2.lt(s2)) throw new Error("Invalid baseFee, it should be at least ".concat(s2, " stroops."));
            var f2 = new o2.default(k);
            if (c2.lt(f2)) throw new Error("Invalid baseFee, it should be at least ".concat(f2, " stroops."));
            var p2, h2 = r6.toEnvelope();
            if (h2.switch() === i.default.EnvelopeType.envelopeTypeTxV0()) {
              var d2 = h2.v0().tx(), y3 = new i.default.Transaction({ sourceAccount: new i.default.MuxedAccount.keyTypeEd25519(d2.sourceAccountEd25519()), fee: d2.fee(), seqNum: d2.seqNum(), cond: i.default.Preconditions.precondTime(d2.timeBounds()), memo: d2.memo(), operations: d2.operations(), ext: new i.default.TransactionExt(0) });
              h2 = new i.default.TransactionEnvelope.envelopeTypeTx(new i.default.TransactionV1Envelope({ tx: y3, signatures: h2.v0().signatures() }));
            }
            p2 = "string" == typeof e5 ? (0, u.decodeAddressToMuxedAccount)(e5) : e5.xdrMuxedAccount();
            var m2 = new i.default.FeeBumpTransaction({ feeSource: p2, fee: i.default.Int64.fromString(c2.times(a2 + 1).toString()), innerTx: i.default.FeeBumpTransactionInnerTx.envelopeTypeTx(h2.v1()), ext: new i.default.FeeBumpTransactionExt(0) }), v2 = new i.default.FeeBumpTransactionEnvelope({ tx: m2, signatures: [] }), g2 = new i.default.TransactionEnvelope.envelopeTypeTxFeeBump(v2);
            return new l2.FeeBumpTransaction(g2, n3);
          } }, { key: "fromXDR", value: function(e5, t5) {
            return "string" == typeof e5 && (e5 = i.default.TransactionEnvelope.fromXDR(e5, "base64")), e5.switch() === i.default.EnvelopeType.envelopeTypeTxFeeBump() ? new l2.FeeBumpTransaction(e5, t5) : new c.Transaction(e5, t5);
          } }], (r5 = [{ key: "addOperation", value: function(e5) {
            return this.operations.push(e5), this;
          } }, { key: "clearOperations", value: function() {
            return this.operations = [], this;
          } }, { key: "addMemo", value: function(e5) {
            return this.memo = e5, this;
          } }, { key: "setTimeout", value: function(e5) {
            if (null !== this.timebounds && this.timebounds.maxTime > 0) throw new Error("TimeBounds.max_time has been already set - setting timeout would overwrite it.");
            if (e5 < 0) throw new Error("timeout cannot be negative");
            if (e5 > 0) {
              var t5 = Math.floor(Date.now() / 1e3) + e5;
              null === this.timebounds ? this.timebounds = { minTime: 0, maxTime: t5 } : this.timebounds = { minTime: this.timebounds.minTime, maxTime: t5 };
            } else this.timebounds = { minTime: 0, maxTime: 0 };
            return this;
          } }, { key: "setTimebounds", value: function(e5, t5) {
            if ("number" == typeof e5 && (e5 = new Date(1e3 * e5)), "number" == typeof t5 && (t5 = new Date(1e3 * t5)), null !== this.timebounds) throw new Error("TimeBounds has been already set - setting timebounds would overwrite it.");
            var r6 = Math.floor(e5.valueOf() / 1e3), n3 = Math.floor(t5.valueOf() / 1e3);
            if (r6 < 0) throw new Error("min_time cannot be negative");
            if (n3 < 0) throw new Error("max_time cannot be negative");
            if (n3 > 0 && r6 > n3) throw new Error("min_time cannot be greater than max_time");
            return this.timebounds = { minTime: r6, maxTime: n3 }, this;
          } }, { key: "setLedgerbounds", value: function(e5, t5) {
            if (null !== this.ledgerbounds) throw new Error("LedgerBounds has been already set - setting ledgerbounds would overwrite it.");
            if (e5 < 0) throw new Error("min_ledger cannot be negative");
            if (t5 < 0) throw new Error("max_ledger cannot be negative");
            if (t5 > 0 && e5 > t5) throw new Error("min_ledger cannot be greater than max_ledger");
            return this.ledgerbounds = { minLedger: e5, maxLedger: t5 }, this;
          } }, { key: "setMinAccountSequence", value: function(e5) {
            if (null !== this.minAccountSequence) throw new Error("min_account_sequence has been already set - setting min_account_sequence would overwrite it.");
            return this.minAccountSequence = e5, this;
          } }, { key: "setMinAccountSequenceAge", value: function(e5) {
            if ("number" != typeof e5) throw new Error("min_account_sequence_age must be a number");
            if (null !== this.minAccountSequenceAge) throw new Error("min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.");
            if (e5 < 0) throw new Error("min_account_sequence_age cannot be negative");
            return this.minAccountSequenceAge = e5, this;
          } }, { key: "setMinAccountSequenceLedgerGap", value: function(e5) {
            if (null !== this.minAccountSequenceLedgerGap) throw new Error("min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.");
            if (e5 < 0) throw new Error("min_account_sequence_ledger_gap cannot be negative");
            return this.minAccountSequenceLedgerGap = e5, this;
          } }, { key: "setExtraSigners", value: function(e5) {
            if (!Array.isArray(e5)) throw new Error("extra_signers must be an array of strings.");
            if (null !== this.extraSigners) throw new Error("extra_signers has been already set - setting extra_signers would overwrite it.");
            if (e5.length > 2) throw new Error("extra_signers cannot be longer than 2 elements.");
            return this.extraSigners = v(e5), this;
          } }, { key: "setNetworkPassphrase", value: function(e5) {
            return this.networkPassphrase = e5, this;
          } }, { key: "setSorobanData", value: function(e5) {
            return this.sorobanData = new f.SorobanDataBuilder(e5).build(), this;
          } }, { key: "build", value: function() {
            var e5 = new o2.default(this.source.sequenceNumber()).plus(1), t5 = { fee: new o2.default(this.baseFee).times(this.operations.length).toNumber(), seqNum: i.default.SequenceNumber.fromString(e5.toString()), memo: this.memo ? this.memo.toXDRObject() : null };
            if (null === this.timebounds || void 0 === this.timebounds.minTime || void 0 === this.timebounds.maxTime) throw new Error("TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).");
            T(this.timebounds.minTime) && (this.timebounds.minTime = this.timebounds.minTime.getTime() / 1e3), T(this.timebounds.maxTime) && (this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1e3), this.timebounds.minTime = n2.UnsignedHyper.fromString(this.timebounds.minTime.toString()), this.timebounds.maxTime = n2.UnsignedHyper.fromString(this.timebounds.maxTime.toString());
            var r6 = new i.default.TimeBounds(this.timebounds);
            if (this.hasV2Preconditions()) {
              var a2 = null;
              null !== this.ledgerbounds && (a2 = new i.default.LedgerBounds(this.ledgerbounds));
              var s2 = this.minAccountSequence || "0";
              s2 = i.default.SequenceNumber.fromString(s2);
              var l3 = n2.UnsignedHyper.fromString(null !== this.minAccountSequenceAge ? this.minAccountSequenceAge.toString() : "0"), f2 = this.minAccountSequenceLedgerGap || 0, p2 = null !== this.extraSigners ? this.extraSigners.map(h.SignerKey.decodeAddress) : [];
              t5.cond = i.default.Preconditions.precondV2(new i.default.PreconditionsV2({ timeBounds: r6, ledgerBounds: a2, minSeqNum: s2, minSeqAge: l3, minSeqLedgerGap: f2, extraSigners: p2 }));
            } else t5.cond = i.default.Preconditions.precondTime(r6);
            t5.sourceAccount = (0, u.decodeAddressToMuxedAccount)(this.source.accountId()), this.sorobanData ? t5.ext = new i.default.TransactionExt(1, this.sorobanData) : t5.ext = new i.default.TransactionExt(0, i.default.Void);
            var d2 = new i.default.Transaction(t5);
            d2.operations(this.operations);
            var y3 = new i.default.TransactionEnvelope.envelopeTypeTx(new i.default.TransactionV1Envelope({ tx: d2 })), m2 = new c.Transaction(y3, this.networkPassphrase);
            return this.source.incrementSequenceNumber(), m2;
          } }, { key: "hasV2Preconditions", value: function() {
            return null !== this.ledgerbounds || null !== this.minAccountSequence || null !== this.minAccountSequenceAge || null !== this.minAccountSequenceLedgerGap || null !== this.extraSigners && this.extraSigners.length > 0;
          } }]) && E(t4.prototype, r5), y2 && E(t4, y2), Object.defineProperty(t4, "prototype", { writable: false }), t4;
          var t4, r5, y2;
        }();
        function T(e4) {
          return e4 instanceof Date && !isNaN(e4);
        }
      }, 1242: (e3, t3, r4) => {
        "use strict";
        var n2;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = void 0;
        var o2 = ((n2 = r4(1594)) && n2.__esModule ? n2 : { default: n2 }).default.clone();
        o2.DEBUG = true;
        t3.default = o2;
      }, 1346: (e3, t3) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.verifyChecksum = function(e4, t4) {
          if (e4.length !== t4.length) return false;
          if (0 === e4.length) return true;
          for (var r4 = 0; r4 < e4.length; r4 += 1) if (e4[r4] !== t4[r4]) return false;
          return true;
        };
      }, 4151: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.best_r = function(e4) {
          var t4, r5, n3 = new o2.default(e4), s = [[new o2.default(0), new o2.default(1)], [new o2.default(1), new o2.default(0)]], u = 2;
          for (; !n3.gt(a); ) {
            t4 = n3.integerValue(o2.default.ROUND_FLOOR), r5 = n3.minus(t4);
            var c = t4.times(s[u - 1][0]).plus(s[u - 2][0]), l2 = t4.times(s[u - 1][1]).plus(s[u - 2][1]);
            if (c.gt(a) || l2.gt(a)) break;
            if (s.push([c, l2]), r5.eq(0)) break;
            n3 = new o2.default(1).div(r5), u += 1;
          }
          var f = (d = s[s.length - 1], y = 2, function(e5) {
            if (Array.isArray(e5)) return e5;
          }(d) || function(e5, t5) {
            var r6 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (null != r6) {
              var n4, o3, i2, a2, s2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r6 = r6.call(e5)).next, 0 === t5) {
                  if (Object(r6) !== r6) return;
                  u2 = false;
                } else for (; !(u2 = (n4 = i2.call(r6)).done) && (s2.push(n4.value), s2.length !== t5); u2 = true) ;
              } catch (e6) {
                c2 = true, o3 = e6;
              } finally {
                try {
                  if (!u2 && null != r6.return && (a2 = r6.return(), Object(a2) !== a2)) return;
                } finally {
                  if (c2) throw o3;
                }
              }
              return s2;
            }
          }(d, y) || function(e5, t5) {
            if (e5) {
              if ("string" == typeof e5) return i(e5, t5);
              var r6 = {}.toString.call(e5).slice(8, -1);
              return "Object" === r6 && e5.constructor && (r6 = e5.constructor.name), "Map" === r6 || "Set" === r6 ? Array.from(e5) : "Arguments" === r6 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r6) ? i(e5, t5) : void 0;
            }
          }(d, y) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }()), p = f[0], h = f[1];
          var d, y;
          if (p.isZero() || h.isZero()) throw new Error("Couldn't find approximation");
          return [p.toNumber(), h.toNumber()];
        };
        var n2, o2 = (n2 = r4(1242)) && n2.__esModule ? n2 : { default: n2 };
        function i(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        var a = 2147483647;
      }, 6160: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8287).Buffer;
        Object.defineProperty(t3, "__esModule", { value: true }), t3.decodeAddressToMuxedAccount = s, t3.encodeMuxedAccount = function(e4, t4) {
          if (!a.StrKey.isValidEd25519PublicKey(e4)) throw new Error("address should be a Stellar account ID (G...)");
          if ("string" != typeof t4) throw new Error("id should be a string representing a number (uint64)");
          return i.default.MuxedAccount.keyTypeMuxedEd25519(new i.default.MuxedAccountMed25519({ id: i.default.Uint64.fromString(t4), ed25519: a.StrKey.decodeEd25519PublicKey(e4) }));
        }, t3.encodeMuxedAccountToAddress = u, t3.extractBaseAddress = function(e4) {
          if (a.StrKey.isValidEd25519PublicKey(e4)) return e4;
          if (!a.StrKey.isValidMed25519PublicKey(e4)) throw new TypeError("expected muxed account (M...), got ".concat(e4));
          var t4 = s(e4);
          return a.StrKey.encodeEd25519PublicKey(t4.med25519().ed25519());
        };
        var o2, i = (o2 = r4(1918)) && o2.__esModule ? o2 : { default: o2 }, a = r4(7120);
        function s(e4) {
          return a.StrKey.isValidMed25519PublicKey(e4) ? function(e5) {
            var t4 = a.StrKey.decodeMed25519PublicKey(e5);
            return i.default.MuxedAccount.keyTypeMuxedEd25519(new i.default.MuxedAccountMed25519({ id: i.default.Uint64.fromXDR(t4.subarray(-8)), ed25519: t4.subarray(0, -8) }));
          }(e4) : i.default.MuxedAccount.keyTypeEd25519(a.StrKey.decodeEd25519PublicKey(e4));
        }
        function u(e4) {
          return e4.switch().value === i.default.CryptoKeyType.keyTypeMuxedEd25519().value ? function(e5) {
            if (e5.switch() === i.default.CryptoKeyType.keyTypeEd25519()) return u(e5);
            var t4 = e5.med25519();
            return a.StrKey.encodeMed25519PublicKey(n2.concat([t4.ed25519(), t4.id().toXDR("raw")]));
          }(e4) : a.StrKey.encodeEd25519PublicKey(e4.ed25519());
        }
      }, 645: (e3, t3) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.trimEnd = void 0;
        t3.trimEnd = function(e4, t4) {
          for (var r4 = "number" == typeof e4, n2 = String(e4); n2.endsWith(t4); ) n2 = n2.slice(0, -1);
          return r4 ? Number(n2) : n2;
        };
      }, 1918: (e3, t3, r4) => {
        "use strict";
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = void 0;
        var n2, o2 = (n2 = r4(7938)) && n2.__esModule ? n2 : { default: n2 };
        t3.default = o2.default;
      }, 4940: (e3, t3, r4) => {
        !function(e4) {
          "use strict";
          var t4 = function(e5) {
            var t5, r5 = new Float64Array(16);
            if (e5) for (t5 = 0; t5 < e5.length; t5++) r5[t5] = e5[t5];
            return r5;
          }, n2 = function() {
            throw new Error("no PRNG");
          }, o2 = new Uint8Array(16), i = new Uint8Array(32);
          i[0] = 9;
          var a = t4(), s = t4([1]), u = t4([56129, 1]), c = t4([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), l2 = t4([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), f = t4([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), p = t4([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), h = t4([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
          function d(e5, t5, r5, n3) {
            e5[t5] = r5 >> 24 & 255, e5[t5 + 1] = r5 >> 16 & 255, e5[t5 + 2] = r5 >> 8 & 255, e5[t5 + 3] = 255 & r5, e5[t5 + 4] = n3 >> 24 & 255, e5[t5 + 5] = n3 >> 16 & 255, e5[t5 + 6] = n3 >> 8 & 255, e5[t5 + 7] = 255 & n3;
          }
          function y(e5, t5, r5, n3, o3) {
            var i2, a2 = 0;
            for (i2 = 0; i2 < o3; i2++) a2 |= e5[t5 + i2] ^ r5[n3 + i2];
            return (1 & a2 - 1 >>> 8) - 1;
          }
          function m(e5, t5, r5, n3) {
            return y(e5, t5, r5, n3, 16);
          }
          function v(e5, t5, r5, n3) {
            return y(e5, t5, r5, n3, 32);
          }
          function g(e5, t5, r5, n3) {
            !function(e6, t6, r6, n4) {
              for (var o3, i2 = 255 & n4[0] | (255 & n4[1]) << 8 | (255 & n4[2]) << 16 | (255 & n4[3]) << 24, a2 = 255 & r6[0] | (255 & r6[1]) << 8 | (255 & r6[2]) << 16 | (255 & r6[3]) << 24, s2 = 255 & r6[4] | (255 & r6[5]) << 8 | (255 & r6[6]) << 16 | (255 & r6[7]) << 24, u2 = 255 & r6[8] | (255 & r6[9]) << 8 | (255 & r6[10]) << 16 | (255 & r6[11]) << 24, c2 = 255 & r6[12] | (255 & r6[13]) << 8 | (255 & r6[14]) << 16 | (255 & r6[15]) << 24, l3 = 255 & n4[4] | (255 & n4[5]) << 8 | (255 & n4[6]) << 16 | (255 & n4[7]) << 24, f2 = 255 & t6[0] | (255 & t6[1]) << 8 | (255 & t6[2]) << 16 | (255 & t6[3]) << 24, p2 = 255 & t6[4] | (255 & t6[5]) << 8 | (255 & t6[6]) << 16 | (255 & t6[7]) << 24, h2 = 255 & t6[8] | (255 & t6[9]) << 8 | (255 & t6[10]) << 16 | (255 & t6[11]) << 24, d2 = 255 & t6[12] | (255 & t6[13]) << 8 | (255 & t6[14]) << 16 | (255 & t6[15]) << 24, y2 = 255 & n4[8] | (255 & n4[9]) << 8 | (255 & n4[10]) << 16 | (255 & n4[11]) << 24, m2 = 255 & r6[16] | (255 & r6[17]) << 8 | (255 & r6[18]) << 16 | (255 & r6[19]) << 24, v2 = 255 & r6[20] | (255 & r6[21]) << 8 | (255 & r6[22]) << 16 | (255 & r6[23]) << 24, g2 = 255 & r6[24] | (255 & r6[25]) << 8 | (255 & r6[26]) << 16 | (255 & r6[27]) << 24, b2 = 255 & r6[28] | (255 & r6[29]) << 8 | (255 & r6[30]) << 16 | (255 & r6[31]) << 24, w2 = 255 & n4[12] | (255 & n4[13]) << 8 | (255 & n4[14]) << 16 | (255 & n4[15]) << 24, S2 = i2, E2 = a2, _2 = s2, k2 = u2, T2 = c2, O2 = l3, x2 = f2, A2 = p2, P2 = h2, R2 = d2, j2 = y2, I2 = m2, C2 = v2, L2 = g2, B2 = b2, N2 = w2, U2 = 0; U2 < 20; U2 += 2) S2 ^= (o3 = (C2 ^= (o3 = (P2 ^= (o3 = (T2 ^= (o3 = S2 + C2 | 0) << 7 | o3 >>> 25) + S2 | 0) << 9 | o3 >>> 23) + T2 | 0) << 13 | o3 >>> 19) + P2 | 0) << 18 | o3 >>> 14, O2 ^= (o3 = (E2 ^= (o3 = (L2 ^= (o3 = (R2 ^= (o3 = O2 + E2 | 0) << 7 | o3 >>> 25) + O2 | 0) << 9 | o3 >>> 23) + R2 | 0) << 13 | o3 >>> 19) + L2 | 0) << 18 | o3 >>> 14, j2 ^= (o3 = (x2 ^= (o3 = (_2 ^= (o3 = (B2 ^= (o3 = j2 + x2 | 0) << 7 | o3 >>> 25) + j2 | 0) << 9 | o3 >>> 23) + B2 | 0) << 13 | o3 >>> 19) + _2 | 0) << 18 | o3 >>> 14, N2 ^= (o3 = (I2 ^= (o3 = (A2 ^= (o3 = (k2 ^= (o3 = N2 + I2 | 0) << 7 | o3 >>> 25) + N2 | 0) << 9 | o3 >>> 23) + k2 | 0) << 13 | o3 >>> 19) + A2 | 0) << 18 | o3 >>> 14, S2 ^= (o3 = (k2 ^= (o3 = (_2 ^= (o3 = (E2 ^= (o3 = S2 + k2 | 0) << 7 | o3 >>> 25) + S2 | 0) << 9 | o3 >>> 23) + E2 | 0) << 13 | o3 >>> 19) + _2 | 0) << 18 | o3 >>> 14, O2 ^= (o3 = (T2 ^= (o3 = (A2 ^= (o3 = (x2 ^= (o3 = O2 + T2 | 0) << 7 | o3 >>> 25) + O2 | 0) << 9 | o3 >>> 23) + x2 | 0) << 13 | o3 >>> 19) + A2 | 0) << 18 | o3 >>> 14, j2 ^= (o3 = (R2 ^= (o3 = (P2 ^= (o3 = (I2 ^= (o3 = j2 + R2 | 0) << 7 | o3 >>> 25) + j2 | 0) << 9 | o3 >>> 23) + I2 | 0) << 13 | o3 >>> 19) + P2 | 0) << 18 | o3 >>> 14, N2 ^= (o3 = (B2 ^= (o3 = (L2 ^= (o3 = (C2 ^= (o3 = N2 + B2 | 0) << 7 | o3 >>> 25) + N2 | 0) << 9 | o3 >>> 23) + C2 | 0) << 13 | o3 >>> 19) + L2 | 0) << 18 | o3 >>> 14;
              S2 = S2 + i2 | 0, E2 = E2 + a2 | 0, _2 = _2 + s2 | 0, k2 = k2 + u2 | 0, T2 = T2 + c2 | 0, O2 = O2 + l3 | 0, x2 = x2 + f2 | 0, A2 = A2 + p2 | 0, P2 = P2 + h2 | 0, R2 = R2 + d2 | 0, j2 = j2 + y2 | 0, I2 = I2 + m2 | 0, C2 = C2 + v2 | 0, L2 = L2 + g2 | 0, B2 = B2 + b2 | 0, N2 = N2 + w2 | 0, e6[0] = S2 >>> 0 & 255, e6[1] = S2 >>> 8 & 255, e6[2] = S2 >>> 16 & 255, e6[3] = S2 >>> 24 & 255, e6[4] = E2 >>> 0 & 255, e6[5] = E2 >>> 8 & 255, e6[6] = E2 >>> 16 & 255, e6[7] = E2 >>> 24 & 255, e6[8] = _2 >>> 0 & 255, e6[9] = _2 >>> 8 & 255, e6[10] = _2 >>> 16 & 255, e6[11] = _2 >>> 24 & 255, e6[12] = k2 >>> 0 & 255, e6[13] = k2 >>> 8 & 255, e6[14] = k2 >>> 16 & 255, e6[15] = k2 >>> 24 & 255, e6[16] = T2 >>> 0 & 255, e6[17] = T2 >>> 8 & 255, e6[18] = T2 >>> 16 & 255, e6[19] = T2 >>> 24 & 255, e6[20] = O2 >>> 0 & 255, e6[21] = O2 >>> 8 & 255, e6[22] = O2 >>> 16 & 255, e6[23] = O2 >>> 24 & 255, e6[24] = x2 >>> 0 & 255, e6[25] = x2 >>> 8 & 255, e6[26] = x2 >>> 16 & 255, e6[27] = x2 >>> 24 & 255, e6[28] = A2 >>> 0 & 255, e6[29] = A2 >>> 8 & 255, e6[30] = A2 >>> 16 & 255, e6[31] = A2 >>> 24 & 255, e6[32] = P2 >>> 0 & 255, e6[33] = P2 >>> 8 & 255, e6[34] = P2 >>> 16 & 255, e6[35] = P2 >>> 24 & 255, e6[36] = R2 >>> 0 & 255, e6[37] = R2 >>> 8 & 255, e6[38] = R2 >>> 16 & 255, e6[39] = R2 >>> 24 & 255, e6[40] = j2 >>> 0 & 255, e6[41] = j2 >>> 8 & 255, e6[42] = j2 >>> 16 & 255, e6[43] = j2 >>> 24 & 255, e6[44] = I2 >>> 0 & 255, e6[45] = I2 >>> 8 & 255, e6[46] = I2 >>> 16 & 255, e6[47] = I2 >>> 24 & 255, e6[48] = C2 >>> 0 & 255, e6[49] = C2 >>> 8 & 255, e6[50] = C2 >>> 16 & 255, e6[51] = C2 >>> 24 & 255, e6[52] = L2 >>> 0 & 255, e6[53] = L2 >>> 8 & 255, e6[54] = L2 >>> 16 & 255, e6[55] = L2 >>> 24 & 255, e6[56] = B2 >>> 0 & 255, e6[57] = B2 >>> 8 & 255, e6[58] = B2 >>> 16 & 255, e6[59] = B2 >>> 24 & 255, e6[60] = N2 >>> 0 & 255, e6[61] = N2 >>> 8 & 255, e6[62] = N2 >>> 16 & 255, e6[63] = N2 >>> 24 & 255;
            }(e5, t5, r5, n3);
          }
          function b(e5, t5, r5, n3) {
            !function(e6, t6, r6, n4) {
              for (var o3, i2 = 255 & n4[0] | (255 & n4[1]) << 8 | (255 & n4[2]) << 16 | (255 & n4[3]) << 24, a2 = 255 & r6[0] | (255 & r6[1]) << 8 | (255 & r6[2]) << 16 | (255 & r6[3]) << 24, s2 = 255 & r6[4] | (255 & r6[5]) << 8 | (255 & r6[6]) << 16 | (255 & r6[7]) << 24, u2 = 255 & r6[8] | (255 & r6[9]) << 8 | (255 & r6[10]) << 16 | (255 & r6[11]) << 24, c2 = 255 & r6[12] | (255 & r6[13]) << 8 | (255 & r6[14]) << 16 | (255 & r6[15]) << 24, l3 = 255 & n4[4] | (255 & n4[5]) << 8 | (255 & n4[6]) << 16 | (255 & n4[7]) << 24, f2 = 255 & t6[0] | (255 & t6[1]) << 8 | (255 & t6[2]) << 16 | (255 & t6[3]) << 24, p2 = 255 & t6[4] | (255 & t6[5]) << 8 | (255 & t6[6]) << 16 | (255 & t6[7]) << 24, h2 = 255 & t6[8] | (255 & t6[9]) << 8 | (255 & t6[10]) << 16 | (255 & t6[11]) << 24, d2 = 255 & t6[12] | (255 & t6[13]) << 8 | (255 & t6[14]) << 16 | (255 & t6[15]) << 24, y2 = 255 & n4[8] | (255 & n4[9]) << 8 | (255 & n4[10]) << 16 | (255 & n4[11]) << 24, m2 = 255 & r6[16] | (255 & r6[17]) << 8 | (255 & r6[18]) << 16 | (255 & r6[19]) << 24, v2 = 255 & r6[20] | (255 & r6[21]) << 8 | (255 & r6[22]) << 16 | (255 & r6[23]) << 24, g2 = 255 & r6[24] | (255 & r6[25]) << 8 | (255 & r6[26]) << 16 | (255 & r6[27]) << 24, b2 = 255 & r6[28] | (255 & r6[29]) << 8 | (255 & r6[30]) << 16 | (255 & r6[31]) << 24, w2 = 255 & n4[12] | (255 & n4[13]) << 8 | (255 & n4[14]) << 16 | (255 & n4[15]) << 24, S2 = 0; S2 < 20; S2 += 2) i2 ^= (o3 = (v2 ^= (o3 = (h2 ^= (o3 = (c2 ^= (o3 = i2 + v2 | 0) << 7 | o3 >>> 25) + i2 | 0) << 9 | o3 >>> 23) + c2 | 0) << 13 | o3 >>> 19) + h2 | 0) << 18 | o3 >>> 14, l3 ^= (o3 = (a2 ^= (o3 = (g2 ^= (o3 = (d2 ^= (o3 = l3 + a2 | 0) << 7 | o3 >>> 25) + l3 | 0) << 9 | o3 >>> 23) + d2 | 0) << 13 | o3 >>> 19) + g2 | 0) << 18 | o3 >>> 14, y2 ^= (o3 = (f2 ^= (o3 = (s2 ^= (o3 = (b2 ^= (o3 = y2 + f2 | 0) << 7 | o3 >>> 25) + y2 | 0) << 9 | o3 >>> 23) + b2 | 0) << 13 | o3 >>> 19) + s2 | 0) << 18 | o3 >>> 14, w2 ^= (o3 = (m2 ^= (o3 = (p2 ^= (o3 = (u2 ^= (o3 = w2 + m2 | 0) << 7 | o3 >>> 25) + w2 | 0) << 9 | o3 >>> 23) + u2 | 0) << 13 | o3 >>> 19) + p2 | 0) << 18 | o3 >>> 14, i2 ^= (o3 = (u2 ^= (o3 = (s2 ^= (o3 = (a2 ^= (o3 = i2 + u2 | 0) << 7 | o3 >>> 25) + i2 | 0) << 9 | o3 >>> 23) + a2 | 0) << 13 | o3 >>> 19) + s2 | 0) << 18 | o3 >>> 14, l3 ^= (o3 = (c2 ^= (o3 = (p2 ^= (o3 = (f2 ^= (o3 = l3 + c2 | 0) << 7 | o3 >>> 25) + l3 | 0) << 9 | o3 >>> 23) + f2 | 0) << 13 | o3 >>> 19) + p2 | 0) << 18 | o3 >>> 14, y2 ^= (o3 = (d2 ^= (o3 = (h2 ^= (o3 = (m2 ^= (o3 = y2 + d2 | 0) << 7 | o3 >>> 25) + y2 | 0) << 9 | o3 >>> 23) + m2 | 0) << 13 | o3 >>> 19) + h2 | 0) << 18 | o3 >>> 14, w2 ^= (o3 = (b2 ^= (o3 = (g2 ^= (o3 = (v2 ^= (o3 = w2 + b2 | 0) << 7 | o3 >>> 25) + w2 | 0) << 9 | o3 >>> 23) + v2 | 0) << 13 | o3 >>> 19) + g2 | 0) << 18 | o3 >>> 14;
              e6[0] = i2 >>> 0 & 255, e6[1] = i2 >>> 8 & 255, e6[2] = i2 >>> 16 & 255, e6[3] = i2 >>> 24 & 255, e6[4] = l3 >>> 0 & 255, e6[5] = l3 >>> 8 & 255, e6[6] = l3 >>> 16 & 255, e6[7] = l3 >>> 24 & 255, e6[8] = y2 >>> 0 & 255, e6[9] = y2 >>> 8 & 255, e6[10] = y2 >>> 16 & 255, e6[11] = y2 >>> 24 & 255, e6[12] = w2 >>> 0 & 255, e6[13] = w2 >>> 8 & 255, e6[14] = w2 >>> 16 & 255, e6[15] = w2 >>> 24 & 255, e6[16] = f2 >>> 0 & 255, e6[17] = f2 >>> 8 & 255, e6[18] = f2 >>> 16 & 255, e6[19] = f2 >>> 24 & 255, e6[20] = p2 >>> 0 & 255, e6[21] = p2 >>> 8 & 255, e6[22] = p2 >>> 16 & 255, e6[23] = p2 >>> 24 & 255, e6[24] = h2 >>> 0 & 255, e6[25] = h2 >>> 8 & 255, e6[26] = h2 >>> 16 & 255, e6[27] = h2 >>> 24 & 255, e6[28] = d2 >>> 0 & 255, e6[29] = d2 >>> 8 & 255, e6[30] = d2 >>> 16 & 255, e6[31] = d2 >>> 24 & 255;
            }(e5, t5, r5, n3);
          }
          var w = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
          function S(e5, t5, r5, n3, o3, i2, a2) {
            var s2, u2, c2 = new Uint8Array(16), l3 = new Uint8Array(64);
            for (u2 = 0; u2 < 16; u2++) c2[u2] = 0;
            for (u2 = 0; u2 < 8; u2++) c2[u2] = i2[u2];
            for (; o3 >= 64; ) {
              for (g(l3, c2, a2, w), u2 = 0; u2 < 64; u2++) e5[t5 + u2] = r5[n3 + u2] ^ l3[u2];
              for (s2 = 1, u2 = 8; u2 < 16; u2++) s2 = s2 + (255 & c2[u2]) | 0, c2[u2] = 255 & s2, s2 >>>= 8;
              o3 -= 64, t5 += 64, n3 += 64;
            }
            if (o3 > 0) for (g(l3, c2, a2, w), u2 = 0; u2 < o3; u2++) e5[t5 + u2] = r5[n3 + u2] ^ l3[u2];
            return 0;
          }
          function E(e5, t5, r5, n3, o3) {
            var i2, a2, s2 = new Uint8Array(16), u2 = new Uint8Array(64);
            for (a2 = 0; a2 < 16; a2++) s2[a2] = 0;
            for (a2 = 0; a2 < 8; a2++) s2[a2] = n3[a2];
            for (; r5 >= 64; ) {
              for (g(u2, s2, o3, w), a2 = 0; a2 < 64; a2++) e5[t5 + a2] = u2[a2];
              for (i2 = 1, a2 = 8; a2 < 16; a2++) i2 = i2 + (255 & s2[a2]) | 0, s2[a2] = 255 & i2, i2 >>>= 8;
              r5 -= 64, t5 += 64;
            }
            if (r5 > 0) for (g(u2, s2, o3, w), a2 = 0; a2 < r5; a2++) e5[t5 + a2] = u2[a2];
            return 0;
          }
          function _(e5, t5, r5, n3, o3) {
            var i2 = new Uint8Array(32);
            b(i2, n3, o3, w);
            for (var a2 = new Uint8Array(8), s2 = 0; s2 < 8; s2++) a2[s2] = n3[s2 + 16];
            return E(e5, t5, r5, a2, i2);
          }
          function k(e5, t5, r5, n3, o3, i2, a2) {
            var s2 = new Uint8Array(32);
            b(s2, i2, a2, w);
            for (var u2 = new Uint8Array(8), c2 = 0; c2 < 8; c2++) u2[c2] = i2[c2 + 16];
            return S(e5, t5, r5, n3, o3, u2, s2);
          }
          var T = function(e5) {
            var t5, r5, n3, o3, i2, a2, s2, u2;
            this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0, t5 = 255 & e5[0] | (255 & e5[1]) << 8, this.r[0] = 8191 & t5, r5 = 255 & e5[2] | (255 & e5[3]) << 8, this.r[1] = 8191 & (t5 >>> 13 | r5 << 3), n3 = 255 & e5[4] | (255 & e5[5]) << 8, this.r[2] = 7939 & (r5 >>> 10 | n3 << 6), o3 = 255 & e5[6] | (255 & e5[7]) << 8, this.r[3] = 8191 & (n3 >>> 7 | o3 << 9), i2 = 255 & e5[8] | (255 & e5[9]) << 8, this.r[4] = 255 & (o3 >>> 4 | i2 << 12), this.r[5] = i2 >>> 1 & 8190, a2 = 255 & e5[10] | (255 & e5[11]) << 8, this.r[6] = 8191 & (i2 >>> 14 | a2 << 2), s2 = 255 & e5[12] | (255 & e5[13]) << 8, this.r[7] = 8065 & (a2 >>> 11 | s2 << 5), u2 = 255 & e5[14] | (255 & e5[15]) << 8, this.r[8] = 8191 & (s2 >>> 8 | u2 << 8), this.r[9] = u2 >>> 5 & 127, this.pad[0] = 255 & e5[16] | (255 & e5[17]) << 8, this.pad[1] = 255 & e5[18] | (255 & e5[19]) << 8, this.pad[2] = 255 & e5[20] | (255 & e5[21]) << 8, this.pad[3] = 255 & e5[22] | (255 & e5[23]) << 8, this.pad[4] = 255 & e5[24] | (255 & e5[25]) << 8, this.pad[5] = 255 & e5[26] | (255 & e5[27]) << 8, this.pad[6] = 255 & e5[28] | (255 & e5[29]) << 8, this.pad[7] = 255 & e5[30] | (255 & e5[31]) << 8;
          };
          function O(e5, t5, r5, n3, o3, i2) {
            var a2 = new T(i2);
            return a2.update(r5, n3, o3), a2.finish(e5, t5), 0;
          }
          function x(e5, t5, r5, n3, o3, i2) {
            var a2 = new Uint8Array(16);
            return O(a2, 0, r5, n3, o3, i2), m(e5, t5, a2, 0);
          }
          function A(e5, t5, r5, n3, o3) {
            var i2;
            if (r5 < 32) return -1;
            for (k(e5, 0, t5, 0, r5, n3, o3), O(e5, 16, e5, 32, r5 - 32, e5), i2 = 0; i2 < 16; i2++) e5[i2] = 0;
            return 0;
          }
          function P(e5, t5, r5, n3, o3) {
            var i2, a2 = new Uint8Array(32);
            if (r5 < 32) return -1;
            if (_(a2, 0, 32, n3, o3), 0 !== x(t5, 16, t5, 32, r5 - 32, a2)) return -1;
            for (k(e5, 0, t5, 0, r5, n3, o3), i2 = 0; i2 < 32; i2++) e5[i2] = 0;
            return 0;
          }
          function R(e5, t5) {
            var r5;
            for (r5 = 0; r5 < 16; r5++) e5[r5] = 0 | t5[r5];
          }
          function j(e5) {
            var t5, r5, n3 = 1;
            for (t5 = 0; t5 < 16; t5++) r5 = e5[t5] + n3 + 65535, n3 = Math.floor(r5 / 65536), e5[t5] = r5 - 65536 * n3;
            e5[0] += n3 - 1 + 37 * (n3 - 1);
          }
          function I(e5, t5, r5) {
            for (var n3, o3 = ~(r5 - 1), i2 = 0; i2 < 16; i2++) n3 = o3 & (e5[i2] ^ t5[i2]), e5[i2] ^= n3, t5[i2] ^= n3;
          }
          function C(e5, r5) {
            var n3, o3, i2, a2 = t4(), s2 = t4();
            for (n3 = 0; n3 < 16; n3++) s2[n3] = r5[n3];
            for (j(s2), j(s2), j(s2), o3 = 0; o3 < 2; o3++) {
              for (a2[0] = s2[0] - 65517, n3 = 1; n3 < 15; n3++) a2[n3] = s2[n3] - 65535 - (a2[n3 - 1] >> 16 & 1), a2[n3 - 1] &= 65535;
              a2[15] = s2[15] - 32767 - (a2[14] >> 16 & 1), i2 = a2[15] >> 16 & 1, a2[14] &= 65535, I(s2, a2, 1 - i2);
            }
            for (n3 = 0; n3 < 16; n3++) e5[2 * n3] = 255 & s2[n3], e5[2 * n3 + 1] = s2[n3] >> 8;
          }
          function L(e5, t5) {
            var r5 = new Uint8Array(32), n3 = new Uint8Array(32);
            return C(r5, e5), C(n3, t5), v(r5, 0, n3, 0);
          }
          function B(e5) {
            var t5 = new Uint8Array(32);
            return C(t5, e5), 1 & t5[0];
          }
          function N(e5, t5) {
            var r5;
            for (r5 = 0; r5 < 16; r5++) e5[r5] = t5[2 * r5] + (t5[2 * r5 + 1] << 8);
            e5[15] &= 32767;
          }
          function U(e5, t5, r5) {
            for (var n3 = 0; n3 < 16; n3++) e5[n3] = t5[n3] + r5[n3];
          }
          function M(e5, t5, r5) {
            for (var n3 = 0; n3 < 16; n3++) e5[n3] = t5[n3] - r5[n3];
          }
          function D(e5, t5, r5) {
            var n3, o3, i2 = 0, a2 = 0, s2 = 0, u2 = 0, c2 = 0, l3 = 0, f2 = 0, p2 = 0, h2 = 0, d2 = 0, y2 = 0, m2 = 0, v2 = 0, g2 = 0, b2 = 0, w2 = 0, S2 = 0, E2 = 0, _2 = 0, k2 = 0, T2 = 0, O2 = 0, x2 = 0, A2 = 0, P2 = 0, R2 = 0, j2 = 0, I2 = 0, C2 = 0, L2 = 0, B2 = 0, N2 = r5[0], U2 = r5[1], M2 = r5[2], D2 = r5[3], F2 = r5[4], V2 = r5[5], q2 = r5[6], K2 = r5[7], H2 = r5[8], z2 = r5[9], X2 = r5[10], G2 = r5[11], W2 = r5[12], $2 = r5[13], Q2 = r5[14], Y2 = r5[15];
            i2 += (n3 = t5[0]) * N2, a2 += n3 * U2, s2 += n3 * M2, u2 += n3 * D2, c2 += n3 * F2, l3 += n3 * V2, f2 += n3 * q2, p2 += n3 * K2, h2 += n3 * H2, d2 += n3 * z2, y2 += n3 * X2, m2 += n3 * G2, v2 += n3 * W2, g2 += n3 * $2, b2 += n3 * Q2, w2 += n3 * Y2, a2 += (n3 = t5[1]) * N2, s2 += n3 * U2, u2 += n3 * M2, c2 += n3 * D2, l3 += n3 * F2, f2 += n3 * V2, p2 += n3 * q2, h2 += n3 * K2, d2 += n3 * H2, y2 += n3 * z2, m2 += n3 * X2, v2 += n3 * G2, g2 += n3 * W2, b2 += n3 * $2, w2 += n3 * Q2, S2 += n3 * Y2, s2 += (n3 = t5[2]) * N2, u2 += n3 * U2, c2 += n3 * M2, l3 += n3 * D2, f2 += n3 * F2, p2 += n3 * V2, h2 += n3 * q2, d2 += n3 * K2, y2 += n3 * H2, m2 += n3 * z2, v2 += n3 * X2, g2 += n3 * G2, b2 += n3 * W2, w2 += n3 * $2, S2 += n3 * Q2, E2 += n3 * Y2, u2 += (n3 = t5[3]) * N2, c2 += n3 * U2, l3 += n3 * M2, f2 += n3 * D2, p2 += n3 * F2, h2 += n3 * V2, d2 += n3 * q2, y2 += n3 * K2, m2 += n3 * H2, v2 += n3 * z2, g2 += n3 * X2, b2 += n3 * G2, w2 += n3 * W2, S2 += n3 * $2, E2 += n3 * Q2, _2 += n3 * Y2, c2 += (n3 = t5[4]) * N2, l3 += n3 * U2, f2 += n3 * M2, p2 += n3 * D2, h2 += n3 * F2, d2 += n3 * V2, y2 += n3 * q2, m2 += n3 * K2, v2 += n3 * H2, g2 += n3 * z2, b2 += n3 * X2, w2 += n3 * G2, S2 += n3 * W2, E2 += n3 * $2, _2 += n3 * Q2, k2 += n3 * Y2, l3 += (n3 = t5[5]) * N2, f2 += n3 * U2, p2 += n3 * M2, h2 += n3 * D2, d2 += n3 * F2, y2 += n3 * V2, m2 += n3 * q2, v2 += n3 * K2, g2 += n3 * H2, b2 += n3 * z2, w2 += n3 * X2, S2 += n3 * G2, E2 += n3 * W2, _2 += n3 * $2, k2 += n3 * Q2, T2 += n3 * Y2, f2 += (n3 = t5[6]) * N2, p2 += n3 * U2, h2 += n3 * M2, d2 += n3 * D2, y2 += n3 * F2, m2 += n3 * V2, v2 += n3 * q2, g2 += n3 * K2, b2 += n3 * H2, w2 += n3 * z2, S2 += n3 * X2, E2 += n3 * G2, _2 += n3 * W2, k2 += n3 * $2, T2 += n3 * Q2, O2 += n3 * Y2, p2 += (n3 = t5[7]) * N2, h2 += n3 * U2, d2 += n3 * M2, y2 += n3 * D2, m2 += n3 * F2, v2 += n3 * V2, g2 += n3 * q2, b2 += n3 * K2, w2 += n3 * H2, S2 += n3 * z2, E2 += n3 * X2, _2 += n3 * G2, k2 += n3 * W2, T2 += n3 * $2, O2 += n3 * Q2, x2 += n3 * Y2, h2 += (n3 = t5[8]) * N2, d2 += n3 * U2, y2 += n3 * M2, m2 += n3 * D2, v2 += n3 * F2, g2 += n3 * V2, b2 += n3 * q2, w2 += n3 * K2, S2 += n3 * H2, E2 += n3 * z2, _2 += n3 * X2, k2 += n3 * G2, T2 += n3 * W2, O2 += n3 * $2, x2 += n3 * Q2, A2 += n3 * Y2, d2 += (n3 = t5[9]) * N2, y2 += n3 * U2, m2 += n3 * M2, v2 += n3 * D2, g2 += n3 * F2, b2 += n3 * V2, w2 += n3 * q2, S2 += n3 * K2, E2 += n3 * H2, _2 += n3 * z2, k2 += n3 * X2, T2 += n3 * G2, O2 += n3 * W2, x2 += n3 * $2, A2 += n3 * Q2, P2 += n3 * Y2, y2 += (n3 = t5[10]) * N2, m2 += n3 * U2, v2 += n3 * M2, g2 += n3 * D2, b2 += n3 * F2, w2 += n3 * V2, S2 += n3 * q2, E2 += n3 * K2, _2 += n3 * H2, k2 += n3 * z2, T2 += n3 * X2, O2 += n3 * G2, x2 += n3 * W2, A2 += n3 * $2, P2 += n3 * Q2, R2 += n3 * Y2, m2 += (n3 = t5[11]) * N2, v2 += n3 * U2, g2 += n3 * M2, b2 += n3 * D2, w2 += n3 * F2, S2 += n3 * V2, E2 += n3 * q2, _2 += n3 * K2, k2 += n3 * H2, T2 += n3 * z2, O2 += n3 * X2, x2 += n3 * G2, A2 += n3 * W2, P2 += n3 * $2, R2 += n3 * Q2, j2 += n3 * Y2, v2 += (n3 = t5[12]) * N2, g2 += n3 * U2, b2 += n3 * M2, w2 += n3 * D2, S2 += n3 * F2, E2 += n3 * V2, _2 += n3 * q2, k2 += n3 * K2, T2 += n3 * H2, O2 += n3 * z2, x2 += n3 * X2, A2 += n3 * G2, P2 += n3 * W2, R2 += n3 * $2, j2 += n3 * Q2, I2 += n3 * Y2, g2 += (n3 = t5[13]) * N2, b2 += n3 * U2, w2 += n3 * M2, S2 += n3 * D2, E2 += n3 * F2, _2 += n3 * V2, k2 += n3 * q2, T2 += n3 * K2, O2 += n3 * H2, x2 += n3 * z2, A2 += n3 * X2, P2 += n3 * G2, R2 += n3 * W2, j2 += n3 * $2, I2 += n3 * Q2, C2 += n3 * Y2, b2 += (n3 = t5[14]) * N2, w2 += n3 * U2, S2 += n3 * M2, E2 += n3 * D2, _2 += n3 * F2, k2 += n3 * V2, T2 += n3 * q2, O2 += n3 * K2, x2 += n3 * H2, A2 += n3 * z2, P2 += n3 * X2, R2 += n3 * G2, j2 += n3 * W2, I2 += n3 * $2, C2 += n3 * Q2, L2 += n3 * Y2, w2 += (n3 = t5[15]) * N2, a2 += 38 * (E2 += n3 * M2), s2 += 38 * (_2 += n3 * D2), u2 += 38 * (k2 += n3 * F2), c2 += 38 * (T2 += n3 * V2), l3 += 38 * (O2 += n3 * q2), f2 += 38 * (x2 += n3 * K2), p2 += 38 * (A2 += n3 * H2), h2 += 38 * (P2 += n3 * z2), d2 += 38 * (R2 += n3 * X2), y2 += 38 * (j2 += n3 * G2), m2 += 38 * (I2 += n3 * W2), v2 += 38 * (C2 += n3 * $2), g2 += 38 * (L2 += n3 * Q2), b2 += 38 * (B2 += n3 * Y2), i2 = (n3 = (i2 += 38 * (S2 += n3 * U2)) + (o3 = 1) + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), a2 = (n3 = a2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), s2 = (n3 = s2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), u2 = (n3 = u2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), c2 = (n3 = c2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), l3 = (n3 = l3 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), f2 = (n3 = f2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), p2 = (n3 = p2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), h2 = (n3 = h2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), d2 = (n3 = d2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), y2 = (n3 = y2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), m2 = (n3 = m2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), v2 = (n3 = v2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), g2 = (n3 = g2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), b2 = (n3 = b2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), w2 = (n3 = w2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), i2 = (n3 = (i2 += o3 - 1 + 37 * (o3 - 1)) + (o3 = 1) + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), a2 = (n3 = a2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), s2 = (n3 = s2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), u2 = (n3 = u2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), c2 = (n3 = c2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), l3 = (n3 = l3 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), f2 = (n3 = f2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), p2 = (n3 = p2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), h2 = (n3 = h2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), d2 = (n3 = d2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), y2 = (n3 = y2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), m2 = (n3 = m2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), v2 = (n3 = v2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), g2 = (n3 = g2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), b2 = (n3 = b2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), w2 = (n3 = w2 + o3 + 65535) - 65536 * (o3 = Math.floor(n3 / 65536)), i2 += o3 - 1 + 37 * (o3 - 1), e5[0] = i2, e5[1] = a2, e5[2] = s2, e5[3] = u2, e5[4] = c2, e5[5] = l3, e5[6] = f2, e5[7] = p2, e5[8] = h2, e5[9] = d2, e5[10] = y2, e5[11] = m2, e5[12] = v2, e5[13] = g2, e5[14] = b2, e5[15] = w2;
          }
          function F(e5, t5) {
            D(e5, t5, t5);
          }
          function V(e5, r5) {
            var n3, o3 = t4();
            for (n3 = 0; n3 < 16; n3++) o3[n3] = r5[n3];
            for (n3 = 253; n3 >= 0; n3--) F(o3, o3), 2 !== n3 && 4 !== n3 && D(o3, o3, r5);
            for (n3 = 0; n3 < 16; n3++) e5[n3] = o3[n3];
          }
          function q(e5, r5) {
            var n3, o3 = t4();
            for (n3 = 0; n3 < 16; n3++) o3[n3] = r5[n3];
            for (n3 = 250; n3 >= 0; n3--) F(o3, o3), 1 !== n3 && D(o3, o3, r5);
            for (n3 = 0; n3 < 16; n3++) e5[n3] = o3[n3];
          }
          function K(e5, r5, n3) {
            var o3, i2, a2 = new Uint8Array(32), s2 = new Float64Array(80), c2 = t4(), l3 = t4(), f2 = t4(), p2 = t4(), h2 = t4(), d2 = t4();
            for (i2 = 0; i2 < 31; i2++) a2[i2] = r5[i2];
            for (a2[31] = 127 & r5[31] | 64, a2[0] &= 248, N(s2, n3), i2 = 0; i2 < 16; i2++) l3[i2] = s2[i2], p2[i2] = c2[i2] = f2[i2] = 0;
            for (c2[0] = p2[0] = 1, i2 = 254; i2 >= 0; --i2) I(c2, l3, o3 = a2[i2 >>> 3] >>> (7 & i2) & 1), I(f2, p2, o3), U(h2, c2, f2), M(c2, c2, f2), U(f2, l3, p2), M(l3, l3, p2), F(p2, h2), F(d2, c2), D(c2, f2, c2), D(f2, l3, h2), U(h2, c2, f2), M(c2, c2, f2), F(l3, c2), M(f2, p2, d2), D(c2, f2, u), U(c2, c2, p2), D(f2, f2, c2), D(c2, p2, d2), D(p2, l3, s2), F(l3, h2), I(c2, l3, o3), I(f2, p2, o3);
            for (i2 = 0; i2 < 16; i2++) s2[i2 + 16] = c2[i2], s2[i2 + 32] = f2[i2], s2[i2 + 48] = l3[i2], s2[i2 + 64] = p2[i2];
            var y2 = s2.subarray(32), m2 = s2.subarray(16);
            return V(y2, y2), D(m2, m2, y2), C(e5, m2), 0;
          }
          function H(e5, t5) {
            return K(e5, t5, i);
          }
          function z(e5, t5) {
            return n2(t5, 32), H(e5, t5);
          }
          function X(e5, t5, r5) {
            var n3 = new Uint8Array(32);
            return K(n3, r5, t5), b(e5, o2, n3, w);
          }
          T.prototype.blocks = function(e5, t5, r5) {
            for (var n3, o3, i2, a2, s2, u2, c2, l3, f2, p2, h2, d2, y2, m2, v2, g2, b2, w2, S2, E2 = this.fin ? 0 : 2048, _2 = this.h[0], k2 = this.h[1], T2 = this.h[2], O2 = this.h[3], x2 = this.h[4], A2 = this.h[5], P2 = this.h[6], R2 = this.h[7], j2 = this.h[8], I2 = this.h[9], C2 = this.r[0], L2 = this.r[1], B2 = this.r[2], N2 = this.r[3], U2 = this.r[4], M2 = this.r[5], D2 = this.r[6], F2 = this.r[7], V2 = this.r[8], q2 = this.r[9]; r5 >= 16; ) p2 = f2 = 0, p2 += (_2 += 8191 & (n3 = 255 & e5[t5 + 0] | (255 & e5[t5 + 1]) << 8)) * C2, p2 += (k2 += 8191 & (n3 >>> 13 | (o3 = 255 & e5[t5 + 2] | (255 & e5[t5 + 3]) << 8) << 3)) * (5 * q2), p2 += (T2 += 8191 & (o3 >>> 10 | (i2 = 255 & e5[t5 + 4] | (255 & e5[t5 + 5]) << 8) << 6)) * (5 * V2), p2 += (O2 += 8191 & (i2 >>> 7 | (a2 = 255 & e5[t5 + 6] | (255 & e5[t5 + 7]) << 8) << 9)) * (5 * F2), f2 = (p2 += (x2 += 8191 & (a2 >>> 4 | (s2 = 255 & e5[t5 + 8] | (255 & e5[t5 + 9]) << 8) << 12)) * (5 * D2)) >>> 13, p2 &= 8191, p2 += (A2 += s2 >>> 1 & 8191) * (5 * M2), p2 += (P2 += 8191 & (s2 >>> 14 | (u2 = 255 & e5[t5 + 10] | (255 & e5[t5 + 11]) << 8) << 2)) * (5 * U2), p2 += (R2 += 8191 & (u2 >>> 11 | (c2 = 255 & e5[t5 + 12] | (255 & e5[t5 + 13]) << 8) << 5)) * (5 * N2), p2 += (j2 += 8191 & (c2 >>> 8 | (l3 = 255 & e5[t5 + 14] | (255 & e5[t5 + 15]) << 8) << 8)) * (5 * B2), h2 = f2 += (p2 += (I2 += l3 >>> 5 | E2) * (5 * L2)) >>> 13, h2 += _2 * L2, h2 += k2 * C2, h2 += T2 * (5 * q2), h2 += O2 * (5 * V2), f2 = (h2 += x2 * (5 * F2)) >>> 13, h2 &= 8191, h2 += A2 * (5 * D2), h2 += P2 * (5 * M2), h2 += R2 * (5 * U2), h2 += j2 * (5 * N2), f2 += (h2 += I2 * (5 * B2)) >>> 13, h2 &= 8191, d2 = f2, d2 += _2 * B2, d2 += k2 * L2, d2 += T2 * C2, d2 += O2 * (5 * q2), f2 = (d2 += x2 * (5 * V2)) >>> 13, d2 &= 8191, d2 += A2 * (5 * F2), d2 += P2 * (5 * D2), d2 += R2 * (5 * M2), d2 += j2 * (5 * U2), y2 = f2 += (d2 += I2 * (5 * N2)) >>> 13, y2 += _2 * N2, y2 += k2 * B2, y2 += T2 * L2, y2 += O2 * C2, f2 = (y2 += x2 * (5 * q2)) >>> 13, y2 &= 8191, y2 += A2 * (5 * V2), y2 += P2 * (5 * F2), y2 += R2 * (5 * D2), y2 += j2 * (5 * M2), m2 = f2 += (y2 += I2 * (5 * U2)) >>> 13, m2 += _2 * U2, m2 += k2 * N2, m2 += T2 * B2, m2 += O2 * L2, f2 = (m2 += x2 * C2) >>> 13, m2 &= 8191, m2 += A2 * (5 * q2), m2 += P2 * (5 * V2), m2 += R2 * (5 * F2), m2 += j2 * (5 * D2), v2 = f2 += (m2 += I2 * (5 * M2)) >>> 13, v2 += _2 * M2, v2 += k2 * U2, v2 += T2 * N2, v2 += O2 * B2, f2 = (v2 += x2 * L2) >>> 13, v2 &= 8191, v2 += A2 * C2, v2 += P2 * (5 * q2), v2 += R2 * (5 * V2), v2 += j2 * (5 * F2), g2 = f2 += (v2 += I2 * (5 * D2)) >>> 13, g2 += _2 * D2, g2 += k2 * M2, g2 += T2 * U2, g2 += O2 * N2, f2 = (g2 += x2 * B2) >>> 13, g2 &= 8191, g2 += A2 * L2, g2 += P2 * C2, g2 += R2 * (5 * q2), g2 += j2 * (5 * V2), b2 = f2 += (g2 += I2 * (5 * F2)) >>> 13, b2 += _2 * F2, b2 += k2 * D2, b2 += T2 * M2, b2 += O2 * U2, f2 = (b2 += x2 * N2) >>> 13, b2 &= 8191, b2 += A2 * B2, b2 += P2 * L2, b2 += R2 * C2, b2 += j2 * (5 * q2), w2 = f2 += (b2 += I2 * (5 * V2)) >>> 13, w2 += _2 * V2, w2 += k2 * F2, w2 += T2 * D2, w2 += O2 * M2, f2 = (w2 += x2 * U2) >>> 13, w2 &= 8191, w2 += A2 * N2, w2 += P2 * B2, w2 += R2 * L2, w2 += j2 * C2, S2 = f2 += (w2 += I2 * (5 * q2)) >>> 13, S2 += _2 * q2, S2 += k2 * V2, S2 += T2 * F2, S2 += O2 * D2, f2 = (S2 += x2 * M2) >>> 13, S2 &= 8191, S2 += A2 * U2, S2 += P2 * N2, S2 += R2 * B2, S2 += j2 * L2, _2 = p2 = 8191 & (f2 = (f2 = ((f2 += (S2 += I2 * C2) >>> 13) << 2) + f2 | 0) + (p2 &= 8191) | 0), k2 = h2 += f2 >>>= 13, T2 = d2 &= 8191, O2 = y2 &= 8191, x2 = m2 &= 8191, A2 = v2 &= 8191, P2 = g2 &= 8191, R2 = b2 &= 8191, j2 = w2 &= 8191, I2 = S2 &= 8191, t5 += 16, r5 -= 16;
            this.h[0] = _2, this.h[1] = k2, this.h[2] = T2, this.h[3] = O2, this.h[4] = x2, this.h[5] = A2, this.h[6] = P2, this.h[7] = R2, this.h[8] = j2, this.h[9] = I2;
          }, T.prototype.finish = function(e5, t5) {
            var r5, n3, o3, i2, a2 = new Uint16Array(10);
            if (this.leftover) {
              for (i2 = this.leftover, this.buffer[i2++] = 1; i2 < 16; i2++) this.buffer[i2] = 0;
              this.fin = 1, this.blocks(this.buffer, 0, 16);
            }
            for (r5 = this.h[1] >>> 13, this.h[1] &= 8191, i2 = 2; i2 < 10; i2++) this.h[i2] += r5, r5 = this.h[i2] >>> 13, this.h[i2] &= 8191;
            for (this.h[0] += 5 * r5, r5 = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += r5, r5 = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += r5, a2[0] = this.h[0] + 5, r5 = a2[0] >>> 13, a2[0] &= 8191, i2 = 1; i2 < 10; i2++) a2[i2] = this.h[i2] + r5, r5 = a2[i2] >>> 13, a2[i2] &= 8191;
            for (a2[9] -= 8192, n3 = (1 ^ r5) - 1, i2 = 0; i2 < 10; i2++) a2[i2] &= n3;
            for (n3 = ~n3, i2 = 0; i2 < 10; i2++) this.h[i2] = this.h[i2] & n3 | a2[i2];
            for (this.h[0] = 65535 & (this.h[0] | this.h[1] << 13), this.h[1] = 65535 & (this.h[1] >>> 3 | this.h[2] << 10), this.h[2] = 65535 & (this.h[2] >>> 6 | this.h[3] << 7), this.h[3] = 65535 & (this.h[3] >>> 9 | this.h[4] << 4), this.h[4] = 65535 & (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14), this.h[5] = 65535 & (this.h[6] >>> 2 | this.h[7] << 11), this.h[6] = 65535 & (this.h[7] >>> 5 | this.h[8] << 8), this.h[7] = 65535 & (this.h[8] >>> 8 | this.h[9] << 5), o3 = this.h[0] + this.pad[0], this.h[0] = 65535 & o3, i2 = 1; i2 < 8; i2++) o3 = (this.h[i2] + this.pad[i2] | 0) + (o3 >>> 16) | 0, this.h[i2] = 65535 & o3;
            e5[t5 + 0] = this.h[0] >>> 0 & 255, e5[t5 + 1] = this.h[0] >>> 8 & 255, e5[t5 + 2] = this.h[1] >>> 0 & 255, e5[t5 + 3] = this.h[1] >>> 8 & 255, e5[t5 + 4] = this.h[2] >>> 0 & 255, e5[t5 + 5] = this.h[2] >>> 8 & 255, e5[t5 + 6] = this.h[3] >>> 0 & 255, e5[t5 + 7] = this.h[3] >>> 8 & 255, e5[t5 + 8] = this.h[4] >>> 0 & 255, e5[t5 + 9] = this.h[4] >>> 8 & 255, e5[t5 + 10] = this.h[5] >>> 0 & 255, e5[t5 + 11] = this.h[5] >>> 8 & 255, e5[t5 + 12] = this.h[6] >>> 0 & 255, e5[t5 + 13] = this.h[6] >>> 8 & 255, e5[t5 + 14] = this.h[7] >>> 0 & 255, e5[t5 + 15] = this.h[7] >>> 8 & 255;
          }, T.prototype.update = function(e5, t5, r5) {
            var n3, o3;
            if (this.leftover) {
              for ((o3 = 16 - this.leftover) > r5 && (o3 = r5), n3 = 0; n3 < o3; n3++) this.buffer[this.leftover + n3] = e5[t5 + n3];
              if (r5 -= o3, t5 += o3, this.leftover += o3, this.leftover < 16) return;
              this.blocks(this.buffer, 0, 16), this.leftover = 0;
            }
            if (r5 >= 16 && (o3 = r5 - r5 % 16, this.blocks(e5, t5, o3), t5 += o3, r5 -= o3), r5) {
              for (n3 = 0; n3 < r5; n3++) this.buffer[this.leftover + n3] = e5[t5 + n3];
              this.leftover += r5;
            }
          };
          var G = A, W = P;
          var $ = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
          function Q(e5, t5, r5, n3) {
            for (var o3, i2, a2, s2, u2, c2, l3, f2, p2, h2, d2, y2, m2, v2, g2, b2, w2, S2, E2, _2, k2, T2, O2, x2, A2, P2, R2 = new Int32Array(16), j2 = new Int32Array(16), I2 = e5[0], C2 = e5[1], L2 = e5[2], B2 = e5[3], N2 = e5[4], U2 = e5[5], M2 = e5[6], D2 = e5[7], F2 = t5[0], V2 = t5[1], q2 = t5[2], K2 = t5[3], H2 = t5[4], z2 = t5[5], X2 = t5[6], G2 = t5[7], W2 = 0; n3 >= 128; ) {
              for (E2 = 0; E2 < 16; E2++) _2 = 8 * E2 + W2, R2[E2] = r5[_2 + 0] << 24 | r5[_2 + 1] << 16 | r5[_2 + 2] << 8 | r5[_2 + 3], j2[E2] = r5[_2 + 4] << 24 | r5[_2 + 5] << 16 | r5[_2 + 6] << 8 | r5[_2 + 7];
              for (E2 = 0; E2 < 80; E2++) if (o3 = I2, i2 = C2, a2 = L2, s2 = B2, u2 = N2, c2 = U2, l3 = M2, D2, p2 = F2, h2 = V2, d2 = q2, y2 = K2, m2 = H2, v2 = z2, g2 = X2, G2, O2 = 65535 & (T2 = G2), x2 = T2 >>> 16, A2 = 65535 & (k2 = D2), P2 = k2 >>> 16, O2 += 65535 & (T2 = (H2 >>> 14 | N2 << 18) ^ (H2 >>> 18 | N2 << 14) ^ (N2 >>> 9 | H2 << 23)), x2 += T2 >>> 16, A2 += 65535 & (k2 = (N2 >>> 14 | H2 << 18) ^ (N2 >>> 18 | H2 << 14) ^ (H2 >>> 9 | N2 << 23)), P2 += k2 >>> 16, O2 += 65535 & (T2 = H2 & z2 ^ ~H2 & X2), x2 += T2 >>> 16, A2 += 65535 & (k2 = N2 & U2 ^ ~N2 & M2), P2 += k2 >>> 16, k2 = $[2 * E2], O2 += 65535 & (T2 = $[2 * E2 + 1]), x2 += T2 >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, k2 = R2[E2 % 16], x2 += (T2 = j2[E2 % 16]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16, O2 = 65535 & (T2 = S2 = 65535 & O2 | x2 << 16), x2 = T2 >>> 16, A2 = 65535 & (k2 = w2 = 65535 & A2 | (P2 += A2 >>> 16) << 16), P2 = k2 >>> 16, O2 += 65535 & (T2 = (F2 >>> 28 | I2 << 4) ^ (I2 >>> 2 | F2 << 30) ^ (I2 >>> 7 | F2 << 25)), x2 += T2 >>> 16, A2 += 65535 & (k2 = (I2 >>> 28 | F2 << 4) ^ (F2 >>> 2 | I2 << 30) ^ (F2 >>> 7 | I2 << 25)), P2 += k2 >>> 16, x2 += (T2 = F2 & V2 ^ F2 & q2 ^ V2 & q2) >>> 16, A2 += 65535 & (k2 = I2 & C2 ^ I2 & L2 ^ C2 & L2), P2 += k2 >>> 16, f2 = 65535 & (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) | (P2 += A2 >>> 16) << 16, b2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = y2), x2 = T2 >>> 16, A2 = 65535 & (k2 = s2), P2 = k2 >>> 16, x2 += (T2 = S2) >>> 16, A2 += 65535 & (k2 = w2), P2 += k2 >>> 16, C2 = o3, L2 = i2, B2 = a2, N2 = s2 = 65535 & (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) | (P2 += A2 >>> 16) << 16, U2 = u2, M2 = c2, D2 = l3, I2 = f2, V2 = p2, q2 = h2, K2 = d2, H2 = y2 = 65535 & O2 | x2 << 16, z2 = m2, X2 = v2, G2 = g2, F2 = b2, E2 % 16 == 15) for (_2 = 0; _2 < 16; _2++) k2 = R2[_2], O2 = 65535 & (T2 = j2[_2]), x2 = T2 >>> 16, A2 = 65535 & k2, P2 = k2 >>> 16, k2 = R2[(_2 + 9) % 16], O2 += 65535 & (T2 = j2[(_2 + 9) % 16]), x2 += T2 >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, w2 = R2[(_2 + 1) % 16], O2 += 65535 & (T2 = ((S2 = j2[(_2 + 1) % 16]) >>> 1 | w2 << 31) ^ (S2 >>> 8 | w2 << 24) ^ (S2 >>> 7 | w2 << 25)), x2 += T2 >>> 16, A2 += 65535 & (k2 = (w2 >>> 1 | S2 << 31) ^ (w2 >>> 8 | S2 << 24) ^ w2 >>> 7), P2 += k2 >>> 16, w2 = R2[(_2 + 14) % 16], x2 += (T2 = ((S2 = j2[(_2 + 14) % 16]) >>> 19 | w2 << 13) ^ (w2 >>> 29 | S2 << 3) ^ (S2 >>> 6 | w2 << 26)) >>> 16, A2 += 65535 & (k2 = (w2 >>> 19 | S2 << 13) ^ (S2 >>> 29 | w2 << 3) ^ w2 >>> 6), P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, R2[_2] = 65535 & A2 | P2 << 16, j2[_2] = 65535 & O2 | x2 << 16;
              O2 = 65535 & (T2 = F2), x2 = T2 >>> 16, A2 = 65535 & (k2 = I2), P2 = k2 >>> 16, k2 = e5[0], x2 += (T2 = t5[0]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[0] = I2 = 65535 & A2 | P2 << 16, t5[0] = F2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = V2), x2 = T2 >>> 16, A2 = 65535 & (k2 = C2), P2 = k2 >>> 16, k2 = e5[1], x2 += (T2 = t5[1]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[1] = C2 = 65535 & A2 | P2 << 16, t5[1] = V2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = q2), x2 = T2 >>> 16, A2 = 65535 & (k2 = L2), P2 = k2 >>> 16, k2 = e5[2], x2 += (T2 = t5[2]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[2] = L2 = 65535 & A2 | P2 << 16, t5[2] = q2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = K2), x2 = T2 >>> 16, A2 = 65535 & (k2 = B2), P2 = k2 >>> 16, k2 = e5[3], x2 += (T2 = t5[3]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[3] = B2 = 65535 & A2 | P2 << 16, t5[3] = K2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = H2), x2 = T2 >>> 16, A2 = 65535 & (k2 = N2), P2 = k2 >>> 16, k2 = e5[4], x2 += (T2 = t5[4]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[4] = N2 = 65535 & A2 | P2 << 16, t5[4] = H2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = z2), x2 = T2 >>> 16, A2 = 65535 & (k2 = U2), P2 = k2 >>> 16, k2 = e5[5], x2 += (T2 = t5[5]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[5] = U2 = 65535 & A2 | P2 << 16, t5[5] = z2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = X2), x2 = T2 >>> 16, A2 = 65535 & (k2 = M2), P2 = k2 >>> 16, k2 = e5[6], x2 += (T2 = t5[6]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[6] = M2 = 65535 & A2 | P2 << 16, t5[6] = X2 = 65535 & O2 | x2 << 16, O2 = 65535 & (T2 = G2), x2 = T2 >>> 16, A2 = 65535 & (k2 = D2), P2 = k2 >>> 16, k2 = e5[7], x2 += (T2 = t5[7]) >>> 16, A2 += 65535 & k2, P2 += k2 >>> 16, P2 += (A2 += (x2 += (O2 += 65535 & T2) >>> 16) >>> 16) >>> 16, e5[7] = D2 = 65535 & A2 | P2 << 16, t5[7] = G2 = 65535 & O2 | x2 << 16, W2 += 128, n3 -= 128;
            }
            return n3;
          }
          function Y(e5, t5, r5) {
            var n3, o3 = new Int32Array(8), i2 = new Int32Array(8), a2 = new Uint8Array(256), s2 = r5;
            for (o3[0] = 1779033703, o3[1] = 3144134277, o3[2] = 1013904242, o3[3] = 2773480762, o3[4] = 1359893119, o3[5] = 2600822924, o3[6] = 528734635, o3[7] = 1541459225, i2[0] = 4089235720, i2[1] = 2227873595, i2[2] = 4271175723, i2[3] = 1595750129, i2[4] = 2917565137, i2[5] = 725511199, i2[6] = 4215389547, i2[7] = 327033209, Q(o3, i2, t5, r5), r5 %= 128, n3 = 0; n3 < r5; n3++) a2[n3] = t5[s2 - r5 + n3];
            for (a2[r5] = 128, a2[(r5 = 256 - 128 * (r5 < 112 ? 1 : 0)) - 9] = 0, d(a2, r5 - 8, s2 / 536870912 | 0, s2 << 3), Q(o3, i2, a2, r5), n3 = 0; n3 < 8; n3++) d(e5, 8 * n3, o3[n3], i2[n3]);
            return 0;
          }
          function J(e5, r5) {
            var n3 = t4(), o3 = t4(), i2 = t4(), a2 = t4(), s2 = t4(), u2 = t4(), c2 = t4(), f2 = t4(), p2 = t4();
            M(n3, e5[1], e5[0]), M(p2, r5[1], r5[0]), D(n3, n3, p2), U(o3, e5[0], e5[1]), U(p2, r5[0], r5[1]), D(o3, o3, p2), D(i2, e5[3], r5[3]), D(i2, i2, l2), D(a2, e5[2], r5[2]), U(a2, a2, a2), M(s2, o3, n3), M(u2, a2, i2), U(c2, a2, i2), U(f2, o3, n3), D(e5[0], s2, u2), D(e5[1], f2, c2), D(e5[2], c2, u2), D(e5[3], s2, f2);
          }
          function Z(e5, t5, r5) {
            var n3;
            for (n3 = 0; n3 < 4; n3++) I(e5[n3], t5[n3], r5);
          }
          function ee(e5, r5) {
            var n3 = t4(), o3 = t4(), i2 = t4();
            V(i2, r5[2]), D(n3, r5[0], i2), D(o3, r5[1], i2), C(e5, o3), e5[31] ^= B(n3) << 7;
          }
          function te(e5, t5, r5) {
            var n3, o3;
            for (R(e5[0], a), R(e5[1], s), R(e5[2], s), R(e5[3], a), o3 = 255; o3 >= 0; --o3) Z(e5, t5, n3 = r5[o3 / 8 | 0] >> (7 & o3) & 1), J(t5, e5), J(e5, e5), Z(e5, t5, n3);
          }
          function re(e5, r5) {
            var n3 = [t4(), t4(), t4(), t4()];
            R(n3[0], f), R(n3[1], p), R(n3[2], s), D(n3[3], f, p), te(e5, n3, r5);
          }
          function ne(e5, r5, o3) {
            var i2, a2 = new Uint8Array(64), s2 = [t4(), t4(), t4(), t4()];
            for (o3 || n2(r5, 32), Y(a2, r5, 32), a2[0] &= 248, a2[31] &= 127, a2[31] |= 64, re(s2, a2), ee(e5, s2), i2 = 0; i2 < 32; i2++) r5[i2 + 32] = e5[i2];
            return 0;
          }
          var oe = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
          function ie(e5, t5) {
            var r5, n3, o3, i2;
            for (n3 = 63; n3 >= 32; --n3) {
              for (r5 = 0, o3 = n3 - 32, i2 = n3 - 12; o3 < i2; ++o3) t5[o3] += r5 - 16 * t5[n3] * oe[o3 - (n3 - 32)], r5 = Math.floor((t5[o3] + 128) / 256), t5[o3] -= 256 * r5;
              t5[o3] += r5, t5[n3] = 0;
            }
            for (r5 = 0, o3 = 0; o3 < 32; o3++) t5[o3] += r5 - (t5[31] >> 4) * oe[o3], r5 = t5[o3] >> 8, t5[o3] &= 255;
            for (o3 = 0; o3 < 32; o3++) t5[o3] -= r5 * oe[o3];
            for (n3 = 0; n3 < 32; n3++) t5[n3 + 1] += t5[n3] >> 8, e5[n3] = 255 & t5[n3];
          }
          function ae(e5) {
            var t5, r5 = new Float64Array(64);
            for (t5 = 0; t5 < 64; t5++) r5[t5] = e5[t5];
            for (t5 = 0; t5 < 64; t5++) e5[t5] = 0;
            ie(e5, r5);
          }
          function se(e5, r5, n3, o3) {
            var i2, a2, s2 = new Uint8Array(64), u2 = new Uint8Array(64), c2 = new Uint8Array(64), l3 = new Float64Array(64), f2 = [t4(), t4(), t4(), t4()];
            Y(s2, o3, 32), s2[0] &= 248, s2[31] &= 127, s2[31] |= 64;
            var p2 = n3 + 64;
            for (i2 = 0; i2 < n3; i2++) e5[64 + i2] = r5[i2];
            for (i2 = 0; i2 < 32; i2++) e5[32 + i2] = s2[32 + i2];
            for (Y(c2, e5.subarray(32), n3 + 32), ae(c2), re(f2, c2), ee(e5, f2), i2 = 32; i2 < 64; i2++) e5[i2] = o3[i2];
            for (Y(u2, e5, n3 + 64), ae(u2), i2 = 0; i2 < 64; i2++) l3[i2] = 0;
            for (i2 = 0; i2 < 32; i2++) l3[i2] = c2[i2];
            for (i2 = 0; i2 < 32; i2++) for (a2 = 0; a2 < 32; a2++) l3[i2 + a2] += u2[i2] * s2[a2];
            return ie(e5.subarray(32), l3), p2;
          }
          function ue(e5, r5, n3, o3) {
            var i2, u2 = new Uint8Array(32), l3 = new Uint8Array(64), f2 = [t4(), t4(), t4(), t4()], p2 = [t4(), t4(), t4(), t4()];
            if (n3 < 64) return -1;
            if (function(e6, r6) {
              var n4 = t4(), o4 = t4(), i3 = t4(), u3 = t4(), l4 = t4(), f3 = t4(), p3 = t4();
              return R(e6[2], s), N(e6[1], r6), F(i3, e6[1]), D(u3, i3, c), M(i3, i3, e6[2]), U(u3, e6[2], u3), F(l4, u3), F(f3, l4), D(p3, f3, l4), D(n4, p3, i3), D(n4, n4, u3), q(n4, n4), D(n4, n4, i3), D(n4, n4, u3), D(n4, n4, u3), D(e6[0], n4, u3), F(o4, e6[0]), D(o4, o4, u3), L(o4, i3) && D(e6[0], e6[0], h), F(o4, e6[0]), D(o4, o4, u3), L(o4, i3) ? -1 : (B(e6[0]) === r6[31] >> 7 && M(e6[0], a, e6[0]), D(e6[3], e6[0], e6[1]), 0);
            }(p2, o3)) return -1;
            for (i2 = 0; i2 < n3; i2++) e5[i2] = r5[i2];
            for (i2 = 0; i2 < 32; i2++) e5[i2 + 32] = o3[i2];
            if (Y(l3, e5, n3), ae(l3), te(f2, p2, l3), re(p2, r5.subarray(32)), J(f2, p2), ee(u2, f2), n3 -= 64, v(r5, 0, u2, 0)) {
              for (i2 = 0; i2 < n3; i2++) e5[i2] = 0;
              return -1;
            }
            for (i2 = 0; i2 < n3; i2++) e5[i2] = r5[i2 + 64];
            return n3;
          }
          var ce = 16, le = 64, fe = 32, pe = 64;
          function he(e5, t5) {
            if (32 !== e5.length) throw new Error("bad key size");
            if (24 !== t5.length) throw new Error("bad nonce size");
          }
          function de() {
            for (var e5 = 0; e5 < arguments.length; e5++) if (!(arguments[e5] instanceof Uint8Array)) throw new TypeError("unexpected type, use Uint8Array");
          }
          function ye(e5) {
            for (var t5 = 0; t5 < e5.length; t5++) e5[t5] = 0;
          }
          e4.lowlevel = { crypto_core_hsalsa20: b, crypto_stream_xor: k, crypto_stream: _, crypto_stream_salsa20_xor: S, crypto_stream_salsa20: E, crypto_onetimeauth: O, crypto_onetimeauth_verify: x, crypto_verify_16: m, crypto_verify_32: v, crypto_secretbox: A, crypto_secretbox_open: P, crypto_scalarmult: K, crypto_scalarmult_base: H, crypto_box_beforenm: X, crypto_box_afternm: G, crypto_box: function(e5, t5, r5, n3, o3, i2) {
            var a2 = new Uint8Array(32);
            return X(a2, o3, i2), G(e5, t5, r5, n3, a2);
          }, crypto_box_open: function(e5, t5, r5, n3, o3, i2) {
            var a2 = new Uint8Array(32);
            return X(a2, o3, i2), W(e5, t5, r5, n3, a2);
          }, crypto_box_keypair: z, crypto_hash: Y, crypto_sign: se, crypto_sign_keypair: ne, crypto_sign_open: ue, crypto_secretbox_KEYBYTES: 32, crypto_secretbox_NONCEBYTES: 24, crypto_secretbox_ZEROBYTES: 32, crypto_secretbox_BOXZEROBYTES: ce, crypto_scalarmult_BYTES: 32, crypto_scalarmult_SCALARBYTES: 32, crypto_box_PUBLICKEYBYTES: 32, crypto_box_SECRETKEYBYTES: 32, crypto_box_BEFORENMBYTES: 32, crypto_box_NONCEBYTES: 24, crypto_box_ZEROBYTES: 32, crypto_box_BOXZEROBYTES: 16, crypto_sign_BYTES: le, crypto_sign_PUBLICKEYBYTES: fe, crypto_sign_SECRETKEYBYTES: pe, crypto_sign_SEEDBYTES: 32, crypto_hash_BYTES: 64, gf: t4, D: c, L: oe, pack25519: C, unpack25519: N, M: D, A: U, S: F, Z: M, pow2523: q, add: J, set25519: R, modL: ie, scalarmult: te, scalarbase: re }, e4.randomBytes = function(e5) {
            var t5 = new Uint8Array(e5);
            return n2(t5, e5), t5;
          }, e4.secretbox = function(e5, t5, r5) {
            de(e5, t5, r5), he(r5, t5);
            for (var n3 = new Uint8Array(32 + e5.length), o3 = new Uint8Array(n3.length), i2 = 0; i2 < e5.length; i2++) n3[i2 + 32] = e5[i2];
            return A(o3, n3, n3.length, t5, r5), o3.subarray(ce);
          }, e4.secretbox.open = function(e5, t5, r5) {
            de(e5, t5, r5), he(r5, t5);
            for (var n3 = new Uint8Array(ce + e5.length), o3 = new Uint8Array(n3.length), i2 = 0; i2 < e5.length; i2++) n3[i2 + ce] = e5[i2];
            return n3.length < 32 || 0 !== P(o3, n3, n3.length, t5, r5) ? null : o3.subarray(32);
          }, e4.secretbox.keyLength = 32, e4.secretbox.nonceLength = 24, e4.secretbox.overheadLength = ce, e4.scalarMult = function(e5, t5) {
            if (de(e5, t5), 32 !== e5.length) throw new Error("bad n size");
            if (32 !== t5.length) throw new Error("bad p size");
            var r5 = new Uint8Array(32);
            return K(r5, e5, t5), r5;
          }, e4.scalarMult.base = function(e5) {
            if (de(e5), 32 !== e5.length) throw new Error("bad n size");
            var t5 = new Uint8Array(32);
            return H(t5, e5), t5;
          }, e4.scalarMult.scalarLength = 32, e4.scalarMult.groupElementLength = 32, e4.box = function(t5, r5, n3, o3) {
            var i2 = e4.box.before(n3, o3);
            return e4.secretbox(t5, r5, i2);
          }, e4.box.before = function(e5, t5) {
            de(e5, t5), function(e6, t6) {
              if (32 !== e6.length) throw new Error("bad public key size");
              if (32 !== t6.length) throw new Error("bad secret key size");
            }(e5, t5);
            var r5 = new Uint8Array(32);
            return X(r5, e5, t5), r5;
          }, e4.box.after = e4.secretbox, e4.box.open = function(t5, r5, n3, o3) {
            var i2 = e4.box.before(n3, o3);
            return e4.secretbox.open(t5, r5, i2);
          }, e4.box.open.after = e4.secretbox.open, e4.box.keyPair = function() {
            var e5 = new Uint8Array(32), t5 = new Uint8Array(32);
            return z(e5, t5), { publicKey: e5, secretKey: t5 };
          }, e4.box.keyPair.fromSecretKey = function(e5) {
            if (de(e5), 32 !== e5.length) throw new Error("bad secret key size");
            var t5 = new Uint8Array(32);
            return H(t5, e5), { publicKey: t5, secretKey: new Uint8Array(e5) };
          }, e4.box.publicKeyLength = 32, e4.box.secretKeyLength = 32, e4.box.sharedKeyLength = 32, e4.box.nonceLength = 24, e4.box.overheadLength = e4.secretbox.overheadLength, e4.sign = function(e5, t5) {
            if (de(e5, t5), t5.length !== pe) throw new Error("bad secret key size");
            var r5 = new Uint8Array(le + e5.length);
            return se(r5, e5, e5.length, t5), r5;
          }, e4.sign.open = function(e5, t5) {
            if (de(e5, t5), t5.length !== fe) throw new Error("bad public key size");
            var r5 = new Uint8Array(e5.length), n3 = ue(r5, e5, e5.length, t5);
            if (n3 < 0) return null;
            for (var o3 = new Uint8Array(n3), i2 = 0; i2 < o3.length; i2++) o3[i2] = r5[i2];
            return o3;
          }, e4.sign.detached = function(t5, r5) {
            for (var n3 = e4.sign(t5, r5), o3 = new Uint8Array(le), i2 = 0; i2 < o3.length; i2++) o3[i2] = n3[i2];
            return o3;
          }, e4.sign.detached.verify = function(e5, t5, r5) {
            if (de(e5, t5, r5), t5.length !== le) throw new Error("bad signature size");
            if (r5.length !== fe) throw new Error("bad public key size");
            var n3, o3 = new Uint8Array(le + e5.length), i2 = new Uint8Array(le + e5.length);
            for (n3 = 0; n3 < le; n3++) o3[n3] = t5[n3];
            for (n3 = 0; n3 < e5.length; n3++) o3[n3 + le] = e5[n3];
            return ue(i2, o3, o3.length, r5) >= 0;
          }, e4.sign.keyPair = function() {
            var e5 = new Uint8Array(fe), t5 = new Uint8Array(pe);
            return ne(e5, t5), { publicKey: e5, secretKey: t5 };
          }, e4.sign.keyPair.fromSecretKey = function(e5) {
            if (de(e5), e5.length !== pe) throw new Error("bad secret key size");
            for (var t5 = new Uint8Array(fe), r5 = 0; r5 < t5.length; r5++) t5[r5] = e5[32 + r5];
            return { publicKey: t5, secretKey: new Uint8Array(e5) };
          }, e4.sign.keyPair.fromSeed = function(e5) {
            if (de(e5), 32 !== e5.length) throw new Error("bad seed size");
            for (var t5 = new Uint8Array(fe), r5 = new Uint8Array(pe), n3 = 0; n3 < 32; n3++) r5[n3] = e5[n3];
            return ne(t5, r5, true), { publicKey: t5, secretKey: r5 };
          }, e4.sign.publicKeyLength = fe, e4.sign.secretKeyLength = pe, e4.sign.seedLength = 32, e4.sign.signatureLength = le, e4.hash = function(e5) {
            de(e5);
            var t5 = new Uint8Array(64);
            return Y(t5, e5, e5.length), t5;
          }, e4.hash.hashLength = 64, e4.verify = function(e5, t5) {
            return de(e5, t5), 0 !== e5.length && 0 !== t5.length && (e5.length === t5.length && 0 === y(e5, 0, t5, 0, e5.length));
          }, e4.setPRNG = function(e5) {
            n2 = e5;
          }, function() {
            var t5 = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
            if (t5 && t5.getRandomValues) {
              e4.setPRNG(function(e5, r5) {
                var n3, o3 = new Uint8Array(r5);
                for (n3 = 0; n3 < r5; n3 += 65536) t5.getRandomValues(o3.subarray(n3, n3 + Math.min(r5 - n3, 65536)));
                for (n3 = 0; n3 < r5; n3++) e5[n3] = o3[n3];
                ye(o3);
              });
            } else (t5 = r4(2894)) && t5.randomBytes && e4.setPRNG(function(e5, r5) {
              var n3, o3 = t5.randomBytes(r5);
              for (n3 = 0; n3 < r5; n3++) e5[n3] = o3[n3];
              ye(o3);
            });
          }();
        }(e3.exports ? e3.exports : self.nacl = self.nacl || {});
      }, 1924: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { StellarBase: () => i, axios: () => a.A, default: () => s });
        var n2 = r4(4356), o2 = {};
        for (const e4 in n2) ["default", "StellarBase", "axios"].indexOf(e4) < 0 && (o2[e4] = () => n2[e4]);
        r4.d(t3, o2);
        var i = r4(356), a = r4(1083);
        const s = (e3 = r4.hmd(e3)).exports;
      }, 8732: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        function o2(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, i(n3.key), n3);
          }
        }
        function i(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        r4.d(t3, { T: () => f });
        var a, s, u, c = { allowHttp: false, timeout: 0 }, l2 = Object.assign({}, c), f = (a = function e4() {
          !function(e5, t4) {
            if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
          }(this, e4);
        }, u = [{ key: "setAllowHttp", value: function(e4) {
          l2.allowHttp = e4;
        } }, { key: "setTimeout", value: function(e4) {
          l2.timeout = e4;
        } }, { key: "isAllowHttp", value: function() {
          return l2.allowHttp;
        } }, { key: "getTimeout", value: function() {
          return l2.timeout;
        } }, { key: "setDefault", value: function() {
          l2 = Object.assign({}, c);
        } }], (s = null) && o2(a.prototype, s), u && o2(a, u), Object.defineProperty(a, "prototype", { writable: false }), a);
      }, 145: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { AssembledTransaction: () => he, Client: () => tt, DEFAULT_TIMEOUT: () => g, Err: () => h, NULL_ACCOUNT: () => pe, Ok: () => p, SentTransaction: () => q, Spec: () => Le, basicNodeSigner: () => be });
        var n2 = r4(356), o2 = r4(1575), i = r4(4076), a = r4(8680);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u(e4, t4) {
          if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
        }
        function c(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, f(n3.key), n3);
          }
        }
        function l2(e4, t4, r5) {
          return t4 && c(e4.prototype, t4), r5 && c(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }
        function f(e4) {
          var t4 = function(e5, t5) {
            if ("object" != s(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != s(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == s(t4) ? t4 : t4 + "";
        }
        var p = l2(function e4(t4) {
          u(this, e4), this.value = t4;
        }, [{ key: "unwrapErr", value: function() {
          throw new Error("No error");
        } }, { key: "unwrap", value: function() {
          return this.value;
        } }, { key: "isOk", value: function() {
          return true;
        } }, { key: "isErr", value: function() {
          return false;
        } }]), h = l2(function e4(t4) {
          u(this, e4), this.error = t4;
        }, [{ key: "unwrapErr", value: function() {
          return this.error;
        } }, { key: "unwrap", value: function() {
          throw new Error(this.error.message);
        } }, { key: "isOk", value: function() {
          return false;
        } }, { key: "isErr", value: function() {
          return true;
        } }]);
        function d() {
          d = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof b2 ? t5 : b2, a3 = Object.create(i3.prototype), s3 = new I2(n4 || []);
            return o3(a3, "_invoke", { value: A2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", m2 = "executing", v2 = "completed", g2 = {};
          function b2() {
          }
          function w2() {
          }
          function S2() {
          }
          var E2 = {};
          c2(E2, a2, function() {
            return this;
          });
          var _2 = Object.getPrototypeOf, k2 = _2 && _2(_2(C2([])));
          k2 && k2 !== r5 && n3.call(k2, a2) && (E2 = k2);
          var T2 = S2.prototype = b2.prototype = Object.create(E2);
          function O2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function x2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == y(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function A2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === m2) throw Error("Generator is already running");
              if (o4 === v2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = P2(s3, n4);
                  if (u3) {
                    if (u3 === g2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = v2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = m2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? v2 : h2, c3.arg === g2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = v2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function P2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, P2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), g2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, g2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, g2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, g2);
          }
          function R2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function j2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function I2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(R2, this), this.reset(true);
          }
          function C2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(y(t5) + " is not iterable");
          }
          return w2.prototype = S2, o3(T2, "constructor", { value: S2, configurable: true }), o3(S2, "constructor", { value: w2, configurable: true }), w2.displayName = c2(S2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === w2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, S2) : (e5.__proto__ = S2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(T2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, O2(x2.prototype), c2(x2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = x2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new x2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, O2(T2), c2(T2, u2, "Generator"), c2(T2, a2, function() {
            return this;
          }), c2(T2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = C2, I2.prototype = { constructor: I2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(j2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, g2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), g2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), j2(r6), g2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  j2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: C2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), g2;
          } }, t4;
        }
        function y(e4) {
          return y = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, y(e4);
        }
        function m(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function v(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                m(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                m(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        var g = 300;
        function b(e4, t4, r5) {
          return w.apply(this, arguments);
        }
        function w() {
          return w = v(d().mark(function e4(t4, r5, n3) {
            var o3, i2, a2, s2, u2, c2, l3, f2 = arguments;
            return d().wrap(function(e5) {
              for (; ; ) switch (e5.prev = e5.next) {
                case 0:
                  return o3 = f2.length > 3 && void 0 !== f2[3] ? f2[3] : 1.5, i2 = f2.length > 4 && void 0 !== f2[4] && f2[4], a2 = [], s2 = 0, e5.t0 = a2, e5.next = 7, t4();
                case 7:
                  if (e5.t1 = e5.sent, e5.t0.push.call(e5.t0, e5.t1), r5(a2[a2.length - 1])) {
                    e5.next = 11;
                    break;
                  }
                  return e5.abrupt("return", a2);
                case 11:
                  u2 = new Date(Date.now() + 1e3 * n3).valueOf(), l3 = c2 = 1e3;
                case 14:
                  if (!(Date.now() < u2 && r5(a2[a2.length - 1]))) {
                    e5.next = 30;
                    break;
                  }
                  return s2 += 1, i2 && console.info("Waiting ".concat(c2, "ms before trying again (bringing the total wait time to ").concat(l3, "ms so far, of total ").concat(1e3 * n3, "ms)")), e5.next = 19, new Promise(function(e6) {
                    return setTimeout(e6, c2);
                  });
                case 19:
                  return c2 *= o3, new Date(Date.now() + c2).valueOf() > u2 && (c2 = u2 - Date.now(), i2 && console.info("was gonna wait too long; new waitTime: ".concat(c2, "ms"))), l3 = c2 + l3, e5.t2 = a2, e5.next = 25, t4(a2[a2.length - 1]);
                case 25:
                  e5.t3 = e5.sent, e5.t2.push.call(e5.t2, e5.t3), i2 && r5(a2[a2.length - 1]) && console.info("".concat(s2, ". Called ").concat(t4, "; ").concat(a2.length, " prev attempts. Most recent: ").concat(JSON.stringify(a2[a2.length - 1], null, 2))), e5.next = 14;
                  break;
                case 30:
                  return e5.abrupt("return", a2);
                case 31:
                case "end":
                  return e5.stop();
              }
            }, e4);
          })), w.apply(this, arguments);
        }
        var S, E = /Error\(Contract, #(\d+)\)/;
        function _(e4) {
          for (var t4 = new n2.cereal.XdrReader(e4), r5 = []; !t4.eof; ) r5.push(n2.xdr.ScSpecEntry.read(t4));
          return r5;
        }
        function k(e4, t4) {
          return T.apply(this, arguments);
        }
        function T() {
          return T = v(d().mark(function e4(t4, r5) {
            return d().wrap(function(e5) {
              for (; ; ) switch (e5.prev = e5.next) {
                case 0:
                  if (!t4.publicKey) {
                    e5.next = 6;
                    break;
                  }
                  return e5.next = 3, r5.getAccount(t4.publicKey);
                case 3:
                  e5.t0 = e5.sent, e5.next = 7;
                  break;
                case 6:
                  e5.t0 = new n2.Account(pe, "0");
                case 7:
                  return e5.abrupt("return", e5.t0);
                case 8:
                case "end":
                  return e5.stop();
              }
            }, e4);
          })), T.apply(this, arguments);
        }
        function O(e4, t4, r5) {
          return t4 = j(t4), function(e5, t5) {
            if (t5 && ("object" == I(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, P() ? Reflect.construct(t4, r5 || [], j(e4).constructor) : t4.apply(e4, r5));
        }
        function x(e4, t4) {
          if ("function" != typeof t4 && null !== t4) throw new TypeError("Super expression must either be null or a function");
          e4.prototype = Object.create(t4 && t4.prototype, { constructor: { value: e4, writable: true, configurable: true } }), Object.defineProperty(e4, "prototype", { writable: false }), t4 && R(e4, t4);
        }
        function A(e4) {
          var t4 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return A = function(e5) {
            if (null === e5 || !function(e6) {
              try {
                return -1 !== Function.toString.call(e6).indexOf("[native code]");
              } catch (t5) {
                return "function" == typeof e6;
              }
            }(e5)) return e5;
            if ("function" != typeof e5) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== t4) {
              if (t4.has(e5)) return t4.get(e5);
              t4.set(e5, r5);
            }
            function r5() {
              return function(e6, t5, r6) {
                if (P()) return Reflect.construct.apply(null, arguments);
                var n3 = [null];
                n3.push.apply(n3, t5);
                var o3 = new (e6.bind.apply(e6, n3))();
                return r6 && R(o3, r6.prototype), o3;
              }(e5, arguments, j(this).constructor);
            }
            return r5.prototype = Object.create(e5.prototype, { constructor: { value: r5, enumerable: false, writable: true, configurable: true } }), R(r5, e5);
          }, A(e4);
        }
        function P() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (P = function() {
            return !!e4;
          })();
        }
        function R(e4, t4) {
          return R = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, R(e4, t4);
        }
        function j(e4) {
          return j = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, j(e4);
        }
        function I(e4) {
          return I = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, I(e4);
        }
        function C() {
          C = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof v2 ? t5 : v2, a3 = Object.create(i3.prototype), s3 = new R2(n4 || []);
            return o3(a3, "_invoke", { value: O2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", m2 = {};
          function v2() {
          }
          function g2() {
          }
          function b2() {
          }
          var w2 = {};
          c2(w2, a2, function() {
            return this;
          });
          var S2 = Object.getPrototypeOf, E2 = S2 && S2(S2(j2([])));
          E2 && E2 !== r5 && n3.call(E2, a2) && (w2 = E2);
          var _2 = b2.prototype = v2.prototype = Object.create(w2);
          function k2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function T2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == I(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function O2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = x2(s3, n4);
                  if (u3) {
                    if (u3 === m2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === m2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function x2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, x2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), m2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, m2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, m2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m2);
          }
          function A2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function P2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function R2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(A2, this), this.reset(true);
          }
          function j2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(I(t5) + " is not iterable");
          }
          return g2.prototype = b2, o3(_2, "constructor", { value: b2, configurable: true }), o3(b2, "constructor", { value: g2, configurable: true }), g2.displayName = c2(b2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === g2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, b2) : (e5.__proto__ = b2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(_2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, k2(T2.prototype), c2(T2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = T2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new T2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, k2(_2), c2(_2, u2, "Generator"), c2(_2, a2, function() {
            return this;
          }), c2(_2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = j2, R2.prototype = { constructor: R2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(P2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, m2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), P2(r6), m2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  P2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: j2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), m2;
          } }, t4;
        }
        function L(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function B(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                L(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                L(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function N(e4, t4) {
          if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
        }
        function U(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, F(n3.key), n3);
          }
        }
        function M(e4, t4, r5) {
          return t4 && U(e4.prototype, t4), r5 && U(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }
        function D(e4, t4, r5) {
          return (t4 = F(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function F(e4) {
          var t4 = function(e5, t5) {
            if ("object" != I(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != I(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == I(t4) ? t4 : t4 + "";
        }
        var V, q = function() {
          function e4(t4, r5) {
            var n3, a2 = this;
            N(this, e4), D(this, "send", B(C().mark(function t5() {
              var r6, n4, o3;
              return C().wrap(function(t6) {
                for (; ; ) switch (t6.prev = t6.next) {
                  case 0:
                    return t6.next = 2, a2.server.sendTransaction(a2.assembled.signed);
                  case 2:
                    if (a2.sendTransactionResponse = t6.sent, "PENDING" === a2.sendTransactionResponse.status) {
                      t6.next = 5;
                      break;
                    }
                    throw new e4.Errors.SendFailed("Sending the transaction to the network failed!\n".concat(JSON.stringify(a2.sendTransactionResponse, null, 2)));
                  case 5:
                    return n4 = a2.sendTransactionResponse.hash, o3 = null !== (r6 = a2.assembled.options.timeoutInSeconds) && void 0 !== r6 ? r6 : g, t6.next = 9, b(function() {
                      return a2.server.getTransaction(n4);
                    }, function(e5) {
                      return e5.status === i.j.GetTransactionStatus.NOT_FOUND;
                    }, o3);
                  case 9:
                    if (a2.getTransactionResponseAll = t6.sent, a2.getTransactionResponse = a2.getTransactionResponseAll[a2.getTransactionResponseAll.length - 1], a2.getTransactionResponse.status !== i.j.GetTransactionStatus.NOT_FOUND) {
                      t6.next = 13;
                      break;
                    }
                    throw new e4.Errors.TransactionStillPending("Waited ".concat(o3, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(a2.sendTransactionResponse, null, 2), "\n") + "All attempts to get the result: ".concat(JSON.stringify(a2.getTransactionResponseAll, null, 2)));
                  case 13:
                    return t6.abrupt("return", a2);
                  case 14:
                  case "end":
                    return t6.stop();
                }
              }, t5);
            }))), this.assembled = r5, this.server = new o2.gq(this.assembled.options.rpcUrl, { allowHttp: null !== (n3 = this.assembled.options.allowHttp) && void 0 !== n3 && n3 });
          }
          return M(e4, [{ key: "result", get: function() {
            if ("getTransactionResponse" in this && this.getTransactionResponse) {
              if ("returnValue" in this.getTransactionResponse) return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
              throw new Error("Transaction failed! Cannot parse result.");
            }
            if (this.sendTransactionResponse) {
              var t4, r5 = null === (t4 = this.sendTransactionResponse.errorResult) || void 0 === t4 ? void 0 : t4.result();
              if (r5) throw new e4.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(r5));
              throw new e4.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
            }
            throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled.signed)));
          } }]);
        }();
        S = q, D(q, "Errors", { SendFailed: function(e4) {
          function t4() {
            return N(this, t4), O(this, t4, arguments);
          }
          return x(t4, e4), M(t4);
        }(A(Error)), SendResultOnly: function(e4) {
          function t4() {
            return N(this, t4), O(this, t4, arguments);
          }
          return x(t4, e4), M(t4);
        }(A(Error)), TransactionStillPending: function(e4) {
          function t4() {
            return N(this, t4), O(this, t4, arguments);
          }
          return x(t4, e4), M(t4);
        }(A(Error)) }), D(q, "init", (V = B(C().mark(function e4(t4, r5) {
          var n3, o3;
          return C().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return n3 = new S(void 0, r5), e5.next = 3, n3.send();
              case 3:
                return o3 = e5.sent, e5.abrupt("return", o3);
              case 5:
              case "end":
                return e5.stop();
            }
          }, e4);
        })), function(e4, t4) {
          return V.apply(this, arguments);
        }));
        var K = r4(8287).Buffer;
        function H(e4, t4, r5) {
          return t4 = $(t4), function(e5, t5) {
            if (t5 && ("object" == Q(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, G() ? Reflect.construct(t4, r5 || [], $(e4).constructor) : t4.apply(e4, r5));
        }
        function z(e4, t4) {
          if ("function" != typeof t4 && null !== t4) throw new TypeError("Super expression must either be null or a function");
          e4.prototype = Object.create(t4 && t4.prototype, { constructor: { value: e4, writable: true, configurable: true } }), Object.defineProperty(e4, "prototype", { writable: false }), t4 && W(e4, t4);
        }
        function X(e4) {
          var t4 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return X = function(e5) {
            if (null === e5 || !function(e6) {
              try {
                return -1 !== Function.toString.call(e6).indexOf("[native code]");
              } catch (t5) {
                return "function" == typeof e6;
              }
            }(e5)) return e5;
            if ("function" != typeof e5) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== t4) {
              if (t4.has(e5)) return t4.get(e5);
              t4.set(e5, r5);
            }
            function r5() {
              return function(e6, t5, r6) {
                if (G()) return Reflect.construct.apply(null, arguments);
                var n3 = [null];
                n3.push.apply(n3, t5);
                var o3 = new (e6.bind.apply(e6, n3))();
                return r6 && W(o3, r6.prototype), o3;
              }(e5, arguments, $(this).constructor);
            }
            return r5.prototype = Object.create(e5.prototype, { constructor: { value: r5, enumerable: false, writable: true, configurable: true } }), W(r5, e5);
          }, X(e4);
        }
        function G() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (G = function() {
            return !!e4;
          })();
        }
        function W(e4, t4) {
          return W = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, W(e4, t4);
        }
        function $(e4) {
          return $ = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, $(e4);
        }
        function Q(e4) {
          return Q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Q(e4);
        }
        function Y(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function J(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? Y(Object(r5), true).forEach(function(t5) {
              le(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : Y(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function Z(e4, t4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || function(e5, t5) {
            var r5 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (null != r5) {
              var n3, o3, i2, a2, s2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r5 = r5.call(e5)).next, 0 === t5) {
                  if (Object(r5) !== r5) return;
                  u2 = false;
                } else for (; !(u2 = (n3 = i2.call(r5)).done) && (s2.push(n3.value), s2.length !== t5); u2 = true) ;
              } catch (e6) {
                c2 = true, o3 = e6;
              } finally {
                try {
                  if (!u2 && null != r5.return && (a2 = r5.return(), Object(a2) !== a2)) return;
                } finally {
                  if (c2) throw o3;
                }
              }
              return s2;
            }
          }(e4, t4) || ne(e4, t4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function ee(e4, t4) {
          var r5 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
          if (!r5) {
            if (Array.isArray(e4) || (r5 = ne(e4)) || t4 && e4 && "number" == typeof e4.length) {
              r5 && (e4 = r5);
              var n3 = 0, o3 = function() {
              };
              return { s: o3, n: function() {
                return n3 >= e4.length ? { done: true } : { done: false, value: e4[n3++] };
              }, e: function(e5) {
                throw e5;
              }, f: o3 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, a2 = true, s2 = false;
          return { s: function() {
            r5 = r5.call(e4);
          }, n: function() {
            var e5 = r5.next();
            return a2 = e5.done, e5;
          }, e: function(e5) {
            s2 = true, i2 = e5;
          }, f: function() {
            try {
              a2 || null == r5.return || r5.return();
            } finally {
              if (s2) throw i2;
            }
          } };
        }
        function te() {
          te = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof v2 ? t5 : v2, a3 = Object.create(i3.prototype), s3 = new R2(n4 || []);
            return o3(a3, "_invoke", { value: O2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", m2 = {};
          function v2() {
          }
          function g2() {
          }
          function b2() {
          }
          var w2 = {};
          c2(w2, a2, function() {
            return this;
          });
          var S2 = Object.getPrototypeOf, E2 = S2 && S2(S2(j2([])));
          E2 && E2 !== r5 && n3.call(E2, a2) && (w2 = E2);
          var _2 = b2.prototype = v2.prototype = Object.create(w2);
          function k2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function T2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == Q(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function O2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = x2(s3, n4);
                  if (u3) {
                    if (u3 === m2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === m2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function x2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, x2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), m2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, m2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, m2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m2);
          }
          function A2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function P2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function R2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(A2, this), this.reset(true);
          }
          function j2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(Q(t5) + " is not iterable");
          }
          return g2.prototype = b2, o3(_2, "constructor", { value: b2, configurable: true }), o3(b2, "constructor", { value: g2, configurable: true }), g2.displayName = c2(b2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === g2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, b2) : (e5.__proto__ = b2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(_2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, k2(T2.prototype), c2(T2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = T2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new T2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, k2(_2), c2(_2, u2, "Generator"), c2(_2, a2, function() {
            return this;
          }), c2(_2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = j2, R2.prototype = { constructor: R2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(P2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, m2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), P2(r6), m2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  P2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: j2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), m2;
          } }, t4;
        }
        function re(e4) {
          return function(e5) {
            if (Array.isArray(e5)) return oe(e5);
          }(e4) || function(e5) {
            if ("undefined" != typeof Symbol && null != e5[Symbol.iterator] || null != e5["@@iterator"]) return Array.from(e5);
          }(e4) || ne(e4) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function ne(e4, t4) {
          if (e4) {
            if ("string" == typeof e4) return oe(e4, t4);
            var r5 = {}.toString.call(e4).slice(8, -1);
            return "Object" === r5 && e4.constructor && (r5 = e4.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e4) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? oe(e4, t4) : void 0;
          }
        }
        function oe(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function ie(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function ae(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                ie(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                ie(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function se(e4, t4) {
          if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
        }
        function ue(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, fe(n3.key), n3);
          }
        }
        function ce(e4, t4, r5) {
          return t4 && ue(e4.prototype, t4), r5 && ue(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }
        function le(e4, t4, r5) {
          return (t4 = fe(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function fe(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Q(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Q(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Q(t4) ? t4 : t4 + "";
        }
        var pe = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF", he = function() {
          function e4(t5) {
            var r6, s3, u3 = this;
            se(this, e4), le(this, "simulate", ae(te().mark(function t6() {
              var r7, o3, s4, c2, l3, f2, p2, h2, d2 = arguments;
              return te().wrap(function(t7) {
                for (; ; ) switch (t7.prev = t7.next) {
                  case 0:
                    if (o3 = (d2.length > 0 && void 0 !== d2[0] ? d2[0] : {}).restore, u3.built) {
                      t7.next = 5;
                      break;
                    }
                    if (u3.raw) {
                      t7.next = 4;
                      break;
                    }
                    throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
                  case 4:
                    u3.built = u3.raw.build();
                  case 5:
                    return o3 = null !== (r7 = o3) && void 0 !== r7 ? r7 : u3.options.restore, delete u3.simulationResult, delete u3.simulationTransactionData, t7.next = 10, u3.server.simulateTransaction(u3.built);
                  case 10:
                    if (u3.simulation = t7.sent, !o3 || !i.j.isSimulationRestore(u3.simulation)) {
                      t7.next = 25;
                      break;
                    }
                    return t7.next = 14, k(u3.options, u3.server);
                  case 14:
                    return s4 = t7.sent, t7.next = 17, u3.restoreFootprint(u3.simulation.restorePreamble, s4);
                  case 17:
                    if ((c2 = t7.sent).status !== i.j.GetTransactionStatus.SUCCESS) {
                      t7.next = 24;
                      break;
                    }
                    return h2 = new n2.Contract(u3.options.contractId), u3.raw = new n2.TransactionBuilder(s4, { fee: null !== (l3 = u3.options.fee) && void 0 !== l3 ? l3 : n2.BASE_FEE, networkPassphrase: u3.options.networkPassphrase }).addOperation(h2.call.apply(h2, [u3.options.method].concat(re(null !== (f2 = u3.options.args) && void 0 !== f2 ? f2 : [])))).setTimeout(null !== (p2 = u3.options.timeoutInSeconds) && void 0 !== p2 ? p2 : g), t7.next = 23, u3.simulate();
                  case 23:
                    return t7.abrupt("return", u3);
                  case 24:
                    throw new e4.Errors.RestorationFailure("Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:\n".concat(JSON.stringify(c2)));
                  case 25:
                    return i.j.isSimulationSuccess(u3.simulation) && (u3.built = (0, a.X)(u3.built, u3.simulation).build()), t7.abrupt("return", u3);
                  case 27:
                  case "end":
                    return t7.stop();
                }
              }, t6);
            }))), le(this, "sign", ae(te().mark(function t6() {
              var r7, o3, i2, a2, s4, c2, l3, f2, p2 = arguments;
              return te().wrap(function(t7) {
                for (; ; ) switch (t7.prev = t7.next) {
                  case 0:
                    if (i2 = (o3 = p2.length > 0 && void 0 !== p2[0] ? p2[0] : {}).force, a2 = void 0 !== i2 && i2, s4 = o3.signTransaction, c2 = void 0 === s4 ? u3.options.signTransaction : s4, u3.built) {
                      t7.next = 3;
                      break;
                    }
                    throw new Error("Transaction has not yet been simulated");
                  case 3:
                    if (a2 || !u3.isReadCall) {
                      t7.next = 5;
                      break;
                    }
                    throw new e4.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
                  case 5:
                    if (c2) {
                      t7.next = 7;
                      break;
                    }
                    throw new e4.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
                  case 7:
                    if (!u3.needsNonInvokerSigningBy().length) {
                      t7.next = 9;
                      break;
                    }
                    throw new e4.Errors.NeedsMoreSignatures("Transaction requires more signatures. See `needsNonInvokerSigningBy` for details.");
                  case 9:
                    return l3 = null !== (r7 = u3.options.timeoutInSeconds) && void 0 !== r7 ? r7 : g, u3.built = n2.TransactionBuilder.cloneFrom(u3.built, { fee: u3.built.fee, timebounds: void 0, sorobanData: u3.simulationData.transactionData }).setTimeout(l3).build(), t7.next = 13, c2(u3.built.toXDR(), { networkPassphrase: u3.options.networkPassphrase });
                  case 13:
                    f2 = t7.sent, u3.signed = n2.TransactionBuilder.fromXDR(f2, u3.options.networkPassphrase);
                  case 15:
                  case "end":
                    return t7.stop();
                }
              }, t6);
            }))), le(this, "signAndSend", ae(te().mark(function e5() {
              var t6, r7, n3, o3, i2, a2 = arguments;
              return te().wrap(function(e6) {
                for (; ; ) switch (e6.prev = e6.next) {
                  case 0:
                    if (r7 = (t6 = a2.length > 0 && void 0 !== a2[0] ? a2[0] : {}).force, n3 = void 0 !== r7 && r7, o3 = t6.signTransaction, i2 = void 0 === o3 ? u3.options.signTransaction : o3, u3.signed) {
                      e6.next = 4;
                      break;
                    }
                    return e6.next = 4, u3.sign({ force: n3, signTransaction: i2 });
                  case 4:
                    return e6.abrupt("return", u3.send());
                  case 5:
                  case "end":
                    return e6.stop();
                }
              }, e5);
            }))), le(this, "getStorageExpiration", ae(te().mark(function e5() {
              var t6;
              return te().wrap(function(e6) {
                for (; ; ) switch (e6.prev = e6.next) {
                  case 0:
                    return e6.next = 2, u3.server.getLedgerEntries(new n2.Contract(u3.options.contractId).getFootprint());
                  case 2:
                    if ((t6 = e6.sent).entries && t6.entries.length && t6.entries[0].liveUntilLedgerSeq) {
                      e6.next = 5;
                      break;
                    }
                    throw new Error("failed to get ledger entry");
                  case 5:
                    return e6.abrupt("return", t6.entries[0].liveUntilLedgerSeq);
                  case 6:
                  case "end":
                    return e6.stop();
                }
              }, e5);
            }))), le(this, "needsNonInvokerSigningBy", function() {
              var e5, t6 = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).includeAlreadySigned, r7 = void 0 !== t6 && t6;
              if (!u3.built) throw new Error("Transaction has not yet been simulated");
              if (!("operations" in u3.built)) throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(u3.built)));
              var o3 = u3.built.operations[0];
              return re(new Set((null !== (e5 = o3.auth) && void 0 !== e5 ? e5 : []).filter(function(e6) {
                return e6.credentials().switch() === n2.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (r7 || "scvVoid" === e6.credentials().address().signature().switch().name);
              }).map(function(e6) {
                return n2.StrKey.encodeEd25519PublicKey(e6.credentials().address().address().accountId().ed25519());
              })));
            }), le(this, "signAuthEntries", ae(te().mark(function t6() {
              var r7, o3, i2, a2, s4, c2, l3, f2, p2, h2, d2, y2, m2, v2, g2, b2, w2 = arguments;
              return te().wrap(function(t7) {
                for (; ; ) switch (t7.prev = t7.next) {
                  case 0:
                    if (i2 = (o3 = w2.length > 0 && void 0 !== w2[0] ? w2[0] : {}).expiration, a2 = void 0 === i2 ? u3.getStorageExpiration() : i2, s4 = o3.signAuthEntry, c2 = void 0 === s4 ? u3.options.signAuthEntry : s4, l3 = o3.publicKey, f2 = void 0 === l3 ? u3.options.publicKey : l3, u3.built) {
                      t7.next = 3;
                      break;
                    }
                    throw new Error("Transaction has not yet been assembled or simulated");
                  case 3:
                    if (p2 = u3.needsNonInvokerSigningBy()) {
                      t7.next = 6;
                      break;
                    }
                    throw new e4.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
                  case 6:
                    if (-1 !== p2.indexOf(null != f2 ? f2 : "")) {
                      t7.next = 8;
                      break;
                    }
                    throw new e4.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(f2, '"'));
                  case 8:
                    if (c2) {
                      t7.next = 10;
                      break;
                    }
                    throw new e4.Errors.NoSigner("You must provide `signAuthEntry` when calling `signAuthEntries`, or when constructing the `Client` or `AssembledTransaction`");
                  case 10:
                    h2 = u3.built.operations[0], d2 = null !== (r7 = h2.auth) && void 0 !== r7 ? r7 : [], y2 = ee(d2.entries()), t7.prev = 13, y2.s();
                  case 15:
                    if ((m2 = y2.n()).done) {
                      t7.next = 34;
                      break;
                    }
                    if (v2 = Z(m2.value, 2), g2 = v2[0], (b2 = v2[1]).credentials().switch() === n2.xdr.SorobanCredentialsType.sorobanCredentialsAddress()) {
                      t7.next = 19;
                      break;
                    }
                    return t7.abrupt("continue", 32);
                  case 19:
                    if (n2.StrKey.encodeEd25519PublicKey(b2.credentials().address().address().accountId().ed25519()) === f2) {
                      t7.next = 22;
                      break;
                    }
                    return t7.abrupt("continue", 32);
                  case 22:
                    return t7.t0 = n2.authorizeEntry, t7.t1 = b2, t7.t2 = function() {
                      var e5 = ae(te().mark(function e6(t8) {
                        return te().wrap(function(e7) {
                          for (; ; ) switch (e7.prev = e7.next) {
                            case 0:
                              return e7.t0 = K, e7.next = 3, c2(t8.toXDR("base64"));
                            case 3:
                              return e7.t1 = e7.sent, e7.abrupt("return", e7.t0.from.call(e7.t0, e7.t1, "base64"));
                            case 5:
                            case "end":
                              return e7.stop();
                          }
                        }, e6);
                      }));
                      return function(t8) {
                        return e5.apply(this, arguments);
                      };
                    }(), t7.next = 27, a2;
                  case 27:
                    return t7.t3 = t7.sent, t7.t4 = u3.options.networkPassphrase, t7.next = 31, (0, t7.t0)(t7.t1, t7.t2, t7.t3, t7.t4);
                  case 31:
                    d2[g2] = t7.sent;
                  case 32:
                    t7.next = 15;
                    break;
                  case 34:
                    t7.next = 39;
                    break;
                  case 36:
                    t7.prev = 36, t7.t5 = t7.catch(13), y2.e(t7.t5);
                  case 39:
                    return t7.prev = 39, y2.f(), t7.finish(39);
                  case 42:
                  case "end":
                    return t7.stop();
                }
              }, t6, null, [[13, 36, 39, 42]]);
            }))), this.options = t5, this.options.simulate = null === (r6 = this.options.simulate) || void 0 === r6 || r6, this.server = new o2.gq(this.options.rpcUrl, { allowHttp: null !== (s3 = this.options.allowHttp) && void 0 !== s3 && s3 });
          }
          return ce(e4, [{ key: "toJSON", value: function() {
            var e5;
            return JSON.stringify({ method: this.options.method, tx: null === (e5 = this.built) || void 0 === e5 ? void 0 : e5.toXDR(), simulationResult: { auth: this.simulationData.result.auth.map(function(e6) {
              return e6.toXDR("base64");
            }), retval: this.simulationData.result.retval.toXDR("base64") }, simulationTransactionData: this.simulationData.transactionData.toXDR("base64") });
          } }, { key: "toXDR", value: function() {
            var e5;
            if (!this.built) throw new Error("Transaction has not yet been simulated; call `AssembledTransaction.simulate` first.");
            return null === (e5 = this.built) || void 0 === e5 ? void 0 : e5.toEnvelope().toXDR("base64");
          } }, { key: "simulationData", get: function() {
            var t5;
            if (this.simulationResult && this.simulationTransactionData) return { result: this.simulationResult, transactionData: this.simulationTransactionData };
            var r6 = this.simulation;
            if (!r6) throw new e4.Errors.NotYetSimulated("Transaction has not yet been simulated");
            if (i.j.isSimulationError(r6)) throw new Error('Transaction simulation failed: "'.concat(r6.error, '"'));
            if (i.j.isSimulationRestore(r6)) throw new e4.Errors.ExpiredState("You need to restore some contract state before you can invoke this method.\nYou can set `restore` to true in the method options in order to automatically restore the contract state when needed.");
            return this.simulationResult = null !== (t5 = r6.result) && void 0 !== t5 ? t5 : { auth: [], retval: n2.xdr.ScVal.scvVoid() }, this.simulationTransactionData = r6.transactionData.build(), { result: this.simulationResult, transactionData: this.simulationTransactionData };
          } }, { key: "result", get: function() {
            try {
              if (!this.simulationData.result) throw new Error("No simulation result!");
              return this.options.parseResultXdr(this.simulationData.result.retval);
            } catch (r6) {
              if ("object" !== y(t5 = r6) || null === t5 || !("toString" in t5)) throw r6;
              var e5 = this.parseError(r6.toString());
              if (e5) return e5;
              throw r6;
            }
            var t5;
          } }, { key: "parseError", value: function(e5) {
            if (this.options.errorTypes) {
              var t5 = e5.match(E);
              if (t5) {
                var r6 = parseInt(t5[1], 10), n3 = this.options.errorTypes[r6];
                if (n3) return new h(n3);
              }
            }
          } }, { key: "send", value: (u2 = ae(te().mark(function e5() {
            var t5;
            return te().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  if (this.signed) {
                    e6.next = 2;
                    break;
                  }
                  throw new Error("The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.");
                case 2:
                  return e6.next = 4, q.init(void 0, this);
                case 4:
                  return t5 = e6.sent, e6.abrupt("return", t5);
                case 6:
                case "end":
                  return e6.stop();
              }
            }, e5, this);
          })), function() {
            return u2.apply(this, arguments);
          }) }, { key: "isReadCall", get: function() {
            var e5 = this.simulationData.result.auth.length, t5 = this.simulationData.transactionData.resources().footprint().readWrite().length;
            return 0 === e5 && 0 === t5;
          } }, { key: "restoreFootprint", value: (s2 = ae(te().mark(function t5(r6, n3) {
            var o3, i2, a2;
            return te().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  if (this.options.signTransaction) {
                    t6.next = 2;
                    break;
                  }
                  throw new Error("For automatic restore to work you must provide a signTransaction function when initializing your Client");
                case 2:
                  if (null === (o3 = n3) || void 0 === o3) {
                    t6.next = 6;
                    break;
                  }
                  t6.t0 = o3, t6.next = 9;
                  break;
                case 6:
                  return t6.next = 8, k(this.options, this.server);
                case 8:
                  t6.t0 = t6.sent;
                case 9:
                  return n3 = t6.t0, t6.next = 12, e4.buildFootprintRestoreTransaction(J({}, this.options), r6.transactionData, n3, r6.minResourceFee);
                case 12:
                  return i2 = t6.sent, t6.next = 15, i2.signAndSend();
                case 15:
                  if ((a2 = t6.sent).getTransactionResponse) {
                    t6.next = 18;
                    break;
                  }
                  throw new e4.Errors.RestorationFailure("The attempt at automatic restore failed. \n".concat(JSON.stringify(a2)));
                case 18:
                  return t6.abrupt("return", a2.getTransactionResponse);
                case 19:
                case "end":
                  return t6.stop();
              }
            }, t5, this);
          })), function(e5, t5) {
            return s2.apply(this, arguments);
          }) }], [{ key: "fromJSON", value: function(t5, r6) {
            var o3 = r6.tx, i2 = r6.simulationResult, a2 = r6.simulationTransactionData, s3 = new e4(t5);
            return s3.built = n2.TransactionBuilder.fromXDR(o3, t5.networkPassphrase), s3.simulationResult = { auth: i2.auth.map(function(e5) {
              return n2.xdr.SorobanAuthorizationEntry.fromXDR(e5, "base64");
            }), retval: n2.xdr.ScVal.fromXDR(i2.retval, "base64") }, s3.simulationTransactionData = n2.xdr.SorobanTransactionData.fromXDR(a2, "base64"), s3;
          } }, { key: "fromXDR", value: function(t5, r6, o3) {
            var i2, a2 = n2.xdr.TransactionEnvelope.fromXDR(r6, "base64"), s3 = n2.TransactionBuilder.fromXDR(a2, t5.networkPassphrase), u3 = s3.operations[0];
            if (null == u3 || null === (i2 = u3.func) || void 0 === i2 || !i2.value || "function" != typeof u3.func.value) throw new Error("Could not extract the method from the transaction envelope.");
            var c2 = u3.func.value();
            if (null == c2 || !c2.functionName) throw new Error("Could not extract the method name from the transaction envelope.");
            var l3 = c2.functionName().toString("utf-8"), f2 = new e4(J(J({}, t5), {}, { method: l3, parseResultXdr: function(e5) {
              return o3.funcResToNative(l3, e5);
            } }));
            return f2.built = s3, f2;
          } }, { key: "build", value: (r5 = ae(te().mark(function t5(r6) {
            var o3, i2, a2, s3, u3, c2;
            return te().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return s3 = new e4(r6), u3 = new n2.Contract(r6.contractId), t6.next = 4, k(r6, s3.server);
                case 4:
                  if (c2 = t6.sent, s3.raw = new n2.TransactionBuilder(c2, { fee: null !== (o3 = r6.fee) && void 0 !== o3 ? o3 : n2.BASE_FEE, networkPassphrase: r6.networkPassphrase }).addOperation(u3.call.apply(u3, [r6.method].concat(re(null !== (i2 = r6.args) && void 0 !== i2 ? i2 : [])))).setTimeout(null !== (a2 = r6.timeoutInSeconds) && void 0 !== a2 ? a2 : g), !r6.simulate) {
                    t6.next = 9;
                    break;
                  }
                  return t6.next = 9, s3.simulate();
                case 9:
                  return t6.abrupt("return", s3);
                case 10:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5) {
            return r5.apply(this, arguments);
          }) }, { key: "buildFootprintRestoreTransaction", value: (t4 = ae(te().mark(function t5(r6, o3, i2, a2) {
            var s3, u3;
            return te().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return (u3 = new e4(r6)).raw = new n2.TransactionBuilder(i2, { fee: a2, networkPassphrase: r6.networkPassphrase }).setSorobanData(o3 instanceof n2.SorobanDataBuilder ? o3.build() : o3).addOperation(n2.Operation.restoreFootprint({})).setTimeout(null !== (s3 = r6.timeoutInSeconds) && void 0 !== s3 ? s3 : g), t6.next = 4, u3.simulate({ restore: false });
                case 4:
                  return t6.abrupt("return", u3);
                case 5:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5, r6, n3, o3) {
            return t4.apply(this, arguments);
          }) }]);
          var t4, r5, s2, u2;
        }();
        le(he, "Errors", { ExpiredState: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), RestorationFailure: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), NeedsMoreSignatures: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), NoSignatureNeeded: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), NoUnsignedNonInvokerAuthEntries: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), NoSigner: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), NotYetSimulated: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)), FakeAccount: function(e4) {
          function t4() {
            return se(this, t4), H(this, t4, arguments);
          }
          return z(t4, e4), ce(t4);
        }(X(Error)) });
        var de = r4(8287).Buffer;
        function ye(e4) {
          return ye = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, ye(e4);
        }
        function me() {
          me = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof v2 ? t5 : v2, a3 = Object.create(i3.prototype), s3 = new R2(n4 || []);
            return o3(a3, "_invoke", { value: O2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", m2 = {};
          function v2() {
          }
          function g2() {
          }
          function b2() {
          }
          var w2 = {};
          c2(w2, a2, function() {
            return this;
          });
          var S2 = Object.getPrototypeOf, E2 = S2 && S2(S2(j2([])));
          E2 && E2 !== r5 && n3.call(E2, a2) && (w2 = E2);
          var _2 = b2.prototype = v2.prototype = Object.create(w2);
          function k2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function T2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == ye(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function O2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = x2(s3, n4);
                  if (u3) {
                    if (u3 === m2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === m2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function x2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, x2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), m2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, m2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, m2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m2);
          }
          function A2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function P2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function R2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(A2, this), this.reset(true);
          }
          function j2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(ye(t5) + " is not iterable");
          }
          return g2.prototype = b2, o3(_2, "constructor", { value: b2, configurable: true }), o3(b2, "constructor", { value: g2, configurable: true }), g2.displayName = c2(b2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === g2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, b2) : (e5.__proto__ = b2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(_2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, k2(T2.prototype), c2(T2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = T2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new T2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, k2(_2), c2(_2, u2, "Generator"), c2(_2, a2, function() {
            return this;
          }), c2(_2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = j2, R2.prototype = { constructor: R2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(P2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, m2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), P2(r6), m2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  P2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: j2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), m2;
          } }, t4;
        }
        function ve(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function ge(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                ve(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                ve(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        var be = function(e4, t4) {
          return { signTransaction: (o3 = ge(me().mark(function r6(o4) {
            var i2;
            return me().wrap(function(r7) {
              for (; ; ) switch (r7.prev = r7.next) {
                case 0:
                  return (i2 = n2.TransactionBuilder.fromXDR(o4, t4)).sign(e4), r7.abrupt("return", i2.toXDR());
                case 3:
                case "end":
                  return r7.stop();
              }
            }, r6);
          })), function(e5) {
            return o3.apply(this, arguments);
          }), signAuthEntry: (r5 = ge(me().mark(function t5(r6) {
            return me().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return t6.abrupt("return", e4.sign((0, n2.hash)(de.from(r6, "base64"))).toString("base64"));
                case 1:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5) {
            return r5.apply(this, arguments);
          }) };
          var r5, o3;
        }, we = r4(8287).Buffer;
        function Se(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function Ee(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? Se(Object(r5), true).forEach(function(t5) {
              Oe(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : Se(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function _e(e4, t4) {
          var r5 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
          if (!r5) {
            if (Array.isArray(e4) || (r5 = Pe(e4)) || t4 && e4 && "number" == typeof e4.length) {
              r5 && (e4 = r5);
              var n3 = 0, o3 = function() {
              };
              return { s: o3, n: function() {
                return n3 >= e4.length ? { done: true } : { done: false, value: e4[n3++] };
              }, e: function(e5) {
                throw e5;
              }, f: o3 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, a2 = true, s2 = false;
          return { s: function() {
            r5 = r5.call(e4);
          }, n: function() {
            var e5 = r5.next();
            return a2 = e5.done, e5;
          }, e: function(e5) {
            s2 = true, i2 = e5;
          }, f: function() {
            try {
              a2 || null == r5.return || r5.return();
            } finally {
              if (s2) throw i2;
            }
          } };
        }
        function ke(e4) {
          return ke = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, ke(e4);
        }
        function Te(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, xe(n3.key), n3);
          }
        }
        function Oe(e4, t4, r5) {
          return (t4 = xe(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function xe(e4) {
          var t4 = function(e5, t5) {
            if ("object" != ke(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != ke(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == ke(t4) ? t4 : t4 + "";
        }
        function Ae(e4, t4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || function(e5, t5) {
            var r5 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (null != r5) {
              var n3, o3, i2, a2, s2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r5 = r5.call(e5)).next, 0 === t5) {
                  if (Object(r5) !== r5) return;
                  u2 = false;
                } else for (; !(u2 = (n3 = i2.call(r5)).done) && (s2.push(n3.value), s2.length !== t5); u2 = true) ;
              } catch (e6) {
                c2 = true, o3 = e6;
              } finally {
                try {
                  if (!u2 && null != r5.return && (a2 = r5.return(), Object(a2) !== a2)) return;
                } finally {
                  if (c2) throw o3;
                }
              }
              return s2;
            }
          }(e4, t4) || Pe(e4, t4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function Pe(e4, t4) {
          if (e4) {
            if ("string" == typeof e4) return Re(e4, t4);
            var r5 = {}.toString.call(e4).slice(8, -1);
            return "Object" === r5 && e4.constructor && (r5 = e4.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e4) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? Re(e4, t4) : void 0;
          }
        }
        function Re(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        var je, Ie, Ce, Le = (je = function e4(t4) {
          if (function(e5, t5) {
            if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
          }(this, e4), Oe(this, "entries", []), 0 == t4.length) throw new Error("Contract spec must have at least one entry");
          var r5 = t4[0];
          this.entries = "string" == typeof r5 ? t4.map(function(e5) {
            return n2.xdr.ScSpecEntry.fromXDR(e5, "base64");
          }) : t4;
        }, Ie = [{ key: "funcs", value: function() {
          return this.entries.filter(function(e4) {
            return e4.switch().value === n2.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
          }).map(function(e4) {
            return e4.functionV0();
          });
        } }, { key: "getFunc", value: function(e4) {
          var t4 = this.findEntry(e4);
          if (t4.switch().value !== n2.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) throw new Error("".concat(e4, " is not a function"));
          return t4.functionV0();
        } }, { key: "funcArgsToScVals", value: function(e4, t4) {
          var r5 = this;
          return this.getFunc(e4).inputs().map(function(e5) {
            return r5.nativeToScVal(function(e6, t5) {
              var r6 = t5.name().toString(), n3 = Object.entries(e6).find(function(e7) {
                var t6 = Ae(e7, 2), n4 = t6[0];
                return t6[1], n4 === r6;
              });
              if (!n3) throw new Error("Missing field ".concat(r6));
              return n3[1];
            }(t4, e5), e5.type());
          });
        } }, { key: "funcResToNative", value: function(e4, t4) {
          var r5 = "string" == typeof t4 ? n2.xdr.ScVal.fromXDR(t4, "base64") : t4, o3 = this.getFunc(e4).outputs();
          if (0 === o3.length) {
            var i2 = r5.switch();
            if (i2.value !== n2.xdr.ScValType.scvVoid().value) throw new Error("Expected void, got ".concat(i2.name));
            return null;
          }
          if (o3.length > 1) throw new Error("Multiple outputs not supported");
          var a2 = o3[0];
          return a2.switch().value === n2.xdr.ScSpecType.scSpecTypeResult().value ? new p(this.scValToNative(r5, a2.result().okType())) : this.scValToNative(r5, a2);
        } }, { key: "findEntry", value: function(e4) {
          var t4 = this.entries.find(function(t5) {
            return t5.value().name().toString() === e4;
          });
          if (!t4) throw new Error("no such entry: ".concat(e4));
          return t4;
        } }, { key: "nativeToScVal", value: function(e4, t4) {
          var r5 = this, o3 = t4.switch(), i2 = o3.value;
          if (o3.value === n2.xdr.ScSpecType.scSpecTypeUdt().value) {
            var a2 = t4.udt();
            return this.nativeToUdt(e4, a2.name().toString());
          }
          if (i2 === n2.xdr.ScSpecType.scSpecTypeOption().value) {
            var s2 = t4.option();
            return void 0 === e4 ? n2.xdr.ScVal.scvVoid() : this.nativeToScVal(e4, s2.valueType());
          }
          switch (ke(e4)) {
            case "object":
              var u2, c2, l3;
              if (null === e4) {
                if (i2 === n2.xdr.ScSpecType.scSpecTypeVoid().value) return n2.xdr.ScVal.scvVoid();
                throw new TypeError("Type ".concat(t4, " was not void, but value was null"));
              }
              if (e4 instanceof n2.xdr.ScVal) return e4;
              if (e4 instanceof n2.Address) {
                if (t4.switch().value !== n2.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(t4, " was not address, but value was Address"));
                return e4.toScVal();
              }
              if (e4 instanceof n2.Contract) {
                if (t4.switch().value !== n2.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(t4, " was not address, but value was Address"));
                return e4.address().toScVal();
              }
              if (e4 instanceof Uint8Array || we.isBuffer(e4)) {
                var f2 = Uint8Array.from(e4);
                switch (i2) {
                  case n2.xdr.ScSpecType.scSpecTypeBytesN().value:
                    var p2 = t4.bytesN();
                    if (f2.length !== p2.n()) throw new TypeError("expected ".concat(p2.n(), " bytes, but got ").concat(f2.length));
                    return n2.xdr.ScVal.scvBytes(f2);
                  case n2.xdr.ScSpecType.scSpecTypeBytes().value:
                    return n2.xdr.ScVal.scvBytes(f2);
                  default:
                    throw new TypeError("invalid type (".concat(t4, ") specified for Bytes and BytesN"));
                }
              }
              if (Array.isArray(e4)) switch (i2) {
                case n2.xdr.ScSpecType.scSpecTypeVec().value:
                  var h2 = t4.vec().elementType();
                  return n2.xdr.ScVal.scvVec(e4.map(function(e5) {
                    return r5.nativeToScVal(e5, h2);
                  }));
                case n2.xdr.ScSpecType.scSpecTypeTuple().value:
                  var d2 = t4.tuple().valueTypes();
                  if (e4.length !== d2.length) throw new TypeError("Tuple expects ".concat(d2.length, " values, but ").concat(e4.length, " were provided"));
                  return n2.xdr.ScVal.scvVec(e4.map(function(e5, t5) {
                    return r5.nativeToScVal(e5, d2[t5]);
                  }));
                case n2.xdr.ScSpecType.scSpecTypeMap().value:
                  var y2 = t4.map(), m2 = y2.keyType(), v2 = y2.valueType();
                  return n2.xdr.ScVal.scvMap(e4.map(function(e5) {
                    var t5 = r5.nativeToScVal(e5[0], m2), o4 = r5.nativeToScVal(e5[1], v2);
                    return new n2.xdr.ScMapEntry({ key: t5, val: o4 });
                  }));
                default:
                  throw new TypeError("Type ".concat(t4, " was not vec, but value was Array"));
              }
              if (e4.constructor === Map) {
                if (i2 !== n2.xdr.ScSpecType.scSpecTypeMap().value) throw new TypeError("Type ".concat(t4, " was not map, but value was Map"));
                for (var g2 = t4.map(), b2 = [], w2 = e4.entries(), S2 = w2.next(); !S2.done; ) {
                  var E2 = Ae(S2.value, 2), _2 = E2[0], k2 = E2[1], T2 = this.nativeToScVal(_2, g2.keyType()), O2 = this.nativeToScVal(k2, g2.valueType());
                  b2.push(new n2.xdr.ScMapEntry({ key: T2, val: O2 })), S2 = w2.next();
                }
                return n2.xdr.ScVal.scvMap(b2);
              }
              if ("Object" !== (null !== (u2 = null === (c2 = e4.constructor) || void 0 === c2 ? void 0 : c2.name) && void 0 !== u2 ? u2 : "")) throw new TypeError("cannot interpret ".concat(null === (l3 = e4.constructor) || void 0 === l3 ? void 0 : l3.name, " value as ScVal (").concat(JSON.stringify(e4), ")"));
              throw new TypeError("Received object ".concat(e4, "  did not match the provided type ").concat(t4));
            case "number":
            case "bigint":
              switch (i2) {
                case n2.xdr.ScSpecType.scSpecTypeU32().value:
                  return n2.xdr.ScVal.scvU32(e4);
                case n2.xdr.ScSpecType.scSpecTypeI32().value:
                  return n2.xdr.ScVal.scvI32(e4);
                case n2.xdr.ScSpecType.scSpecTypeU64().value:
                case n2.xdr.ScSpecType.scSpecTypeI64().value:
                case n2.xdr.ScSpecType.scSpecTypeU128().value:
                case n2.xdr.ScSpecType.scSpecTypeI128().value:
                case n2.xdr.ScSpecType.scSpecTypeU256().value:
                case n2.xdr.ScSpecType.scSpecTypeI256().value:
                  var x2 = o3.name.substring(10).toLowerCase();
                  return new n2.XdrLargeInt(x2, e4).toScVal();
                default:
                  throw new TypeError("invalid type (".concat(t4, ") specified for integer"));
              }
            case "string":
              return function(e5, t5) {
                switch (t5.value) {
                  case n2.xdr.ScSpecType.scSpecTypeString().value:
                    return n2.xdr.ScVal.scvString(e5);
                  case n2.xdr.ScSpecType.scSpecTypeSymbol().value:
                    return n2.xdr.ScVal.scvSymbol(e5);
                  case n2.xdr.ScSpecType.scSpecTypeAddress().value:
                    var r6 = n2.Address.fromString(e5);
                    return n2.xdr.ScVal.scvAddress(r6.toScAddress());
                  case n2.xdr.ScSpecType.scSpecTypeU64().value:
                    return new n2.XdrLargeInt("u64", e5).toScVal();
                  case n2.xdr.ScSpecType.scSpecTypeI64().value:
                    return new n2.XdrLargeInt("i64", e5).toScVal();
                  case n2.xdr.ScSpecType.scSpecTypeU128().value:
                    return new n2.XdrLargeInt("u128", e5).toScVal();
                  case n2.xdr.ScSpecType.scSpecTypeI128().value:
                    return new n2.XdrLargeInt("i128", e5).toScVal();
                  case n2.xdr.ScSpecType.scSpecTypeU256().value:
                    return new n2.XdrLargeInt("u256", e5).toScVal();
                  case n2.xdr.ScSpecType.scSpecTypeI256().value:
                    return new n2.XdrLargeInt("i256", e5).toScVal();
                  case n2.xdr.ScSpecType.scSpecTypeBytes().value:
                  case n2.xdr.ScSpecType.scSpecTypeBytesN().value:
                    return n2.xdr.ScVal.scvBytes(we.from(e5, "base64"));
                  default:
                    throw new TypeError("invalid type ".concat(t5.name, " specified for string value"));
                }
              }(e4, o3);
            case "boolean":
              if (i2 !== n2.xdr.ScSpecType.scSpecTypeBool().value) throw TypeError("Type ".concat(t4, " was not bool, but value was bool"));
              return n2.xdr.ScVal.scvBool(e4);
            case "undefined":
              if (!t4) return n2.xdr.ScVal.scvVoid();
              switch (i2) {
                case n2.xdr.ScSpecType.scSpecTypeVoid().value:
                case n2.xdr.ScSpecType.scSpecTypeOption().value:
                  return n2.xdr.ScVal.scvVoid();
                default:
                  throw new TypeError("Type ".concat(t4, " was not void, but value was undefined"));
              }
            case "function":
              return this.nativeToScVal(e4(), t4);
            default:
              throw new TypeError("failed to convert typeof ".concat(ke(e4), " (").concat(e4, ")"));
          }
        } }, { key: "nativeToUdt", value: function(e4, t4) {
          var r5 = this.findEntry(t4);
          switch (r5.switch()) {
            case n2.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              if ("number" != typeof e4) throw new TypeError("expected number for enum ".concat(t4, ", but got ").concat(ke(e4)));
              return this.nativeToEnum(e4, r5.udtEnumV0());
            case n2.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.nativeToStruct(e4, r5.udtStructV0());
            case n2.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.nativeToUnion(e4, r5.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(t4));
          }
        } }, { key: "nativeToUnion", value: function(e4, t4) {
          var r5 = this, o3 = e4.tag, i2 = t4.cases().find(function(e5) {
            return e5.value().name().toString() === o3;
          });
          if (!i2) throw new TypeError("no such enum entry: ".concat(o3, " in ").concat(t4));
          var a2 = n2.xdr.ScVal.scvSymbol(o3);
          switch (i2.switch()) {
            case n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():
              return n2.xdr.ScVal.scvVec([a2]);
            case n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():
              var s2 = i2.tupleCase().type();
              if (Array.isArray(e4.values)) {
                if (e4.values.length != s2.length) throw new TypeError("union ".concat(t4, " expects ").concat(s2.length, " values, but got ").concat(e4.values.length));
                var u2 = e4.values.map(function(e5, t5) {
                  return r5.nativeToScVal(e5, s2[t5]);
                });
                return u2.unshift(a2), n2.xdr.ScVal.scvVec(u2);
              }
              throw new Error("failed to parse union case ".concat(i2, " with ").concat(e4));
            default:
              throw new Error("failed to parse union ".concat(t4, " with ").concat(e4));
          }
        } }, { key: "nativeToStruct", value: function(e4, t4) {
          var r5 = this, o3 = t4.fields();
          if (o3.some(Be)) {
            if (!o3.every(Be)) throw new Error("mixed numeric and non-numeric field names are not allowed");
            return n2.xdr.ScVal.scvVec(o3.map(function(t5, n3) {
              return r5.nativeToScVal(e4[n3], o3[n3].type());
            }));
          }
          return n2.xdr.ScVal.scvMap(o3.map(function(t5) {
            var o4 = t5.name().toString();
            return new n2.xdr.ScMapEntry({ key: r5.nativeToScVal(o4, n2.xdr.ScSpecTypeDef.scSpecTypeSymbol()), val: r5.nativeToScVal(e4[o4], t5.type()) });
          }));
        } }, { key: "nativeToEnum", value: function(e4, t4) {
          if (t4.cases().some(function(t5) {
            return t5.value() === e4;
          })) return n2.xdr.ScVal.scvU32(e4);
          throw new TypeError("no such enum entry: ".concat(e4, " in ").concat(t4));
        } }, { key: "scValStrToNative", value: function(e4, t4) {
          return this.scValToNative(n2.xdr.ScVal.fromXDR(e4, "base64"), t4);
        } }, { key: "scValToNative", value: function(e4, t4) {
          var r5 = this, o3 = t4.switch(), i2 = o3.value;
          if (i2 === n2.xdr.ScSpecType.scSpecTypeUdt().value) return this.scValUdtToNative(e4, t4.udt());
          switch (e4.switch().value) {
            case n2.xdr.ScValType.scvVoid().value:
              return;
            case n2.xdr.ScValType.scvU64().value:
            case n2.xdr.ScValType.scvI64().value:
            case n2.xdr.ScValType.scvU128().value:
            case n2.xdr.ScValType.scvI128().value:
            case n2.xdr.ScValType.scvU256().value:
            case n2.xdr.ScValType.scvI256().value:
              return (0, n2.scValToBigInt)(e4);
            case n2.xdr.ScValType.scvVec().value:
              if (i2 == n2.xdr.ScSpecType.scSpecTypeVec().value) {
                var a2, s2 = t4.vec();
                return (null !== (a2 = e4.vec()) && void 0 !== a2 ? a2 : []).map(function(e5) {
                  return r5.scValToNative(e5, s2.elementType());
                });
              }
              if (i2 == n2.xdr.ScSpecType.scSpecTypeTuple().value) {
                var u2, c2 = t4.tuple().valueTypes();
                return (null !== (u2 = e4.vec()) && void 0 !== u2 ? u2 : []).map(function(e5, t5) {
                  return r5.scValToNative(e5, c2[t5]);
                });
              }
              throw new TypeError("Type ".concat(t4, " was not vec, but ").concat(e4, " is"));
            case n2.xdr.ScValType.scvAddress().value:
              return n2.Address.fromScVal(e4).toString();
            case n2.xdr.ScValType.scvMap().value:
              var l3, f2 = null !== (l3 = e4.map()) && void 0 !== l3 ? l3 : [];
              if (i2 == n2.xdr.ScSpecType.scSpecTypeMap().value) {
                var p2 = t4.map(), h2 = p2.keyType(), d2 = p2.valueType();
                return f2.map(function(e5) {
                  return [r5.scValToNative(e5.key(), h2), r5.scValToNative(e5.val(), d2)];
                });
              }
              throw new TypeError("ScSpecType ".concat(o3.name, " was not map, but ").concat(JSON.stringify(e4, null, 2), " is"));
            case n2.xdr.ScValType.scvBool().value:
            case n2.xdr.ScValType.scvU32().value:
            case n2.xdr.ScValType.scvI32().value:
            case n2.xdr.ScValType.scvBytes().value:
              return e4.value();
            case n2.xdr.ScValType.scvString().value:
            case n2.xdr.ScValType.scvSymbol().value:
              var y2;
              if (i2 !== n2.xdr.ScSpecType.scSpecTypeString().value && i2 !== n2.xdr.ScSpecType.scSpecTypeSymbol().value) throw new Error("ScSpecType ".concat(o3.name, " was not string or symbol, but ").concat(JSON.stringify(e4, null, 2), " is"));
              return null === (y2 = e4.value()) || void 0 === y2 ? void 0 : y2.toString();
            case n2.xdr.ScValType.scvTimepoint().value:
            case n2.xdr.ScValType.scvDuration().value:
              return (0, n2.scValToBigInt)(n2.xdr.ScVal.scvU64(e4.u64()));
            default:
              throw new TypeError("failed to convert ".concat(JSON.stringify(e4, null, 2), " to native type from type ").concat(o3.name));
          }
        } }, { key: "scValUdtToNative", value: function(e4, t4) {
          var r5 = this.findEntry(t4.name().toString());
          switch (r5.switch()) {
            case n2.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              return this.enumToNative(e4);
            case n2.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.structToNative(e4, r5.udtStructV0());
            case n2.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.unionToNative(e4, r5.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(t4.name().toString(), ": ").concat(r5));
          }
        } }, { key: "unionToNative", value: function(e4, t4) {
          var r5 = this, o3 = e4.vec();
          if (!o3) throw new Error("".concat(JSON.stringify(e4, null, 2), " is not a vec"));
          if (0 === o3.length && 0 !== t4.cases.length) throw new Error("".concat(e4, " has length 0, but the there are at least one case in the union"));
          var i2 = o3[0].sym().toString();
          if (o3[0].switch().value != n2.xdr.ScValType.scvSymbol().value) throw new Error("{vec[0]} is not a symbol");
          var a2 = t4.cases().find(/* @__PURE__ */ function(e5) {
            return function(t5) {
              switch (t5.switch().value) {
                case n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                  return t5.tupleCase().name().toString() === e5;
                case n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                  return t5.voidCase().name().toString() === e5;
                default:
                  return false;
              }
            };
          }(i2));
          if (!a2) throw new Error("failed to find entry ".concat(i2, " in union {udt.name().toString()}"));
          var s2 = { tag: i2 };
          if (a2.switch().value === n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
            var u2 = a2.tupleCase().type().map(function(e5, t5) {
              return r5.scValToNative(o3[t5 + 1], e5);
            });
            s2.values = u2;
          }
          return s2;
        } }, { key: "structToNative", value: function(e4, t4) {
          var r5, n3, o3 = this, i2 = {}, a2 = t4.fields();
          return a2.some(Be) ? null === (n3 = e4.vec()) || void 0 === n3 ? void 0 : n3.map(function(e5, t5) {
            return o3.scValToNative(e5, a2[t5].type());
          }) : (null === (r5 = e4.map()) || void 0 === r5 || r5.forEach(function(e5, t5) {
            var r6 = a2[t5];
            i2[r6.name().toString()] = o3.scValToNative(e5.val(), r6.type());
          }), i2);
        } }, { key: "enumToNative", value: function(e4) {
          if (e4.switch().value !== n2.xdr.ScValType.scvU32().value) throw new Error("Enum must have a u32 value");
          return e4.u32();
        } }, { key: "errorCases", value: function() {
          return this.entries.filter(function(e4) {
            return e4.switch().value === n2.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
          }).flatMap(function(e4) {
            return e4.value().cases();
          });
        } }, { key: "jsonSchema", value: function(e4) {
          var t4, r5 = {}, o3 = _e(this.entries);
          try {
            for (o3.s(); !(t4 = o3.n()).done; ) {
              var i2 = t4.value;
              switch (i2.switch().value) {
                case n2.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:
                  var a2 = i2.udtEnumV0();
                  r5[a2.name().toString()] = qe(a2);
                  break;
                case n2.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:
                  var s2 = i2.udtStructV0();
                  r5[s2.name().toString()] = Me(s2);
                  break;
                case n2.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:
                  var u2 = i2.udtUnionV0();
                  r5[u2.name().toString()] = Ve(u2);
                  break;
                case n2.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:
                  var c2 = i2.functionV0(), l3 = c2.name().toString(), f2 = Fe(c2).input;
                  r5[l3] = f2;
                case n2.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:
              }
            }
          } catch (e5) {
            o3.e(e5);
          } finally {
            o3.f();
          }
          var p2 = { $schema: "http://json-schema.org/draft-07/schema#", definitions: Ee(Ee({}, Ne), r5) };
          return e4 && (p2.$ref = "#/definitions/".concat(e4)), p2;
        } }], Ie && Te(je.prototype, Ie), Ce && Te(je, Ce), Object.defineProperty(je, "prototype", { writable: false }), je);
        function Be(e4) {
          return /^\d+$/.test(e4.name().toString());
        }
        var Ne = { U32: { type: "integer", minimum: 0, maximum: 4294967295 }, I32: { type: "integer", minimum: -2147483648, maximum: 2147483647 }, U64: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 20 }, I64: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 21 }, U128: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 39 }, I128: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 40 }, U256: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 78 }, I256: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 79 }, Address: { type: "string", format: "address", description: "Address can be a public key or contract id" }, ScString: { type: "string", description: "ScString is a string" }, ScSymbol: { type: "string", description: "ScString is a string" }, DataUrl: { type: "string", pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$" } };
        function Ue(e4) {
          var t4;
          switch (e4.switch().value) {
            case n2.xdr.ScSpecType.scSpecTypeVal().value:
              t4 = "Val";
              break;
            case n2.xdr.ScSpecType.scSpecTypeBool().value:
              return { type: "boolean" };
            case n2.xdr.ScSpecType.scSpecTypeVoid().value:
              return { type: "null" };
            case n2.xdr.ScSpecType.scSpecTypeError().value:
              t4 = "Error";
              break;
            case n2.xdr.ScSpecType.scSpecTypeU32().value:
              t4 = "U32";
              break;
            case n2.xdr.ScSpecType.scSpecTypeI32().value:
              t4 = "I32";
              break;
            case n2.xdr.ScSpecType.scSpecTypeU64().value:
              t4 = "U64";
              break;
            case n2.xdr.ScSpecType.scSpecTypeI64().value:
              t4 = "I64";
              break;
            case n2.xdr.ScSpecType.scSpecTypeTimepoint().value:
              throw new Error("Timepoint type not supported");
            case n2.xdr.ScSpecType.scSpecTypeDuration().value:
              throw new Error("Duration not supported");
            case n2.xdr.ScSpecType.scSpecTypeU128().value:
              t4 = "U128";
              break;
            case n2.xdr.ScSpecType.scSpecTypeI128().value:
              t4 = "I128";
              break;
            case n2.xdr.ScSpecType.scSpecTypeU256().value:
              t4 = "U256";
              break;
            case n2.xdr.ScSpecType.scSpecTypeI256().value:
              t4 = "I256";
              break;
            case n2.xdr.ScSpecType.scSpecTypeBytes().value:
              t4 = "DataUrl";
              break;
            case n2.xdr.ScSpecType.scSpecTypeString().value:
              t4 = "ScString";
              break;
            case n2.xdr.ScSpecType.scSpecTypeSymbol().value:
              t4 = "ScSymbol";
              break;
            case n2.xdr.ScSpecType.scSpecTypeAddress().value:
              t4 = "Address";
              break;
            case n2.xdr.ScSpecType.scSpecTypeOption().value:
              return Ue(e4.option().valueType());
            case n2.xdr.ScSpecType.scSpecTypeResult().value:
              break;
            case n2.xdr.ScSpecType.scSpecTypeVec().value:
              return { type: "array", items: Ue(e4.vec().elementType()) };
            case n2.xdr.ScSpecType.scSpecTypeMap().value:
              var r5 = e4.map();
              return { type: "array", items: { type: "array", items: [Ue(r5.keyType()), Ue(r5.valueType())], minItems: 2, maxItems: 2 } };
            case n2.xdr.ScSpecType.scSpecTypeTuple().value:
              var o3 = e4.tuple(), i2 = o3.valueTypes().length, a2 = i2;
              return { type: "array", items: o3.valueTypes().map(Ue), minItems: i2, maxItems: a2 };
            case n2.xdr.ScSpecType.scSpecTypeBytesN().value:
              return { $ref: "#/definitions/DataUrl", maxLength: e4.bytesN().n() };
            case n2.xdr.ScSpecType.scSpecTypeUdt().value:
              t4 = e4.udt().name().toString();
          }
          return { $ref: "#/definitions/".concat(t4) };
        }
        function Me(e4) {
          var t4 = e4.fields();
          if (t4.some(Be)) {
            if (!t4.every(Be)) throw new Error("mixed numeric and non-numeric field names are not allowed");
            return { type: "array", items: t4.map(function(e5, r6) {
              return Ue(t4[r6].type());
            }), minItems: t4.length, maxItems: t4.length };
          }
          var r5 = e4.doc().toString(), n3 = De(t4), o3 = n3.properties, i2 = n3.required;
          return o3.additionalProperties = false, { description: r5, properties: o3, required: i2, type: "object" };
        }
        function De(e4) {
          var t4, r5 = {}, o3 = [], i2 = _e(e4);
          try {
            for (i2.s(); !(t4 = i2.n()).done; ) {
              var a2 = t4.value, s2 = a2.type(), u2 = a2.name().toString();
              r5[u2] = Ue(s2), s2.switch().value != n2.xdr.ScSpecType.scSpecTypeOption().value && o3.push(u2);
            }
          } catch (e5) {
            i2.e(e5);
          } finally {
            i2.f();
          }
          var c2 = { properties: r5 };
          return o3.length > 0 && (c2.required = o3), c2;
        }
        function Fe(e4) {
          var t4 = De(e4.inputs()), r5 = t4.properties, o3 = t4.required, i2 = { additionalProperties: false, properties: r5, type: "object" };
          (null == o3 ? void 0 : o3.length) > 0 && (i2.required = o3);
          var a2 = { properties: { args: i2 } }, s2 = e4.outputs(), u2 = s2.length > 0 ? Ue(s2[0]) : Ue(n2.xdr.ScSpecTypeDef.scSpecTypeVoid()), c2 = e4.doc().toString();
          return c2.length > 0 && (a2.description = c2), a2.additionalProperties = false, u2.additionalProperties = false, { input: a2, output: u2 };
        }
        function Ve(e4) {
          var t4, r5 = e4.doc().toString(), o3 = [], i2 = _e(e4.cases());
          try {
            for (i2.s(); !(t4 = i2.n()).done; ) {
              var a2 = t4.value;
              switch (a2.switch().value) {
                case n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                  var s2 = a2.voidCase().name().toString();
                  o3.push({ type: "object", title: s2, properties: { tag: s2 }, additionalProperties: false, required: ["tag"] });
                  break;
                case n2.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                  var u2 = a2.tupleCase(), c2 = u2.name().toString();
                  o3.push({ type: "object", title: c2, properties: { tag: c2, values: { type: "array", items: u2.type().map(Ue) } }, required: ["tag", "values"], additionalProperties: false });
              }
            }
          } catch (e5) {
            i2.e(e5);
          } finally {
            i2.f();
          }
          var l3 = { oneOf: o3 };
          return r5.length > 0 && (l3.description = r5), l3;
        }
        function qe(e4) {
          var t4, r5 = e4.doc().toString(), n3 = [], o3 = _e(e4.cases());
          try {
            for (o3.s(); !(t4 = o3.n()).done; ) {
              var i2 = t4.value, a2 = i2.name().toString(), s2 = i2.doc().toString();
              n3.push({ description: s2, title: a2, enum: [i2.value()], type: "number" });
            }
          } catch (e5) {
            o3.e(e5);
          } finally {
            o3.f();
          }
          var u2 = { oneOf: n3 };
          return r5.length > 0 && (u2.description = r5), u2;
        }
        var Ke = r4(1660), He = r4(8287).Buffer, ze = ["method"];
        function Xe(e4) {
          return Xe = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Xe(e4);
        }
        function Ge() {
          Ge = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof v2 ? t5 : v2, a3 = Object.create(i3.prototype), s3 = new R2(n4 || []);
            return o3(a3, "_invoke", { value: O2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", m2 = {};
          function v2() {
          }
          function g2() {
          }
          function b2() {
          }
          var w2 = {};
          c2(w2, a2, function() {
            return this;
          });
          var S2 = Object.getPrototypeOf, E2 = S2 && S2(S2(j2([])));
          E2 && E2 !== r5 && n3.call(E2, a2) && (w2 = E2);
          var _2 = b2.prototype = v2.prototype = Object.create(w2);
          function k2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function T2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == Xe(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function O2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = x2(s3, n4);
                  if (u3) {
                    if (u3 === m2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === m2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function x2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, x2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), m2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, m2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, m2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m2);
          }
          function A2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function P2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function R2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(A2, this), this.reset(true);
          }
          function j2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(Xe(t5) + " is not iterable");
          }
          return g2.prototype = b2, o3(_2, "constructor", { value: b2, configurable: true }), o3(b2, "constructor", { value: g2, configurable: true }), g2.displayName = c2(b2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === g2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, b2) : (e5.__proto__ = b2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(_2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, k2(T2.prototype), c2(T2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = T2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new T2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, k2(_2), c2(_2, u2, "Generator"), c2(_2, a2, function() {
            return this;
          }), c2(_2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = j2, R2.prototype = { constructor: R2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(P2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, m2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), P2(r6), m2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  P2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: j2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), m2;
          } }, t4;
        }
        function We(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function $e(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                We(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                We(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function Qe(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function Ye(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? Qe(Object(r5), true).forEach(function(t5) {
              Ze(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : Qe(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function Je(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, et(n3.key), n3);
          }
        }
        function Ze(e4, t4, r5) {
          return (t4 = et(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function et(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Xe(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Xe(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Xe(t4) ? t4 : t4 + "";
        }
        var tt = function() {
          function e4(t5, r6) {
            var n4 = this;
            !function(e5, t6) {
              if (!(e5 instanceof t6)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), Ze(this, "txFromJSON", function(e5) {
              var t6 = JSON.parse(e5), r7 = t6.method, o3 = function(e6, t7) {
                if (null == e6) return {};
                var r8, n5, o4 = function(e7, t8) {
                  if (null == e7) return {};
                  var r9 = {};
                  for (var n6 in e7) if ({}.hasOwnProperty.call(e7, n6)) {
                    if (t8.indexOf(n6) >= 0) continue;
                    r9[n6] = e7[n6];
                  }
                  return r9;
                }(e6, t7);
                if (Object.getOwnPropertySymbols) {
                  var i2 = Object.getOwnPropertySymbols(e6);
                  for (n5 = 0; n5 < i2.length; n5++) r8 = i2[n5], t7.indexOf(r8) >= 0 || {}.propertyIsEnumerable.call(e6, r8) && (o4[r8] = e6[r8]);
                }
                return o4;
              }(t6, ze);
              return he.fromJSON(Ye(Ye({}, n4.options), {}, { method: r7, parseResultXdr: function(e6) {
                return n4.spec.funcResToNative(r7, e6);
              } }), o3);
            }), Ze(this, "txFromXDR", function(e5) {
              return he.fromXDR(n4.options, e5, n4.spec);
            }), this.spec = t5, this.options = r6, this.spec.funcs().forEach(function(e5) {
              var o3 = e5.name().toString(), i2 = function(e6, n5) {
                return he.build(Ye(Ye(Ye({ method: o3, args: e6 && t5.funcArgsToScVals(o3, e6) }, r6), n5), {}, { errorTypes: t5.errorCases().reduce(function(e7, t6) {
                  return Ye(Ye({}, e7), {}, Ze({}, t6.value(), { message: t6.doc().toString() }));
                }, {}), parseResultXdr: function(e7) {
                  return t5.funcResToNative(o3, e7);
                } }));
              };
              n4[o3] = 0 === t5.getFunc(o3).inputs().length ? function(e6) {
                return i2(void 0, e6);
              } : i2;
            });
          }
          return function(e5, t5, r6) {
            return t5 && Je(e5.prototype, t5), r6 && Je(e5, r6), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(e4, null, [{ key: "fromWasmHash", value: (n3 = $e(Ge().mark(function t5(r6, n4) {
            var o3, i2, a2, s2, u2, c2, l3 = arguments;
            return Ge().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  if (o3 = l3.length > 2 && void 0 !== l3[2] ? l3[2] : "hex", n4 && n4.rpcUrl) {
                    t6.next = 3;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 3:
                  return i2 = n4.rpcUrl, a2 = n4.allowHttp, s2 = { allowHttp: a2 }, u2 = new Ke.Server(i2, s2), t6.next = 8, u2.getContractWasmByHash(r6, o3);
                case 8:
                  return c2 = t6.sent, t6.abrupt("return", e4.fromWasm(c2, n4));
                case 10:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5, t5) {
            return n3.apply(this, arguments);
          }) }, { key: "fromWasm", value: (r5 = $e(Ge().mark(function t5(r6, n4) {
            var o3, i2, a2, s2, u2;
            return Ge().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return t6.next = 2, WebAssembly.compile(r6);
                case 2:
                  if (o3 = t6.sent, 0 !== (i2 = WebAssembly.Module.customSections(o3, "contractspecv0")).length) {
                    t6.next = 6;
                    break;
                  }
                  throw new Error("Could not obtain contract spec from wasm");
                case 6:
                  return a2 = He.from(i2[0]), s2 = _(a2), u2 = new Le(s2), t6.abrupt("return", new e4(u2, n4));
                case 10:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5, t5) {
            return r5.apply(this, arguments);
          }) }, { key: "from", value: (t4 = $e(Ge().mark(function t5(r6) {
            var n4, o3, i2, a2, s2, u2;
            return Ge().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  if (r6 && r6.rpcUrl && r6.contractId) {
                    t6.next = 2;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl and contractId");
                case 2:
                  return n4 = r6.rpcUrl, o3 = r6.contractId, i2 = r6.allowHttp, a2 = { allowHttp: i2 }, s2 = new Ke.Server(n4, a2), t6.next = 7, s2.getContractWasmByContractId(o3);
                case 7:
                  return u2 = t6.sent, t6.abrupt("return", e4.fromWasm(u2, r6));
                case 9:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5) {
            return t4.apply(this, arguments);
          }) }]);
          var t4, r5, n3;
        }();
      }, 5885: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        function o2(e4, t4) {
          if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
        }
        function i(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, s(n3.key), n3);
          }
        }
        function a(e4, t4, r5) {
          return t4 && i(e4.prototype, t4), r5 && i(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }
        function s(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        function u(e4, t4, r5) {
          return t4 = h(t4), function(e5, t5) {
            if (t5 && ("object" == n2(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, f() ? Reflect.construct(t4, r5 || [], h(e4).constructor) : t4.apply(e4, r5));
        }
        function c(e4, t4) {
          if ("function" != typeof t4 && null !== t4) throw new TypeError("Super expression must either be null or a function");
          e4.prototype = Object.create(t4 && t4.prototype, { constructor: { value: e4, writable: true, configurable: true } }), Object.defineProperty(e4, "prototype", { writable: false }), t4 && p(e4, t4);
        }
        function l2(e4) {
          var t4 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return l2 = function(e5) {
            if (null === e5 || !function(e6) {
              try {
                return -1 !== Function.toString.call(e6).indexOf("[native code]");
              } catch (t5) {
                return "function" == typeof e6;
              }
            }(e5)) return e5;
            if ("function" != typeof e5) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== t4) {
              if (t4.has(e5)) return t4.get(e5);
              t4.set(e5, r5);
            }
            function r5() {
              return function(e6, t5, r6) {
                if (f()) return Reflect.construct.apply(null, arguments);
                var n3 = [null];
                n3.push.apply(n3, t5);
                var o3 = new (e6.bind.apply(e6, n3))();
                return r6 && p(o3, r6.prototype), o3;
              }(e5, arguments, h(this).constructor);
            }
            return r5.prototype = Object.create(e5.prototype, { constructor: { value: r5, enumerable: false, writable: true, configurable: true } }), p(r5, e5);
          }, l2(e4);
        }
        function f() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (f = function() {
            return !!e4;
          })();
        }
        function p(e4, t4) {
          return p = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, p(e4, t4);
        }
        function h(e4) {
          return h = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, h(e4);
        }
        r4.d(t3, { Cu: () => g, Dr: () => d, m_: () => y, nS: () => v, v7: () => m });
        var d = function(e4) {
          function t4(e5, r5) {
            var n3;
            o2(this, t4);
            var i2 = (this instanceof t4 ? this.constructor : void 0).prototype;
            return (n3 = u(this, t4, [e5])).__proto__ = i2, n3.constructor = t4, n3.response = r5, n3;
          }
          return c(t4, e4), a(t4, [{ key: "getResponse", value: function() {
            return this.response;
          } }]);
        }(l2(Error)), y = function(e4) {
          function t4(e5, r5) {
            var n3;
            o2(this, t4);
            var i2 = (this instanceof t4 ? this.constructor : void 0).prototype;
            return (n3 = u(this, t4, [e5, r5])).__proto__ = i2, n3.constructor = t4, n3.name = "NotFoundError", n3;
          }
          return c(t4, e4), a(t4);
        }(d), m = function(e4) {
          function t4(e5, r5) {
            var n3;
            o2(this, t4);
            var i2 = (this instanceof t4 ? this.constructor : void 0).prototype;
            return (n3 = u(this, t4, [e5, r5])).__proto__ = i2, n3.constructor = t4, n3.name = "BadRequestError", n3;
          }
          return c(t4, e4), a(t4);
        }(d), v = function(e4) {
          function t4(e5, r5) {
            var n3;
            o2(this, t4);
            var i2 = (this instanceof t4 ? this.constructor : void 0).prototype;
            return (n3 = u(this, t4, [e5, r5])).__proto__ = i2, n3.constructor = t4, n3.name = "BadResponseError", n3;
          }
          return c(t4, e4), a(t4);
        }(d), g = function(e4) {
          function t4(e5, r5, n3) {
            var i2;
            o2(this, t4);
            var a2 = (this instanceof t4 ? this.constructor : void 0).prototype;
            return (i2 = u(this, t4, [e5])).__proto__ = a2, i2.constructor = t4, i2.name = "AccountRequiresMemoError", i2.accountId = r5, i2.operationIndex = n3, i2;
          }
          return c(t4, e4), a(t4);
        }(l2(Error));
      }, 7600: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { Api: () => n2, FEDERATION_RESPONSE_MAX_SIZE: () => b, Server: () => w });
        var n2 = {};
        r4.r(n2), r4.d(n2, { Api: () => {
        } });
        var o2 = r4(1083), i = r4(356), a = r4(4193), s = r4.n(a), u = r4(8732), c = r4(5885), l2 = r4(3898);
        function f(e4) {
          return f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, f(e4);
        }
        function p(e4, t4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || function(e5, t5) {
            var r5 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (null != r5) {
              var n3, o3, i2, a2, s2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r5 = r5.call(e5)).next, 0 === t5) {
                  if (Object(r5) !== r5) return;
                  u2 = false;
                } else for (; !(u2 = (n3 = i2.call(r5)).done) && (s2.push(n3.value), s2.length !== t5); u2 = true) ;
              } catch (e6) {
                c2 = true, o3 = e6;
              } finally {
                try {
                  if (!u2 && null != r5.return && (a2 = r5.return(), Object(a2) !== a2)) return;
                } finally {
                  if (c2) throw o3;
                }
              }
              return s2;
            }
          }(e4, t4) || function(e5, t5) {
            if (e5) {
              if ("string" == typeof e5) return h(e5, t5);
              var r5 = {}.toString.call(e5).slice(8, -1);
              return "Object" === r5 && e5.constructor && (r5 = e5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? h(e5, t5) : void 0;
            }
          }(e4, t4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function h(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function d() {
          d = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof b2 ? t5 : b2, a3 = Object.create(i3.prototype), s3 = new I(n4 || []);
            return o3(a3, "_invoke", { value: A(e5, r6, s3) }), a3;
          }
          function p2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var h2 = "suspendedStart", y2 = "suspendedYield", m2 = "executing", v2 = "completed", g2 = {};
          function b2() {
          }
          function w2() {
          }
          function S() {
          }
          var E = {};
          c2(E, a2, function() {
            return this;
          });
          var _ = Object.getPrototypeOf, k = _ && _(_(C([])));
          k && k !== r5 && n3.call(k, a2) && (E = k);
          var T = S.prototype = b2.prototype = Object.create(E);
          function O(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function x(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = p2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == f(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function A(t5, r6, n4) {
            var o4 = h2;
            return function(i3, a3) {
              if (o4 === m2) throw Error("Generator is already running");
              if (o4 === v2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = P(s3, n4);
                  if (u3) {
                    if (u3 === g2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === h2) throw o4 = v2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = m2;
                var c3 = p2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? v2 : y2, c3.arg === g2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = v2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function P(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, P(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), g2;
            var i3 = p2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, g2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, g2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, g2);
          }
          function R(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function j(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function I(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(R, this), this.reset(true);
          }
          function C(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(f(t5) + " is not iterable");
          }
          return w2.prototype = S, o3(T, "constructor", { value: S, configurable: true }), o3(S, "constructor", { value: w2, configurable: true }), w2.displayName = c2(S, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === w2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, S) : (e5.__proto__ = S, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(T), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, O(x.prototype), c2(x.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = x, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new x(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, O(T), c2(T, u2, "Generator"), c2(T, a2, function() {
            return this;
          }), c2(T, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = C, I.prototype = { constructor: I, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(j), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, g2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), g2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), j(r6), g2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  j(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: C(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), g2;
          } }, t4;
        }
        function y(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function m(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                y(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                y(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function v(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, g(n3.key), n3);
          }
        }
        function g(e4) {
          var t4 = function(e5, t5) {
            if ("object" != f(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != f(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == f(t4) ? t4 : t4 + "";
        }
        var b = 102400, w = function() {
          function e4(t5, r6) {
            var n4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            !function(e5, t6) {
              if (!(e5 instanceof t6)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), this.serverURL = s()(t5), this.domain = r6;
            var o3 = void 0 === n4.allowHttp ? u.T.isAllowHttp() : n4.allowHttp;
            if (this.timeout = void 0 === n4.timeout ? u.T.getTimeout() : n4.timeout, "https" !== this.serverURL.protocol() && !o3) throw new Error("Cannot connect to insecure federation server");
          }
          return t4 = e4, r5 = [{ key: "resolveAddress", value: (w2 = m(d().mark(function e5(t5) {
            var r6, n4;
            return d().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  if (r6 = t5, !(t5.indexOf("*") < 0)) {
                    e6.next = 5;
                    break;
                  }
                  if (this.domain) {
                    e6.next = 4;
                    break;
                  }
                  return e6.abrupt("return", Promise.reject(new Error("Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.")));
                case 4:
                  r6 = "".concat(t5, "*").concat(this.domain);
                case 5:
                  return n4 = this.serverURL.query({ type: "name", q: r6 }), e6.abrupt("return", this._sendRequest(n4));
                case 7:
                case "end":
                  return e6.stop();
              }
            }, e5, this);
          })), function(e5) {
            return w2.apply(this, arguments);
          }) }, { key: "resolveAccountId", value: (g2 = m(d().mark(function e5(t5) {
            var r6;
            return d().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  return r6 = this.serverURL.query({ type: "id", q: t5 }), e6.abrupt("return", this._sendRequest(r6));
                case 2:
                case "end":
                  return e6.stop();
              }
            }, e5, this);
          })), function(e5) {
            return g2.apply(this, arguments);
          }) }, { key: "resolveTransactionId", value: (y2 = m(d().mark(function e5(t5) {
            var r6;
            return d().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  return r6 = this.serverURL.query({ type: "txid", q: t5 }), e6.abrupt("return", this._sendRequest(r6));
                case 2:
                case "end":
                  return e6.stop();
              }
            }, e5, this);
          })), function(e5) {
            return y2.apply(this, arguments);
          }) }, { key: "_sendRequest", value: (h2 = m(d().mark(function e5(t5) {
            var r6;
            return d().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  return r6 = this.timeout, e6.abrupt("return", o2.A.get(t5.toString(), { maxContentLength: b, timeout: r6 }).then(function(e7) {
                    if (void 0 !== e7.data.memo && "string" != typeof e7.data.memo) throw new Error("memo value should be of type string");
                    return e7.data;
                  }).catch(function(e7) {
                    if (e7 instanceof Error) {
                      if (e7.message.match(/^maxContentLength size/)) throw new Error("federation response exceeds allowed size of ".concat(b));
                      return Promise.reject(e7);
                    }
                    return Promise.reject(new c.nS("Server query failed. Server responded: ".concat(e7.status, " ").concat(e7.statusText), e7.data));
                  }));
                case 2:
                case "end":
                  return e6.stop();
              }
            }, e5, this);
          })), function(e5) {
            return h2.apply(this, arguments);
          }) }], n3 = [{ key: "resolve", value: (f2 = m(d().mark(function t5(r6) {
            var n4, o3, a3, s2, u2, c2 = arguments;
            return d().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  if (n4 = c2.length > 1 && void 0 !== c2[1] ? c2[1] : {}, !(r6.indexOf("*") < 0)) {
                    t6.next = 5;
                    break;
                  }
                  if (i.StrKey.isValidEd25519PublicKey(r6)) {
                    t6.next = 4;
                    break;
                  }
                  return t6.abrupt("return", Promise.reject(new Error("Invalid Account ID")));
                case 4:
                  return t6.abrupt("return", Promise.resolve({ account_id: r6 }));
                case 5:
                  if (o3 = r6.split("*"), a3 = p(o3, 2), s2 = a3[1], 2 === o3.length && s2) {
                    t6.next = 9;
                    break;
                  }
                  return t6.abrupt("return", Promise.reject(new Error("Invalid Stellar address")));
                case 9:
                  return t6.next = 11, e4.createForDomain(s2, n4);
                case 11:
                  return u2 = t6.sent, t6.abrupt("return", u2.resolveAddress(r6));
                case 13:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5) {
            return f2.apply(this, arguments);
          }) }, { key: "createForDomain", value: (a2 = m(d().mark(function t5(r6) {
            var n4, o3, i2 = arguments;
            return d().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return n4 = i2.length > 1 && void 0 !== i2[1] ? i2[1] : {}, t6.next = 3, l2.Resolver.resolve(r6, n4);
                case 3:
                  if ((o3 = t6.sent).FEDERATION_SERVER) {
                    t6.next = 6;
                    break;
                  }
                  return t6.abrupt("return", Promise.reject(new Error("stellar.toml does not contain FEDERATION_SERVER field")));
                case 6:
                  return t6.abrupt("return", new e4(o3.FEDERATION_SERVER, r6, n4));
                case 7:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function(e5) {
            return a2.apply(this, arguments);
          }) }], r5 && v(t4.prototype, r5), n3 && v(t4, n3), Object.defineProperty(t4, "prototype", { writable: false }), t4;
          var t4, r5, n3, a2, f2, h2, y2, g2, w2;
        }();
      }, 8242: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { Api: () => {
        } });
      }, 2731: (e3, t3, r4) => {
        "use strict";
        var n2, o2;
        r4.r(t3), r4.d(t3, { AccountResponse: () => d, AxiosClient: () => z, HorizonApi: () => n2, SERVER_TIME_MAP: () => q, Server: () => Kr, ServerApi: () => o2, default: () => Hr, getCurrentServerTime: () => X }), function(e4) {
          var t4 = function(e5) {
            return e5.constantProduct = "constant_product", e5;
          }({});
          e4.LiquidityPoolType = t4;
          var r5 = function(e5) {
            return e5.createAccount = "create_account", e5.payment = "payment", e5.pathPayment = "path_payment_strict_receive", e5.createPassiveOffer = "create_passive_sell_offer", e5.manageOffer = "manage_sell_offer", e5.setOptions = "set_options", e5.changeTrust = "change_trust", e5.allowTrust = "allow_trust", e5.accountMerge = "account_merge", e5.inflation = "inflation", e5.manageData = "manage_data", e5.bumpSequence = "bump_sequence", e5.manageBuyOffer = "manage_buy_offer", e5.pathPaymentStrictSend = "path_payment_strict_send", e5.createClaimableBalance = "create_claimable_balance", e5.claimClaimableBalance = "claim_claimable_balance", e5.beginSponsoringFutureReserves = "begin_sponsoring_future_reserves", e5.endSponsoringFutureReserves = "end_sponsoring_future_reserves", e5.revokeSponsorship = "revoke_sponsorship", e5.clawback = "clawback", e5.clawbackClaimableBalance = "clawback_claimable_balance", e5.setTrustLineFlags = "set_trust_line_flags", e5.liquidityPoolDeposit = "liquidity_pool_deposit", e5.liquidityPoolWithdraw = "liquidity_pool_withdraw", e5.invokeHostFunction = "invoke_host_function", e5.bumpFootprintExpiration = "bump_footprint_expiration", e5.restoreFootprint = "restore_footprint", e5;
          }({});
          e4.OperationResponseType = r5;
          var n3 = function(e5) {
            return e5[e5.createAccount = 0] = "createAccount", e5[e5.payment = 1] = "payment", e5[e5.pathPayment = 2] = "pathPayment", e5[e5.createPassiveOffer = 3] = "createPassiveOffer", e5[e5.manageOffer = 4] = "manageOffer", e5[e5.setOptions = 5] = "setOptions", e5[e5.changeTrust = 6] = "changeTrust", e5[e5.allowTrust = 7] = "allowTrust", e5[e5.accountMerge = 8] = "accountMerge", e5[e5.inflation = 9] = "inflation", e5[e5.manageData = 10] = "manageData", e5[e5.bumpSequence = 11] = "bumpSequence", e5[e5.manageBuyOffer = 12] = "manageBuyOffer", e5[e5.pathPaymentStrictSend = 13] = "pathPaymentStrictSend", e5[e5.createClaimableBalance = 14] = "createClaimableBalance", e5[e5.claimClaimableBalance = 15] = "claimClaimableBalance", e5[e5.beginSponsoringFutureReserves = 16] = "beginSponsoringFutureReserves", e5[e5.endSponsoringFutureReserves = 17] = "endSponsoringFutureReserves", e5[e5.revokeSponsorship = 18] = "revokeSponsorship", e5[e5.clawback = 19] = "clawback", e5[e5.clawbackClaimableBalance = 20] = "clawbackClaimableBalance", e5[e5.setTrustLineFlags = 21] = "setTrustLineFlags", e5[e5.liquidityPoolDeposit = 22] = "liquidityPoolDeposit", e5[e5.liquidityPoolWithdraw = 23] = "liquidityPoolWithdraw", e5[e5.invokeHostFunction = 24] = "invokeHostFunction", e5[e5.bumpFootprintExpiration = 25] = "bumpFootprintExpiration", e5[e5.restoreFootprint = 26] = "restoreFootprint", e5;
          }({});
          e4.OperationResponseTypeI = n3;
          var o3 = function(e5) {
            return e5.TX_FAILED = "tx_failed", e5.TX_BAD_SEQ = "tx_bad_seq", e5.TX_BAD_AUTH = "tx_bad_auth", e5.TX_BAD_AUTH_EXTRA = "tx_bad_auth_extra", e5.TX_FEE_BUMP_INNER_SUCCESS = "tx_fee_bump_inner_success", e5.TX_FEE_BUMP_INNER_FAILED = "tx_fee_bump_inner_failed", e5.TX_NOT_SUPPORTED = "tx_not_supported", e5.TX_SUCCESS = "tx_success", e5.TX_TOO_EARLY = "tx_too_early", e5.TX_TOO_LATE = "tx_too_late", e5.TX_MISSING_OPERATION = "tx_missing_operation", e5.TX_INSUFFICIENT_BALANCE = "tx_insufficient_balance", e5.TX_NO_SOURCE_ACCOUNT = "tx_no_source_account", e5.TX_INSUFFICIENT_FEE = "tx_insufficient_fee", e5.TX_INTERNAL_ERROR = "tx_internal_error", e5;
          }({});
          e4.TransactionFailedResultCodes = o3;
        }(n2 || (n2 = {})), function(e4) {
          var t4 = function(e5) {
            return e5.all = "all", e5.liquidityPools = "liquidity_pool", e5.orderbook = "orderbook", e5;
          }({});
          e4.TradeType = t4;
          n2.OperationResponseType, n2.OperationResponseTypeI;
        }(o2 || (o2 = {}));
        var i = r4(356);
        function a(e4) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, a(e4);
        }
        function s(e4, t4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || function(e5, t5) {
            var r5 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (null != r5) {
              var n3, o3, i2, a2, s2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r5 = r5.call(e5)).next, 0 === t5) {
                  if (Object(r5) !== r5) return;
                  u2 = false;
                } else for (; !(u2 = (n3 = i2.call(r5)).done) && (s2.push(n3.value), s2.length !== t5); u2 = true) ;
              } catch (e6) {
                c2 = true, o3 = e6;
              } finally {
                try {
                  if (!u2 && null != r5.return && (a2 = r5.return(), Object(a2) !== a2)) return;
                } finally {
                  if (c2) throw o3;
                }
              }
              return s2;
            }
          }(e4, t4) || function(e5, t5) {
            if (e5) {
              if ("string" == typeof e5) return u(e5, t5);
              var r5 = {}.toString.call(e5).slice(8, -1);
              return "Object" === r5 && e5.constructor && (r5 = e5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? u(e5, t5) : void 0;
            }
          }(e4, t4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function u(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function c(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, l2(n3.key), n3);
          }
        }
        function l2(e4) {
          var t4 = function(e5, t5) {
            if ("object" != a(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != a(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == a(t4) ? t4 : t4 + "";
        }
        var f, p, h, d = (f = function e4(t4) {
          var r5 = this;
          !function(e5, t5) {
            if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
          }(this, e4), this._baseAccount = new i.Account(t4.account_id, t4.sequence), Object.entries(t4).forEach(function(e5) {
            var t5 = s(e5, 2), n3 = t5[0], o3 = t5[1];
            r5[n3] = o3;
          });
        }, (p = [{ key: "accountId", value: function() {
          return this._baseAccount.accountId();
        } }, { key: "sequenceNumber", value: function() {
          return this._baseAccount.sequenceNumber();
        } }, { key: "incrementSequenceNumber", value: function() {
          this._baseAccount.incrementSequenceNumber(), this.sequence = this._baseAccount.sequenceNumber();
        } }]) && c(f.prototype, p), h && c(f, h), Object.defineProperty(f, "prototype", { writable: false }), f), y = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, m = Math.ceil, v = Math.floor, g = "[BigNumber Error] ", b = g + "Number primitive has more than 15 significant digits: ", w = 1e14, S = 14, E = 9007199254740991, _ = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], k = 1e7, T = 1e9;
        function O(e4) {
          var t4 = 0 | e4;
          return e4 > 0 || e4 === t4 ? t4 : t4 - 1;
        }
        function x(e4) {
          for (var t4, r5, n3 = 1, o3 = e4.length, i2 = e4[0] + ""; n3 < o3; ) {
            for (t4 = e4[n3++] + "", r5 = S - t4.length; r5--; t4 = "0" + t4) ;
            i2 += t4;
          }
          for (o3 = i2.length; 48 === i2.charCodeAt(--o3); ) ;
          return i2.slice(0, o3 + 1 || 1);
        }
        function A(e4, t4) {
          var r5, n3, o3 = e4.c, i2 = t4.c, a2 = e4.s, s2 = t4.s, u2 = e4.e, c2 = t4.e;
          if (!a2 || !s2) return null;
          if (r5 = o3 && !o3[0], n3 = i2 && !i2[0], r5 || n3) return r5 ? n3 ? 0 : -s2 : a2;
          if (a2 != s2) return a2;
          if (r5 = a2 < 0, n3 = u2 == c2, !o3 || !i2) return n3 ? 0 : !o3 ^ r5 ? 1 : -1;
          if (!n3) return u2 > c2 ^ r5 ? 1 : -1;
          for (s2 = (u2 = o3.length) < (c2 = i2.length) ? u2 : c2, a2 = 0; a2 < s2; a2++) if (o3[a2] != i2[a2]) return o3[a2] > i2[a2] ^ r5 ? 1 : -1;
          return u2 == c2 ? 0 : u2 > c2 ^ r5 ? 1 : -1;
        }
        function P(e4, t4, r5, n3) {
          if (e4 < t4 || e4 > r5 || e4 !== v(e4)) throw Error(g + (n3 || "Argument") + ("number" == typeof e4 ? e4 < t4 || e4 > r5 ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e4));
        }
        function R(e4) {
          var t4 = e4.c.length - 1;
          return O(e4.e / S) == t4 && e4.c[t4] % 2 != 0;
        }
        function j(e4, t4) {
          return (e4.length > 1 ? e4.charAt(0) + "." + e4.slice(1) : e4) + (t4 < 0 ? "e" : "e+") + t4;
        }
        function I(e4, t4, r5) {
          var n3, o3;
          if (t4 < 0) {
            for (o3 = r5 + "."; ++t4; o3 += r5) ;
            e4 = o3 + e4;
          } else if (++t4 > (n3 = e4.length)) {
            for (o3 = r5, t4 -= n3; --t4; o3 += r5) ;
            e4 += o3;
          } else t4 < n3 && (e4 = e4.slice(0, t4) + "." + e4.slice(t4));
          return e4;
        }
        var C = function e4(t4) {
          var r5, n3, o3, i2, a2, s2, u2, c2, l3, f2, p2 = H2.prototype = { constructor: H2, toString: null, valueOf: null }, h2 = new H2(1), d2 = 20, C2 = 4, L2 = -7, B2 = 21, N2 = -1e7, U2 = 1e7, M2 = false, D2 = 1, F2 = 0, V2 = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: " ", suffix: "" }, q2 = "0123456789abcdefghijklmnopqrstuvwxyz", K2 = true;
          function H2(e5, t5) {
            var r6, i3, a3, s3, u3, c3, l4, f3, p3 = this;
            if (!(p3 instanceof H2)) return new H2(e5, t5);
            if (null == t5) {
              if (e5 && true === e5._isBigNumber) return p3.s = e5.s, void (!e5.c || e5.e > U2 ? p3.c = p3.e = null : e5.e < N2 ? p3.c = [p3.e = 0] : (p3.e = e5.e, p3.c = e5.c.slice()));
              if ((c3 = "number" == typeof e5) && 0 * e5 == 0) {
                if (p3.s = 1 / e5 < 0 ? (e5 = -e5, -1) : 1, e5 === ~~e5) {
                  for (s3 = 0, u3 = e5; u3 >= 10; u3 /= 10, s3++) ;
                  return void (s3 > U2 ? p3.c = p3.e = null : (p3.e = s3, p3.c = [e5]));
                }
                f3 = String(e5);
              } else {
                if (!y.test(f3 = String(e5))) return o3(p3, f3, c3);
                p3.s = 45 == f3.charCodeAt(0) ? (f3 = f3.slice(1), -1) : 1;
              }
              (s3 = f3.indexOf(".")) > -1 && (f3 = f3.replace(".", "")), (u3 = f3.search(/e/i)) > 0 ? (s3 < 0 && (s3 = u3), s3 += +f3.slice(u3 + 1), f3 = f3.substring(0, u3)) : s3 < 0 && (s3 = f3.length);
            } else {
              if (P(t5, 2, q2.length, "Base"), 10 == t5 && K2) return W2(p3 = new H2(e5), d2 + p3.e + 1, C2);
              if (f3 = String(e5), c3 = "number" == typeof e5) {
                if (0 * e5 != 0) return o3(p3, f3, c3, t5);
                if (p3.s = 1 / e5 < 0 ? (f3 = f3.slice(1), -1) : 1, H2.DEBUG && f3.replace(/^0\.0*|\./, "").length > 15) throw Error(b + e5);
              } else p3.s = 45 === f3.charCodeAt(0) ? (f3 = f3.slice(1), -1) : 1;
              for (r6 = q2.slice(0, t5), s3 = u3 = 0, l4 = f3.length; u3 < l4; u3++) if (r6.indexOf(i3 = f3.charAt(u3)) < 0) {
                if ("." == i3) {
                  if (u3 > s3) {
                    s3 = l4;
                    continue;
                  }
                } else if (!a3 && (f3 == f3.toUpperCase() && (f3 = f3.toLowerCase()) || f3 == f3.toLowerCase() && (f3 = f3.toUpperCase()))) {
                  a3 = true, u3 = -1, s3 = 0;
                  continue;
                }
                return o3(p3, String(e5), c3, t5);
              }
              c3 = false, (s3 = (f3 = n3(f3, t5, 10, p3.s)).indexOf(".")) > -1 ? f3 = f3.replace(".", "") : s3 = f3.length;
            }
            for (u3 = 0; 48 === f3.charCodeAt(u3); u3++) ;
            for (l4 = f3.length; 48 === f3.charCodeAt(--l4); ) ;
            if (f3 = f3.slice(u3, ++l4)) {
              if (l4 -= u3, c3 && H2.DEBUG && l4 > 15 && (e5 > E || e5 !== v(e5))) throw Error(b + p3.s * e5);
              if ((s3 = s3 - u3 - 1) > U2) p3.c = p3.e = null;
              else if (s3 < N2) p3.c = [p3.e = 0];
              else {
                if (p3.e = s3, p3.c = [], u3 = (s3 + 1) % S, s3 < 0 && (u3 += S), u3 < l4) {
                  for (u3 && p3.c.push(+f3.slice(0, u3)), l4 -= S; u3 < l4; ) p3.c.push(+f3.slice(u3, u3 += S));
                  u3 = S - (f3 = f3.slice(u3)).length;
                } else u3 -= l4;
                for (; u3--; f3 += "0") ;
                p3.c.push(+f3);
              }
            } else p3.c = [p3.e = 0];
          }
          function z2(e5, t5, r6, n4) {
            var o4, i3, a3, s3, u3;
            if (null == r6 ? r6 = C2 : P(r6, 0, 8), !e5.c) return e5.toString();
            if (o4 = e5.c[0], a3 = e5.e, null == t5) u3 = x(e5.c), u3 = 1 == n4 || 2 == n4 && (a3 <= L2 || a3 >= B2) ? j(u3, a3) : I(u3, a3, "0");
            else if (i3 = (e5 = W2(new H2(e5), t5, r6)).e, s3 = (u3 = x(e5.c)).length, 1 == n4 || 2 == n4 && (t5 <= i3 || i3 <= L2)) {
              for (; s3 < t5; u3 += "0", s3++) ;
              u3 = j(u3, i3);
            } else if (t5 -= a3, u3 = I(u3, i3, "0"), i3 + 1 > s3) {
              if (--t5 > 0) for (u3 += "."; t5--; u3 += "0") ;
            } else if ((t5 += i3 - s3) > 0) for (i3 + 1 == s3 && (u3 += "."); t5--; u3 += "0") ;
            return e5.s < 0 && o4 ? "-" + u3 : u3;
          }
          function X2(e5, t5) {
            for (var r6, n4, o4 = 1, i3 = new H2(e5[0]); o4 < e5.length; o4++) (!(n4 = new H2(e5[o4])).s || (r6 = A(i3, n4)) === t5 || 0 === r6 && i3.s === t5) && (i3 = n4);
            return i3;
          }
          function G2(e5, t5, r6) {
            for (var n4 = 1, o4 = t5.length; !t5[--o4]; t5.pop()) ;
            for (o4 = t5[0]; o4 >= 10; o4 /= 10, n4++) ;
            return (r6 = n4 + r6 * S - 1) > U2 ? e5.c = e5.e = null : r6 < N2 ? e5.c = [e5.e = 0] : (e5.e = r6, e5.c = t5), e5;
          }
          function W2(e5, t5, r6, n4) {
            var o4, i3, a3, s3, u3, c3, l4, f3 = e5.c, p3 = _;
            if (f3) {
              e: {
                for (o4 = 1, s3 = f3[0]; s3 >= 10; s3 /= 10, o4++) ;
                if ((i3 = t5 - o4) < 0) i3 += S, a3 = t5, u3 = f3[c3 = 0], l4 = v(u3 / p3[o4 - a3 - 1] % 10);
                else if ((c3 = m((i3 + 1) / S)) >= f3.length) {
                  if (!n4) break e;
                  for (; f3.length <= c3; f3.push(0)) ;
                  u3 = l4 = 0, o4 = 1, a3 = (i3 %= S) - S + 1;
                } else {
                  for (u3 = s3 = f3[c3], o4 = 1; s3 >= 10; s3 /= 10, o4++) ;
                  l4 = (a3 = (i3 %= S) - S + o4) < 0 ? 0 : v(u3 / p3[o4 - a3 - 1] % 10);
                }
                if (n4 = n4 || t5 < 0 || null != f3[c3 + 1] || (a3 < 0 ? u3 : u3 % p3[o4 - a3 - 1]), n4 = r6 < 4 ? (l4 || n4) && (0 == r6 || r6 == (e5.s < 0 ? 3 : 2)) : l4 > 5 || 5 == l4 && (4 == r6 || n4 || 6 == r6 && (i3 > 0 ? a3 > 0 ? u3 / p3[o4 - a3] : 0 : f3[c3 - 1]) % 10 & 1 || r6 == (e5.s < 0 ? 8 : 7)), t5 < 1 || !f3[0]) return f3.length = 0, n4 ? (t5 -= e5.e + 1, f3[0] = p3[(S - t5 % S) % S], e5.e = -t5 || 0) : f3[0] = e5.e = 0, e5;
                if (0 == i3 ? (f3.length = c3, s3 = 1, c3--) : (f3.length = c3 + 1, s3 = p3[S - i3], f3[c3] = a3 > 0 ? v(u3 / p3[o4 - a3] % p3[a3]) * s3 : 0), n4) for (; ; ) {
                  if (0 == c3) {
                    for (i3 = 1, a3 = f3[0]; a3 >= 10; a3 /= 10, i3++) ;
                    for (a3 = f3[0] += s3, s3 = 1; a3 >= 10; a3 /= 10, s3++) ;
                    i3 != s3 && (e5.e++, f3[0] == w && (f3[0] = 1));
                    break;
                  }
                  if (f3[c3] += s3, f3[c3] != w) break;
                  f3[c3--] = 0, s3 = 1;
                }
                for (i3 = f3.length; 0 === f3[--i3]; f3.pop()) ;
              }
              e5.e > U2 ? e5.c = e5.e = null : e5.e < N2 && (e5.c = [e5.e = 0]);
            }
            return e5;
          }
          function $2(e5) {
            var t5, r6 = e5.e;
            return null === r6 ? e5.toString() : (t5 = x(e5.c), t5 = r6 <= L2 || r6 >= B2 ? j(t5, r6) : I(t5, r6, "0"), e5.s < 0 ? "-" + t5 : t5);
          }
          return H2.clone = e4, H2.ROUND_UP = 0, H2.ROUND_DOWN = 1, H2.ROUND_CEIL = 2, H2.ROUND_FLOOR = 3, H2.ROUND_HALF_UP = 4, H2.ROUND_HALF_DOWN = 5, H2.ROUND_HALF_EVEN = 6, H2.ROUND_HALF_CEIL = 7, H2.ROUND_HALF_FLOOR = 8, H2.EUCLID = 9, H2.config = H2.set = function(e5) {
            var t5, r6;
            if (null != e5) {
              if ("object" != typeof e5) throw Error(g + "Object expected: " + e5);
              if (e5.hasOwnProperty(t5 = "DECIMAL_PLACES") && (P(r6 = e5[t5], 0, T, t5), d2 = r6), e5.hasOwnProperty(t5 = "ROUNDING_MODE") && (P(r6 = e5[t5], 0, 8, t5), C2 = r6), e5.hasOwnProperty(t5 = "EXPONENTIAL_AT") && ((r6 = e5[t5]) && r6.pop ? (P(r6[0], -T, 0, t5), P(r6[1], 0, T, t5), L2 = r6[0], B2 = r6[1]) : (P(r6, -T, T, t5), L2 = -(B2 = r6 < 0 ? -r6 : r6))), e5.hasOwnProperty(t5 = "RANGE")) if ((r6 = e5[t5]) && r6.pop) P(r6[0], -T, -1, t5), P(r6[1], 1, T, t5), N2 = r6[0], U2 = r6[1];
              else {
                if (P(r6, -T, T, t5), !r6) throw Error(g + t5 + " cannot be zero: " + r6);
                N2 = -(U2 = r6 < 0 ? -r6 : r6);
              }
              if (e5.hasOwnProperty(t5 = "CRYPTO")) {
                if ((r6 = e5[t5]) !== !!r6) throw Error(g + t5 + " not true or false: " + r6);
                if (r6) {
                  if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw M2 = !r6, Error(g + "crypto unavailable");
                  M2 = r6;
                } else M2 = r6;
              }
              if (e5.hasOwnProperty(t5 = "MODULO_MODE") && (P(r6 = e5[t5], 0, 9, t5), D2 = r6), e5.hasOwnProperty(t5 = "POW_PRECISION") && (P(r6 = e5[t5], 0, T, t5), F2 = r6), e5.hasOwnProperty(t5 = "FORMAT")) {
                if ("object" != typeof (r6 = e5[t5])) throw Error(g + t5 + " not an object: " + r6);
                V2 = r6;
              }
              if (e5.hasOwnProperty(t5 = "ALPHABET")) {
                if ("string" != typeof (r6 = e5[t5]) || /^.?$|[+\-.\s]|(.).*\1/.test(r6)) throw Error(g + t5 + " invalid: " + r6);
                K2 = "0123456789" == r6.slice(0, 10), q2 = r6;
              }
            }
            return { DECIMAL_PLACES: d2, ROUNDING_MODE: C2, EXPONENTIAL_AT: [L2, B2], RANGE: [N2, U2], CRYPTO: M2, MODULO_MODE: D2, POW_PRECISION: F2, FORMAT: V2, ALPHABET: q2 };
          }, H2.isBigNumber = function(e5) {
            if (!e5 || true !== e5._isBigNumber) return false;
            if (!H2.DEBUG) return true;
            var t5, r6, n4 = e5.c, o4 = e5.e, i3 = e5.s;
            e: if ("[object Array]" == {}.toString.call(n4)) {
              if ((1 === i3 || -1 === i3) && o4 >= -T && o4 <= T && o4 === v(o4)) {
                if (0 === n4[0]) {
                  if (0 === o4 && 1 === n4.length) return true;
                  break e;
                }
                if ((t5 = (o4 + 1) % S) < 1 && (t5 += S), String(n4[0]).length == t5) {
                  for (t5 = 0; t5 < n4.length; t5++) if ((r6 = n4[t5]) < 0 || r6 >= w || r6 !== v(r6)) break e;
                  if (0 !== r6) return true;
                }
              }
            } else if (null === n4 && null === o4 && (null === i3 || 1 === i3 || -1 === i3)) return true;
            throw Error(g + "Invalid BigNumber: " + e5);
          }, H2.maximum = H2.max = function() {
            return X2(arguments, -1);
          }, H2.minimum = H2.min = function() {
            return X2(arguments, 1);
          }, H2.random = (i2 = 9007199254740992, a2 = Math.random() * i2 & 2097151 ? function() {
            return v(Math.random() * i2);
          } : function() {
            return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
          }, function(e5) {
            var t5, r6, n4, o4, i3, s3 = 0, u3 = [], c3 = new H2(h2);
            if (null == e5 ? e5 = d2 : P(e5, 0, T), o4 = m(e5 / S), M2) if (crypto.getRandomValues) {
              for (t5 = crypto.getRandomValues(new Uint32Array(o4 *= 2)); s3 < o4; ) (i3 = 131072 * t5[s3] + (t5[s3 + 1] >>> 11)) >= 9e15 ? (r6 = crypto.getRandomValues(new Uint32Array(2)), t5[s3] = r6[0], t5[s3 + 1] = r6[1]) : (u3.push(i3 % 1e14), s3 += 2);
              s3 = o4 / 2;
            } else {
              if (!crypto.randomBytes) throw M2 = false, Error(g + "crypto unavailable");
              for (t5 = crypto.randomBytes(o4 *= 7); s3 < o4; ) (i3 = 281474976710656 * (31 & t5[s3]) + 1099511627776 * t5[s3 + 1] + 4294967296 * t5[s3 + 2] + 16777216 * t5[s3 + 3] + (t5[s3 + 4] << 16) + (t5[s3 + 5] << 8) + t5[s3 + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t5, s3) : (u3.push(i3 % 1e14), s3 += 7);
              s3 = o4 / 7;
            }
            if (!M2) for (; s3 < o4; ) (i3 = a2()) < 9e15 && (u3[s3++] = i3 % 1e14);
            for (o4 = u3[--s3], e5 %= S, o4 && e5 && (i3 = _[S - e5], u3[s3] = v(o4 / i3) * i3); 0 === u3[s3]; u3.pop(), s3--) ;
            if (s3 < 0) u3 = [n4 = 0];
            else {
              for (n4 = -1; 0 === u3[0]; u3.splice(0, 1), n4 -= S) ;
              for (s3 = 1, i3 = u3[0]; i3 >= 10; i3 /= 10, s3++) ;
              s3 < S && (n4 -= S - s3);
            }
            return c3.e = n4, c3.c = u3, c3;
          }), H2.sum = function() {
            for (var e5 = 1, t5 = arguments, r6 = new H2(t5[0]); e5 < t5.length; ) r6 = r6.plus(t5[e5++]);
            return r6;
          }, n3 = /* @__PURE__ */ function() {
            var e5 = "0123456789";
            function t5(e6, t6, r6, n4) {
              for (var o4, i3, a3 = [0], s3 = 0, u3 = e6.length; s3 < u3; ) {
                for (i3 = a3.length; i3--; a3[i3] *= t6) ;
                for (a3[0] += n4.indexOf(e6.charAt(s3++)), o4 = 0; o4 < a3.length; o4++) a3[o4] > r6 - 1 && (null == a3[o4 + 1] && (a3[o4 + 1] = 0), a3[o4 + 1] += a3[o4] / r6 | 0, a3[o4] %= r6);
              }
              return a3.reverse();
            }
            return function(n4, o4, i3, a3, s3) {
              var u3, c3, l4, f3, p3, h3, y2, m2, v2 = n4.indexOf("."), g2 = d2, b2 = C2;
              for (v2 >= 0 && (f3 = F2, F2 = 0, n4 = n4.replace(".", ""), h3 = (m2 = new H2(o4)).pow(n4.length - v2), F2 = f3, m2.c = t5(I(x(h3.c), h3.e, "0"), 10, i3, e5), m2.e = m2.c.length), l4 = f3 = (y2 = t5(n4, o4, i3, s3 ? (u3 = q2, e5) : (u3 = e5, q2))).length; 0 == y2[--f3]; y2.pop()) ;
              if (!y2[0]) return u3.charAt(0);
              if (v2 < 0 ? --l4 : (h3.c = y2, h3.e = l4, h3.s = a3, y2 = (h3 = r5(h3, m2, g2, b2, i3)).c, p3 = h3.r, l4 = h3.e), v2 = y2[c3 = l4 + g2 + 1], f3 = i3 / 2, p3 = p3 || c3 < 0 || null != y2[c3 + 1], p3 = b2 < 4 ? (null != v2 || p3) && (0 == b2 || b2 == (h3.s < 0 ? 3 : 2)) : v2 > f3 || v2 == f3 && (4 == b2 || p3 || 6 == b2 && 1 & y2[c3 - 1] || b2 == (h3.s < 0 ? 8 : 7)), c3 < 1 || !y2[0]) n4 = p3 ? I(u3.charAt(1), -g2, u3.charAt(0)) : u3.charAt(0);
              else {
                if (y2.length = c3, p3) for (--i3; ++y2[--c3] > i3; ) y2[c3] = 0, c3 || (++l4, y2 = [1].concat(y2));
                for (f3 = y2.length; !y2[--f3]; ) ;
                for (v2 = 0, n4 = ""; v2 <= f3; n4 += u3.charAt(y2[v2++])) ;
                n4 = I(n4, l4, u3.charAt(0));
              }
              return n4;
            };
          }(), r5 = /* @__PURE__ */ function() {
            function e5(e6, t6, r7) {
              var n4, o4, i3, a3, s3 = 0, u3 = e6.length, c3 = t6 % k, l4 = t6 / k | 0;
              for (e6 = e6.slice(); u3--; ) s3 = ((o4 = c3 * (i3 = e6[u3] % k) + (n4 = l4 * i3 + (a3 = e6[u3] / k | 0) * c3) % k * k + s3) / r7 | 0) + (n4 / k | 0) + l4 * a3, e6[u3] = o4 % r7;
              return s3 && (e6 = [s3].concat(e6)), e6;
            }
            function t5(e6, t6, r7, n4) {
              var o4, i3;
              if (r7 != n4) i3 = r7 > n4 ? 1 : -1;
              else for (o4 = i3 = 0; o4 < r7; o4++) if (e6[o4] != t6[o4]) {
                i3 = e6[o4] > t6[o4] ? 1 : -1;
                break;
              }
              return i3;
            }
            function r6(e6, t6, r7, n4) {
              for (var o4 = 0; r7--; ) e6[r7] -= o4, o4 = e6[r7] < t6[r7] ? 1 : 0, e6[r7] = o4 * n4 + e6[r7] - t6[r7];
              for (; !e6[0] && e6.length > 1; e6.splice(0, 1)) ;
            }
            return function(n4, o4, i3, a3, s3) {
              var u3, c3, l4, f3, p3, h3, d3, y2, m2, g2, b2, E2, _2, k2, T2, x2, A2, P2 = n4.s == o4.s ? 1 : -1, R2 = n4.c, j2 = o4.c;
              if (!(R2 && R2[0] && j2 && j2[0])) return new H2(n4.s && o4.s && (R2 ? !j2 || R2[0] != j2[0] : j2) ? R2 && 0 == R2[0] || !j2 ? 0 * P2 : P2 / 0 : NaN);
              for (m2 = (y2 = new H2(P2)).c = [], P2 = i3 + (c3 = n4.e - o4.e) + 1, s3 || (s3 = w, c3 = O(n4.e / S) - O(o4.e / S), P2 = P2 / S | 0), l4 = 0; j2[l4] == (R2[l4] || 0); l4++) ;
              if (j2[l4] > (R2[l4] || 0) && c3--, P2 < 0) m2.push(1), f3 = true;
              else {
                for (k2 = R2.length, x2 = j2.length, l4 = 0, P2 += 2, (p3 = v(s3 / (j2[0] + 1))) > 1 && (j2 = e5(j2, p3, s3), R2 = e5(R2, p3, s3), x2 = j2.length, k2 = R2.length), _2 = x2, b2 = (g2 = R2.slice(0, x2)).length; b2 < x2; g2[b2++] = 0) ;
                A2 = j2.slice(), A2 = [0].concat(A2), T2 = j2[0], j2[1] >= s3 / 2 && T2++;
                do {
                  if (p3 = 0, (u3 = t5(j2, g2, x2, b2)) < 0) {
                    if (E2 = g2[0], x2 != b2 && (E2 = E2 * s3 + (g2[1] || 0)), (p3 = v(E2 / T2)) > 1) for (p3 >= s3 && (p3 = s3 - 1), d3 = (h3 = e5(j2, p3, s3)).length, b2 = g2.length; 1 == t5(h3, g2, d3, b2); ) p3--, r6(h3, x2 < d3 ? A2 : j2, d3, s3), d3 = h3.length, u3 = 1;
                    else 0 == p3 && (u3 = p3 = 1), d3 = (h3 = j2.slice()).length;
                    if (d3 < b2 && (h3 = [0].concat(h3)), r6(g2, h3, b2, s3), b2 = g2.length, -1 == u3) for (; t5(j2, g2, x2, b2) < 1; ) p3++, r6(g2, x2 < b2 ? A2 : j2, b2, s3), b2 = g2.length;
                  } else 0 === u3 && (p3++, g2 = [0]);
                  m2[l4++] = p3, g2[0] ? g2[b2++] = R2[_2] || 0 : (g2 = [R2[_2]], b2 = 1);
                } while ((_2++ < k2 || null != g2[0]) && P2--);
                f3 = null != g2[0], m2[0] || m2.splice(0, 1);
              }
              if (s3 == w) {
                for (l4 = 1, P2 = m2[0]; P2 >= 10; P2 /= 10, l4++) ;
                W2(y2, i3 + (y2.e = l4 + c3 * S - 1) + 1, a3, f3);
              } else y2.e = c3, y2.r = +f3;
              return y2;
            };
          }(), s2 = /^(-?)0([xbo])(?=\w[\w.]*$)/i, u2 = /^([^.]+)\.$/, c2 = /^\.([^.]+)$/, l3 = /^-?(Infinity|NaN)$/, f2 = /^\s*\+(?=[\w.])|^\s+|\s+$/g, o3 = function(e5, t5, r6, n4) {
            var o4, i3 = r6 ? t5 : t5.replace(f2, "");
            if (l3.test(i3)) e5.s = isNaN(i3) ? null : i3 < 0 ? -1 : 1;
            else {
              if (!r6 && (i3 = i3.replace(s2, function(e6, t6, r7) {
                return o4 = "x" == (r7 = r7.toLowerCase()) ? 16 : "b" == r7 ? 2 : 8, n4 && n4 != o4 ? e6 : t6;
              }), n4 && (o4 = n4, i3 = i3.replace(u2, "$1").replace(c2, "0.$1")), t5 != i3)) return new H2(i3, o4);
              if (H2.DEBUG) throw Error(g + "Not a" + (n4 ? " base " + n4 : "") + " number: " + t5);
              e5.s = null;
            }
            e5.c = e5.e = null;
          }, p2.absoluteValue = p2.abs = function() {
            var e5 = new H2(this);
            return e5.s < 0 && (e5.s = 1), e5;
          }, p2.comparedTo = function(e5, t5) {
            return A(this, new H2(e5, t5));
          }, p2.decimalPlaces = p2.dp = function(e5, t5) {
            var r6, n4, o4, i3 = this;
            if (null != e5) return P(e5, 0, T), null == t5 ? t5 = C2 : P(t5, 0, 8), W2(new H2(i3), e5 + i3.e + 1, t5);
            if (!(r6 = i3.c)) return null;
            if (n4 = ((o4 = r6.length - 1) - O(this.e / S)) * S, o4 = r6[o4]) for (; o4 % 10 == 0; o4 /= 10, n4--) ;
            return n4 < 0 && (n4 = 0), n4;
          }, p2.dividedBy = p2.div = function(e5, t5) {
            return r5(this, new H2(e5, t5), d2, C2);
          }, p2.dividedToIntegerBy = p2.idiv = function(e5, t5) {
            return r5(this, new H2(e5, t5), 0, 1);
          }, p2.exponentiatedBy = p2.pow = function(e5, t5) {
            var r6, n4, o4, i3, a3, s3, u3, c3, l4 = this;
            if ((e5 = new H2(e5)).c && !e5.isInteger()) throw Error(g + "Exponent not an integer: " + $2(e5));
            if (null != t5 && (t5 = new H2(t5)), a3 = e5.e > 14, !l4.c || !l4.c[0] || 1 == l4.c[0] && !l4.e && 1 == l4.c.length || !e5.c || !e5.c[0]) return c3 = new H2(Math.pow(+$2(l4), a3 ? e5.s * (2 - R(e5)) : +$2(e5))), t5 ? c3.mod(t5) : c3;
            if (s3 = e5.s < 0, t5) {
              if (t5.c ? !t5.c[0] : !t5.s) return new H2(NaN);
              (n4 = !s3 && l4.isInteger() && t5.isInteger()) && (l4 = l4.mod(t5));
            } else {
              if (e5.e > 9 && (l4.e > 0 || l4.e < -1 || (0 == l4.e ? l4.c[0] > 1 || a3 && l4.c[1] >= 24e7 : l4.c[0] < 8e13 || a3 && l4.c[0] <= 9999975e7))) return i3 = l4.s < 0 && R(e5) ? -0 : 0, l4.e > -1 && (i3 = 1 / i3), new H2(s3 ? 1 / i3 : i3);
              F2 && (i3 = m(F2 / S + 2));
            }
            for (a3 ? (r6 = new H2(0.5), s3 && (e5.s = 1), u3 = R(e5)) : u3 = (o4 = Math.abs(+$2(e5))) % 2, c3 = new H2(h2); ; ) {
              if (u3) {
                if (!(c3 = c3.times(l4)).c) break;
                i3 ? c3.c.length > i3 && (c3.c.length = i3) : n4 && (c3 = c3.mod(t5));
              }
              if (o4) {
                if (0 === (o4 = v(o4 / 2))) break;
                u3 = o4 % 2;
              } else if (W2(e5 = e5.times(r6), e5.e + 1, 1), e5.e > 14) u3 = R(e5);
              else {
                if (0 === (o4 = +$2(e5))) break;
                u3 = o4 % 2;
              }
              l4 = l4.times(l4), i3 ? l4.c && l4.c.length > i3 && (l4.c.length = i3) : n4 && (l4 = l4.mod(t5));
            }
            return n4 ? c3 : (s3 && (c3 = h2.div(c3)), t5 ? c3.mod(t5) : i3 ? W2(c3, F2, C2, void 0) : c3);
          }, p2.integerValue = function(e5) {
            var t5 = new H2(this);
            return null == e5 ? e5 = C2 : P(e5, 0, 8), W2(t5, t5.e + 1, e5);
          }, p2.isEqualTo = p2.eq = function(e5, t5) {
            return 0 === A(this, new H2(e5, t5));
          }, p2.isFinite = function() {
            return !!this.c;
          }, p2.isGreaterThan = p2.gt = function(e5, t5) {
            return A(this, new H2(e5, t5)) > 0;
          }, p2.isGreaterThanOrEqualTo = p2.gte = function(e5, t5) {
            return 1 === (t5 = A(this, new H2(e5, t5))) || 0 === t5;
          }, p2.isInteger = function() {
            return !!this.c && O(this.e / S) > this.c.length - 2;
          }, p2.isLessThan = p2.lt = function(e5, t5) {
            return A(this, new H2(e5, t5)) < 0;
          }, p2.isLessThanOrEqualTo = p2.lte = function(e5, t5) {
            return -1 === (t5 = A(this, new H2(e5, t5))) || 0 === t5;
          }, p2.isNaN = function() {
            return !this.s;
          }, p2.isNegative = function() {
            return this.s < 0;
          }, p2.isPositive = function() {
            return this.s > 0;
          }, p2.isZero = function() {
            return !!this.c && 0 == this.c[0];
          }, p2.minus = function(e5, t5) {
            var r6, n4, o4, i3, a3 = this, s3 = a3.s;
            if (t5 = (e5 = new H2(e5, t5)).s, !s3 || !t5) return new H2(NaN);
            if (s3 != t5) return e5.s = -t5, a3.plus(e5);
            var u3 = a3.e / S, c3 = e5.e / S, l4 = a3.c, f3 = e5.c;
            if (!u3 || !c3) {
              if (!l4 || !f3) return l4 ? (e5.s = -t5, e5) : new H2(f3 ? a3 : NaN);
              if (!l4[0] || !f3[0]) return f3[0] ? (e5.s = -t5, e5) : new H2(l4[0] ? a3 : 3 == C2 ? -0 : 0);
            }
            if (u3 = O(u3), c3 = O(c3), l4 = l4.slice(), s3 = u3 - c3) {
              for ((i3 = s3 < 0) ? (s3 = -s3, o4 = l4) : (c3 = u3, o4 = f3), o4.reverse(), t5 = s3; t5--; o4.push(0)) ;
              o4.reverse();
            } else for (n4 = (i3 = (s3 = l4.length) < (t5 = f3.length)) ? s3 : t5, s3 = t5 = 0; t5 < n4; t5++) if (l4[t5] != f3[t5]) {
              i3 = l4[t5] < f3[t5];
              break;
            }
            if (i3 && (o4 = l4, l4 = f3, f3 = o4, e5.s = -e5.s), (t5 = (n4 = f3.length) - (r6 = l4.length)) > 0) for (; t5--; l4[r6++] = 0) ;
            for (t5 = w - 1; n4 > s3; ) {
              if (l4[--n4] < f3[n4]) {
                for (r6 = n4; r6 && !l4[--r6]; l4[r6] = t5) ;
                --l4[r6], l4[n4] += w;
              }
              l4[n4] -= f3[n4];
            }
            for (; 0 == l4[0]; l4.splice(0, 1), --c3) ;
            return l4[0] ? G2(e5, l4, c3) : (e5.s = 3 == C2 ? -1 : 1, e5.c = [e5.e = 0], e5);
          }, p2.modulo = p2.mod = function(e5, t5) {
            var n4, o4, i3 = this;
            return e5 = new H2(e5, t5), !i3.c || !e5.s || e5.c && !e5.c[0] ? new H2(NaN) : !e5.c || i3.c && !i3.c[0] ? new H2(i3) : (9 == D2 ? (o4 = e5.s, e5.s = 1, n4 = r5(i3, e5, 0, 3), e5.s = o4, n4.s *= o4) : n4 = r5(i3, e5, 0, D2), (e5 = i3.minus(n4.times(e5))).c[0] || 1 != D2 || (e5.s = i3.s), e5);
          }, p2.multipliedBy = p2.times = function(e5, t5) {
            var r6, n4, o4, i3, a3, s3, u3, c3, l4, f3, p3, h3, d3, y2, m2, v2 = this, g2 = v2.c, b2 = (e5 = new H2(e5, t5)).c;
            if (!(g2 && b2 && g2[0] && b2[0])) return !v2.s || !e5.s || g2 && !g2[0] && !b2 || b2 && !b2[0] && !g2 ? e5.c = e5.e = e5.s = null : (e5.s *= v2.s, g2 && b2 ? (e5.c = [0], e5.e = 0) : e5.c = e5.e = null), e5;
            for (n4 = O(v2.e / S) + O(e5.e / S), e5.s *= v2.s, (u3 = g2.length) < (f3 = b2.length) && (d3 = g2, g2 = b2, b2 = d3, o4 = u3, u3 = f3, f3 = o4), o4 = u3 + f3, d3 = []; o4--; d3.push(0)) ;
            for (y2 = w, m2 = k, o4 = f3; --o4 >= 0; ) {
              for (r6 = 0, p3 = b2[o4] % m2, h3 = b2[o4] / m2 | 0, i3 = o4 + (a3 = u3); i3 > o4; ) r6 = ((c3 = p3 * (c3 = g2[--a3] % m2) + (s3 = h3 * c3 + (l4 = g2[a3] / m2 | 0) * p3) % m2 * m2 + d3[i3] + r6) / y2 | 0) + (s3 / m2 | 0) + h3 * l4, d3[i3--] = c3 % y2;
              d3[i3] = r6;
            }
            return r6 ? ++n4 : d3.splice(0, 1), G2(e5, d3, n4);
          }, p2.negated = function() {
            var e5 = new H2(this);
            return e5.s = -e5.s || null, e5;
          }, p2.plus = function(e5, t5) {
            var r6, n4 = this, o4 = n4.s;
            if (t5 = (e5 = new H2(e5, t5)).s, !o4 || !t5) return new H2(NaN);
            if (o4 != t5) return e5.s = -t5, n4.minus(e5);
            var i3 = n4.e / S, a3 = e5.e / S, s3 = n4.c, u3 = e5.c;
            if (!i3 || !a3) {
              if (!s3 || !u3) return new H2(o4 / 0);
              if (!s3[0] || !u3[0]) return u3[0] ? e5 : new H2(s3[0] ? n4 : 0 * o4);
            }
            if (i3 = O(i3), a3 = O(a3), s3 = s3.slice(), o4 = i3 - a3) {
              for (o4 > 0 ? (a3 = i3, r6 = u3) : (o4 = -o4, r6 = s3), r6.reverse(); o4--; r6.push(0)) ;
              r6.reverse();
            }
            for ((o4 = s3.length) - (t5 = u3.length) < 0 && (r6 = u3, u3 = s3, s3 = r6, t5 = o4), o4 = 0; t5; ) o4 = (s3[--t5] = s3[t5] + u3[t5] + o4) / w | 0, s3[t5] = w === s3[t5] ? 0 : s3[t5] % w;
            return o4 && (s3 = [o4].concat(s3), ++a3), G2(e5, s3, a3);
          }, p2.precision = p2.sd = function(e5, t5) {
            var r6, n4, o4, i3 = this;
            if (null != e5 && e5 !== !!e5) return P(e5, 1, T), null == t5 ? t5 = C2 : P(t5, 0, 8), W2(new H2(i3), e5, t5);
            if (!(r6 = i3.c)) return null;
            if (n4 = (o4 = r6.length - 1) * S + 1, o4 = r6[o4]) {
              for (; o4 % 10 == 0; o4 /= 10, n4--) ;
              for (o4 = r6[0]; o4 >= 10; o4 /= 10, n4++) ;
            }
            return e5 && i3.e + 1 > n4 && (n4 = i3.e + 1), n4;
          }, p2.shiftedBy = function(e5) {
            return P(e5, -9007199254740991, E), this.times("1e" + e5);
          }, p2.squareRoot = p2.sqrt = function() {
            var e5, t5, n4, o4, i3, a3 = this, s3 = a3.c, u3 = a3.s, c3 = a3.e, l4 = d2 + 4, f3 = new H2("0.5");
            if (1 !== u3 || !s3 || !s3[0]) return new H2(!u3 || u3 < 0 && (!s3 || s3[0]) ? NaN : s3 ? a3 : 1 / 0);
            if (0 == (u3 = Math.sqrt(+$2(a3))) || u3 == 1 / 0 ? (((t5 = x(s3)).length + c3) % 2 == 0 && (t5 += "0"), u3 = Math.sqrt(+t5), c3 = O((c3 + 1) / 2) - (c3 < 0 || c3 % 2), n4 = new H2(t5 = u3 == 1 / 0 ? "5e" + c3 : (t5 = u3.toExponential()).slice(0, t5.indexOf("e") + 1) + c3)) : n4 = new H2(u3 + ""), n4.c[0]) {
              for ((u3 = (c3 = n4.e) + l4) < 3 && (u3 = 0); ; ) if (i3 = n4, n4 = f3.times(i3.plus(r5(a3, i3, l4, 1))), x(i3.c).slice(0, u3) === (t5 = x(n4.c)).slice(0, u3)) {
                if (n4.e < c3 && --u3, "9999" != (t5 = t5.slice(u3 - 3, u3 + 1)) && (o4 || "4999" != t5)) {
                  +t5 && (+t5.slice(1) || "5" != t5.charAt(0)) || (W2(n4, n4.e + d2 + 2, 1), e5 = !n4.times(n4).eq(a3));
                  break;
                }
                if (!o4 && (W2(i3, i3.e + d2 + 2, 0), i3.times(i3).eq(a3))) {
                  n4 = i3;
                  break;
                }
                l4 += 4, u3 += 4, o4 = 1;
              }
            }
            return W2(n4, n4.e + d2 + 1, C2, e5);
          }, p2.toExponential = function(e5, t5) {
            return null != e5 && (P(e5, 0, T), e5++), z2(this, e5, t5, 1);
          }, p2.toFixed = function(e5, t5) {
            return null != e5 && (P(e5, 0, T), e5 = e5 + this.e + 1), z2(this, e5, t5);
          }, p2.toFormat = function(e5, t5, r6) {
            var n4, o4 = this;
            if (null == r6) null != e5 && t5 && "object" == typeof t5 ? (r6 = t5, t5 = null) : e5 && "object" == typeof e5 ? (r6 = e5, e5 = t5 = null) : r6 = V2;
            else if ("object" != typeof r6) throw Error(g + "Argument not an object: " + r6);
            if (n4 = o4.toFixed(e5, t5), o4.c) {
              var i3, a3 = n4.split("."), s3 = +r6.groupSize, u3 = +r6.secondaryGroupSize, c3 = r6.groupSeparator || "", l4 = a3[0], f3 = a3[1], p3 = o4.s < 0, h3 = p3 ? l4.slice(1) : l4, d3 = h3.length;
              if (u3 && (i3 = s3, s3 = u3, u3 = i3, d3 -= i3), s3 > 0 && d3 > 0) {
                for (i3 = d3 % s3 || s3, l4 = h3.substr(0, i3); i3 < d3; i3 += s3) l4 += c3 + h3.substr(i3, s3);
                u3 > 0 && (l4 += c3 + h3.slice(i3)), p3 && (l4 = "-" + l4);
              }
              n4 = f3 ? l4 + (r6.decimalSeparator || "") + ((u3 = +r6.fractionGroupSize) ? f3.replace(new RegExp("\\d{" + u3 + "}\\B", "g"), "$&" + (r6.fractionGroupSeparator || "")) : f3) : l4;
            }
            return (r6.prefix || "") + n4 + (r6.suffix || "");
          }, p2.toFraction = function(e5) {
            var t5, n4, o4, i3, a3, s3, u3, c3, l4, f3, p3, d3, y2 = this, m2 = y2.c;
            if (null != e5 && (!(u3 = new H2(e5)).isInteger() && (u3.c || 1 !== u3.s) || u3.lt(h2))) throw Error(g + "Argument " + (u3.isInteger() ? "out of range: " : "not an integer: ") + $2(u3));
            if (!m2) return new H2(y2);
            for (t5 = new H2(h2), l4 = n4 = new H2(h2), o4 = c3 = new H2(h2), d3 = x(m2), a3 = t5.e = d3.length - y2.e - 1, t5.c[0] = _[(s3 = a3 % S) < 0 ? S + s3 : s3], e5 = !e5 || u3.comparedTo(t5) > 0 ? a3 > 0 ? t5 : l4 : u3, s3 = U2, U2 = 1 / 0, u3 = new H2(d3), c3.c[0] = 0; f3 = r5(u3, t5, 0, 1), 1 != (i3 = n4.plus(f3.times(o4))).comparedTo(e5); ) n4 = o4, o4 = i3, l4 = c3.plus(f3.times(i3 = l4)), c3 = i3, t5 = u3.minus(f3.times(i3 = t5)), u3 = i3;
            return i3 = r5(e5.minus(n4), o4, 0, 1), c3 = c3.plus(i3.times(l4)), n4 = n4.plus(i3.times(o4)), c3.s = l4.s = y2.s, p3 = r5(l4, o4, a3 *= 2, C2).minus(y2).abs().comparedTo(r5(c3, n4, a3, C2).minus(y2).abs()) < 1 ? [l4, o4] : [c3, n4], U2 = s3, p3;
          }, p2.toNumber = function() {
            return +$2(this);
          }, p2.toPrecision = function(e5, t5) {
            return null != e5 && P(e5, 1, T), z2(this, e5, t5, 2);
          }, p2.toString = function(e5) {
            var t5, r6 = this, o4 = r6.s, i3 = r6.e;
            return null === i3 ? o4 ? (t5 = "Infinity", o4 < 0 && (t5 = "-" + t5)) : t5 = "NaN" : (null == e5 ? t5 = i3 <= L2 || i3 >= B2 ? j(x(r6.c), i3) : I(x(r6.c), i3, "0") : 10 === e5 && K2 ? t5 = I(x((r6 = W2(new H2(r6), d2 + i3 + 1, C2)).c), r6.e, "0") : (P(e5, 2, q2.length, "Base"), t5 = n3(I(x(r6.c), i3, "0"), 10, e5, o4, true)), o4 < 0 && r6.c[0] && (t5 = "-" + t5)), t5;
          }, p2.valueOf = p2.toJSON = function() {
            return $2(this);
          }, p2._isBigNumber = true, p2[Symbol.toStringTag] = "BigNumber", p2[Symbol.for("nodejs.util.inspect.custom")] = p2.valueOf, null != t4 && H2.set(t4), H2;
        }();
        const L = C;
        var B = r4(4193), N = r4.n(B), U = r4(9127), M = r4.n(U), D = r4(5885), F = r4(1083), V = r4(8330).rE, q = {}, K = F.A.create({ headers: { "X-Client-Name": "js-stellar-sdk", "X-Client-Version": V } });
        function H(e4) {
          return Math.floor(e4 / 1e3);
        }
        K.interceptors.response.use(function(e4) {
          var t4 = N()(e4.config.url).hostname(), r5 = H(Date.parse(e4.headers.date)), n3 = H((/* @__PURE__ */ new Date()).getTime());
          return isNaN(r5) || (q[t4] = { serverTime: r5, localTimeRecorded: n3 }), e4;
        });
        const z = K;
        function X(e4) {
          var t4 = q[e4];
          if (!t4 || !t4.localTimeRecorded || !t4.serverTime) return null;
          var r5 = t4.serverTime, n3 = t4.localTimeRecorded, o3 = H((/* @__PURE__ */ new Date()).getTime());
          return o3 - n3 > 300 ? null : o3 - n3 + r5;
        }
        function G(e4) {
          return G = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, G(e4);
        }
        var W, $, Q;
        function Y() {
          Y = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof v2 ? t5 : v2, a3 = Object.create(i3.prototype), s3 = new R2(n4 || []);
            return o3(a3, "_invoke", { value: O2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", m2 = {};
          function v2() {
          }
          function g2() {
          }
          function b2() {
          }
          var w2 = {};
          c2(w2, a2, function() {
            return this;
          });
          var S2 = Object.getPrototypeOf, E2 = S2 && S2(S2(j2([])));
          E2 && E2 !== r5 && n3.call(E2, a2) && (w2 = E2);
          var _2 = b2.prototype = v2.prototype = Object.create(w2);
          function k2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function T2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == G(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function O2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = x2(s3, n4);
                  if (u3) {
                    if (u3 === m2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === m2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function x2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, x2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), m2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, m2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, m2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m2);
          }
          function A2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function P2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function R2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(A2, this), this.reset(true);
          }
          function j2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(G(t5) + " is not iterable");
          }
          return g2.prototype = b2, o3(_2, "constructor", { value: b2, configurable: true }), o3(b2, "constructor", { value: g2, configurable: true }), g2.displayName = c2(b2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === g2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, b2) : (e5.__proto__ = b2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(_2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, k2(T2.prototype), c2(T2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = T2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new T2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, k2(_2), c2(_2, u2, "Generator"), c2(_2, a2, function() {
            return this;
          }), c2(_2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = j2, R2.prototype = { constructor: R2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(P2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, m2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), P2(r6), m2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  P2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: j2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), m2;
          } }, t4;
        }
        function J(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function Z(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                J(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                J(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function ee(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, te(n3.key), n3);
          }
        }
        function te(e4) {
          var t4 = function(e5, t5) {
            if ("object" != G(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != G(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == G(t4) ? t4 : t4 + "";
        }
        var re, ne, oe = ["transaction"], ie = r4.g, ae = null !== (W = null !== ($ = ie.EventSource) && void 0 !== $ ? $ : null === (Q = ie.window) || void 0 === Q ? void 0 : Q.EventSource) && void 0 !== W ? W : r4(1731), se = function(e4, t4, r5) {
          return t4 && ee(e4.prototype, t4), r5 && ee(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }(function e4(t4) {
          var r5 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
          !function(e5, t5) {
            if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
          }(this, e4), this.url = t4.clone(), this.filter = [], this.originalSegments = this.url.segment() || [], this.neighborRoot = r5;
        }, [{ key: "call", value: function() {
          var e4 = this;
          return this.checkFilter(), this._sendNormalRequest(this.url).then(function(t4) {
            return e4._parseResponse(t4);
          });
        } }, { key: "stream", value: function() {
          var e4, t4, r5 = this, n3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          this.checkFilter(), this.url.setQuery("X-Client-Name", "js-stellar-sdk"), this.url.setQuery("X-Client-Version", V);
          var o3 = function() {
            t4 = setTimeout(function() {
              var t5;
              null === (t5 = e4) || void 0 === t5 || t5.close(), e4 = i2();
            }, n3.reconnectTimeout || 15e3);
          }, i2 = function i3() {
            try {
              e4 = new ae(r5.url.toString());
            } catch (e5) {
              n3.onerror && n3.onerror(e5);
            }
            if (o3(), !e4) return e4;
            var a2 = false, s2 = function() {
              a2 || (clearTimeout(t4), e4.close(), i3(), a2 = true);
            }, u2 = function(e5) {
              if ("close" !== e5.type) {
                var i4 = e5.data ? r5._parseRecord(JSON.parse(e5.data)) : e5;
                i4.paging_token && r5.url.setQuery("cursor", i4.paging_token), clearTimeout(t4), o3(), void 0 !== n3.onmessage && n3.onmessage(i4);
              } else s2();
            }, c2 = function(e5) {
              n3.onerror && n3.onerror(e5);
            };
            return e4.addEventListener ? (e4.addEventListener("message", u2.bind(r5)), e4.addEventListener("error", c2.bind(r5)), e4.addEventListener("close", s2.bind(r5))) : (e4.onmessage = u2.bind(r5), e4.onerror = c2.bind(r5)), e4;
          };
          return i2(), function() {
            var r6;
            clearTimeout(t4), null === (r6 = e4) || void 0 === r6 || r6.close();
          };
        } }, { key: "cursor", value: function(e4) {
          return this.url.setQuery("cursor", e4), this;
        } }, { key: "limit", value: function(e4) {
          return this.url.setQuery("limit", e4.toString()), this;
        } }, { key: "order", value: function(e4) {
          return this.url.setQuery("order", e4), this;
        } }, { key: "join", value: function(e4) {
          return this.url.setQuery("join", e4), this;
        } }, { key: "forEndpoint", value: function(e4, t4) {
          if ("" === this.neighborRoot) throw new Error("Invalid usage: neighborRoot not set in constructor");
          return this.filter.push([e4, t4, this.neighborRoot]), this;
        } }, { key: "checkFilter", value: function() {
          if (this.filter.length >= 2) throw new D.v7("Too many filters specified", this.filter);
          if (1 === this.filter.length) {
            var e4 = this.originalSegments.concat(this.filter[0]);
            this.url.segment(e4);
          }
        } }, { key: "_requestFnForLink", value: function(e4) {
          var t4 = this;
          return Z(Y().mark(function r5() {
            var n3, o3, i2, a2, s2 = arguments;
            return Y().wrap(function(r6) {
              for (; ; ) switch (r6.prev = r6.next) {
                case 0:
                  return n3 = s2.length > 0 && void 0 !== s2[0] ? s2[0] : {}, e4.templated ? (i2 = M()(e4.href), o3 = N()(i2.expand(n3))) : o3 = N()(e4.href), r6.next = 4, t4._sendNormalRequest(o3);
                case 4:
                  return a2 = r6.sent, r6.abrupt("return", t4._parseResponse(a2));
                case 6:
                case "end":
                  return r6.stop();
              }
            }, r5);
          }));
        } }, { key: "_parseRecord", value: function(e4) {
          var t4 = this;
          if (!e4._links) return e4;
          for (var r5 = function() {
            var r6 = o3[n3], i2 = e4._links[r6], a2 = false;
            if (void 0 !== e4[r6] && (e4["".concat(r6, "_attr")] = e4[r6], a2 = true), a2 && oe.indexOf(r6) >= 0) {
              var s2 = t4._parseRecord(e4[r6]);
              e4[r6] = Z(Y().mark(function e5() {
                return Y().wrap(function(e6) {
                  for (; ; ) switch (e6.prev = e6.next) {
                    case 0:
                      return e6.abrupt("return", s2);
                    case 1:
                    case "end":
                      return e6.stop();
                  }
                }, e5);
              }));
            } else e4[r6] = t4._requestFnForLink(i2);
          }, n3 = 0, o3 = Object.keys(e4._links); n3 < o3.length; n3++) r5();
          return e4;
        } }, { key: "_sendNormalRequest", value: (ne = Z(Y().mark(function e4(t4) {
          var r5;
          return Y().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return "" === (r5 = t4).authority() && (r5 = r5.authority(this.url.authority())), "" === r5.protocol() && (r5 = r5.protocol(this.url.protocol())), e5.abrupt("return", K.get(r5.toString()).then(function(e6) {
                  return e6.data;
                }).catch(this._handleNetworkError));
              case 4:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return ne.apply(this, arguments);
        }) }, { key: "_parseResponse", value: function(e4) {
          return e4._embedded && e4._embedded.records ? this._toCollectionPage(e4) : this._parseRecord(e4);
        } }, { key: "_toCollectionPage", value: function(e4) {
          for (var t4, r5, n3 = this, o3 = 0; o3 < e4._embedded.records.length; o3 += 1) e4._embedded.records[o3] = this._parseRecord(e4._embedded.records[o3]);
          return { records: e4._embedded.records, next: (r5 = Z(Y().mark(function t5() {
            var r6;
            return Y().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return t6.next = 2, n3._sendNormalRequest(N()(e4._links.next.href));
                case 2:
                  return r6 = t6.sent, t6.abrupt("return", n3._toCollectionPage(r6));
                case 4:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function() {
            return r5.apply(this, arguments);
          }), prev: (t4 = Z(Y().mark(function t5() {
            var r6;
            return Y().wrap(function(t6) {
              for (; ; ) switch (t6.prev = t6.next) {
                case 0:
                  return t6.next = 2, n3._sendNormalRequest(N()(e4._links.prev.href));
                case 2:
                  return r6 = t6.sent, t6.abrupt("return", n3._toCollectionPage(r6));
                case 4:
                case "end":
                  return t6.stop();
              }
            }, t5);
          })), function() {
            return t4.apply(this, arguments);
          }) };
        } }, { key: "_handleNetworkError", value: (re = Z(Y().mark(function e4(t4) {
          return Y().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                if (!(t4.response && t4.response.status && t4.response.statusText)) {
                  e5.next = 8;
                  break;
                }
                e5.t0 = t4.response.status, e5.next = 404 === e5.t0 ? 4 : 5;
                break;
              case 4:
                return e5.abrupt("return", Promise.reject(new D.m_(t4.response.statusText, t4.response.data)));
              case 5:
                return e5.abrupt("return", Promise.reject(new D.Dr(t4.response.statusText, t4.response.data)));
              case 6:
                e5.next = 9;
                break;
              case 8:
                return e5.abrupt("return", Promise.reject(new Error(t4.message)));
              case 9:
              case "end":
                return e5.stop();
            }
          }, e4);
        })), function(e4) {
          return re.apply(this, arguments);
        }) }]), ue = r4(8732);
        function ce(e4) {
          return ce = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, ce(e4);
        }
        function le(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, fe(n3.key), n3);
          }
        }
        function fe(e4) {
          var t4 = function(e5, t5) {
            if ("object" != ce(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != ce(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == ce(t4) ? t4 : t4 + "";
        }
        function pe(e4, t4, r5) {
          return t4 = de(t4), function(e5, t5) {
            if (t5 && ("object" == ce(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, he() ? Reflect.construct(t4, r5 || [], de(e4).constructor) : t4.apply(e4, r5));
        }
        function he() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (he = function() {
            return !!e4;
          })();
        }
        function de(e4) {
          return de = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, de(e4);
        }
        function ye(e4, t4) {
          return ye = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, ye(e4, t4);
        }
        var me = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = pe(this, t4, [e5])).url.segment("accounts"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && ye(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && le(e5.prototype, t5), r5 && le(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "accountId", value: function(e5) {
            var t5 = new se(this.url.clone());
            return t5.filter.push([e5]), t5;
          } }, { key: "forSigner", value: function(e5) {
            return this.url.setQuery("signer", e5), this;
          } }, { key: "forAsset", value: function(e5) {
            return this.url.setQuery("asset", "".concat(e5)), this;
          } }, { key: "sponsor", value: function(e5) {
            return this.url.setQuery("sponsor", e5), this;
          } }, { key: "forLiquidityPool", value: function(e5) {
            return this.url.setQuery("liquidity_pool", e5), this;
          } }]);
        }(se);
        function ve(e4) {
          return ve = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, ve(e4);
        }
        function ge(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, be(n3.key), n3);
          }
        }
        function be(e4) {
          var t4 = function(e5, t5) {
            if ("object" != ve(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != ve(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == ve(t4) ? t4 : t4 + "";
        }
        function we(e4, t4, r5) {
          return t4 = Ee(t4), function(e5, t5) {
            if (t5 && ("object" == ve(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Se() ? Reflect.construct(t4, r5 || [], Ee(e4).constructor) : t4.apply(e4, r5));
        }
        function Se() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Se = function() {
            return !!e4;
          })();
        }
        function Ee(e4) {
          return Ee = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, Ee(e4);
        }
        function _e(e4, t4) {
          return _e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, _e(e4, t4);
        }
        var ke = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = we(this, t4, [e5])).url.segment("assets"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && _e(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && ge(e5.prototype, t5), r5 && ge(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "forCode", value: function(e5) {
            return this.url.setQuery("asset_code", e5), this;
          } }, { key: "forIssuer", value: function(e5) {
            return this.url.setQuery("asset_issuer", e5), this;
          } }]);
        }(se);
        function Te(e4) {
          return Te = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Te(e4);
        }
        function Oe(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, xe(n3.key), n3);
          }
        }
        function xe(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Te(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Te(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Te(t4) ? t4 : t4 + "";
        }
        function Ae(e4, t4, r5) {
          return t4 = Re(t4), function(e5, t5) {
            if (t5 && ("object" == Te(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Pe() ? Reflect.construct(t4, r5 || [], Re(e4).constructor) : t4.apply(e4, r5));
        }
        function Pe() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Pe = function() {
            return !!e4;
          })();
        }
        function Re(e4) {
          return Re = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, Re(e4);
        }
        function je(e4, t4) {
          return je = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, je(e4, t4);
        }
        var Ie = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = Ae(this, t4, [e5])).url.segment("claimable_balances"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && je(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && Oe(e5.prototype, t5), r5 && Oe(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "claimableBalance", value: function(e5) {
            var t5 = new se(this.url.clone());
            return t5.filter.push([e5]), t5;
          } }, { key: "sponsor", value: function(e5) {
            return this.url.setQuery("sponsor", e5), this;
          } }, { key: "claimant", value: function(e5) {
            return this.url.setQuery("claimant", e5), this;
          } }, { key: "asset", value: function(e5) {
            return this.url.setQuery("asset", e5.toString()), this;
          } }]);
        }(se);
        function Ce(e4) {
          return Ce = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Ce(e4);
        }
        function Le(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Be(n3.key), n3);
          }
        }
        function Be(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Ce(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Ce(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Ce(t4) ? t4 : t4 + "";
        }
        function Ne(e4, t4, r5) {
          return t4 = Me(t4), function(e5, t5) {
            if (t5 && ("object" == Ce(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Ue() ? Reflect.construct(t4, r5 || [], Me(e4).constructor) : t4.apply(e4, r5));
        }
        function Ue() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Ue = function() {
            return !!e4;
          })();
        }
        function Me(e4) {
          return Me = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, Me(e4);
        }
        function De(e4, t4) {
          return De = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, De(e4, t4);
        }
        var Fe = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = Ne(this, t4, [e5, "effects"])).url.segment("effects"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && De(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && Le(e5.prototype, t5), r5 && Le(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "forAccount", value: function(e5) {
            return this.forEndpoint("accounts", e5);
          } }, { key: "forLedger", value: function(e5) {
            return this.forEndpoint("ledgers", e5.toString());
          } }, { key: "forTransaction", value: function(e5) {
            return this.forEndpoint("transactions", e5);
          } }, { key: "forOperation", value: function(e5) {
            return this.forEndpoint("operations", e5);
          } }, { key: "forLiquidityPool", value: function(e5) {
            return this.forEndpoint("liquidity_pools", e5);
          } }]);
        }(se);
        function Ve(e4) {
          return Ve = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Ve(e4);
        }
        function qe(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Ke(n3.key), n3);
          }
        }
        function Ke(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Ve(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Ve(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Ve(t4) ? t4 : t4 + "";
        }
        function He(e4, t4, r5) {
          return t4 = Xe(t4), function(e5, t5) {
            if (t5 && ("object" == Ve(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, ze() ? Reflect.construct(t4, r5 || [], Xe(e4).constructor) : t4.apply(e4, r5));
        }
        function ze() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (ze = function() {
            return !!e4;
          })();
        }
        function Xe(e4) {
          return Xe = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, Xe(e4);
        }
        function Ge(e4, t4) {
          return Ge = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, Ge(e4, t4);
        }
        var We = function(e4) {
          function t4(e5, r5) {
            var n3;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (n3 = He(this, t4, [e5])).url.segment("friendbot"), n3.url.setQuery("addr", r5), n3;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && Ge(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && qe(e5.prototype, t5), r5 && qe(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4);
        }(se);
        function $e(e4) {
          return $e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, $e(e4);
        }
        function Qe(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Ye(n3.key), n3);
          }
        }
        function Ye(e4) {
          var t4 = function(e5, t5) {
            if ("object" != $e(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != $e(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == $e(t4) ? t4 : t4 + "";
        }
        function Je(e4, t4, r5) {
          return t4 = et(t4), function(e5, t5) {
            if (t5 && ("object" == $e(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Ze() ? Reflect.construct(t4, r5 || [], et(e4).constructor) : t4.apply(e4, r5));
        }
        function Ze() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Ze = function() {
            return !!e4;
          })();
        }
        function et(e4) {
          return et = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, et(e4);
        }
        function tt(e4, t4) {
          return tt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, tt(e4, t4);
        }
        var rt = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = Je(this, t4, [e5])).url.segment("ledgers"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && tt(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && Qe(e5.prototype, t5), r5 && Qe(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "ledger", value: function(e5) {
            return this.filter.push(["ledgers", e5.toString()]), this;
          } }]);
        }(se);
        function nt(e4) {
          return nt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, nt(e4);
        }
        function ot(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, it(n3.key), n3);
          }
        }
        function it(e4) {
          var t4 = function(e5, t5) {
            if ("object" != nt(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != nt(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == nt(t4) ? t4 : t4 + "";
        }
        function at(e4, t4, r5) {
          return t4 = ut(t4), function(e5, t5) {
            if (t5 && ("object" == nt(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, st() ? Reflect.construct(t4, r5 || [], ut(e4).constructor) : t4.apply(e4, r5));
        }
        function st() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (st = function() {
            return !!e4;
          })();
        }
        function ut(e4) {
          return ut = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, ut(e4);
        }
        function ct(e4, t4) {
          return ct = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, ct(e4, t4);
        }
        var lt = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = at(this, t4, [e5])).url.segment("liquidity_pools"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && ct(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && ot(e5.prototype, t5), r5 && ot(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "forAssets", value: function() {
            for (var e5 = arguments.length, t5 = new Array(e5), r5 = 0; r5 < e5; r5++) t5[r5] = arguments[r5];
            var n3 = t5.map(function(e6) {
              return e6.toString();
            }).join(",");
            return this.url.setQuery("reserves", n3), this;
          } }, { key: "forAccount", value: function(e5) {
            return this.url.setQuery("account", e5), this;
          } }, { key: "liquidityPoolId", value: function(e5) {
            if (!e5.match(/[a-fA-F0-9]{64}/)) throw new TypeError("".concat(e5, " does not look like a liquidity pool ID"));
            var t5 = new se(this.url.clone());
            return t5.filter.push([e5.toLowerCase()]), t5;
          } }]);
        }(se);
        function ft(e4) {
          return ft = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, ft(e4);
        }
        function pt(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, ht(n3.key), n3);
          }
        }
        function ht(e4) {
          var t4 = function(e5, t5) {
            if ("object" != ft(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != ft(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == ft(t4) ? t4 : t4 + "";
        }
        function dt(e4, t4, r5) {
          return t4 = mt(t4), function(e5, t5) {
            if (t5 && ("object" == ft(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, yt() ? Reflect.construct(t4, r5 || [], mt(e4).constructor) : t4.apply(e4, r5));
        }
        function yt() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (yt = function() {
            return !!e4;
          })();
        }
        function mt(e4) {
          return mt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, mt(e4);
        }
        function vt(e4, t4) {
          return vt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, vt(e4, t4);
        }
        var gt = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = dt(this, t4, [e5, "offers"])).url.segment("offers"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && vt(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && pt(e5.prototype, t5), r5 && pt(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "offer", value: function(e5) {
            var t5 = new se(this.url.clone());
            return t5.filter.push([e5]), t5;
          } }, { key: "forAccount", value: function(e5) {
            return this.forEndpoint("accounts", e5);
          } }, { key: "buying", value: function(e5) {
            return e5.isNative() ? this.url.setQuery("buying_asset_type", "native") : (this.url.setQuery("buying_asset_type", e5.getAssetType()), this.url.setQuery("buying_asset_code", e5.getCode()), this.url.setQuery("buying_asset_issuer", e5.getIssuer())), this;
          } }, { key: "selling", value: function(e5) {
            return e5.isNative() ? this.url.setQuery("selling_asset_type", "native") : (this.url.setQuery("selling_asset_type", e5.getAssetType()), this.url.setQuery("selling_asset_code", e5.getCode()), this.url.setQuery("selling_asset_issuer", e5.getIssuer())), this;
          } }, { key: "sponsor", value: function(e5) {
            return this.url.setQuery("sponsor", e5), this;
          } }, { key: "seller", value: function(e5) {
            return this.url.setQuery("seller", e5), this;
          } }]);
        }(se);
        function bt(e4) {
          return bt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, bt(e4);
        }
        function wt(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, St(n3.key), n3);
          }
        }
        function St(e4) {
          var t4 = function(e5, t5) {
            if ("object" != bt(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != bt(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == bt(t4) ? t4 : t4 + "";
        }
        function Et(e4, t4, r5) {
          return t4 = kt(t4), function(e5, t5) {
            if (t5 && ("object" == bt(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, _t() ? Reflect.construct(t4, r5 || [], kt(e4).constructor) : t4.apply(e4, r5));
        }
        function _t() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (_t = function() {
            return !!e4;
          })();
        }
        function kt(e4) {
          return kt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, kt(e4);
        }
        function Tt(e4, t4) {
          return Tt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, Tt(e4, t4);
        }
        var Ot = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = Et(this, t4, [e5, "operations"])).url.segment("operations"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && Tt(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && wt(e5.prototype, t5), r5 && wt(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "operation", value: function(e5) {
            var t5 = new se(this.url.clone());
            return t5.filter.push([e5]), t5;
          } }, { key: "forAccount", value: function(e5) {
            return this.forEndpoint("accounts", e5);
          } }, { key: "forClaimableBalance", value: function(e5) {
            return this.forEndpoint("claimable_balances", e5);
          } }, { key: "forLedger", value: function(e5) {
            return this.forEndpoint("ledgers", e5.toString());
          } }, { key: "forTransaction", value: function(e5) {
            return this.forEndpoint("transactions", e5);
          } }, { key: "forLiquidityPool", value: function(e5) {
            return this.forEndpoint("liquidity_pools", e5);
          } }, { key: "includeFailed", value: function(e5) {
            return this.url.setQuery("include_failed", e5.toString()), this;
          } }]);
        }(se);
        function xt(e4) {
          return xt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, xt(e4);
        }
        function At(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Pt(n3.key), n3);
          }
        }
        function Pt(e4) {
          var t4 = function(e5, t5) {
            if ("object" != xt(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != xt(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == xt(t4) ? t4 : t4 + "";
        }
        function Rt(e4, t4, r5) {
          return t4 = It(t4), function(e5, t5) {
            if (t5 && ("object" == xt(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, jt() ? Reflect.construct(t4, r5 || [], It(e4).constructor) : t4.apply(e4, r5));
        }
        function jt() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (jt = function() {
            return !!e4;
          })();
        }
        function It(e4) {
          return It = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, It(e4);
        }
        function Ct(e4, t4) {
          return Ct = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, Ct(e4, t4);
        }
        var Lt = function(e4) {
          function t4(e5, r5, n3) {
            var o3;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (o3 = Rt(this, t4, [e5])).url.segment("order_book"), r5.isNative() ? o3.url.setQuery("selling_asset_type", "native") : (o3.url.setQuery("selling_asset_type", r5.getAssetType()), o3.url.setQuery("selling_asset_code", r5.getCode()), o3.url.setQuery("selling_asset_issuer", r5.getIssuer())), n3.isNative() ? o3.url.setQuery("buying_asset_type", "native") : (o3.url.setQuery("buying_asset_type", n3.getAssetType()), o3.url.setQuery("buying_asset_code", n3.getCode()), o3.url.setQuery("buying_asset_issuer", n3.getIssuer())), o3;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && Ct(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && At(e5.prototype, t5), r5 && At(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4);
        }(se);
        function Bt(e4) {
          return Bt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Bt(e4);
        }
        function Nt(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Ut(n3.key), n3);
          }
        }
        function Ut(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Bt(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Bt(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Bt(t4) ? t4 : t4 + "";
        }
        function Mt(e4, t4, r5) {
          return t4 = Ft(t4), function(e5, t5) {
            if (t5 && ("object" == Bt(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Dt() ? Reflect.construct(t4, r5 || [], Ft(e4).constructor) : t4.apply(e4, r5));
        }
        function Dt() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Dt = function() {
            return !!e4;
          })();
        }
        function Ft(e4) {
          return Ft = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, Ft(e4);
        }
        function Vt(e4, t4) {
          return Vt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, Vt(e4, t4);
        }
        var qt = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = Mt(this, t4, [e5, "payments"])).url.segment("payments"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && Vt(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && Nt(e5.prototype, t5), r5 && Nt(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "forAccount", value: function(e5) {
            return this.forEndpoint("accounts", e5);
          } }, { key: "forLedger", value: function(e5) {
            return this.forEndpoint("ledgers", e5.toString());
          } }, { key: "forTransaction", value: function(e5) {
            return this.forEndpoint("transactions", e5);
          } }]);
        }(se);
        function Kt(e4) {
          return Kt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Kt(e4);
        }
        function Ht(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, zt(n3.key), n3);
          }
        }
        function zt(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Kt(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Kt(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Kt(t4) ? t4 : t4 + "";
        }
        function Xt(e4, t4, r5) {
          return t4 = Wt(t4), function(e5, t5) {
            if (t5 && ("object" == Kt(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Gt() ? Reflect.construct(t4, r5 || [], Wt(e4).constructor) : t4.apply(e4, r5));
        }
        function Gt() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Gt = function() {
            return !!e4;
          })();
        }
        function Wt(e4) {
          return Wt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, Wt(e4);
        }
        function $t(e4, t4) {
          return $t = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, $t(e4, t4);
        }
        var Qt = function(e4) {
          function t4(e5, r5, n3, o3) {
            var i2;
            if (function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (i2 = Xt(this, t4, [e5])).url.segment("paths/strict-receive"), "string" == typeof r5) i2.url.setQuery("source_account", r5);
            else {
              var a2 = r5.map(function(e6) {
                return e6.isNative() ? "native" : "".concat(e6.getCode(), ":").concat(e6.getIssuer());
              }).join(",");
              i2.url.setQuery("source_assets", a2);
            }
            return i2.url.setQuery("destination_amount", o3), n3.isNative() ? i2.url.setQuery("destination_asset_type", "native") : (i2.url.setQuery("destination_asset_type", n3.getAssetType()), i2.url.setQuery("destination_asset_code", n3.getCode()), i2.url.setQuery("destination_asset_issuer", n3.getIssuer())), i2;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && $t(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && Ht(e5.prototype, t5), r5 && Ht(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4);
        }(se);
        function Yt(e4) {
          return Yt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Yt(e4);
        }
        function Jt(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Zt(n3.key), n3);
          }
        }
        function Zt(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Yt(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Yt(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Yt(t4) ? t4 : t4 + "";
        }
        function er(e4, t4, r5) {
          return t4 = rr(t4), function(e5, t5) {
            if (t5 && ("object" == Yt(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, tr() ? Reflect.construct(t4, r5 || [], rr(e4).constructor) : t4.apply(e4, r5));
        }
        function tr() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (tr = function() {
            return !!e4;
          })();
        }
        function rr(e4) {
          return rr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, rr(e4);
        }
        function nr(e4, t4) {
          return nr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, nr(e4, t4);
        }
        var or = function(e4) {
          function t4(e5, r5, n3, o3) {
            var i2;
            if (function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (i2 = er(this, t4, [e5])).url.segment("paths/strict-send"), r5.isNative() ? i2.url.setQuery("source_asset_type", "native") : (i2.url.setQuery("source_asset_type", r5.getAssetType()), i2.url.setQuery("source_asset_code", r5.getCode()), i2.url.setQuery("source_asset_issuer", r5.getIssuer())), i2.url.setQuery("source_amount", n3), "string" == typeof o3) i2.url.setQuery("destination_account", o3);
            else {
              var a2 = o3.map(function(e6) {
                return e6.isNative() ? "native" : "".concat(e6.getCode(), ":").concat(e6.getIssuer());
              }).join(",");
              i2.url.setQuery("destination_assets", a2);
            }
            return i2;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && nr(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && Jt(e5.prototype, t5), r5 && Jt(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4);
        }(se);
        function ir(e4) {
          return ir = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, ir(e4);
        }
        function ar(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, sr(n3.key), n3);
          }
        }
        function sr(e4) {
          var t4 = function(e5, t5) {
            if ("object" != ir(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != ir(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == ir(t4) ? t4 : t4 + "";
        }
        function ur(e4, t4, r5) {
          return t4 = lr(t4), function(e5, t5) {
            if (t5 && ("object" == ir(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, cr() ? Reflect.construct(t4, r5 || [], lr(e4).constructor) : t4.apply(e4, r5));
        }
        function cr() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (cr = function() {
            return !!e4;
          })();
        }
        function lr(e4) {
          return lr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, lr(e4);
        }
        function fr(e4, t4) {
          return fr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, fr(e4, t4);
        }
        var pr = [6e4, 3e5, 9e5, 36e5, 864e5, 6048e5], hr = function(e4) {
          function t4(e5, r5, n3, o3, i2, a2, s2) {
            var u2;
            if (function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (u2 = ur(this, t4, [e5])).url.segment("trade_aggregations"), r5.isNative() ? u2.url.setQuery("base_asset_type", "native") : (u2.url.setQuery("base_asset_type", r5.getAssetType()), u2.url.setQuery("base_asset_code", r5.getCode()), u2.url.setQuery("base_asset_issuer", r5.getIssuer())), n3.isNative() ? u2.url.setQuery("counter_asset_type", "native") : (u2.url.setQuery("counter_asset_type", n3.getAssetType()), u2.url.setQuery("counter_asset_code", n3.getCode()), u2.url.setQuery("counter_asset_issuer", n3.getIssuer())), "number" != typeof o3 || "number" != typeof i2) throw new D.v7("Invalid time bounds", [o3, i2]);
            if (u2.url.setQuery("start_time", o3.toString()), u2.url.setQuery("end_time", i2.toString()), !u2.isValidResolution(a2)) throw new D.v7("Invalid resolution", a2);
            if (u2.url.setQuery("resolution", a2.toString()), !u2.isValidOffset(s2, a2)) throw new D.v7("Invalid offset", s2);
            return u2.url.setQuery("offset", s2.toString()), u2;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && fr(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && ar(e5.prototype, t5), r5 && ar(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "isValidResolution", value: function(e5) {
            for (var t5 = 0, r5 = pr; t5 < r5.length; t5++) {
              if (r5[t5] === e5) return true;
            }
            return false;
          } }, { key: "isValidOffset", value: function(e5, t5) {
            var r5 = 36e5;
            return !(e5 > t5 || e5 >= 24 * r5 || e5 % r5 != 0);
          } }]);
        }(se);
        function dr(e4) {
          return dr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, dr(e4);
        }
        function yr(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, mr(n3.key), n3);
          }
        }
        function mr(e4) {
          var t4 = function(e5, t5) {
            if ("object" != dr(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != dr(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == dr(t4) ? t4 : t4 + "";
        }
        function vr(e4, t4, r5) {
          return t4 = br(t4), function(e5, t5) {
            if (t5 && ("object" == dr(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, gr() ? Reflect.construct(t4, r5 || [], br(e4).constructor) : t4.apply(e4, r5));
        }
        function gr() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (gr = function() {
            return !!e4;
          })();
        }
        function br(e4) {
          return br = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, br(e4);
        }
        function wr(e4, t4) {
          return wr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, wr(e4, t4);
        }
        var Sr = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = vr(this, t4, [e5, "trades"])).url.segment("trades"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && wr(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && yr(e5.prototype, t5), r5 && yr(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "forAssetPair", value: function(e5, t5) {
            return e5.isNative() ? this.url.setQuery("base_asset_type", "native") : (this.url.setQuery("base_asset_type", e5.getAssetType()), this.url.setQuery("base_asset_code", e5.getCode()), this.url.setQuery("base_asset_issuer", e5.getIssuer())), t5.isNative() ? this.url.setQuery("counter_asset_type", "native") : (this.url.setQuery("counter_asset_type", t5.getAssetType()), this.url.setQuery("counter_asset_code", t5.getCode()), this.url.setQuery("counter_asset_issuer", t5.getIssuer())), this;
          } }, { key: "forOffer", value: function(e5) {
            return this.url.setQuery("offer_id", e5), this;
          } }, { key: "forType", value: function(e5) {
            return this.url.setQuery("trade_type", e5), this;
          } }, { key: "forAccount", value: function(e5) {
            return this.forEndpoint("accounts", e5);
          } }, { key: "forLiquidityPool", value: function(e5) {
            return this.forEndpoint("liquidity_pools", e5);
          } }]);
        }(se);
        function Er(e4) {
          return Er = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Er(e4);
        }
        function _r(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, kr(n3.key), n3);
          }
        }
        function kr(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Er(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Er(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Er(t4) ? t4 : t4 + "";
        }
        function Tr(e4, t4, r5) {
          return t4 = xr(t4), function(e5, t5) {
            if (t5 && ("object" == Er(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, Or() ? Reflect.construct(t4, r5 || [], xr(e4).constructor) : t4.apply(e4, r5));
        }
        function Or() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (Or = function() {
            return !!e4;
          })();
        }
        function xr(e4) {
          return xr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, xr(e4);
        }
        function Ar(e4, t4) {
          return Ar = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, Ar(e4, t4);
        }
        var Pr = function(e4) {
          function t4(e5) {
            var r5;
            return function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4), (r5 = Tr(this, t4, [e5, "transactions"])).url.segment("transactions"), r5;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && Ar(e5, t5);
          }(t4, e4), function(e5, t5, r5) {
            return t5 && _r(e5.prototype, t5), r5 && _r(e5, r5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
          }(t4, [{ key: "transaction", value: function(e5) {
            var t5 = new se(this.url.clone());
            return t5.filter.push([e5]), t5;
          } }, { key: "forAccount", value: function(e5) {
            return this.forEndpoint("accounts", e5);
          } }, { key: "forClaimableBalance", value: function(e5) {
            return this.forEndpoint("claimable_balances", e5);
          } }, { key: "forLedger", value: function(e5) {
            return this.forEndpoint("ledgers", e5.toString());
          } }, { key: "forLiquidityPool", value: function(e5) {
            return this.forEndpoint("liquidity_pools", e5);
          } }, { key: "includeFailed", value: function(e5) {
            return this.url.setQuery("include_failed", e5.toString()), this;
          } }]);
        }(se);
        function Rr(e4) {
          return Rr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, Rr(e4);
        }
        function jr() {
          jr = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof v2 ? t5 : v2, a3 = Object.create(i3.prototype), s3 = new R2(n4 || []);
            return o3(a3, "_invoke", { value: O2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", m2 = {};
          function v2() {
          }
          function g2() {
          }
          function b2() {
          }
          var w2 = {};
          c2(w2, a2, function() {
            return this;
          });
          var S2 = Object.getPrototypeOf, E2 = S2 && S2(S2(j2([])));
          E2 && E2 !== r5 && n3.call(E2, a2) && (w2 = E2);
          var _2 = b2.prototype = v2.prototype = Object.create(w2);
          function k2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function T2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == Rr(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function O2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = x2(s3, n4);
                  if (u3) {
                    if (u3 === m2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === m2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function x2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, x2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), m2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, m2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, m2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m2);
          }
          function A2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function P2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function R2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(A2, this), this.reset(true);
          }
          function j2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(Rr(t5) + " is not iterable");
          }
          return g2.prototype = b2, o3(_2, "constructor", { value: b2, configurable: true }), o3(b2, "constructor", { value: g2, configurable: true }), g2.displayName = c2(b2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === g2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, b2) : (e5.__proto__ = b2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(_2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, k2(T2.prototype), c2(T2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = T2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new T2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, k2(_2), c2(_2, u2, "Generator"), c2(_2, a2, function() {
            return this;
          }), c2(_2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = j2, R2.prototype = { constructor: R2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(P2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, m2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), P2(r6), m2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  P2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: j2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), m2;
          } }, t4;
        }
        function Ir(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function Cr(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                Ir(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                Ir(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function Lr(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, Br(n3.key), n3);
          }
        }
        function Br(e4) {
          var t4 = function(e5, t5) {
            if ("object" != Rr(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != Rr(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == Rr(t4) ? t4 : t4 + "";
        }
        function Nr(e4) {
          return new L(e4).div(1e7).toString();
        }
        var Ur, Mr, Dr, Fr, Vr, qr, Kr = function(e4, t4, r5) {
          return t4 && Lr(e4.prototype, t4), r5 && Lr(e4, r5), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }(function e4(t4) {
          var r5 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          !function(e5, t5) {
            if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
          }(this, e4), this.serverURL = N()(t4);
          var n3 = void 0 === r5.allowHttp ? ue.T.isAllowHttp() : r5.allowHttp, o3 = {};
          if (r5.appName && (o3["X-App-Name"] = r5.appName), r5.appVersion && (o3["X-App-Version"] = r5.appVersion), r5.authToken && (o3["X-Auth-Token"] = r5.authToken), Object.keys(o3).length > 0 && z.interceptors.request.use(function(e5) {
            return e5.headers = Object.assign(e5.headers, o3), e5;
          }), "https" !== this.serverURL.protocol() && !n3) throw new Error("Cannot connect to insecure horizon server");
        }, [{ key: "fetchTimebounds", value: (qr = Cr(jr().mark(function e4(t4) {
          var r5, n3, o3 = arguments;
          return jr().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                if (r5 = o3.length > 1 && void 0 !== o3[1] && o3[1], !(n3 = X(this.serverURL.hostname()))) {
                  e5.next = 4;
                  break;
                }
                return e5.abrupt("return", { minTime: 0, maxTime: n3 + t4 });
              case 4:
                if (!r5) {
                  e5.next = 6;
                  break;
                }
                return e5.abrupt("return", { minTime: 0, maxTime: Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3) + t4 });
              case 6:
                return e5.next = 8, z.get(N()(this.serverURL).toString());
              case 8:
                return e5.next = 10, this.fetchTimebounds(t4, true);
              case 10:
                return e5.abrupt("return", e5.sent);
              case 11:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return qr.apply(this, arguments);
        }) }, { key: "fetchBaseFee", value: (Vr = Cr(jr().mark(function e4() {
          var t4;
          return jr().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.next = 2, this.feeStats();
              case 2:
                return t4 = e5.sent, e5.abrupt("return", parseInt(t4.last_ledger_base_fee, 10) || 100);
              case 4:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return Vr.apply(this, arguments);
        }) }, { key: "feeStats", value: (Fr = Cr(jr().mark(function e4() {
          var t4;
          return jr().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return (t4 = new se(N()(this.serverURL))).filter.push(["fee_stats"]), e5.abrupt("return", t4.call());
              case 3:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return Fr.apply(this, arguments);
        }) }, { key: "submitTransaction", value: (Dr = Cr(jr().mark(function e4(t4) {
          var r5, n3 = arguments;
          return jr().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                if ((n3.length > 1 && void 0 !== n3[1] ? n3[1] : { skipMemoRequiredCheck: false }).skipMemoRequiredCheck) {
                  e5.next = 4;
                  break;
                }
                return e5.next = 4, this.checkMemoRequired(t4);
              case 4:
                return r5 = encodeURIComponent(t4.toEnvelope().toXDR().toString("base64")), e5.abrupt("return", z.post(N()(this.serverURL).segment("transactions").toString(), "tx=".concat(r5), { timeout: 6e4 }).then(function(e6) {
                  if (!e6.data.result_xdr) return e6.data;
                  var t5, r6, n4 = i.xdr.TransactionResult.fromXDR(e6.data.result_xdr, "base64").result().value();
                  return n4.length && (t5 = n4.map(function(e7, t6) {
                    if ("manageBuyOffer" !== e7.value().switch().name && "manageSellOffer" !== e7.value().switch().name) return null;
                    r6 = true;
                    var n5, o3 = new L(0), a2 = new L(0), s2 = e7.value().value().success(), u2 = s2.offersClaimed().map(function(e8) {
                      var t7 = e8.value(), r7 = "";
                      switch (e8.switch()) {
                        case i.xdr.ClaimAtomType.claimAtomTypeV0():
                          r7 = i.StrKey.encodeEd25519PublicKey(t7.sellerEd25519());
                          break;
                        case i.xdr.ClaimAtomType.claimAtomTypeOrderBook():
                          r7 = i.StrKey.encodeEd25519PublicKey(t7.sellerId().ed25519());
                          break;
                        default:
                          throw new Error("Invalid offer result type: " + e8.switch());
                      }
                      var n6 = new L(t7.amountBought().toString()), s3 = new L(t7.amountSold().toString());
                      o3 = o3.plus(s3), a2 = a2.plus(n6);
                      var u3 = i.Asset.fromOperation(t7.assetSold()), c3 = i.Asset.fromOperation(t7.assetBought()), l4 = { type: u3.getAssetType(), assetCode: u3.getCode(), issuer: u3.getIssuer() }, f3 = { type: c3.getAssetType(), assetCode: c3.getCode(), issuer: c3.getIssuer() };
                      return { sellerId: r7, offerId: t7.offerId().toString(), assetSold: l4, amountSold: Nr(s3), assetBought: f3, amountBought: Nr(n6) };
                    }), c2 = s2.offer().switch().name;
                    if ("function" == typeof s2.offer().value && s2.offer().value()) {
                      var l3 = s2.offer().value();
                      n5 = { offerId: l3.offerId().toString(), selling: {}, buying: {}, amount: Nr(l3.amount().toString()), price: { n: l3.price().n(), d: l3.price().d() } };
                      var f2 = i.Asset.fromOperation(l3.selling());
                      n5.selling = { type: f2.getAssetType(), assetCode: f2.getCode(), issuer: f2.getIssuer() };
                      var p2 = i.Asset.fromOperation(l3.buying());
                      n5.buying = { type: p2.getAssetType(), assetCode: p2.getCode(), issuer: p2.getIssuer() };
                    }
                    return { offersClaimed: u2, effect: c2, operationIndex: t6, currentOffer: n5, amountBought: Nr(o3), amountSold: Nr(a2), isFullyOpen: !u2.length && "manageOfferDeleted" !== c2, wasPartiallyFilled: !!u2.length && "manageOfferDeleted" !== c2, wasImmediatelyFilled: !!u2.length && "manageOfferDeleted" === c2, wasImmediatelyDeleted: !u2.length && "manageOfferDeleted" === c2 };
                  }).filter(function(e7) {
                    return !!e7;
                  })), Object.assign({}, e6.data, { offerResults: r6 ? t5 : void 0 });
                }).catch(function(e6) {
                  return e6 instanceof Error ? Promise.reject(e6) : Promise.reject(new D.nS("Transaction submission failed. Server responded: ".concat(e6.status, " ").concat(e6.statusText), e6.data));
                }));
              case 6:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return Dr.apply(this, arguments);
        }) }, { key: "accounts", value: function() {
          return new me(N()(this.serverURL));
        } }, { key: "claimableBalances", value: function() {
          return new Ie(N()(this.serverURL));
        } }, { key: "ledgers", value: function() {
          return new rt(N()(this.serverURL));
        } }, { key: "transactions", value: function() {
          return new Pr(N()(this.serverURL));
        } }, { key: "offers", value: function() {
          return new gt(N()(this.serverURL));
        } }, { key: "orderbook", value: function(e4, t4) {
          return new Lt(N()(this.serverURL), e4, t4);
        } }, { key: "trades", value: function() {
          return new Sr(N()(this.serverURL));
        } }, { key: "operations", value: function() {
          return new Ot(N()(this.serverURL));
        } }, { key: "liquidityPools", value: function() {
          return new lt(N()(this.serverURL));
        } }, { key: "strictReceivePaths", value: function(e4, t4, r5) {
          return new Qt(N()(this.serverURL), e4, t4, r5);
        } }, { key: "strictSendPaths", value: function(e4, t4, r5) {
          return new or(N()(this.serverURL), e4, t4, r5);
        } }, { key: "payments", value: function() {
          return new qt(N()(this.serverURL));
        } }, { key: "effects", value: function() {
          return new Fe(N()(this.serverURL));
        } }, { key: "friendbot", value: function(e4) {
          return new We(N()(this.serverURL), e4);
        } }, { key: "assets", value: function() {
          return new ke(N()(this.serverURL));
        } }, { key: "loadAccount", value: (Mr = Cr(jr().mark(function e4(t4) {
          var r5;
          return jr().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.next = 2, this.accounts().accountId(t4).call();
              case 2:
                return r5 = e5.sent, e5.abrupt("return", new d(r5));
              case 4:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return Mr.apply(this, arguments);
        }) }, { key: "tradeAggregation", value: function(e4, t4, r5, n3, o3, i2) {
          return new hr(N()(this.serverURL), e4, t4, r5, n3, o3, i2);
        } }, { key: "checkMemoRequired", value: (Ur = Cr(jr().mark(function e4(t4) {
          var r5, n3, o3, a2;
          return jr().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                if (t4 instanceof i.FeeBumpTransaction && (t4 = t4.innerTransaction), "none" === t4.memo.type) {
                  e5.next = 3;
                  break;
                }
                return e5.abrupt("return");
              case 3:
                r5 = /* @__PURE__ */ new Set(), n3 = 0;
              case 5:
                if (!(n3 < t4.operations.length)) {
                  e5.next = 36;
                  break;
                }
                o3 = t4.operations[n3], e5.t0 = o3.type, e5.next = "payment" === e5.t0 || "pathPaymentStrictReceive" === e5.t0 || "pathPaymentStrictSend" === e5.t0 || "accountMerge" === e5.t0 ? 10 : 11;
                break;
              case 10:
                return e5.abrupt("break", 12);
              case 11:
                return e5.abrupt("continue", 33);
              case 12:
                if (a2 = o3.destination, !r5.has(a2)) {
                  e5.next = 15;
                  break;
                }
                return e5.abrupt("continue", 33);
              case 15:
                if (r5.add(a2), !a2.startsWith("M")) {
                  e5.next = 18;
                  break;
                }
                return e5.abrupt("continue", 33);
              case 18:
                return e5.prev = 18, e5.next = 21, this.loadAccount(a2);
              case 21:
                if ("MQ==" !== e5.sent.data_attr["config.memo_required"]) {
                  e5.next = 24;
                  break;
                }
                throw new D.Cu("account requires memo", a2, n3);
              case 24:
                e5.next = 33;
                break;
              case 26:
                if (e5.prev = 26, e5.t1 = e5.catch(18), !(e5.t1 instanceof D.Cu)) {
                  e5.next = 30;
                  break;
                }
                throw e5.t1;
              case 30:
                if (e5.t1 instanceof D.m_) {
                  e5.next = 32;
                  break;
                }
                throw e5.t1;
              case 32:
                return e5.abrupt("continue", 33);
              case 33:
                n3++, e5.next = 5;
                break;
              case 36:
              case "end":
                return e5.stop();
            }
          }, e4, this, [[18, 26]]);
        })), function(e4) {
          return Ur.apply(this, arguments);
        }) }]);
        const Hr = (e3 = r4.hmd(e3)).exports;
      }, 4356: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { AccountRequiresMemoError: () => n2.Cu, BadRequestError: () => n2.v7, BadResponseError: () => n2.nS, Config: () => o2.T, Federation: () => s, Friendbot: () => c, Horizon: () => l2, NetworkError: () => n2.Dr, NotFoundError: () => n2.m_, SorobanRpc: () => f, StellarToml: () => a, Utils: () => i.A, WebAuth: () => u, contract: () => p, default: () => y, rpc: () => f });
        var n2 = r4(5885), o2 = r4(8732), i = r4(3121), a = r4(3898), s = r4(7600), u = r4(5479), c = r4(8242), l2 = r4(2731), f = r4(1660), p = r4(145), h = r4(356), d = {};
        for (const e4 in h) ["default", "Config", "Utils", "StellarToml", "Federation", "WebAuth", "Friendbot", "Horizon", "rpc", "SorobanRpc", "contract", "AccountRequiresMemoError", "BadRequestError", "BadResponseError", "NetworkError", "NotFoundError"].indexOf(e4) < 0 && (d[e4] = () => h[e4]);
        r4.d(t3, d);
        const y = (e3 = r4.hmd(e3)).exports;
      }, 4076: (e3, t3, r4) => {
        "use strict";
        var n2;
        r4.d(t3, { j: () => n2 }), function(e4) {
          var t4 = function(e5) {
            return e5.SUCCESS = "SUCCESS", e5.NOT_FOUND = "NOT_FOUND", e5.FAILED = "FAILED", e5;
          }({});
          function r5(e5) {
            return "transactionData" in e5;
          }
          e4.GetTransactionStatus = t4, e4.isSimulationError = function(e5) {
            return "error" in e5;
          }, e4.isSimulationSuccess = r5, e4.isSimulationRestore = function(e5) {
            return r5(e5) && "restorePreamble" in e5 && !!e5.restorePreamble.transactionData;
          }, e4.isSimulationRaw = function(e5) {
            return !e5._parsed;
          };
        }(n2 || (n2 = {}));
      }, 4982: (e3, t3, r4) => {
        "use strict";
        r4.d(t3, { Ay: () => i });
        var n2 = r4(1083), o2 = r4(8330).rE;
        const i = n2.A.create({ headers: { "X-Client-Name": "js-soroban-client", "X-Client-Version": o2 } });
      }, 1660: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { Api: () => n2.j, AxiosClient: () => i.Ay, Durability: () => o2.ku, Server: () => o2.gq, assembleTransaction: () => s.X, default: () => u, parseRawEvents: () => a.fG, parseRawSimulation: () => a.jr });
        var n2 = r4(4076), o2 = r4(1575), i = r4(4982), a = r4(784), s = r4(8680);
        const u = (e3 = r4.hmd(e3)).exports;
      }, 784: (e3, t3, r4) => {
        "use strict";
        r4.d(t3, { $D: () => f, Af: () => c, fG: () => l2, jr: () => p });
        var n2 = r4(356), o2 = r4(4076);
        function i(e4) {
          return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, i(e4);
        }
        function a(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function s(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? a(Object(r5), true).forEach(function(t5) {
              u(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : a(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function u(e4, t4, r5) {
          return (t4 = function(e5) {
            var t5 = function(e6, t6) {
              if ("object" != i(e6) || !e6) return e6;
              var r6 = e6[Symbol.toPrimitive];
              if (void 0 !== r6) {
                var n3 = r6.call(e6, t6 || "default");
                if ("object" != i(n3)) return n3;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return ("string" === t6 ? String : Number)(e6);
            }(e5, "string");
            return "symbol" == i(t5) ? t5 : t5 + "";
          }(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function c(e4) {
          var t4 = e4.errorResultXdr, r5 = e4.diagnosticEventsXdr;
          return delete e4.errorResultXdr, delete e4.diagnosticEventsXdr, t4 ? s(s(s({}, e4), void 0 !== r5 && r5.length > 0 && { diagnosticEvents: r5.map(function(e5) {
            return n2.xdr.DiagnosticEvent.fromXDR(e5, "base64");
          }) }), {}, { errorResult: n2.xdr.TransactionResult.fromXDR(t4, "base64") }) : s({}, e4);
        }
        function l2(e4) {
          var t4;
          return { latestLedger: e4.latestLedger, events: (null !== (t4 = e4.events) && void 0 !== t4 ? t4 : []).map(function(e5) {
            var t5 = s({}, e5);
            return delete t5.contractId, s(s(s({}, t5), "" !== e5.contractId && { contractId: new n2.Contract(e5.contractId) }), {}, { topic: e5.topic.map(function(e6) {
              return n2.xdr.ScVal.fromXDR(e6, "base64");
            }), value: n2.xdr.ScVal.fromXDR(e5.value, "base64") });
          }) };
        }
        function f(e4) {
          var t4;
          return { latestLedger: e4.latestLedger, entries: (null !== (t4 = e4.entries) && void 0 !== t4 ? t4 : []).map(function(e5) {
            if (!e5.key || !e5.xdr) throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(e5)));
            return s({ lastModifiedLedgerSeq: e5.lastModifiedLedgerSeq, key: n2.xdr.LedgerKey.fromXDR(e5.key, "base64"), val: n2.xdr.LedgerEntryData.fromXDR(e5.xdr, "base64") }, void 0 !== e5.liveUntilLedgerSeq && { liveUntilLedgerSeq: e5.liveUntilLedgerSeq });
          }) };
        }
        function p(e4) {
          var t4, r5;
          if (!o2.j.isSimulationRaw(e4)) return e4;
          var i2 = { _parsed: true, id: e4.id, latestLedger: e4.latestLedger, events: null !== (t4 = null === (r5 = e4.events) || void 0 === r5 ? void 0 : r5.map(function(e5) {
            return n2.xdr.DiagnosticEvent.fromXDR(e5, "base64");
          })) && void 0 !== t4 ? t4 : [] };
          return "string" == typeof e4.error ? s(s({}, i2), {}, { error: e4.error }) : function(e5, t5) {
            var r6, o3, i3, a2, u2, c2 = s(s(s({}, t5), {}, { transactionData: new n2.SorobanDataBuilder(e5.transactionData), minResourceFee: e5.minResourceFee, cost: e5.cost }, null !== (r6 = null === (o3 = e5.results) || void 0 === o3 ? void 0 : o3.length) && void 0 !== r6 && r6 && { result: e5.results.map(function(e6) {
              var t6;
              return { auth: (null !== (t6 = e6.auth) && void 0 !== t6 ? t6 : []).map(function(e7) {
                return n2.xdr.SorobanAuthorizationEntry.fromXDR(e7, "base64");
              }), retval: e6.xdr ? n2.xdr.ScVal.fromXDR(e6.xdr, "base64") : n2.xdr.ScVal.scvVoid() };
            })[0] }), null !== (i3 = null === (a2 = e5.stateChanges) || void 0 === a2 ? void 0 : a2.length) && void 0 !== i3 && i3 && { stateChanges: null === (u2 = e5.stateChanges) || void 0 === u2 ? void 0 : u2.map(function(e6) {
              return { type: e6.type, key: n2.xdr.LedgerKey.fromXDR(e6.key, "base64"), before: e6.before ? n2.xdr.LedgerEntry.fromXDR(e6.before, "base64") : null, after: e6.after ? n2.xdr.LedgerEntry.fromXDR(e6.after, "base64") : null };
            }) });
            if (!e5.restorePreamble || "" === e5.restorePreamble.transactionData) return c2;
            return s(s({}, c2), {}, { restorePreamble: { minResourceFee: e5.restorePreamble.minResourceFee, transactionData: new n2.SorobanDataBuilder(e5.restorePreamble.transactionData) } });
          }(e4, i2);
        }
      }, 1575: (e3, t3, r4) => {
        "use strict";
        r4.d(t3, { ku: () => $, gq: () => Q });
        var n2 = r4(4193), o2 = r4.n(n2), i = r4(356), a = r4(4982);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u() {
          u = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", c2 = i2.asyncIterator || "@@asyncIterator", l3 = i2.toStringTag || "@@toStringTag";
          function f2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            f2({}, "");
          } catch (e5) {
            f2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function p2(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof b2 ? t5 : b2, a3 = Object.create(i3.prototype), s2 = new I2(n4 || []);
            return o3(a3, "_invoke", { value: A2(e5, r6, s2) }), a3;
          }
          function h2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = p2;
          var d2 = "suspendedStart", y2 = "suspendedYield", m2 = "executing", v2 = "completed", g2 = {};
          function b2() {
          }
          function w2() {
          }
          function S2() {
          }
          var E2 = {};
          f2(E2, a2, function() {
            return this;
          });
          var _2 = Object.getPrototypeOf, k2 = _2 && _2(_2(C2([])));
          k2 && k2 !== r5 && n3.call(k2, a2) && (E2 = k2);
          var T2 = S2.prototype = b2.prototype = Object.create(E2);
          function O2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              f2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function x2(e5, t5) {
            function r6(o4, i4, a3, u2) {
              var c3 = h2(e5[o4], e5, i4);
              if ("throw" !== c3.type) {
                var l4 = c3.arg, f3 = l4.value;
                return f3 && "object" == s(f3) && n3.call(f3, "__await") ? t5.resolve(f3.__await).then(function(e6) {
                  r6("next", e6, a3, u2);
                }, function(e6) {
                  r6("throw", e6, a3, u2);
                }) : t5.resolve(f3).then(function(e6) {
                  l4.value = e6, a3(l4);
                }, function(e6) {
                  return r6("throw", e6, a3, u2);
                });
              }
              u2(c3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function A2(t5, r6, n4) {
            var o4 = d2;
            return function(i3, a3) {
              if (o4 === m2) throw Error("Generator is already running");
              if (o4 === v2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s2 = n4.delegate;
                if (s2) {
                  var u2 = P2(s2, n4);
                  if (u2) {
                    if (u2 === g2) continue;
                    return u2;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === d2) throw o4 = v2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = m2;
                var c3 = h2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? v2 : y2, c3.arg === g2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = v2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function P2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, P2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), g2;
            var i3 = h2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, g2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, g2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, g2);
          }
          function R2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function j2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function I2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(R2, this), this.reset(true);
          }
          function C2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(s(t5) + " is not iterable");
          }
          return w2.prototype = S2, o3(T2, "constructor", { value: S2, configurable: true }), o3(S2, "constructor", { value: w2, configurable: true }), w2.displayName = f2(S2, l3, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === w2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, S2) : (e5.__proto__ = S2, f2(e5, l3, "GeneratorFunction")), e5.prototype = Object.create(T2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, O2(x2.prototype), f2(x2.prototype, c2, function() {
            return this;
          }), t4.AsyncIterator = x2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new x2(p2(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, O2(T2), f2(T2, l3, "Generator"), f2(T2, a2, function() {
            return this;
          }), f2(T2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = C2, I2.prototype = { constructor: I2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(j2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s2.type = "throw", s2.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s2 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u2 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u2 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u2) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, g2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), g2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), j2(r6), g2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  j2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: C2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), g2;
          } }, t4;
        }
        function c(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function l2(e4, t4) {
          return f.apply(this, arguments);
        }
        function f() {
          var e4;
          return e4 = u().mark(function e5(t4, r5) {
            var n3, o3, i2, s2 = arguments;
            return u().wrap(function(e6) {
              for (; ; ) switch (e6.prev = e6.next) {
                case 0:
                  return n3 = s2.length > 2 && void 0 !== s2[2] ? s2[2] : null, e6.next = 3, a.Ay.post(t4, { jsonrpc: "2.0", id: 1, method: r5, params: n3 });
                case 3:
                  if (o3 = e6.sent, u2 = o3.data, c2 = "error", !u2.hasOwnProperty(c2)) {
                    e6.next = 8;
                    break;
                  }
                  throw o3.data.error;
                case 8:
                  return e6.abrupt("return", null === (i2 = o3.data) || void 0 === i2 ? void 0 : i2.result);
                case 9:
                case "end":
                  return e6.stop();
              }
              var u2, c2;
            }, e5);
          }), f = function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                c(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                c(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          }, f.apply(this, arguments);
        }
        var p = r4(4076), h = r4(8680), d = r4(784), y = r4(8287).Buffer;
        function m(e4) {
          return m = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, m(e4);
        }
        function v(e4, t4) {
          var r5 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
          if (!r5) {
            if (Array.isArray(e4) || (r5 = function(e5, t5) {
              if (e5) {
                if ("string" == typeof e5) return g(e5, t5);
                var r6 = {}.toString.call(e5).slice(8, -1);
                return "Object" === r6 && e5.constructor && (r6 = e5.constructor.name), "Map" === r6 || "Set" === r6 ? Array.from(e5) : "Arguments" === r6 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r6) ? g(e5, t5) : void 0;
              }
            }(e4)) || t4 && e4 && "number" == typeof e4.length) {
              r5 && (e4 = r5);
              var n3 = 0, o3 = function() {
              };
              return { s: o3, n: function() {
                return n3 >= e4.length ? { done: true } : { done: false, value: e4[n3++] };
              }, e: function(e5) {
                throw e5;
              }, f: o3 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, a2 = true, s2 = false;
          return { s: function() {
            r5 = r5.call(e4);
          }, n: function() {
            var e5 = r5.next();
            return a2 = e5.done, e5;
          }, e: function(e5) {
            s2 = true, i2 = e5;
          }, f: function() {
            try {
              a2 || null == r5.return || r5.return();
            } finally {
              if (s2) throw i2;
            }
          } };
        }
        function g(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function b(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function w(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? b(Object(r5), true).forEach(function(t5) {
              S(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : b(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function S(e4, t4, r5) {
          return (t4 = O(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function E() {
          E = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", s2 = i2.asyncIterator || "@@asyncIterator", u2 = i2.toStringTag || "@@toStringTag";
          function c2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            c2({}, "");
          } catch (e5) {
            c2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function l3(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof g2 ? t5 : g2, a3 = Object.create(i3.prototype), s3 = new I2(n4 || []);
            return o3(a3, "_invoke", { value: A2(e5, r6, s3) }), a3;
          }
          function f2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = l3;
          var p2 = "suspendedStart", h2 = "suspendedYield", d2 = "executing", y2 = "completed", v2 = {};
          function g2() {
          }
          function b2() {
          }
          function w2() {
          }
          var S2 = {};
          c2(S2, a2, function() {
            return this;
          });
          var _2 = Object.getPrototypeOf, k2 = _2 && _2(_2(C2([])));
          k2 && k2 !== r5 && n3.call(k2, a2) && (S2 = k2);
          var T2 = w2.prototype = g2.prototype = Object.create(S2);
          function O2(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              c2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function x2(e5, t5) {
            function r6(o4, i4, a3, s3) {
              var u3 = f2(e5[o4], e5, i4);
              if ("throw" !== u3.type) {
                var c3 = u3.arg, l4 = c3.value;
                return l4 && "object" == m(l4) && n3.call(l4, "__await") ? t5.resolve(l4.__await).then(function(e6) {
                  r6("next", e6, a3, s3);
                }, function(e6) {
                  r6("throw", e6, a3, s3);
                }) : t5.resolve(l4).then(function(e6) {
                  c3.value = e6, a3(c3);
                }, function(e6) {
                  return r6("throw", e6, a3, s3);
                });
              }
              s3(u3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function A2(t5, r6, n4) {
            var o4 = p2;
            return function(i3, a3) {
              if (o4 === d2) throw Error("Generator is already running");
              if (o4 === y2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var u3 = P2(s3, n4);
                  if (u3) {
                    if (u3 === v2) continue;
                    return u3;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === p2) throw o4 = y2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = d2;
                var c3 = f2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? y2 : h2, c3.arg === v2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = y2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function P2(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, P2(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), v2;
            var i3 = f2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, v2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, v2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, v2);
          }
          function R2(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function j2(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function I2(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(R2, this), this.reset(true);
          }
          function C2(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(m(t5) + " is not iterable");
          }
          return b2.prototype = w2, o3(T2, "constructor", { value: w2, configurable: true }), o3(w2, "constructor", { value: b2, configurable: true }), b2.displayName = c2(w2, u2, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === b2 || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, w2) : (e5.__proto__ = w2, c2(e5, u2, "GeneratorFunction")), e5.prototype = Object.create(T2), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, O2(x2.prototype), c2(x2.prototype, s2, function() {
            return this;
          }), t4.AsyncIterator = x2, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new x2(l3(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, O2(T2), c2(T2, u2, "Generator"), c2(T2, a2, function() {
            return this;
          }), c2(T2, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = C2, I2.prototype = { constructor: I2, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(j2), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s3.type = "throw", s3.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s3 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u3 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u3 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, v2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), v2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), j2(r6), v2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  j2(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: C2(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), v2;
          } }, t4;
        }
        function _(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function k(e4) {
          return function() {
            var t4 = this, r5 = arguments;
            return new Promise(function(n3, o3) {
              var i2 = e4.apply(t4, r5);
              function a2(e5) {
                _(i2, n3, o3, a2, s2, "next", e5);
              }
              function s2(e5) {
                _(i2, n3, o3, a2, s2, "throw", e5);
              }
              a2(void 0);
            });
          };
        }
        function T(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, O(n3.key), n3);
          }
        }
        function O(e4) {
          var t4 = function(e5, t5) {
            if ("object" != m(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != m(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == m(t4) ? t4 : t4 + "";
        }
        var x, A, P, R, j, I, C, L, B, N, U, M, D, F, V, q, K, H, z, X, G, W, $ = function(e4) {
          return e4.Temporary = "temporary", e4.Persistent = "persistent", e4;
        }({}), Q = (x = function e4(t4) {
          var r5 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (function(e5, t5) {
            if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
          }(this, e4), this.serverURL = o2()(t4), r5.headers && 0 === Object.keys(r5.headers).length && a.Ay.interceptors.request.use(function(e5) {
            return e5.headers = Object.assign(e5.headers, r5.headers), e5;
          }), "https" !== this.serverURL.protocol() && !r5.allowHttp) throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
        }, A = [{ key: "getAccount", value: (W = k(E().mark(function e4(t4) {
          var r5, n3, o3;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return r5 = i.xdr.LedgerKey.account(new i.xdr.LedgerKeyAccount({ accountId: i.Keypair.fromPublicKey(t4).xdrPublicKey() })), e5.next = 3, this.getLedgerEntries(r5);
              case 3:
                if (0 !== (n3 = e5.sent).entries.length) {
                  e5.next = 6;
                  break;
                }
                return e5.abrupt("return", Promise.reject({ code: 404, message: "Account not found: ".concat(t4) }));
              case 6:
                return o3 = n3.entries[0].val.account(), e5.abrupt("return", new i.Account(t4, o3.seqNum().toString()));
              case 8:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return W.apply(this, arguments);
        }) }, { key: "getHealth", value: (G = k(E().mark(function e4() {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", l2(this.serverURL.toString(), "getHealth"));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return G.apply(this, arguments);
        }) }, { key: "getContractData", value: (X = k(E().mark(function e4(t4, r5) {
          var n3, o3, a2, s2, u2 = arguments;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                if (n3 = u2.length > 2 && void 0 !== u2[2] ? u2[2] : $.Persistent, "string" != typeof t4) {
                  e5.next = 5;
                  break;
                }
                o3 = new i.Contract(t4).address().toScAddress(), e5.next = 14;
                break;
              case 5:
                if (!(t4 instanceof i.Address)) {
                  e5.next = 9;
                  break;
                }
                o3 = t4.toScAddress(), e5.next = 14;
                break;
              case 9:
                if (!(t4 instanceof i.Contract)) {
                  e5.next = 13;
                  break;
                }
                o3 = t4.address().toScAddress(), e5.next = 14;
                break;
              case 13:
                throw new TypeError("unknown contract type: ".concat(t4));
              case 14:
                e5.t0 = n3, e5.next = e5.t0 === $.Temporary ? 17 : e5.t0 === $.Persistent ? 19 : 21;
                break;
              case 17:
                return a2 = i.xdr.ContractDataDurability.temporary(), e5.abrupt("break", 22);
              case 19:
                return a2 = i.xdr.ContractDataDurability.persistent(), e5.abrupt("break", 22);
              case 21:
                throw new TypeError("invalid durability: ".concat(n3));
              case 22:
                return s2 = i.xdr.LedgerKey.contractData(new i.xdr.LedgerKeyContractData({ key: r5, contract: o3, durability: a2 })), e5.abrupt("return", this.getLedgerEntries(s2).then(function(e6) {
                  return 0 === e6.entries.length ? Promise.reject({ code: 404, message: "Contract data not found. Contract: ".concat(i.Address.fromScAddress(o3).toString(), ", Key: ").concat(r5.toXDR("base64"), ", Durability: ").concat(n3) }) : e6.entries[0];
                }));
              case 24:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4, t4) {
          return X.apply(this, arguments);
        }) }, { key: "getContractWasmByContractId", value: (z = k(E().mark(function e4(t4) {
          var r5, n3, o3, a2;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return n3 = new i.Contract(t4).getFootprint(), e5.next = 3, this.getLedgerEntries(n3);
              case 3:
                if ((o3 = e5.sent).entries.length && null !== (r5 = o3.entries[0]) && void 0 !== r5 && r5.val) {
                  e5.next = 6;
                  break;
                }
                return e5.abrupt("return", Promise.reject({ code: 404, message: "Could not obtain contract hash from server" }));
              case 6:
                return a2 = o3.entries[0].val.contractData().val().instance().executable().wasmHash(), e5.abrupt("return", this.getContractWasmByHash(a2));
              case 8:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return z.apply(this, arguments);
        }) }, { key: "getContractWasmByHash", value: (H = k(E().mark(function e4(t4) {
          var r5, n3, o3, a2, s2, u2, c2 = arguments;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return n3 = c2.length > 1 && void 0 !== c2[1] ? c2[1] : void 0, o3 = "string" == typeof t4 ? y.from(t4, n3) : t4, a2 = i.xdr.LedgerKey.contractCode(new i.xdr.LedgerKeyContractCode({ hash: o3 })), e5.next = 5, this.getLedgerEntries(a2);
              case 5:
                if ((s2 = e5.sent).entries.length && null !== (r5 = s2.entries[0]) && void 0 !== r5 && r5.val) {
                  e5.next = 8;
                  break;
                }
                return e5.abrupt("return", Promise.reject({ code: 404, message: "Could not obtain contract wasm from server" }));
              case 8:
                return u2 = s2.entries[0].val.contractCode().code(), e5.abrupt("return", u2);
              case 10:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return H.apply(this, arguments);
        }) }, { key: "getLedgerEntries", value: (K = k(E().mark(function e4() {
          var t4 = arguments;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", this._getLedgerEntries.apply(this, t4).then(d.$D));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return K.apply(this, arguments);
        }) }, { key: "_getLedgerEntries", value: (q = k(E().mark(function e4() {
          var t4, r5, n3, o3 = arguments;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                for (t4 = o3.length, r5 = new Array(t4), n3 = 0; n3 < t4; n3++) r5[n3] = o3[n3];
                return e5.abrupt("return", l2(this.serverURL.toString(), "getLedgerEntries", { keys: r5.map(function(e6) {
                  return e6.toXDR("base64");
                }) }));
              case 2:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return q.apply(this, arguments);
        }) }, { key: "getTransaction", value: (V = k(E().mark(function e4(t4) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", this._getTransaction(t4).then(function(e6) {
                  var t5 = {};
                  if (e6.status !== p.j.GetTransactionStatus.NOT_FOUND) {
                    var r5, n3 = i.xdr.TransactionMeta.fromXDR(e6.resultMetaXdr, "base64");
                    t5 = w({ ledger: e6.ledger, createdAt: e6.createdAt, applicationOrder: e6.applicationOrder, feeBump: e6.feeBump, envelopeXdr: i.xdr.TransactionEnvelope.fromXDR(e6.envelopeXdr, "base64"), resultXdr: i.xdr.TransactionResult.fromXDR(e6.resultXdr, "base64"), resultMetaXdr: n3 }, 3 === n3.switch() && null !== n3.v3().sorobanMeta() && e6.status === p.j.GetTransactionStatus.SUCCESS && { returnValue: null === (r5 = n3.v3().sorobanMeta()) || void 0 === r5 ? void 0 : r5.returnValue() });
                  }
                  return w({ status: e6.status, latestLedger: e6.latestLedger, latestLedgerCloseTime: e6.latestLedgerCloseTime, oldestLedger: e6.oldestLedger, oldestLedgerCloseTime: e6.oldestLedgerCloseTime }, t5);
                }));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return V.apply(this, arguments);
        }) }, { key: "_getTransaction", value: (F = k(E().mark(function e4(t4) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", l2(this.serverURL.toString(), "getTransaction", { hash: t4 }));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return F.apply(this, arguments);
        }) }, { key: "getEvents", value: (D = k(E().mark(function e4(t4) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", this._getEvents(t4).then(d.fG));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return D.apply(this, arguments);
        }) }, { key: "_getEvents", value: (M = k(E().mark(function e4(t4) {
          var r5;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", l2(this.serverURL.toString(), "getEvents", w({ filters: null !== (r5 = t4.filters) && void 0 !== r5 ? r5 : [], pagination: w(w({}, t4.cursor && { cursor: t4.cursor }), t4.limit && { limit: t4.limit }) }, t4.startLedger && { startLedger: t4.startLedger })));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return M.apply(this, arguments);
        }) }, { key: "getNetwork", value: (U = k(E().mark(function e4() {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.next = 2, l2(this.serverURL.toString(), "getNetwork");
              case 2:
                return e5.abrupt("return", e5.sent);
              case 3:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return U.apply(this, arguments);
        }) }, { key: "getLatestLedger", value: (N = k(E().mark(function e4() {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", l2(this.serverURL.toString(), "getLatestLedger"));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function() {
          return N.apply(this, arguments);
        }) }, { key: "simulateTransaction", value: (B = k(E().mark(function e4(t4, r5) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", this._simulateTransaction(t4, r5).then(d.jr));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4, t4) {
          return B.apply(this, arguments);
        }) }, { key: "_simulateTransaction", value: (L = k(E().mark(function e4(t4, r5) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", l2(this.serverURL.toString(), "simulateTransaction", w({ transaction: t4.toXDR() }, void 0 !== r5 && { resourceConfig: { instructionLeeway: r5.cpuInstructions } })));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4, t4) {
          return L.apply(this, arguments);
        }) }, { key: "prepareTransaction", value: (C = k(E().mark(function e4(t4) {
          var r5;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.next = 2, this.simulateTransaction(t4);
              case 2:
                if (r5 = e5.sent, !p.j.isSimulationError(r5)) {
                  e5.next = 5;
                  break;
                }
                throw r5.error;
              case 5:
                return e5.abrupt("return", (0, h.X)(t4, r5).build());
              case 6:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return C.apply(this, arguments);
        }) }, { key: "sendTransaction", value: (I = k(E().mark(function e4(t4) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", this._sendTransaction(t4).then(d.Af));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return I.apply(this, arguments);
        }) }, { key: "_sendTransaction", value: (j = k(E().mark(function e4(t4) {
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return e5.abrupt("return", l2(this.serverURL.toString(), "sendTransaction", { transaction: t4.toXDR() }));
              case 1:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        })), function(e4) {
          return j.apply(this, arguments);
        }) }, { key: "requestAirdrop", value: (R = k(E().mark(function e4(t4, r5) {
          var n3, o3, s2, u2, c2, l3;
          return E().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                if (n3 = "string" == typeof t4 ? t4 : t4.accountId(), e5.t0 = r5, e5.t0) {
                  e5.next = 6;
                  break;
                }
                return e5.next = 5, this.getNetwork();
              case 5:
                e5.t0 = e5.sent.friendbotUrl;
              case 6:
                if (r5 = e5.t0) {
                  e5.next = 9;
                  break;
                }
                throw new Error("No friendbot URL configured for current network");
              case 9:
                return e5.prev = 9, e5.next = 12, a.Ay.post("".concat(r5, "?addr=").concat(encodeURIComponent(n3)));
              case 12:
                return o3 = e5.sent, s2 = i.xdr.TransactionMeta.fromXDR(o3.data.result_meta_xdr, "base64"), u2 = Y(s2), e5.abrupt("return", new i.Account(n3, u2));
              case 18:
                if (e5.prev = 18, e5.t1 = e5.catch(9), 400 !== (null === (c2 = e5.t1.response) || void 0 === c2 ? void 0 : c2.status)) {
                  e5.next = 23;
                  break;
                }
                if (null === (l3 = e5.t1.response.detail) || void 0 === l3 || !l3.includes("createAccountAlreadyExist")) {
                  e5.next = 23;
                  break;
                }
                return e5.abrupt("return", this.getAccount(n3));
              case 23:
                throw e5.t1;
              case 24:
              case "end":
                return e5.stop();
            }
          }, e4, this, [[9, 18]]);
        })), function(e4, t4) {
          return R.apply(this, arguments);
        }) }], A && T(x.prototype, A), P && T(x, P), Object.defineProperty(x, "prototype", { writable: false }), x);
        function Y(e4) {
          var t4 = [];
          switch (e4.switch()) {
            case 0:
              t4 = e4.operations();
              break;
            case 1:
            case 2:
            case 3:
              t4 = e4.value().operations();
              break;
            default:
              throw new Error("Unexpected transaction meta switch value");
          }
          var r5, n3 = v(t4);
          try {
            for (n3.s(); !(r5 = n3.n()).done; ) {
              var o3, a2 = v(r5.value.changes());
              try {
                for (a2.s(); !(o3 = a2.n()).done; ) {
                  var s2 = o3.value;
                  if (s2.switch() === i.xdr.LedgerEntryChangeType.ledgerEntryCreated()) {
                    var u2 = s2.created().data();
                    if (u2.switch() === i.xdr.LedgerEntryType.account()) return u2.account().seqNum().toString();
                  }
                }
              } catch (e5) {
                a2.e(e5);
              } finally {
                a2.f();
              }
            }
          } catch (e5) {
            n3.e(e5);
          } finally {
            n3.f();
          }
          throw new Error("No account created in transaction");
        }
      }, 8680: (e3, t3, r4) => {
        "use strict";
        r4.d(t3, { X: () => a });
        var n2 = r4(356), o2 = r4(4076), i = r4(784);
        function a(e4, t4) {
          var r5;
          if ("innerTransaction" in e4) return a(e4.innerTransaction, t4);
          if (!function(e5) {
            if (1 !== e5.operations.length) return false;
            switch (e5.operations[0].type) {
              case "invokeHostFunction":
              case "extendFootprintTtl":
              case "restoreFootprint":
                return true;
              default:
                return false;
            }
          }(e4)) throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
          var s = (0, i.jr)(t4);
          if (!o2.j.isSimulationSuccess(s)) throw new Error("simulation incorrect: ".concat(JSON.stringify(s)));
          var u = parseInt(e4.fee) || 0, c = parseInt(s.minResourceFee) || 0, l2 = n2.TransactionBuilder.cloneFrom(e4, { fee: (u + c).toString(), sorobanData: s.transactionData.build(), networkPassphrase: e4.networkPassphrase });
          if ("invokeHostFunction" === e4.operations[0].type) {
            l2.clearOperations();
            var f = e4.operations[0], p = null !== (r5 = f.auth) && void 0 !== r5 ? r5 : [];
            l2.addOperation(n2.Operation.invokeHostFunction({ source: f.source, func: f.func, auth: p.length > 0 ? p : s.result.auth }));
          }
          return l2;
        }
      }, 3898: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { Api: () => {
        }, Resolver: () => b, STELLAR_TOML_MAX_SIZE: () => v });
        var n2 = r4(1083), o2 = r4(1293), i = r4.n(o2), a = r4(8732);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u() {
          u = function() {
            return t4;
          };
          var e4, t4 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, o3 = Object.defineProperty || function(e5, t5, r6) {
            e5[t5] = r6.value;
          }, i2 = "function" == typeof Symbol ? Symbol : {}, a2 = i2.iterator || "@@iterator", c2 = i2.asyncIterator || "@@asyncIterator", l3 = i2.toStringTag || "@@toStringTag";
          function f2(e5, t5, r6) {
            return Object.defineProperty(e5, t5, { value: r6, enumerable: true, configurable: true, writable: true }), e5[t5];
          }
          try {
            f2({}, "");
          } catch (e5) {
            f2 = function(e6, t5, r6) {
              return e6[t5] = r6;
            };
          }
          function p2(e5, t5, r6, n4) {
            var i3 = t5 && t5.prototype instanceof b2 ? t5 : b2, a3 = Object.create(i3.prototype), s2 = new I(n4 || []);
            return o3(a3, "_invoke", { value: A(e5, r6, s2) }), a3;
          }
          function h2(e5, t5, r6) {
            try {
              return { type: "normal", arg: e5.call(t5, r6) };
            } catch (e6) {
              return { type: "throw", arg: e6 };
            }
          }
          t4.wrap = p2;
          var d2 = "suspendedStart", y2 = "suspendedYield", m2 = "executing", v2 = "completed", g2 = {};
          function b2() {
          }
          function w() {
          }
          function S() {
          }
          var E = {};
          f2(E, a2, function() {
            return this;
          });
          var _ = Object.getPrototypeOf, k = _ && _(_(C([])));
          k && k !== r5 && n3.call(k, a2) && (E = k);
          var T = S.prototype = b2.prototype = Object.create(E);
          function O(e5) {
            ["next", "throw", "return"].forEach(function(t5) {
              f2(e5, t5, function(e6) {
                return this._invoke(t5, e6);
              });
            });
          }
          function x(e5, t5) {
            function r6(o4, i4, a3, u2) {
              var c3 = h2(e5[o4], e5, i4);
              if ("throw" !== c3.type) {
                var l4 = c3.arg, f3 = l4.value;
                return f3 && "object" == s(f3) && n3.call(f3, "__await") ? t5.resolve(f3.__await).then(function(e6) {
                  r6("next", e6, a3, u2);
                }, function(e6) {
                  r6("throw", e6, a3, u2);
                }) : t5.resolve(f3).then(function(e6) {
                  l4.value = e6, a3(l4);
                }, function(e6) {
                  return r6("throw", e6, a3, u2);
                });
              }
              u2(c3.arg);
            }
            var i3;
            o3(this, "_invoke", { value: function(e6, n4) {
              function o4() {
                return new t5(function(t6, o5) {
                  r6(e6, n4, t6, o5);
                });
              }
              return i3 = i3 ? i3.then(o4, o4) : o4();
            } });
          }
          function A(t5, r6, n4) {
            var o4 = d2;
            return function(i3, a3) {
              if (o4 === m2) throw Error("Generator is already running");
              if (o4 === v2) {
                if ("throw" === i3) throw a3;
                return { value: e4, done: true };
              }
              for (n4.method = i3, n4.arg = a3; ; ) {
                var s2 = n4.delegate;
                if (s2) {
                  var u2 = P(s2, n4);
                  if (u2) {
                    if (u2 === g2) continue;
                    return u2;
                  }
                }
                if ("next" === n4.method) n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (o4 === d2) throw o4 = v2, n4.arg;
                  n4.dispatchException(n4.arg);
                } else "return" === n4.method && n4.abrupt("return", n4.arg);
                o4 = m2;
                var c3 = h2(t5, r6, n4);
                if ("normal" === c3.type) {
                  if (o4 = n4.done ? v2 : y2, c3.arg === g2) continue;
                  return { value: c3.arg, done: n4.done };
                }
                "throw" === c3.type && (o4 = v2, n4.method = "throw", n4.arg = c3.arg);
              }
            };
          }
          function P(t5, r6) {
            var n4 = r6.method, o4 = t5.iterator[n4];
            if (o4 === e4) return r6.delegate = null, "throw" === n4 && t5.iterator.return && (r6.method = "return", r6.arg = e4, P(t5, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), g2;
            var i3 = h2(o4, t5.iterator, r6.arg);
            if ("throw" === i3.type) return r6.method = "throw", r6.arg = i3.arg, r6.delegate = null, g2;
            var a3 = i3.arg;
            return a3 ? a3.done ? (r6[t5.resultName] = a3.value, r6.next = t5.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = e4), r6.delegate = null, g2) : a3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, g2);
          }
          function R(e5) {
            var t5 = { tryLoc: e5[0] };
            1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
          }
          function j(e5) {
            var t5 = e5.completion || {};
            t5.type = "normal", delete t5.arg, e5.completion = t5;
          }
          function I(e5) {
            this.tryEntries = [{ tryLoc: "root" }], e5.forEach(R, this), this.reset(true);
          }
          function C(t5) {
            if (t5 || "" === t5) {
              var r6 = t5[a2];
              if (r6) return r6.call(t5);
              if ("function" == typeof t5.next) return t5;
              if (!isNaN(t5.length)) {
                var o4 = -1, i3 = function r7() {
                  for (; ++o4 < t5.length; ) if (n3.call(t5, o4)) return r7.value = t5[o4], r7.done = false, r7;
                  return r7.value = e4, r7.done = true, r7;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(s(t5) + " is not iterable");
          }
          return w.prototype = S, o3(T, "constructor", { value: S, configurable: true }), o3(S, "constructor", { value: w, configurable: true }), w.displayName = f2(S, l3, "GeneratorFunction"), t4.isGeneratorFunction = function(e5) {
            var t5 = "function" == typeof e5 && e5.constructor;
            return !!t5 && (t5 === w || "GeneratorFunction" === (t5.displayName || t5.name));
          }, t4.mark = function(e5) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e5, S) : (e5.__proto__ = S, f2(e5, l3, "GeneratorFunction")), e5.prototype = Object.create(T), e5;
          }, t4.awrap = function(e5) {
            return { __await: e5 };
          }, O(x.prototype), f2(x.prototype, c2, function() {
            return this;
          }), t4.AsyncIterator = x, t4.async = function(e5, r6, n4, o4, i3) {
            void 0 === i3 && (i3 = Promise);
            var a3 = new x(p2(e5, r6, n4, o4), i3);
            return t4.isGeneratorFunction(r6) ? a3 : a3.next().then(function(e6) {
              return e6.done ? e6.value : a3.next();
            });
          }, O(T), f2(T, l3, "Generator"), f2(T, a2, function() {
            return this;
          }), f2(T, "toString", function() {
            return "[object Generator]";
          }), t4.keys = function(e5) {
            var t5 = Object(e5), r6 = [];
            for (var n4 in t5) r6.push(n4);
            return r6.reverse(), function e6() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in t5) return e6.value = n5, e6.done = false, e6;
              }
              return e6.done = true, e6;
            };
          }, t4.values = C, I.prototype = { constructor: I, reset: function(t5) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = e4, this.done = false, this.delegate = null, this.method = "next", this.arg = e4, this.tryEntries.forEach(j), !t5) for (var r6 in this) "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = e4);
          }, stop: function() {
            this.done = true;
            var e5 = this.tryEntries[0].completion;
            if ("throw" === e5.type) throw e5.arg;
            return this.rval;
          }, dispatchException: function(t5) {
            if (this.done) throw t5;
            var r6 = this;
            function o4(n4, o5) {
              return s2.type = "throw", s2.arg = t5, r6.next = n4, o5 && (r6.method = "next", r6.arg = e4), !!o5;
            }
            for (var i3 = this.tryEntries.length - 1; i3 >= 0; --i3) {
              var a3 = this.tryEntries[i3], s2 = a3.completion;
              if ("root" === a3.tryLoc) return o4("end");
              if (a3.tryLoc <= this.prev) {
                var u2 = n3.call(a3, "catchLoc"), c3 = n3.call(a3, "finallyLoc");
                if (u2 && c3) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                } else if (u2) {
                  if (this.prev < a3.catchLoc) return o4(a3.catchLoc, true);
                } else {
                  if (!c3) throw Error("try statement without catch or finally");
                  if (this.prev < a3.finallyLoc) return o4(a3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e5, t5) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var o4 = this.tryEntries[r6];
              if (o4.tryLoc <= this.prev && n3.call(o4, "finallyLoc") && this.prev < o4.finallyLoc) {
                var i3 = o4;
                break;
              }
            }
            i3 && ("break" === e5 || "continue" === e5) && i3.tryLoc <= t5 && t5 <= i3.finallyLoc && (i3 = null);
            var a3 = i3 ? i3.completion : {};
            return a3.type = e5, a3.arg = t5, i3 ? (this.method = "next", this.next = i3.finallyLoc, g2) : this.complete(a3);
          }, complete: function(e5, t5) {
            if ("throw" === e5.type) throw e5.arg;
            return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), g2;
          }, finish: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.finallyLoc === e5) return this.complete(r6.completion, r6.afterLoc), j(r6), g2;
            }
          }, catch: function(e5) {
            for (var t5 = this.tryEntries.length - 1; t5 >= 0; --t5) {
              var r6 = this.tryEntries[t5];
              if (r6.tryLoc === e5) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var o4 = n4.arg;
                  j(r6);
                }
                return o4;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(t5, r6, n4) {
            return this.delegate = { iterator: C(t5), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = e4), g2;
          } }, t4;
        }
        function c(e4, t4, r5, n3, o3, i2, a2) {
          try {
            var s2 = e4[i2](a2), u2 = s2.value;
          } catch (e5) {
            return void r5(e5);
          }
          s2.done ? t4(u2) : Promise.resolve(u2).then(n3, o3);
        }
        function l2(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, f(n3.key), n3);
          }
        }
        function f(e4) {
          var t4 = function(e5, t5) {
            if ("object" != s(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != s(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == s(t4) ? t4 : t4 + "";
        }
        var p, h, d, y, m, v = 102400, g = n2.A.CancelToken, b = (p = function e4() {
          !function(e5, t4) {
            if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
          }(this, e4);
        }, h = null, d = [{ key: "resolve", value: (y = u().mark(function e4(t4) {
          var r5, o3, s2, c2, l3 = arguments;
          return u().wrap(function(e5) {
            for (; ; ) switch (e5.prev = e5.next) {
              case 0:
                return o3 = void 0 === (r5 = l3.length > 1 && void 0 !== l3[1] ? l3[1] : {}).allowHttp ? a.T.isAllowHttp() : r5.allowHttp, s2 = void 0 === r5.timeout ? a.T.getTimeout() : r5.timeout, c2 = o3 ? "http" : "https", e5.abrupt("return", n2.A.get("".concat(c2, "://").concat(t4, "/.well-known/stellar.toml"), { maxContentLength: v, cancelToken: s2 ? new g(function(e6) {
                  return setTimeout(function() {
                    return e6("timeout of ".concat(s2, "ms exceeded"));
                  }, s2);
                }) : void 0, timeout: s2 }).then(function(e6) {
                  try {
                    var t5 = i().parse(e6.data);
                    return Promise.resolve(t5);
                  } catch (e7) {
                    return Promise.reject(new Error("stellar.toml is invalid - Parsing error on line ".concat(e7.line, ", column ").concat(e7.column, ": ").concat(e7.message)));
                  }
                }).catch(function(e6) {
                  throw e6.message.match(/^maxContentLength size/) ? new Error("stellar.toml file exceeds allowed size of ".concat(v)) : e6;
                }));
              case 5:
              case "end":
                return e5.stop();
            }
          }, e4);
        }), m = function() {
          var e4 = this, t4 = arguments;
          return new Promise(function(r5, n3) {
            var o3 = y.apply(e4, t4);
            function i2(e5) {
              c(o3, r5, n3, i2, a2, "next", e5);
            }
            function a2(e5) {
              c(o3, r5, n3, i2, a2, "throw", e5);
            }
            i2(void 0);
          });
        }, function(e4) {
          return m.apply(this, arguments);
        }) }], h && l2(p.prototype, h), d && l2(p, d), Object.defineProperty(p, "prototype", { writable: false }), p);
      }, 3121: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, n2(e4);
        }
        function o2(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, i(n3.key), n3);
          }
        }
        function i(e4) {
          var t4 = function(e5, t5) {
            if ("object" != n2(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var o3 = r5.call(e5, t5 || "default");
              if ("object" != n2(o3)) return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == n2(t4) ? t4 : t4 + "";
        }
        r4.d(t3, { A: () => c });
        var a, s, u, c = (a = function e4() {
          !function(e5, t4) {
            if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
          }(this, e4);
        }, u = [{ key: "validateTimebounds", value: function(e4) {
          var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
          if (!e4.timeBounds) return false;
          var r5 = Math.floor(Date.now() / 1e3), n3 = e4.timeBounds, o3 = n3.minTime, i2 = n3.maxTime;
          return r5 >= Number.parseInt(o3, 10) - t4 && r5 <= Number.parseInt(i2, 10) + t4;
        } }], (s = null) && o2(a.prototype, s), u && o2(a, u), Object.defineProperty(a, "prototype", { writable: false }), a);
      }, 5479: (e3, t3, r4) => {
        "use strict";
        r4.r(t3), r4.d(t3, { InvalidChallengeError: () => y, buildChallengeTx: () => k, gatherTxSigners: () => P, readChallengeTx: () => T, verifyChallengeTxSigners: () => x, verifyChallengeTxThreshold: () => O, verifyTxSignedBy: () => A });
        var n2 = r4(3209), o2 = r4.n(n2), i = r4(356), a = r4(3121);
        function s(e4) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, s(e4);
        }
        function u(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, c(n3.key), n3);
          }
        }
        function c(e4) {
          var t4 = function(e5, t5) {
            if ("object" != s(e5) || !e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != s(n3)) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == s(t4) ? t4 : t4 + "";
        }
        function l2(e4, t4, r5) {
          return t4 = d(t4), function(e5, t5) {
            if (t5 && ("object" == s(t5) || "function" == typeof t5)) return t5;
            if (void 0 !== t5) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e6) {
              if (void 0 === e6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return e6;
            }(e5);
          }(e4, p() ? Reflect.construct(t4, r5 || [], d(e4).constructor) : t4.apply(e4, r5));
        }
        function f(e4) {
          var t4 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return f = function(e5) {
            if (null === e5 || !function(e6) {
              try {
                return -1 !== Function.toString.call(e6).indexOf("[native code]");
              } catch (t5) {
                return "function" == typeof e6;
              }
            }(e5)) return e5;
            if ("function" != typeof e5) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== t4) {
              if (t4.has(e5)) return t4.get(e5);
              t4.set(e5, r5);
            }
            function r5() {
              return function(e6, t5, r6) {
                if (p()) return Reflect.construct.apply(null, arguments);
                var n3 = [null];
                n3.push.apply(n3, t5);
                var o3 = new (e6.bind.apply(e6, n3))();
                return r6 && h(o3, r6.prototype), o3;
              }(e5, arguments, d(this).constructor);
            }
            return r5.prototype = Object.create(e5.prototype, { constructor: { value: r5, enumerable: false, writable: true, configurable: true } }), h(r5, e5);
          }, f(e4);
        }
        function p() {
          try {
            var e4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (e5) {
          }
          return (p = function() {
            return !!e4;
          })();
        }
        function h(e4, t4) {
          return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
            return e5.__proto__ = t5, e5;
          }, h(e4, t4);
        }
        function d(e4) {
          return d = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
            return e5.__proto__ || Object.getPrototypeOf(e5);
          }, d(e4);
        }
        var y = function(e4) {
          function t4(e5) {
            var r6;
            !function(e6, t5) {
              if (!(e6 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, t4);
            var n4 = (this instanceof t4 ? this.constructor : void 0).prototype;
            return (r6 = l2(this, t4, [e5])).__proto__ = n4, r6.constructor = t4, r6.name = "InvalidChallengeError", r6;
          }
          return function(e5, t5) {
            if ("function" != typeof t5 && null !== t5) throw new TypeError("Super expression must either be null or a function");
            e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && h(e5, t5);
          }(t4, e4), r5 = t4, n3 && u(r5.prototype, n3), o3 && u(r5, o3), Object.defineProperty(r5, "prototype", { writable: false }), r5;
          var r5, n3, o3;
        }(f(Error)), m = r4(8287).Buffer;
        function v(e4) {
          return function(e5) {
            if (Array.isArray(e5)) return E(e5);
          }(e4) || _(e4) || S(e4) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function g(e4, t4) {
          var r5 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
          if (!r5) {
            if (Array.isArray(e4) || (r5 = S(e4)) || t4 && e4 && "number" == typeof e4.length) {
              r5 && (e4 = r5);
              var n3 = 0, o3 = function() {
              };
              return { s: o3, n: function() {
                return n3 >= e4.length ? { done: true } : { done: false, value: e4[n3++] };
              }, e: function(e5) {
                throw e5;
              }, f: o3 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, a2 = true, s2 = false;
          return { s: function() {
            r5 = r5.call(e4);
          }, n: function() {
            var e5 = r5.next();
            return a2 = e5.done, e5;
          }, e: function(e5) {
            s2 = true, i2 = e5;
          }, f: function() {
            try {
              a2 || null == r5.return || r5.return();
            } finally {
              if (s2) throw i2;
            }
          } };
        }
        function b(e4) {
          return b = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, b(e4);
        }
        function w(e4) {
          return function(e5) {
            if (Array.isArray(e5)) return e5;
          }(e4) || _(e4) || S(e4) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function S(e4, t4) {
          if (e4) {
            if ("string" == typeof e4) return E(e4, t4);
            var r5 = {}.toString.call(e4).slice(8, -1);
            return "Object" === r5 && e4.constructor && (r5 = e4.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(e4) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? E(e4, t4) : void 0;
          }
        }
        function E(e4, t4) {
          (null == t4 || t4 > e4.length) && (t4 = e4.length);
          for (var r5 = 0, n3 = Array(t4); r5 < t4; r5++) n3[r5] = e4[r5];
          return n3;
        }
        function _(e4) {
          if ("undefined" != typeof Symbol && null != e4[Symbol.iterator] || null != e4["@@iterator"]) return Array.from(e4);
        }
        function k(e4, t4, r5) {
          var n3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 300, a2 = arguments.length > 4 ? arguments[4] : void 0, s2 = arguments.length > 5 ? arguments[5] : void 0, u2 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null, c2 = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null, l3 = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null;
          if (t4.startsWith("M") && u2) throw Error("memo cannot be used if clientAccountID is a muxed account");
          var f2 = new i.Account(e4.publicKey(), "-1"), p2 = Math.floor(Date.now() / 1e3), h2 = o2()(48).toString("base64"), d2 = new i.TransactionBuilder(f2, { fee: i.BASE_FEE, networkPassphrase: a2, timebounds: { minTime: p2, maxTime: p2 + n3 } }).addOperation(i.Operation.manageData({ name: "".concat(r5, " auth"), value: h2, source: t4 })).addOperation(i.Operation.manageData({ name: "web_auth_domain", value: s2, source: f2.accountId() }));
          if (c2) {
            if (!l3) throw Error("clientSigningKey is required if clientDomain is provided");
            d2.addOperation(i.Operation.manageData({ name: "client_domain", value: c2, source: l3 }));
          }
          u2 && d2.addMemo(i.Memo.id(u2));
          var y2 = d2.build();
          return y2.sign(e4), y2.toEnvelope().toXDR("base64").toString();
        }
        function T(e4, t4, r5, n3, o3) {
          var s2, u2;
          if (t4.startsWith("M")) throw Error("Invalid serverAccountID: multiplexed accounts are not supported.");
          try {
            u2 = new i.Transaction(e4, r5);
          } catch (t5) {
            try {
              u2 = new i.FeeBumpTransaction(e4, r5);
            } catch (e5) {
              throw new y("Invalid challenge: unable to deserialize challengeTx transaction string");
            }
            throw new y("Invalid challenge: expected a Transaction but received a FeeBumpTransaction");
          }
          if (0 !== Number.parseInt(u2.sequence, 10)) throw new y("The transaction sequence number should be zero");
          if (u2.source !== t4) throw new y("The transaction source account is not equal to the server's account");
          if (u2.operations.length < 1) throw new y("The transaction should contain at least one operation");
          var c2 = w(u2.operations), l3 = c2[0], f2 = c2.slice(1);
          if (!l3.source) throw new y("The transaction's operation should contain a source account");
          var p2, h2 = l3.source, d2 = null;
          if (u2.memo.type !== i.MemoNone) {
            if (h2.startsWith("M")) throw new y("The transaction has a memo but the client account ID is a muxed account");
            if (u2.memo.type !== i.MemoID) throw new y("The transaction's memo must be of type `id`");
            d2 = u2.memo.value;
          }
          if ("manageData" !== l3.type) throw new y("The transaction's operation type should be 'manageData'");
          if (u2.timeBounds && Number.parseInt(null === (s2 = u2.timeBounds) || void 0 === s2 ? void 0 : s2.maxTime, 10) === i.TimeoutInfinite) throw new y("The transaction requires non-infinite timebounds");
          if (!a.A.validateTimebounds(u2, 300)) throw new y("The transaction has expired");
          if (void 0 === l3.value) throw new y("The transaction's operation values should not be null");
          if (!l3.value) throw new y("The transaction's operation value should not be null");
          if (48 !== m.from(l3.value.toString(), "base64").length) throw new y("The transaction's operation value should be a 64 bytes base64 random string");
          if (!n3) throw new y("Invalid homeDomains: a home domain must be provided for verification");
          if ("string" == typeof n3) "".concat(n3, " auth") === l3.name && (p2 = n3);
          else {
            if (!Array.isArray(n3)) throw new y("Invalid homeDomains: homeDomains type is ".concat(b(n3), " but should be a string or an array"));
            p2 = n3.find(function(e5) {
              return "".concat(e5, " auth") === l3.name;
            });
          }
          if (!p2) throw new y("Invalid homeDomains: the transaction's operation key name does not match the expected home domain");
          var v2, S2 = g(f2);
          try {
            for (S2.s(); !(v2 = S2.n()).done; ) {
              var E2 = v2.value;
              if ("manageData" !== E2.type) throw new y("The transaction has operations that are not of type 'manageData'");
              if (E2.source !== t4 && "client_domain" !== E2.name) throw new y("The transaction has operations that are unrecognized");
              if ("web_auth_domain" === E2.name) {
                if (void 0 === E2.value) throw new y("'web_auth_domain' operation value should not be null");
                if (E2.value.compare(m.from(o3))) throw new y("'web_auth_domain' operation value does not match ".concat(o3));
              }
            }
          } catch (e5) {
            S2.e(e5);
          } finally {
            S2.f();
          }
          if (!A(u2, t4)) throw new y("Transaction not signed by server: '".concat(t4, "'"));
          return { tx: u2, clientAccountID: h2, matchedHomeDomain: p2, memo: d2 };
        }
        function O(e4, t4, r5, n3, o3, i2, a2) {
          for (var s2 = x(e4, t4, r5, o3.map(function(e5) {
            return e5.key;
          }), i2, a2), u2 = 0, c2 = function() {
            var e5, t5 = f2[l3], r6 = (null === (e5 = o3.find(function(e6) {
              return e6.key === t5;
            })) || void 0 === e5 ? void 0 : e5.weight) || 0;
            u2 += r6;
          }, l3 = 0, f2 = s2; l3 < f2.length; l3++) c2();
          if (u2 < n3) throw new y("signers with weight ".concat(u2, " do not meet threshold ").concat(n3, '"'));
          return s2;
        }
        function x(e4, t4, r5, n3, o3, a2) {
          var s2, u2 = T(e4, t4, r5, o3, a2).tx;
          try {
            s2 = i.Keypair.fromPublicKey(t4);
          } catch (e5) {
            throw new Error("Couldn't infer keypair from the provided 'serverAccountID': " + e5.message);
          }
          var c2, l3, f2 = /* @__PURE__ */ new Set(), p2 = g(n3);
          try {
            for (p2.s(); !(c2 = p2.n()).done; ) {
              var h2 = c2.value;
              h2 !== s2.publicKey() && ("G" === h2.charAt(0) && f2.add(h2));
            }
          } catch (e5) {
            p2.e(e5);
          } finally {
            p2.f();
          }
          if (0 === f2.size) throw new y("No verifiable client signers provided, at least one G... address must be provided");
          var d2, m2 = g(u2.operations);
          try {
            for (m2.s(); !(d2 = m2.n()).done; ) {
              var b2 = d2.value;
              if ("manageData" === b2.type && "client_domain" === b2.name) {
                if (l3) throw new y("Found more than one client_domain operation");
                l3 = b2.source;
              }
            }
          } catch (e5) {
            m2.e(e5);
          } finally {
            m2.f();
          }
          var w2 = [s2.publicKey()].concat(v(Array.from(f2)));
          l3 && w2.push(l3);
          for (var S2 = P(u2, w2), E2 = false, _2 = false, k2 = 0, O2 = S2; k2 < O2.length; k2++) {
            var x2 = O2[k2];
            x2 === s2.publicKey() && (E2 = true), x2 === l3 && (_2 = true);
          }
          if (!E2) throw new y("Transaction not signed by server: '" + s2.publicKey() + "'");
          if (l3 && !_2) throw new y("Transaction not signed by the source account of the 'client_domain' ManageData operation");
          if (1 === S2.length) throw new y("None of the given signers match the transaction signatures");
          if (S2.length !== u2.signatures.length) throw new y("Transaction has unrecognized signatures");
          return S2.splice(S2.indexOf(s2.publicKey()), 1), l3 && S2.splice(S2.indexOf(l3), 1), S2;
        }
        function A(e4, t4) {
          return 0 !== P(e4, [t4]).length;
        }
        function P(e4, t4) {
          var r5, n3 = e4.hash(), o3 = v(e4.signatures), a2 = /* @__PURE__ */ new Set(), s2 = g(t4);
          try {
            for (s2.s(); !(r5 = s2.n()).done; ) {
              var u2 = r5.value;
              if (0 === o3.length) break;
              var c2 = void 0;
              try {
                c2 = i.Keypair.fromPublicKey(u2);
              } catch (e5) {
                throw new y("Signer is not a valid address: " + e5.message);
              }
              for (var l3 = 0; l3 < o3.length; l3++) {
                var f2 = o3[l3];
                if (f2.hint().equals(c2.signatureHint()) && c2.verify(n3, f2.signature())) {
                  a2.add(u2), o3.splice(l3, 1);
                  break;
                }
              }
            }
          } catch (e5) {
            s2.e(e5);
          } finally {
            s2.f();
          }
          return Array.from(a2);
        }
      }, 5360: (e3, t3) => {
        "use strict";
        var r4 = function(e4, t4) {
          return t4 || (t4 = {}), e4.split("").forEach(function(e5, r5) {
            e5 in t4 || (t4[e5] = r5);
          }), t4;
        }, n2 = { alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", charmap: { 0: 14, 1: 8 } };
        n2.charmap = r4(n2.alphabet, n2.charmap);
        var o2 = { alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ", charmap: { O: 0, I: 1, L: 1 } };
        o2.charmap = r4(o2.alphabet, o2.charmap);
        var i = { alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", charmap: {} };
        function a(e4) {
          if (this.buf = [], this.shift = 8, this.carry = 0, e4) {
            switch (e4.type) {
              case "rfc4648":
                this.charmap = t3.rfc4648.charmap;
                break;
              case "crockford":
                this.charmap = t3.crockford.charmap;
                break;
              case "base32hex":
                this.charmap = t3.base32hex.charmap;
                break;
              default:
                throw new Error("invalid type");
            }
            e4.charmap && (this.charmap = e4.charmap);
          }
        }
        function s(e4) {
          if (this.buf = "", this.shift = 3, this.carry = 0, e4) {
            switch (e4.type) {
              case "rfc4648":
                this.alphabet = t3.rfc4648.alphabet;
                break;
              case "crockford":
                this.alphabet = t3.crockford.alphabet;
                break;
              case "base32hex":
                this.alphabet = t3.base32hex.alphabet;
                break;
              default:
                throw new Error("invalid type");
            }
            e4.alphabet ? this.alphabet = e4.alphabet : e4.lc && (this.alphabet = this.alphabet.toLowerCase());
          }
        }
        i.charmap = r4(i.alphabet, i.charmap), a.prototype.charmap = n2.charmap, a.prototype.write = function(e4) {
          var t4 = this.charmap, r5 = this.buf, n3 = this.shift, o3 = this.carry;
          return e4.toUpperCase().split("").forEach(function(e5) {
            if ("=" != e5) {
              var i2 = 255 & t4[e5];
              (n3 -= 5) > 0 ? o3 |= i2 << n3 : n3 < 0 ? (r5.push(o3 | i2 >> -n3), o3 = i2 << (n3 += 8) & 255) : (r5.push(o3 | i2), n3 = 8, o3 = 0);
            }
          }), this.shift = n3, this.carry = o3, this;
        }, a.prototype.finalize = function(e4) {
          return e4 && this.write(e4), 8 !== this.shift && 0 !== this.carry && (this.buf.push(this.carry), this.shift = 8, this.carry = 0), this.buf;
        }, s.prototype.alphabet = n2.alphabet, s.prototype.write = function(e4) {
          var t4, r5, n3, o3 = this.shift, i2 = this.carry;
          for (n3 = 0; n3 < e4.length; n3++) t4 = i2 | (r5 = e4[n3]) >> o3, this.buf += this.alphabet[31 & t4], o3 > 5 && (t4 = r5 >> (o3 -= 5), this.buf += this.alphabet[31 & t4]), i2 = r5 << (o3 = 5 - o3), o3 = 8 - o3;
          return this.shift = o3, this.carry = i2, this;
        }, s.prototype.finalize = function(e4) {
          return e4 && this.write(e4), 3 !== this.shift && (this.buf += this.alphabet[31 & this.carry], this.shift = 3, this.carry = 0), this.buf;
        }, t3.encode = function(e4, t4) {
          return new s(t4).finalize(e4);
        }, t3.decode = function(e4, t4) {
          return new a(t4).finalize(e4);
        }, t3.Decoder = a, t3.Encoder = s, t3.charmap = r4, t3.crockford = o2, t3.rfc4648 = n2, t3.base32hex = i;
      }, 7526: (e3, t3) => {
        "use strict";
        t3.byteLength = function(e4) {
          var t4 = s(e4), r5 = t4[0], n3 = t4[1];
          return 3 * (r5 + n3) / 4 - n3;
        }, t3.toByteArray = function(e4) {
          var t4, r5, i2 = s(e4), a2 = i2[0], u2 = i2[1], c = new o2(function(e5, t5, r6) {
            return 3 * (t5 + r6) / 4 - r6;
          }(0, a2, u2)), l2 = 0, f = u2 > 0 ? a2 - 4 : a2;
          for (r5 = 0; r5 < f; r5 += 4) t4 = n2[e4.charCodeAt(r5)] << 18 | n2[e4.charCodeAt(r5 + 1)] << 12 | n2[e4.charCodeAt(r5 + 2)] << 6 | n2[e4.charCodeAt(r5 + 3)], c[l2++] = t4 >> 16 & 255, c[l2++] = t4 >> 8 & 255, c[l2++] = 255 & t4;
          2 === u2 && (t4 = n2[e4.charCodeAt(r5)] << 2 | n2[e4.charCodeAt(r5 + 1)] >> 4, c[l2++] = 255 & t4);
          1 === u2 && (t4 = n2[e4.charCodeAt(r5)] << 10 | n2[e4.charCodeAt(r5 + 1)] << 4 | n2[e4.charCodeAt(r5 + 2)] >> 2, c[l2++] = t4 >> 8 & 255, c[l2++] = 255 & t4);
          return c;
        }, t3.fromByteArray = function(e4) {
          for (var t4, n3 = e4.length, o3 = n3 % 3, i2 = [], a2 = 16383, s2 = 0, c = n3 - o3; s2 < c; s2 += a2) i2.push(u(e4, s2, s2 + a2 > c ? c : s2 + a2));
          1 === o3 ? (t4 = e4[n3 - 1], i2.push(r4[t4 >> 2] + r4[t4 << 4 & 63] + "==")) : 2 === o3 && (t4 = (e4[n3 - 2] << 8) + e4[n3 - 1], i2.push(r4[t4 >> 10] + r4[t4 >> 4 & 63] + r4[t4 << 2 & 63] + "="));
          return i2.join("");
        };
        for (var r4 = [], n2 = [], o2 = "undefined" != typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0; a < 64; ++a) r4[a] = i[a], n2[i.charCodeAt(a)] = a;
        function s(e4) {
          var t4 = e4.length;
          if (t4 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var r5 = e4.indexOf("=");
          return -1 === r5 && (r5 = t4), [r5, r5 === t4 ? 0 : 4 - r5 % 4];
        }
        function u(e4, t4, n3) {
          for (var o3, i2, a2 = [], s2 = t4; s2 < n3; s2 += 3) o3 = (e4[s2] << 16 & 16711680) + (e4[s2 + 1] << 8 & 65280) + (255 & e4[s2 + 2]), a2.push(r4[(i2 = o3) >> 18 & 63] + r4[i2 >> 12 & 63] + r4[i2 >> 6 & 63] + r4[63 & i2]);
          return a2.join("");
        }
        n2["-".charCodeAt(0)] = 62, n2["_".charCodeAt(0)] = 63;
      }, 1594: function(e3, t3, r4) {
        var n2;
        !function(o2) {
          "use strict";
          var i, a = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, s = Math.ceil, u = Math.floor, c = "[BigNumber Error] ", l2 = c + "Number primitive has more than 15 significant digits: ", f = 1e14, p = 14, h = 9007199254740991, d = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], y = 1e7, m = 1e9;
          function v(e4) {
            var t4 = 0 | e4;
            return e4 > 0 || e4 === t4 ? t4 : t4 - 1;
          }
          function g(e4) {
            for (var t4, r5, n3 = 1, o3 = e4.length, i2 = e4[0] + ""; n3 < o3; ) {
              for (t4 = e4[n3++] + "", r5 = p - t4.length; r5--; t4 = "0" + t4) ;
              i2 += t4;
            }
            for (o3 = i2.length; 48 === i2.charCodeAt(--o3); ) ;
            return i2.slice(0, o3 + 1 || 1);
          }
          function b(e4, t4) {
            var r5, n3, o3 = e4.c, i2 = t4.c, a2 = e4.s, s2 = t4.s, u2 = e4.e, c2 = t4.e;
            if (!a2 || !s2) return null;
            if (r5 = o3 && !o3[0], n3 = i2 && !i2[0], r5 || n3) return r5 ? n3 ? 0 : -s2 : a2;
            if (a2 != s2) return a2;
            if (r5 = a2 < 0, n3 = u2 == c2, !o3 || !i2) return n3 ? 0 : !o3 ^ r5 ? 1 : -1;
            if (!n3) return u2 > c2 ^ r5 ? 1 : -1;
            for (s2 = (u2 = o3.length) < (c2 = i2.length) ? u2 : c2, a2 = 0; a2 < s2; a2++) if (o3[a2] != i2[a2]) return o3[a2] > i2[a2] ^ r5 ? 1 : -1;
            return u2 == c2 ? 0 : u2 > c2 ^ r5 ? 1 : -1;
          }
          function w(e4, t4, r5, n3) {
            if (e4 < t4 || e4 > r5 || e4 !== u(e4)) throw Error(c + (n3 || "Argument") + ("number" == typeof e4 ? e4 < t4 || e4 > r5 ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e4));
          }
          function S(e4) {
            var t4 = e4.c.length - 1;
            return v(e4.e / p) == t4 && e4.c[t4] % 2 != 0;
          }
          function E(e4, t4) {
            return (e4.length > 1 ? e4.charAt(0) + "." + e4.slice(1) : e4) + (t4 < 0 ? "e" : "e+") + t4;
          }
          function _(e4, t4, r5) {
            var n3, o3;
            if (t4 < 0) {
              for (o3 = r5 + "."; ++t4; o3 += r5) ;
              e4 = o3 + e4;
            } else if (++t4 > (n3 = e4.length)) {
              for (o3 = r5, t4 -= n3; --t4; o3 += r5) ;
              e4 += o3;
            } else t4 < n3 && (e4 = e4.slice(0, t4) + "." + e4.slice(t4));
            return e4;
          }
          i = function e4(t4) {
            var r5, n3, o3, i2, k, T, O, x, A, P, R = H.prototype = { constructor: H, toString: null, valueOf: null }, j = new H(1), I = 20, C = 4, L = -7, B = 21, N = -1e7, U = 1e7, M = false, D = 1, F = 0, V = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: " ", suffix: "" }, q = "0123456789abcdefghijklmnopqrstuvwxyz", K = true;
            function H(e5, t5) {
              var r6, i3, s2, c2, f2, d2, y2, m2, v2 = this;
              if (!(v2 instanceof H)) return new H(e5, t5);
              if (null == t5) {
                if (e5 && true === e5._isBigNumber) return v2.s = e5.s, void (!e5.c || e5.e > U ? v2.c = v2.e = null : e5.e < N ? v2.c = [v2.e = 0] : (v2.e = e5.e, v2.c = e5.c.slice()));
                if ((d2 = "number" == typeof e5) && 0 * e5 == 0) {
                  if (v2.s = 1 / e5 < 0 ? (e5 = -e5, -1) : 1, e5 === ~~e5) {
                    for (c2 = 0, f2 = e5; f2 >= 10; f2 /= 10, c2++) ;
                    return void (c2 > U ? v2.c = v2.e = null : (v2.e = c2, v2.c = [e5]));
                  }
                  m2 = String(e5);
                } else {
                  if (!a.test(m2 = String(e5))) return o3(v2, m2, d2);
                  v2.s = 45 == m2.charCodeAt(0) ? (m2 = m2.slice(1), -1) : 1;
                }
                (c2 = m2.indexOf(".")) > -1 && (m2 = m2.replace(".", "")), (f2 = m2.search(/e/i)) > 0 ? (c2 < 0 && (c2 = f2), c2 += +m2.slice(f2 + 1), m2 = m2.substring(0, f2)) : c2 < 0 && (c2 = m2.length);
              } else {
                if (w(t5, 2, q.length, "Base"), 10 == t5 && K) return W(v2 = new H(e5), I + v2.e + 1, C);
                if (m2 = String(e5), d2 = "number" == typeof e5) {
                  if (0 * e5 != 0) return o3(v2, m2, d2, t5);
                  if (v2.s = 1 / e5 < 0 ? (m2 = m2.slice(1), -1) : 1, H.DEBUG && m2.replace(/^0\.0*|\./, "").length > 15) throw Error(l2 + e5);
                } else v2.s = 45 === m2.charCodeAt(0) ? (m2 = m2.slice(1), -1) : 1;
                for (r6 = q.slice(0, t5), c2 = f2 = 0, y2 = m2.length; f2 < y2; f2++) if (r6.indexOf(i3 = m2.charAt(f2)) < 0) {
                  if ("." == i3) {
                    if (f2 > c2) {
                      c2 = y2;
                      continue;
                    }
                  } else if (!s2 && (m2 == m2.toUpperCase() && (m2 = m2.toLowerCase()) || m2 == m2.toLowerCase() && (m2 = m2.toUpperCase()))) {
                    s2 = true, f2 = -1, c2 = 0;
                    continue;
                  }
                  return o3(v2, String(e5), d2, t5);
                }
                d2 = false, (c2 = (m2 = n3(m2, t5, 10, v2.s)).indexOf(".")) > -1 ? m2 = m2.replace(".", "") : c2 = m2.length;
              }
              for (f2 = 0; 48 === m2.charCodeAt(f2); f2++) ;
              for (y2 = m2.length; 48 === m2.charCodeAt(--y2); ) ;
              if (m2 = m2.slice(f2, ++y2)) {
                if (y2 -= f2, d2 && H.DEBUG && y2 > 15 && (e5 > h || e5 !== u(e5))) throw Error(l2 + v2.s * e5);
                if ((c2 = c2 - f2 - 1) > U) v2.c = v2.e = null;
                else if (c2 < N) v2.c = [v2.e = 0];
                else {
                  if (v2.e = c2, v2.c = [], f2 = (c2 + 1) % p, c2 < 0 && (f2 += p), f2 < y2) {
                    for (f2 && v2.c.push(+m2.slice(0, f2)), y2 -= p; f2 < y2; ) v2.c.push(+m2.slice(f2, f2 += p));
                    f2 = p - (m2 = m2.slice(f2)).length;
                  } else f2 -= y2;
                  for (; f2--; m2 += "0") ;
                  v2.c.push(+m2);
                }
              } else v2.c = [v2.e = 0];
            }
            function z(e5, t5, r6, n4) {
              var o4, i3, a2, s2, u2;
              if (null == r6 ? r6 = C : w(r6, 0, 8), !e5.c) return e5.toString();
              if (o4 = e5.c[0], a2 = e5.e, null == t5) u2 = g(e5.c), u2 = 1 == n4 || 2 == n4 && (a2 <= L || a2 >= B) ? E(u2, a2) : _(u2, a2, "0");
              else if (i3 = (e5 = W(new H(e5), t5, r6)).e, s2 = (u2 = g(e5.c)).length, 1 == n4 || 2 == n4 && (t5 <= i3 || i3 <= L)) {
                for (; s2 < t5; u2 += "0", s2++) ;
                u2 = E(u2, i3);
              } else if (t5 -= a2, u2 = _(u2, i3, "0"), i3 + 1 > s2) {
                if (--t5 > 0) for (u2 += "."; t5--; u2 += "0") ;
              } else if ((t5 += i3 - s2) > 0) for (i3 + 1 == s2 && (u2 += "."); t5--; u2 += "0") ;
              return e5.s < 0 && o4 ? "-" + u2 : u2;
            }
            function X(e5, t5) {
              for (var r6, n4, o4 = 1, i3 = new H(e5[0]); o4 < e5.length; o4++) (!(n4 = new H(e5[o4])).s || (r6 = b(i3, n4)) === t5 || 0 === r6 && i3.s === t5) && (i3 = n4);
              return i3;
            }
            function G(e5, t5, r6) {
              for (var n4 = 1, o4 = t5.length; !t5[--o4]; t5.pop()) ;
              for (o4 = t5[0]; o4 >= 10; o4 /= 10, n4++) ;
              return (r6 = n4 + r6 * p - 1) > U ? e5.c = e5.e = null : r6 < N ? e5.c = [e5.e = 0] : (e5.e = r6, e5.c = t5), e5;
            }
            function W(e5, t5, r6, n4) {
              var o4, i3, a2, c2, l3, h2, y2, m2 = e5.c, v2 = d;
              if (m2) {
                e: {
                  for (o4 = 1, c2 = m2[0]; c2 >= 10; c2 /= 10, o4++) ;
                  if ((i3 = t5 - o4) < 0) i3 += p, a2 = t5, l3 = m2[h2 = 0], y2 = u(l3 / v2[o4 - a2 - 1] % 10);
                  else if ((h2 = s((i3 + 1) / p)) >= m2.length) {
                    if (!n4) break e;
                    for (; m2.length <= h2; m2.push(0)) ;
                    l3 = y2 = 0, o4 = 1, a2 = (i3 %= p) - p + 1;
                  } else {
                    for (l3 = c2 = m2[h2], o4 = 1; c2 >= 10; c2 /= 10, o4++) ;
                    y2 = (a2 = (i3 %= p) - p + o4) < 0 ? 0 : u(l3 / v2[o4 - a2 - 1] % 10);
                  }
                  if (n4 = n4 || t5 < 0 || null != m2[h2 + 1] || (a2 < 0 ? l3 : l3 % v2[o4 - a2 - 1]), n4 = r6 < 4 ? (y2 || n4) && (0 == r6 || r6 == (e5.s < 0 ? 3 : 2)) : y2 > 5 || 5 == y2 && (4 == r6 || n4 || 6 == r6 && (i3 > 0 ? a2 > 0 ? l3 / v2[o4 - a2] : 0 : m2[h2 - 1]) % 10 & 1 || r6 == (e5.s < 0 ? 8 : 7)), t5 < 1 || !m2[0]) return m2.length = 0, n4 ? (t5 -= e5.e + 1, m2[0] = v2[(p - t5 % p) % p], e5.e = -t5 || 0) : m2[0] = e5.e = 0, e5;
                  if (0 == i3 ? (m2.length = h2, c2 = 1, h2--) : (m2.length = h2 + 1, c2 = v2[p - i3], m2[h2] = a2 > 0 ? u(l3 / v2[o4 - a2] % v2[a2]) * c2 : 0), n4) for (; ; ) {
                    if (0 == h2) {
                      for (i3 = 1, a2 = m2[0]; a2 >= 10; a2 /= 10, i3++) ;
                      for (a2 = m2[0] += c2, c2 = 1; a2 >= 10; a2 /= 10, c2++) ;
                      i3 != c2 && (e5.e++, m2[0] == f && (m2[0] = 1));
                      break;
                    }
                    if (m2[h2] += c2, m2[h2] != f) break;
                    m2[h2--] = 0, c2 = 1;
                  }
                  for (i3 = m2.length; 0 === m2[--i3]; m2.pop()) ;
                }
                e5.e > U ? e5.c = e5.e = null : e5.e < N && (e5.c = [e5.e = 0]);
              }
              return e5;
            }
            function $(e5) {
              var t5, r6 = e5.e;
              return null === r6 ? e5.toString() : (t5 = g(e5.c), t5 = r6 <= L || r6 >= B ? E(t5, r6) : _(t5, r6, "0"), e5.s < 0 ? "-" + t5 : t5);
            }
            return H.clone = e4, H.ROUND_UP = 0, H.ROUND_DOWN = 1, H.ROUND_CEIL = 2, H.ROUND_FLOOR = 3, H.ROUND_HALF_UP = 4, H.ROUND_HALF_DOWN = 5, H.ROUND_HALF_EVEN = 6, H.ROUND_HALF_CEIL = 7, H.ROUND_HALF_FLOOR = 8, H.EUCLID = 9, H.config = H.set = function(e5) {
              var t5, r6;
              if (null != e5) {
                if ("object" != typeof e5) throw Error(c + "Object expected: " + e5);
                if (e5.hasOwnProperty(t5 = "DECIMAL_PLACES") && (w(r6 = e5[t5], 0, m, t5), I = r6), e5.hasOwnProperty(t5 = "ROUNDING_MODE") && (w(r6 = e5[t5], 0, 8, t5), C = r6), e5.hasOwnProperty(t5 = "EXPONENTIAL_AT") && ((r6 = e5[t5]) && r6.pop ? (w(r6[0], -m, 0, t5), w(r6[1], 0, m, t5), L = r6[0], B = r6[1]) : (w(r6, -m, m, t5), L = -(B = r6 < 0 ? -r6 : r6))), e5.hasOwnProperty(t5 = "RANGE")) if ((r6 = e5[t5]) && r6.pop) w(r6[0], -m, -1, t5), w(r6[1], 1, m, t5), N = r6[0], U = r6[1];
                else {
                  if (w(r6, -m, m, t5), !r6) throw Error(c + t5 + " cannot be zero: " + r6);
                  N = -(U = r6 < 0 ? -r6 : r6);
                }
                if (e5.hasOwnProperty(t5 = "CRYPTO")) {
                  if ((r6 = e5[t5]) !== !!r6) throw Error(c + t5 + " not true or false: " + r6);
                  if (r6) {
                    if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw M = !r6, Error(c + "crypto unavailable");
                    M = r6;
                  } else M = r6;
                }
                if (e5.hasOwnProperty(t5 = "MODULO_MODE") && (w(r6 = e5[t5], 0, 9, t5), D = r6), e5.hasOwnProperty(t5 = "POW_PRECISION") && (w(r6 = e5[t5], 0, m, t5), F = r6), e5.hasOwnProperty(t5 = "FORMAT")) {
                  if ("object" != typeof (r6 = e5[t5])) throw Error(c + t5 + " not an object: " + r6);
                  V = r6;
                }
                if (e5.hasOwnProperty(t5 = "ALPHABET")) {
                  if ("string" != typeof (r6 = e5[t5]) || /^.?$|[+\-.\s]|(.).*\1/.test(r6)) throw Error(c + t5 + " invalid: " + r6);
                  K = "0123456789" == r6.slice(0, 10), q = r6;
                }
              }
              return { DECIMAL_PLACES: I, ROUNDING_MODE: C, EXPONENTIAL_AT: [L, B], RANGE: [N, U], CRYPTO: M, MODULO_MODE: D, POW_PRECISION: F, FORMAT: V, ALPHABET: q };
            }, H.isBigNumber = function(e5) {
              if (!e5 || true !== e5._isBigNumber) return false;
              if (!H.DEBUG) return true;
              var t5, r6, n4 = e5.c, o4 = e5.e, i3 = e5.s;
              e: if ("[object Array]" == {}.toString.call(n4)) {
                if ((1 === i3 || -1 === i3) && o4 >= -m && o4 <= m && o4 === u(o4)) {
                  if (0 === n4[0]) {
                    if (0 === o4 && 1 === n4.length) return true;
                    break e;
                  }
                  if ((t5 = (o4 + 1) % p) < 1 && (t5 += p), String(n4[0]).length == t5) {
                    for (t5 = 0; t5 < n4.length; t5++) if ((r6 = n4[t5]) < 0 || r6 >= f || r6 !== u(r6)) break e;
                    if (0 !== r6) return true;
                  }
                }
              } else if (null === n4 && null === o4 && (null === i3 || 1 === i3 || -1 === i3)) return true;
              throw Error(c + "Invalid BigNumber: " + e5);
            }, H.maximum = H.max = function() {
              return X(arguments, -1);
            }, H.minimum = H.min = function() {
              return X(arguments, 1);
            }, H.random = (i2 = 9007199254740992, k = Math.random() * i2 & 2097151 ? function() {
              return u(Math.random() * i2);
            } : function() {
              return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
            }, function(e5) {
              var t5, r6, n4, o4, i3, a2 = 0, l3 = [], f2 = new H(j);
              if (null == e5 ? e5 = I : w(e5, 0, m), o4 = s(e5 / p), M) if (crypto.getRandomValues) {
                for (t5 = crypto.getRandomValues(new Uint32Array(o4 *= 2)); a2 < o4; ) (i3 = 131072 * t5[a2] + (t5[a2 + 1] >>> 11)) >= 9e15 ? (r6 = crypto.getRandomValues(new Uint32Array(2)), t5[a2] = r6[0], t5[a2 + 1] = r6[1]) : (l3.push(i3 % 1e14), a2 += 2);
                a2 = o4 / 2;
              } else {
                if (!crypto.randomBytes) throw M = false, Error(c + "crypto unavailable");
                for (t5 = crypto.randomBytes(o4 *= 7); a2 < o4; ) (i3 = 281474976710656 * (31 & t5[a2]) + 1099511627776 * t5[a2 + 1] + 4294967296 * t5[a2 + 2] + 16777216 * t5[a2 + 3] + (t5[a2 + 4] << 16) + (t5[a2 + 5] << 8) + t5[a2 + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t5, a2) : (l3.push(i3 % 1e14), a2 += 7);
                a2 = o4 / 7;
              }
              if (!M) for (; a2 < o4; ) (i3 = k()) < 9e15 && (l3[a2++] = i3 % 1e14);
              for (o4 = l3[--a2], e5 %= p, o4 && e5 && (i3 = d[p - e5], l3[a2] = u(o4 / i3) * i3); 0 === l3[a2]; l3.pop(), a2--) ;
              if (a2 < 0) l3 = [n4 = 0];
              else {
                for (n4 = -1; 0 === l3[0]; l3.splice(0, 1), n4 -= p) ;
                for (a2 = 1, i3 = l3[0]; i3 >= 10; i3 /= 10, a2++) ;
                a2 < p && (n4 -= p - a2);
              }
              return f2.e = n4, f2.c = l3, f2;
            }), H.sum = function() {
              for (var e5 = 1, t5 = arguments, r6 = new H(t5[0]); e5 < t5.length; ) r6 = r6.plus(t5[e5++]);
              return r6;
            }, n3 = /* @__PURE__ */ function() {
              var e5 = "0123456789";
              function t5(e6, t6, r6, n4) {
                for (var o4, i3, a2 = [0], s2 = 0, u2 = e6.length; s2 < u2; ) {
                  for (i3 = a2.length; i3--; a2[i3] *= t6) ;
                  for (a2[0] += n4.indexOf(e6.charAt(s2++)), o4 = 0; o4 < a2.length; o4++) a2[o4] > r6 - 1 && (null == a2[o4 + 1] && (a2[o4 + 1] = 0), a2[o4 + 1] += a2[o4] / r6 | 0, a2[o4] %= r6);
                }
                return a2.reverse();
              }
              return function(n4, o4, i3, a2, s2) {
                var u2, c2, l3, f2, p2, h2, d2, y2, m2 = n4.indexOf("."), v2 = I, b2 = C;
                for (m2 >= 0 && (f2 = F, F = 0, n4 = n4.replace(".", ""), h2 = (y2 = new H(o4)).pow(n4.length - m2), F = f2, y2.c = t5(_(g(h2.c), h2.e, "0"), 10, i3, e5), y2.e = y2.c.length), l3 = f2 = (d2 = t5(n4, o4, i3, s2 ? (u2 = q, e5) : (u2 = e5, q))).length; 0 == d2[--f2]; d2.pop()) ;
                if (!d2[0]) return u2.charAt(0);
                if (m2 < 0 ? --l3 : (h2.c = d2, h2.e = l3, h2.s = a2, d2 = (h2 = r5(h2, y2, v2, b2, i3)).c, p2 = h2.r, l3 = h2.e), m2 = d2[c2 = l3 + v2 + 1], f2 = i3 / 2, p2 = p2 || c2 < 0 || null != d2[c2 + 1], p2 = b2 < 4 ? (null != m2 || p2) && (0 == b2 || b2 == (h2.s < 0 ? 3 : 2)) : m2 > f2 || m2 == f2 && (4 == b2 || p2 || 6 == b2 && 1 & d2[c2 - 1] || b2 == (h2.s < 0 ? 8 : 7)), c2 < 1 || !d2[0]) n4 = p2 ? _(u2.charAt(1), -v2, u2.charAt(0)) : u2.charAt(0);
                else {
                  if (d2.length = c2, p2) for (--i3; ++d2[--c2] > i3; ) d2[c2] = 0, c2 || (++l3, d2 = [1].concat(d2));
                  for (f2 = d2.length; !d2[--f2]; ) ;
                  for (m2 = 0, n4 = ""; m2 <= f2; n4 += u2.charAt(d2[m2++])) ;
                  n4 = _(n4, l3, u2.charAt(0));
                }
                return n4;
              };
            }(), r5 = /* @__PURE__ */ function() {
              function e5(e6, t6, r7) {
                var n4, o4, i3, a2, s2 = 0, u2 = e6.length, c2 = t6 % y, l3 = t6 / y | 0;
                for (e6 = e6.slice(); u2--; ) s2 = ((o4 = c2 * (i3 = e6[u2] % y) + (n4 = l3 * i3 + (a2 = e6[u2] / y | 0) * c2) % y * y + s2) / r7 | 0) + (n4 / y | 0) + l3 * a2, e6[u2] = o4 % r7;
                return s2 && (e6 = [s2].concat(e6)), e6;
              }
              function t5(e6, t6, r7, n4) {
                var o4, i3;
                if (r7 != n4) i3 = r7 > n4 ? 1 : -1;
                else for (o4 = i3 = 0; o4 < r7; o4++) if (e6[o4] != t6[o4]) {
                  i3 = e6[o4] > t6[o4] ? 1 : -1;
                  break;
                }
                return i3;
              }
              function r6(e6, t6, r7, n4) {
                for (var o4 = 0; r7--; ) e6[r7] -= o4, o4 = e6[r7] < t6[r7] ? 1 : 0, e6[r7] = o4 * n4 + e6[r7] - t6[r7];
                for (; !e6[0] && e6.length > 1; e6.splice(0, 1)) ;
              }
              return function(n4, o4, i3, a2, s2) {
                var c2, l3, h2, d2, y2, m2, g2, b2, w2, S2, E2, _2, k2, T2, O2, x2, A2, P2 = n4.s == o4.s ? 1 : -1, R2 = n4.c, j2 = o4.c;
                if (!(R2 && R2[0] && j2 && j2[0])) return new H(n4.s && o4.s && (R2 ? !j2 || R2[0] != j2[0] : j2) ? R2 && 0 == R2[0] || !j2 ? 0 * P2 : P2 / 0 : NaN);
                for (w2 = (b2 = new H(P2)).c = [], P2 = i3 + (l3 = n4.e - o4.e) + 1, s2 || (s2 = f, l3 = v(n4.e / p) - v(o4.e / p), P2 = P2 / p | 0), h2 = 0; j2[h2] == (R2[h2] || 0); h2++) ;
                if (j2[h2] > (R2[h2] || 0) && l3--, P2 < 0) w2.push(1), d2 = true;
                else {
                  for (T2 = R2.length, x2 = j2.length, h2 = 0, P2 += 2, (y2 = u(s2 / (j2[0] + 1))) > 1 && (j2 = e5(j2, y2, s2), R2 = e5(R2, y2, s2), x2 = j2.length, T2 = R2.length), k2 = x2, E2 = (S2 = R2.slice(0, x2)).length; E2 < x2; S2[E2++] = 0) ;
                  A2 = j2.slice(), A2 = [0].concat(A2), O2 = j2[0], j2[1] >= s2 / 2 && O2++;
                  do {
                    if (y2 = 0, (c2 = t5(j2, S2, x2, E2)) < 0) {
                      if (_2 = S2[0], x2 != E2 && (_2 = _2 * s2 + (S2[1] || 0)), (y2 = u(_2 / O2)) > 1) for (y2 >= s2 && (y2 = s2 - 1), g2 = (m2 = e5(j2, y2, s2)).length, E2 = S2.length; 1 == t5(m2, S2, g2, E2); ) y2--, r6(m2, x2 < g2 ? A2 : j2, g2, s2), g2 = m2.length, c2 = 1;
                      else 0 == y2 && (c2 = y2 = 1), g2 = (m2 = j2.slice()).length;
                      if (g2 < E2 && (m2 = [0].concat(m2)), r6(S2, m2, E2, s2), E2 = S2.length, -1 == c2) for (; t5(j2, S2, x2, E2) < 1; ) y2++, r6(S2, x2 < E2 ? A2 : j2, E2, s2), E2 = S2.length;
                    } else 0 === c2 && (y2++, S2 = [0]);
                    w2[h2++] = y2, S2[0] ? S2[E2++] = R2[k2] || 0 : (S2 = [R2[k2]], E2 = 1);
                  } while ((k2++ < T2 || null != S2[0]) && P2--);
                  d2 = null != S2[0], w2[0] || w2.splice(0, 1);
                }
                if (s2 == f) {
                  for (h2 = 1, P2 = w2[0]; P2 >= 10; P2 /= 10, h2++) ;
                  W(b2, i3 + (b2.e = h2 + l3 * p - 1) + 1, a2, d2);
                } else b2.e = l3, b2.r = +d2;
                return b2;
              };
            }(), T = /^(-?)0([xbo])(?=\w[\w.]*$)/i, O = /^([^.]+)\.$/, x = /^\.([^.]+)$/, A = /^-?(Infinity|NaN)$/, P = /^\s*\+(?=[\w.])|^\s+|\s+$/g, o3 = function(e5, t5, r6, n4) {
              var o4, i3 = r6 ? t5 : t5.replace(P, "");
              if (A.test(i3)) e5.s = isNaN(i3) ? null : i3 < 0 ? -1 : 1;
              else {
                if (!r6 && (i3 = i3.replace(T, function(e6, t6, r7) {
                  return o4 = "x" == (r7 = r7.toLowerCase()) ? 16 : "b" == r7 ? 2 : 8, n4 && n4 != o4 ? e6 : t6;
                }), n4 && (o4 = n4, i3 = i3.replace(O, "$1").replace(x, "0.$1")), t5 != i3)) return new H(i3, o4);
                if (H.DEBUG) throw Error(c + "Not a" + (n4 ? " base " + n4 : "") + " number: " + t5);
                e5.s = null;
              }
              e5.c = e5.e = null;
            }, R.absoluteValue = R.abs = function() {
              var e5 = new H(this);
              return e5.s < 0 && (e5.s = 1), e5;
            }, R.comparedTo = function(e5, t5) {
              return b(this, new H(e5, t5));
            }, R.decimalPlaces = R.dp = function(e5, t5) {
              var r6, n4, o4, i3 = this;
              if (null != e5) return w(e5, 0, m), null == t5 ? t5 = C : w(t5, 0, 8), W(new H(i3), e5 + i3.e + 1, t5);
              if (!(r6 = i3.c)) return null;
              if (n4 = ((o4 = r6.length - 1) - v(this.e / p)) * p, o4 = r6[o4]) for (; o4 % 10 == 0; o4 /= 10, n4--) ;
              return n4 < 0 && (n4 = 0), n4;
            }, R.dividedBy = R.div = function(e5, t5) {
              return r5(this, new H(e5, t5), I, C);
            }, R.dividedToIntegerBy = R.idiv = function(e5, t5) {
              return r5(this, new H(e5, t5), 0, 1);
            }, R.exponentiatedBy = R.pow = function(e5, t5) {
              var r6, n4, o4, i3, a2, l3, f2, h2, d2 = this;
              if ((e5 = new H(e5)).c && !e5.isInteger()) throw Error(c + "Exponent not an integer: " + $(e5));
              if (null != t5 && (t5 = new H(t5)), a2 = e5.e > 14, !d2.c || !d2.c[0] || 1 == d2.c[0] && !d2.e && 1 == d2.c.length || !e5.c || !e5.c[0]) return h2 = new H(Math.pow(+$(d2), a2 ? e5.s * (2 - S(e5)) : +$(e5))), t5 ? h2.mod(t5) : h2;
              if (l3 = e5.s < 0, t5) {
                if (t5.c ? !t5.c[0] : !t5.s) return new H(NaN);
                (n4 = !l3 && d2.isInteger() && t5.isInteger()) && (d2 = d2.mod(t5));
              } else {
                if (e5.e > 9 && (d2.e > 0 || d2.e < -1 || (0 == d2.e ? d2.c[0] > 1 || a2 && d2.c[1] >= 24e7 : d2.c[0] < 8e13 || a2 && d2.c[0] <= 9999975e7))) return i3 = d2.s < 0 && S(e5) ? -0 : 0, d2.e > -1 && (i3 = 1 / i3), new H(l3 ? 1 / i3 : i3);
                F && (i3 = s(F / p + 2));
              }
              for (a2 ? (r6 = new H(0.5), l3 && (e5.s = 1), f2 = S(e5)) : f2 = (o4 = Math.abs(+$(e5))) % 2, h2 = new H(j); ; ) {
                if (f2) {
                  if (!(h2 = h2.times(d2)).c) break;
                  i3 ? h2.c.length > i3 && (h2.c.length = i3) : n4 && (h2 = h2.mod(t5));
                }
                if (o4) {
                  if (0 === (o4 = u(o4 / 2))) break;
                  f2 = o4 % 2;
                } else if (W(e5 = e5.times(r6), e5.e + 1, 1), e5.e > 14) f2 = S(e5);
                else {
                  if (0 === (o4 = +$(e5))) break;
                  f2 = o4 % 2;
                }
                d2 = d2.times(d2), i3 ? d2.c && d2.c.length > i3 && (d2.c.length = i3) : n4 && (d2 = d2.mod(t5));
              }
              return n4 ? h2 : (l3 && (h2 = j.div(h2)), t5 ? h2.mod(t5) : i3 ? W(h2, F, C, void 0) : h2);
            }, R.integerValue = function(e5) {
              var t5 = new H(this);
              return null == e5 ? e5 = C : w(e5, 0, 8), W(t5, t5.e + 1, e5);
            }, R.isEqualTo = R.eq = function(e5, t5) {
              return 0 === b(this, new H(e5, t5));
            }, R.isFinite = function() {
              return !!this.c;
            }, R.isGreaterThan = R.gt = function(e5, t5) {
              return b(this, new H(e5, t5)) > 0;
            }, R.isGreaterThanOrEqualTo = R.gte = function(e5, t5) {
              return 1 === (t5 = b(this, new H(e5, t5))) || 0 === t5;
            }, R.isInteger = function() {
              return !!this.c && v(this.e / p) > this.c.length - 2;
            }, R.isLessThan = R.lt = function(e5, t5) {
              return b(this, new H(e5, t5)) < 0;
            }, R.isLessThanOrEqualTo = R.lte = function(e5, t5) {
              return -1 === (t5 = b(this, new H(e5, t5))) || 0 === t5;
            }, R.isNaN = function() {
              return !this.s;
            }, R.isNegative = function() {
              return this.s < 0;
            }, R.isPositive = function() {
              return this.s > 0;
            }, R.isZero = function() {
              return !!this.c && 0 == this.c[0];
            }, R.minus = function(e5, t5) {
              var r6, n4, o4, i3, a2 = this, s2 = a2.s;
              if (t5 = (e5 = new H(e5, t5)).s, !s2 || !t5) return new H(NaN);
              if (s2 != t5) return e5.s = -t5, a2.plus(e5);
              var u2 = a2.e / p, c2 = e5.e / p, l3 = a2.c, h2 = e5.c;
              if (!u2 || !c2) {
                if (!l3 || !h2) return l3 ? (e5.s = -t5, e5) : new H(h2 ? a2 : NaN);
                if (!l3[0] || !h2[0]) return h2[0] ? (e5.s = -t5, e5) : new H(l3[0] ? a2 : 3 == C ? -0 : 0);
              }
              if (u2 = v(u2), c2 = v(c2), l3 = l3.slice(), s2 = u2 - c2) {
                for ((i3 = s2 < 0) ? (s2 = -s2, o4 = l3) : (c2 = u2, o4 = h2), o4.reverse(), t5 = s2; t5--; o4.push(0)) ;
                o4.reverse();
              } else for (n4 = (i3 = (s2 = l3.length) < (t5 = h2.length)) ? s2 : t5, s2 = t5 = 0; t5 < n4; t5++) if (l3[t5] != h2[t5]) {
                i3 = l3[t5] < h2[t5];
                break;
              }
              if (i3 && (o4 = l3, l3 = h2, h2 = o4, e5.s = -e5.s), (t5 = (n4 = h2.length) - (r6 = l3.length)) > 0) for (; t5--; l3[r6++] = 0) ;
              for (t5 = f - 1; n4 > s2; ) {
                if (l3[--n4] < h2[n4]) {
                  for (r6 = n4; r6 && !l3[--r6]; l3[r6] = t5) ;
                  --l3[r6], l3[n4] += f;
                }
                l3[n4] -= h2[n4];
              }
              for (; 0 == l3[0]; l3.splice(0, 1), --c2) ;
              return l3[0] ? G(e5, l3, c2) : (e5.s = 3 == C ? -1 : 1, e5.c = [e5.e = 0], e5);
            }, R.modulo = R.mod = function(e5, t5) {
              var n4, o4, i3 = this;
              return e5 = new H(e5, t5), !i3.c || !e5.s || e5.c && !e5.c[0] ? new H(NaN) : !e5.c || i3.c && !i3.c[0] ? new H(i3) : (9 == D ? (o4 = e5.s, e5.s = 1, n4 = r5(i3, e5, 0, 3), e5.s = o4, n4.s *= o4) : n4 = r5(i3, e5, 0, D), (e5 = i3.minus(n4.times(e5))).c[0] || 1 != D || (e5.s = i3.s), e5);
            }, R.multipliedBy = R.times = function(e5, t5) {
              var r6, n4, o4, i3, a2, s2, u2, c2, l3, h2, d2, m2, g2, b2, w2, S2 = this, E2 = S2.c, _2 = (e5 = new H(e5, t5)).c;
              if (!(E2 && _2 && E2[0] && _2[0])) return !S2.s || !e5.s || E2 && !E2[0] && !_2 || _2 && !_2[0] && !E2 ? e5.c = e5.e = e5.s = null : (e5.s *= S2.s, E2 && _2 ? (e5.c = [0], e5.e = 0) : e5.c = e5.e = null), e5;
              for (n4 = v(S2.e / p) + v(e5.e / p), e5.s *= S2.s, (u2 = E2.length) < (h2 = _2.length) && (g2 = E2, E2 = _2, _2 = g2, o4 = u2, u2 = h2, h2 = o4), o4 = u2 + h2, g2 = []; o4--; g2.push(0)) ;
              for (b2 = f, w2 = y, o4 = h2; --o4 >= 0; ) {
                for (r6 = 0, d2 = _2[o4] % w2, m2 = _2[o4] / w2 | 0, i3 = o4 + (a2 = u2); i3 > o4; ) r6 = ((c2 = d2 * (c2 = E2[--a2] % w2) + (s2 = m2 * c2 + (l3 = E2[a2] / w2 | 0) * d2) % w2 * w2 + g2[i3] + r6) / b2 | 0) + (s2 / w2 | 0) + m2 * l3, g2[i3--] = c2 % b2;
                g2[i3] = r6;
              }
              return r6 ? ++n4 : g2.splice(0, 1), G(e5, g2, n4);
            }, R.negated = function() {
              var e5 = new H(this);
              return e5.s = -e5.s || null, e5;
            }, R.plus = function(e5, t5) {
              var r6, n4 = this, o4 = n4.s;
              if (t5 = (e5 = new H(e5, t5)).s, !o4 || !t5) return new H(NaN);
              if (o4 != t5) return e5.s = -t5, n4.minus(e5);
              var i3 = n4.e / p, a2 = e5.e / p, s2 = n4.c, u2 = e5.c;
              if (!i3 || !a2) {
                if (!s2 || !u2) return new H(o4 / 0);
                if (!s2[0] || !u2[0]) return u2[0] ? e5 : new H(s2[0] ? n4 : 0 * o4);
              }
              if (i3 = v(i3), a2 = v(a2), s2 = s2.slice(), o4 = i3 - a2) {
                for (o4 > 0 ? (a2 = i3, r6 = u2) : (o4 = -o4, r6 = s2), r6.reverse(); o4--; r6.push(0)) ;
                r6.reverse();
              }
              for ((o4 = s2.length) - (t5 = u2.length) < 0 && (r6 = u2, u2 = s2, s2 = r6, t5 = o4), o4 = 0; t5; ) o4 = (s2[--t5] = s2[t5] + u2[t5] + o4) / f | 0, s2[t5] = f === s2[t5] ? 0 : s2[t5] % f;
              return o4 && (s2 = [o4].concat(s2), ++a2), G(e5, s2, a2);
            }, R.precision = R.sd = function(e5, t5) {
              var r6, n4, o4, i3 = this;
              if (null != e5 && e5 !== !!e5) return w(e5, 1, m), null == t5 ? t5 = C : w(t5, 0, 8), W(new H(i3), e5, t5);
              if (!(r6 = i3.c)) return null;
              if (n4 = (o4 = r6.length - 1) * p + 1, o4 = r6[o4]) {
                for (; o4 % 10 == 0; o4 /= 10, n4--) ;
                for (o4 = r6[0]; o4 >= 10; o4 /= 10, n4++) ;
              }
              return e5 && i3.e + 1 > n4 && (n4 = i3.e + 1), n4;
            }, R.shiftedBy = function(e5) {
              return w(e5, -9007199254740991, h), this.times("1e" + e5);
            }, R.squareRoot = R.sqrt = function() {
              var e5, t5, n4, o4, i3, a2 = this, s2 = a2.c, u2 = a2.s, c2 = a2.e, l3 = I + 4, f2 = new H("0.5");
              if (1 !== u2 || !s2 || !s2[0]) return new H(!u2 || u2 < 0 && (!s2 || s2[0]) ? NaN : s2 ? a2 : 1 / 0);
              if (0 == (u2 = Math.sqrt(+$(a2))) || u2 == 1 / 0 ? (((t5 = g(s2)).length + c2) % 2 == 0 && (t5 += "0"), u2 = Math.sqrt(+t5), c2 = v((c2 + 1) / 2) - (c2 < 0 || c2 % 2), n4 = new H(t5 = u2 == 1 / 0 ? "5e" + c2 : (t5 = u2.toExponential()).slice(0, t5.indexOf("e") + 1) + c2)) : n4 = new H(u2 + ""), n4.c[0]) {
                for ((u2 = (c2 = n4.e) + l3) < 3 && (u2 = 0); ; ) if (i3 = n4, n4 = f2.times(i3.plus(r5(a2, i3, l3, 1))), g(i3.c).slice(0, u2) === (t5 = g(n4.c)).slice(0, u2)) {
                  if (n4.e < c2 && --u2, "9999" != (t5 = t5.slice(u2 - 3, u2 + 1)) && (o4 || "4999" != t5)) {
                    +t5 && (+t5.slice(1) || "5" != t5.charAt(0)) || (W(n4, n4.e + I + 2, 1), e5 = !n4.times(n4).eq(a2));
                    break;
                  }
                  if (!o4 && (W(i3, i3.e + I + 2, 0), i3.times(i3).eq(a2))) {
                    n4 = i3;
                    break;
                  }
                  l3 += 4, u2 += 4, o4 = 1;
                }
              }
              return W(n4, n4.e + I + 1, C, e5);
            }, R.toExponential = function(e5, t5) {
              return null != e5 && (w(e5, 0, m), e5++), z(this, e5, t5, 1);
            }, R.toFixed = function(e5, t5) {
              return null != e5 && (w(e5, 0, m), e5 = e5 + this.e + 1), z(this, e5, t5);
            }, R.toFormat = function(e5, t5, r6) {
              var n4, o4 = this;
              if (null == r6) null != e5 && t5 && "object" == typeof t5 ? (r6 = t5, t5 = null) : e5 && "object" == typeof e5 ? (r6 = e5, e5 = t5 = null) : r6 = V;
              else if ("object" != typeof r6) throw Error(c + "Argument not an object: " + r6);
              if (n4 = o4.toFixed(e5, t5), o4.c) {
                var i3, a2 = n4.split("."), s2 = +r6.groupSize, u2 = +r6.secondaryGroupSize, l3 = r6.groupSeparator || "", f2 = a2[0], p2 = a2[1], h2 = o4.s < 0, d2 = h2 ? f2.slice(1) : f2, y2 = d2.length;
                if (u2 && (i3 = s2, s2 = u2, u2 = i3, y2 -= i3), s2 > 0 && y2 > 0) {
                  for (i3 = y2 % s2 || s2, f2 = d2.substr(0, i3); i3 < y2; i3 += s2) f2 += l3 + d2.substr(i3, s2);
                  u2 > 0 && (f2 += l3 + d2.slice(i3)), h2 && (f2 = "-" + f2);
                }
                n4 = p2 ? f2 + (r6.decimalSeparator || "") + ((u2 = +r6.fractionGroupSize) ? p2.replace(new RegExp("\\d{" + u2 + "}\\B", "g"), "$&" + (r6.fractionGroupSeparator || "")) : p2) : f2;
              }
              return (r6.prefix || "") + n4 + (r6.suffix || "");
            }, R.toFraction = function(e5) {
              var t5, n4, o4, i3, a2, s2, u2, l3, f2, h2, y2, m2, v2 = this, b2 = v2.c;
              if (null != e5 && (!(u2 = new H(e5)).isInteger() && (u2.c || 1 !== u2.s) || u2.lt(j))) throw Error(c + "Argument " + (u2.isInteger() ? "out of range: " : "not an integer: ") + $(u2));
              if (!b2) return new H(v2);
              for (t5 = new H(j), f2 = n4 = new H(j), o4 = l3 = new H(j), m2 = g(b2), a2 = t5.e = m2.length - v2.e - 1, t5.c[0] = d[(s2 = a2 % p) < 0 ? p + s2 : s2], e5 = !e5 || u2.comparedTo(t5) > 0 ? a2 > 0 ? t5 : f2 : u2, s2 = U, U = 1 / 0, u2 = new H(m2), l3.c[0] = 0; h2 = r5(u2, t5, 0, 1), 1 != (i3 = n4.plus(h2.times(o4))).comparedTo(e5); ) n4 = o4, o4 = i3, f2 = l3.plus(h2.times(i3 = f2)), l3 = i3, t5 = u2.minus(h2.times(i3 = t5)), u2 = i3;
              return i3 = r5(e5.minus(n4), o4, 0, 1), l3 = l3.plus(i3.times(f2)), n4 = n4.plus(i3.times(o4)), l3.s = f2.s = v2.s, y2 = r5(f2, o4, a2 *= 2, C).minus(v2).abs().comparedTo(r5(l3, n4, a2, C).minus(v2).abs()) < 1 ? [f2, o4] : [l3, n4], U = s2, y2;
            }, R.toNumber = function() {
              return +$(this);
            }, R.toPrecision = function(e5, t5) {
              return null != e5 && w(e5, 1, m), z(this, e5, t5, 2);
            }, R.toString = function(e5) {
              var t5, r6 = this, o4 = r6.s, i3 = r6.e;
              return null === i3 ? o4 ? (t5 = "Infinity", o4 < 0 && (t5 = "-" + t5)) : t5 = "NaN" : (null == e5 ? t5 = i3 <= L || i3 >= B ? E(g(r6.c), i3) : _(g(r6.c), i3, "0") : 10 === e5 && K ? t5 = _(g((r6 = W(new H(r6), I + i3 + 1, C)).c), r6.e, "0") : (w(e5, 2, q.length, "Base"), t5 = n3(_(g(r6.c), i3, "0"), 10, e5, o4, true)), o4 < 0 && r6.c[0] && (t5 = "-" + t5)), t5;
            }, R.valueOf = R.toJSON = function() {
              return $(this);
            }, R._isBigNumber = true, null != t4 && H.set(t4), H;
          }(), i.default = i.BigNumber = i, void 0 === (n2 = (function() {
            return i;
          }).call(t3, r4, t3, e3)) || (e3.exports = n2);
        }();
      }, 8287: (e3, t3, r4) => {
        "use strict";
        const n2 = r4(7526), o2 = r4(251), i = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        t3.Buffer = u, t3.SlowBuffer = function(e4) {
          +e4 != e4 && (e4 = 0);
          return u.alloc(+e4);
        }, t3.INSPECT_MAX_BYTES = 50;
        const a = 2147483647;
        function s(e4) {
          if (e4 > a) throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
          const t4 = new Uint8Array(e4);
          return Object.setPrototypeOf(t4, u.prototype), t4;
        }
        function u(e4, t4, r5) {
          if ("number" == typeof e4) {
            if ("string" == typeof t4) throw new TypeError('The "string" argument must be of type string. Received type number');
            return f(e4);
          }
          return c(e4, t4, r5);
        }
        function c(e4, t4, r5) {
          if ("string" == typeof e4) return function(e5, t5) {
            "string" == typeof t5 && "" !== t5 || (t5 = "utf8");
            if (!u.isEncoding(t5)) throw new TypeError("Unknown encoding: " + t5);
            const r6 = 0 | y(e5, t5);
            let n4 = s(r6);
            const o4 = n4.write(e5, t5);
            o4 !== r6 && (n4 = n4.slice(0, o4));
            return n4;
          }(e4, t4);
          if (ArrayBuffer.isView(e4)) return function(e5) {
            if ($(e5, Uint8Array)) {
              const t5 = new Uint8Array(e5);
              return h(t5.buffer, t5.byteOffset, t5.byteLength);
            }
            return p(e5);
          }(e4);
          if (null == e4) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
          if ($(e4, ArrayBuffer) || e4 && $(e4.buffer, ArrayBuffer)) return h(e4, t4, r5);
          if ("undefined" != typeof SharedArrayBuffer && ($(e4, SharedArrayBuffer) || e4 && $(e4.buffer, SharedArrayBuffer))) return h(e4, t4, r5);
          if ("number" == typeof e4) throw new TypeError('The "value" argument must not be of type number. Received type number');
          const n3 = e4.valueOf && e4.valueOf();
          if (null != n3 && n3 !== e4) return u.from(n3, t4, r5);
          const o3 = function(e5) {
            if (u.isBuffer(e5)) {
              const t5 = 0 | d(e5.length), r6 = s(t5);
              return 0 === r6.length || e5.copy(r6, 0, 0, t5), r6;
            }
            if (void 0 !== e5.length) return "number" != typeof e5.length || Q(e5.length) ? s(0) : p(e5);
            if ("Buffer" === e5.type && Array.isArray(e5.data)) return p(e5.data);
          }(e4);
          if (o3) return o3;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e4[Symbol.toPrimitive]) return u.from(e4[Symbol.toPrimitive]("string"), t4, r5);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
        }
        function l2(e4) {
          if ("number" != typeof e4) throw new TypeError('"size" argument must be of type number');
          if (e4 < 0) throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
        }
        function f(e4) {
          return l2(e4), s(e4 < 0 ? 0 : 0 | d(e4));
        }
        function p(e4) {
          const t4 = e4.length < 0 ? 0 : 0 | d(e4.length), r5 = s(t4);
          for (let n3 = 0; n3 < t4; n3 += 1) r5[n3] = 255 & e4[n3];
          return r5;
        }
        function h(e4, t4, r5) {
          if (t4 < 0 || e4.byteLength < t4) throw new RangeError('"offset" is outside of buffer bounds');
          if (e4.byteLength < t4 + (r5 || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let n3;
          return n3 = void 0 === t4 && void 0 === r5 ? new Uint8Array(e4) : void 0 === r5 ? new Uint8Array(e4, t4) : new Uint8Array(e4, t4, r5), Object.setPrototypeOf(n3, u.prototype), n3;
        }
        function d(e4) {
          if (e4 >= a) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a.toString(16) + " bytes");
          return 0 | e4;
        }
        function y(e4, t4) {
          if (u.isBuffer(e4)) return e4.length;
          if (ArrayBuffer.isView(e4) || $(e4, ArrayBuffer)) return e4.byteLength;
          if ("string" != typeof e4) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e4);
          const r5 = e4.length, n3 = arguments.length > 2 && true === arguments[2];
          if (!n3 && 0 === r5) return 0;
          let o3 = false;
          for (; ; ) switch (t4) {
            case "ascii":
            case "latin1":
            case "binary":
              return r5;
            case "utf8":
            case "utf-8":
              return X(e4).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r5;
            case "hex":
              return r5 >>> 1;
            case "base64":
              return G(e4).length;
            default:
              if (o3) return n3 ? -1 : X(e4).length;
              t4 = ("" + t4).toLowerCase(), o3 = true;
          }
        }
        function m(e4, t4, r5) {
          let n3 = false;
          if ((void 0 === t4 || t4 < 0) && (t4 = 0), t4 > this.length) return "";
          if ((void 0 === r5 || r5 > this.length) && (r5 = this.length), r5 <= 0) return "";
          if ((r5 >>>= 0) <= (t4 >>>= 0)) return "";
          for (e4 || (e4 = "utf8"); ; ) switch (e4) {
            case "hex":
              return R(this, t4, r5);
            case "utf8":
            case "utf-8":
              return O(this, t4, r5);
            case "ascii":
              return A(this, t4, r5);
            case "latin1":
            case "binary":
              return P(this, t4, r5);
            case "base64":
              return T(this, t4, r5);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return j(this, t4, r5);
            default:
              if (n3) throw new TypeError("Unknown encoding: " + e4);
              e4 = (e4 + "").toLowerCase(), n3 = true;
          }
        }
        function v(e4, t4, r5) {
          const n3 = e4[t4];
          e4[t4] = e4[r5], e4[r5] = n3;
        }
        function g(e4, t4, r5, n3, o3) {
          if (0 === e4.length) return -1;
          if ("string" == typeof r5 ? (n3 = r5, r5 = 0) : r5 > 2147483647 ? r5 = 2147483647 : r5 < -2147483648 && (r5 = -2147483648), Q(r5 = +r5) && (r5 = o3 ? 0 : e4.length - 1), r5 < 0 && (r5 = e4.length + r5), r5 >= e4.length) {
            if (o3) return -1;
            r5 = e4.length - 1;
          } else if (r5 < 0) {
            if (!o3) return -1;
            r5 = 0;
          }
          if ("string" == typeof t4 && (t4 = u.from(t4, n3)), u.isBuffer(t4)) return 0 === t4.length ? -1 : b(e4, t4, r5, n3, o3);
          if ("number" == typeof t4) return t4 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o3 ? Uint8Array.prototype.indexOf.call(e4, t4, r5) : Uint8Array.prototype.lastIndexOf.call(e4, t4, r5) : b(e4, [t4], r5, n3, o3);
          throw new TypeError("val must be string, number or Buffer");
        }
        function b(e4, t4, r5, n3, o3) {
          let i2, a2 = 1, s2 = e4.length, u2 = t4.length;
          if (void 0 !== n3 && ("ucs2" === (n3 = String(n3).toLowerCase()) || "ucs-2" === n3 || "utf16le" === n3 || "utf-16le" === n3)) {
            if (e4.length < 2 || t4.length < 2) return -1;
            a2 = 2, s2 /= 2, u2 /= 2, r5 /= 2;
          }
          function c2(e5, t5) {
            return 1 === a2 ? e5[t5] : e5.readUInt16BE(t5 * a2);
          }
          if (o3) {
            let n4 = -1;
            for (i2 = r5; i2 < s2; i2++) if (c2(e4, i2) === c2(t4, -1 === n4 ? 0 : i2 - n4)) {
              if (-1 === n4 && (n4 = i2), i2 - n4 + 1 === u2) return n4 * a2;
            } else -1 !== n4 && (i2 -= i2 - n4), n4 = -1;
          } else for (r5 + u2 > s2 && (r5 = s2 - u2), i2 = r5; i2 >= 0; i2--) {
            let r6 = true;
            for (let n4 = 0; n4 < u2; n4++) if (c2(e4, i2 + n4) !== c2(t4, n4)) {
              r6 = false;
              break;
            }
            if (r6) return i2;
          }
          return -1;
        }
        function w(e4, t4, r5, n3) {
          r5 = Number(r5) || 0;
          const o3 = e4.length - r5;
          n3 ? (n3 = Number(n3)) > o3 && (n3 = o3) : n3 = o3;
          const i2 = t4.length;
          let a2;
          for (n3 > i2 / 2 && (n3 = i2 / 2), a2 = 0; a2 < n3; ++a2) {
            const n4 = parseInt(t4.substr(2 * a2, 2), 16);
            if (Q(n4)) return a2;
            e4[r5 + a2] = n4;
          }
          return a2;
        }
        function S(e4, t4, r5, n3) {
          return W(X(t4, e4.length - r5), e4, r5, n3);
        }
        function E(e4, t4, r5, n3) {
          return W(function(e5) {
            const t5 = [];
            for (let r6 = 0; r6 < e5.length; ++r6) t5.push(255 & e5.charCodeAt(r6));
            return t5;
          }(t4), e4, r5, n3);
        }
        function _(e4, t4, r5, n3) {
          return W(G(t4), e4, r5, n3);
        }
        function k(e4, t4, r5, n3) {
          return W(function(e5, t5) {
            let r6, n4, o3;
            const i2 = [];
            for (let a2 = 0; a2 < e5.length && !((t5 -= 2) < 0); ++a2) r6 = e5.charCodeAt(a2), n4 = r6 >> 8, o3 = r6 % 256, i2.push(o3), i2.push(n4);
            return i2;
          }(t4, e4.length - r5), e4, r5, n3);
        }
        function T(e4, t4, r5) {
          return 0 === t4 && r5 === e4.length ? n2.fromByteArray(e4) : n2.fromByteArray(e4.slice(t4, r5));
        }
        function O(e4, t4, r5) {
          r5 = Math.min(e4.length, r5);
          const n3 = [];
          let o3 = t4;
          for (; o3 < r5; ) {
            const t5 = e4[o3];
            let i2 = null, a2 = t5 > 239 ? 4 : t5 > 223 ? 3 : t5 > 191 ? 2 : 1;
            if (o3 + a2 <= r5) {
              let r6, n4, s2, u2;
              switch (a2) {
                case 1:
                  t5 < 128 && (i2 = t5);
                  break;
                case 2:
                  r6 = e4[o3 + 1], 128 == (192 & r6) && (u2 = (31 & t5) << 6 | 63 & r6, u2 > 127 && (i2 = u2));
                  break;
                case 3:
                  r6 = e4[o3 + 1], n4 = e4[o3 + 2], 128 == (192 & r6) && 128 == (192 & n4) && (u2 = (15 & t5) << 12 | (63 & r6) << 6 | 63 & n4, u2 > 2047 && (u2 < 55296 || u2 > 57343) && (i2 = u2));
                  break;
                case 4:
                  r6 = e4[o3 + 1], n4 = e4[o3 + 2], s2 = e4[o3 + 3], 128 == (192 & r6) && 128 == (192 & n4) && 128 == (192 & s2) && (u2 = (15 & t5) << 18 | (63 & r6) << 12 | (63 & n4) << 6 | 63 & s2, u2 > 65535 && u2 < 1114112 && (i2 = u2));
              }
            }
            null === i2 ? (i2 = 65533, a2 = 1) : i2 > 65535 && (i2 -= 65536, n3.push(i2 >>> 10 & 1023 | 55296), i2 = 56320 | 1023 & i2), n3.push(i2), o3 += a2;
          }
          return function(e5) {
            const t5 = e5.length;
            if (t5 <= x) return String.fromCharCode.apply(String, e5);
            let r6 = "", n4 = 0;
            for (; n4 < t5; ) r6 += String.fromCharCode.apply(String, e5.slice(n4, n4 += x));
            return r6;
          }(n3);
        }
        t3.kMaxLength = a, u.TYPED_ARRAY_SUPPORT = function() {
          try {
            const e4 = new Uint8Array(1), t4 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(t4, Uint8Array.prototype), Object.setPrototypeOf(e4, t4), 42 === e4.foo();
          } catch (e4) {
            return false;
          }
        }(), u.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u.prototype, "parent", { enumerable: true, get: function() {
          if (u.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(u.prototype, "offset", { enumerable: true, get: function() {
          if (u.isBuffer(this)) return this.byteOffset;
        } }), u.poolSize = 8192, u.from = function(e4, t4, r5) {
          return c(e4, t4, r5);
        }, Object.setPrototypeOf(u.prototype, Uint8Array.prototype), Object.setPrototypeOf(u, Uint8Array), u.alloc = function(e4, t4, r5) {
          return function(e5, t5, r6) {
            return l2(e5), e5 <= 0 ? s(e5) : void 0 !== t5 ? "string" == typeof r6 ? s(e5).fill(t5, r6) : s(e5).fill(t5) : s(e5);
          }(e4, t4, r5);
        }, u.allocUnsafe = function(e4) {
          return f(e4);
        }, u.allocUnsafeSlow = function(e4) {
          return f(e4);
        }, u.isBuffer = function(e4) {
          return null != e4 && true === e4._isBuffer && e4 !== u.prototype;
        }, u.compare = function(e4, t4) {
          if ($(e4, Uint8Array) && (e4 = u.from(e4, e4.offset, e4.byteLength)), $(t4, Uint8Array) && (t4 = u.from(t4, t4.offset, t4.byteLength)), !u.isBuffer(e4) || !u.isBuffer(t4)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e4 === t4) return 0;
          let r5 = e4.length, n3 = t4.length;
          for (let o3 = 0, i2 = Math.min(r5, n3); o3 < i2; ++o3) if (e4[o3] !== t4[o3]) {
            r5 = e4[o3], n3 = t4[o3];
            break;
          }
          return r5 < n3 ? -1 : n3 < r5 ? 1 : 0;
        }, u.isEncoding = function(e4) {
          switch (String(e4).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, u.concat = function(e4, t4) {
          if (!Array.isArray(e4)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e4.length) return u.alloc(0);
          let r5;
          if (void 0 === t4) for (t4 = 0, r5 = 0; r5 < e4.length; ++r5) t4 += e4[r5].length;
          const n3 = u.allocUnsafe(t4);
          let o3 = 0;
          for (r5 = 0; r5 < e4.length; ++r5) {
            let t5 = e4[r5];
            if ($(t5, Uint8Array)) o3 + t5.length > n3.length ? (u.isBuffer(t5) || (t5 = u.from(t5)), t5.copy(n3, o3)) : Uint8Array.prototype.set.call(n3, t5, o3);
            else {
              if (!u.isBuffer(t5)) throw new TypeError('"list" argument must be an Array of Buffers');
              t5.copy(n3, o3);
            }
            o3 += t5.length;
          }
          return n3;
        }, u.byteLength = y, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
          const e4 = this.length;
          if (e4 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let t4 = 0; t4 < e4; t4 += 2) v(this, t4, t4 + 1);
          return this;
        }, u.prototype.swap32 = function() {
          const e4 = this.length;
          if (e4 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let t4 = 0; t4 < e4; t4 += 4) v(this, t4, t4 + 3), v(this, t4 + 1, t4 + 2);
          return this;
        }, u.prototype.swap64 = function() {
          const e4 = this.length;
          if (e4 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let t4 = 0; t4 < e4; t4 += 8) v(this, t4, t4 + 7), v(this, t4 + 1, t4 + 6), v(this, t4 + 2, t4 + 5), v(this, t4 + 3, t4 + 4);
          return this;
        }, u.prototype.toString = function() {
          const e4 = this.length;
          return 0 === e4 ? "" : 0 === arguments.length ? O(this, 0, e4) : m.apply(this, arguments);
        }, u.prototype.toLocaleString = u.prototype.toString, u.prototype.equals = function(e4) {
          if (!u.isBuffer(e4)) throw new TypeError("Argument must be a Buffer");
          return this === e4 || 0 === u.compare(this, e4);
        }, u.prototype.inspect = function() {
          let e4 = "";
          const r5 = t3.INSPECT_MAX_BYTES;
          return e4 = this.toString("hex", 0, r5).replace(/(.{2})/g, "$1 ").trim(), this.length > r5 && (e4 += " ... "), "<Buffer " + e4 + ">";
        }, i && (u.prototype[i] = u.prototype.inspect), u.prototype.compare = function(e4, t4, r5, n3, o3) {
          if ($(e4, Uint8Array) && (e4 = u.from(e4, e4.offset, e4.byteLength)), !u.isBuffer(e4)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e4);
          if (void 0 === t4 && (t4 = 0), void 0 === r5 && (r5 = e4 ? e4.length : 0), void 0 === n3 && (n3 = 0), void 0 === o3 && (o3 = this.length), t4 < 0 || r5 > e4.length || n3 < 0 || o3 > this.length) throw new RangeError("out of range index");
          if (n3 >= o3 && t4 >= r5) return 0;
          if (n3 >= o3) return -1;
          if (t4 >= r5) return 1;
          if (this === e4) return 0;
          let i2 = (o3 >>>= 0) - (n3 >>>= 0), a2 = (r5 >>>= 0) - (t4 >>>= 0);
          const s2 = Math.min(i2, a2), c2 = this.slice(n3, o3), l3 = e4.slice(t4, r5);
          for (let e5 = 0; e5 < s2; ++e5) if (c2[e5] !== l3[e5]) {
            i2 = c2[e5], a2 = l3[e5];
            break;
          }
          return i2 < a2 ? -1 : a2 < i2 ? 1 : 0;
        }, u.prototype.includes = function(e4, t4, r5) {
          return -1 !== this.indexOf(e4, t4, r5);
        }, u.prototype.indexOf = function(e4, t4, r5) {
          return g(this, e4, t4, r5, true);
        }, u.prototype.lastIndexOf = function(e4, t4, r5) {
          return g(this, e4, t4, r5, false);
        }, u.prototype.write = function(e4, t4, r5, n3) {
          if (void 0 === t4) n3 = "utf8", r5 = this.length, t4 = 0;
          else if (void 0 === r5 && "string" == typeof t4) n3 = t4, r5 = this.length, t4 = 0;
          else {
            if (!isFinite(t4)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t4 >>>= 0, isFinite(r5) ? (r5 >>>= 0, void 0 === n3 && (n3 = "utf8")) : (n3 = r5, r5 = void 0);
          }
          const o3 = this.length - t4;
          if ((void 0 === r5 || r5 > o3) && (r5 = o3), e4.length > 0 && (r5 < 0 || t4 < 0) || t4 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          n3 || (n3 = "utf8");
          let i2 = false;
          for (; ; ) switch (n3) {
            case "hex":
              return w(this, e4, t4, r5);
            case "utf8":
            case "utf-8":
              return S(this, e4, t4, r5);
            case "ascii":
            case "latin1":
            case "binary":
              return E(this, e4, t4, r5);
            case "base64":
              return _(this, e4, t4, r5);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return k(this, e4, t4, r5);
            default:
              if (i2) throw new TypeError("Unknown encoding: " + n3);
              n3 = ("" + n3).toLowerCase(), i2 = true;
          }
        }, u.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const x = 4096;
        function A(e4, t4, r5) {
          let n3 = "";
          r5 = Math.min(e4.length, r5);
          for (let o3 = t4; o3 < r5; ++o3) n3 += String.fromCharCode(127 & e4[o3]);
          return n3;
        }
        function P(e4, t4, r5) {
          let n3 = "";
          r5 = Math.min(e4.length, r5);
          for (let o3 = t4; o3 < r5; ++o3) n3 += String.fromCharCode(e4[o3]);
          return n3;
        }
        function R(e4, t4, r5) {
          const n3 = e4.length;
          (!t4 || t4 < 0) && (t4 = 0), (!r5 || r5 < 0 || r5 > n3) && (r5 = n3);
          let o3 = "";
          for (let n4 = t4; n4 < r5; ++n4) o3 += Y[e4[n4]];
          return o3;
        }
        function j(e4, t4, r5) {
          const n3 = e4.slice(t4, r5);
          let o3 = "";
          for (let e5 = 0; e5 < n3.length - 1; e5 += 2) o3 += String.fromCharCode(n3[e5] + 256 * n3[e5 + 1]);
          return o3;
        }
        function I(e4, t4, r5) {
          if (e4 % 1 != 0 || e4 < 0) throw new RangeError("offset is not uint");
          if (e4 + t4 > r5) throw new RangeError("Trying to access beyond buffer length");
        }
        function C(e4, t4, r5, n3, o3, i2) {
          if (!u.isBuffer(e4)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t4 > o3 || t4 < i2) throw new RangeError('"value" argument is out of bounds');
          if (r5 + n3 > e4.length) throw new RangeError("Index out of range");
        }
        function L(e4, t4, r5, n3, o3) {
          q(t4, n3, o3, e4, r5, 7);
          let i2 = Number(t4 & BigInt(4294967295));
          e4[r5++] = i2, i2 >>= 8, e4[r5++] = i2, i2 >>= 8, e4[r5++] = i2, i2 >>= 8, e4[r5++] = i2;
          let a2 = Number(t4 >> BigInt(32) & BigInt(4294967295));
          return e4[r5++] = a2, a2 >>= 8, e4[r5++] = a2, a2 >>= 8, e4[r5++] = a2, a2 >>= 8, e4[r5++] = a2, r5;
        }
        function B(e4, t4, r5, n3, o3) {
          q(t4, n3, o3, e4, r5, 7);
          let i2 = Number(t4 & BigInt(4294967295));
          e4[r5 + 7] = i2, i2 >>= 8, e4[r5 + 6] = i2, i2 >>= 8, e4[r5 + 5] = i2, i2 >>= 8, e4[r5 + 4] = i2;
          let a2 = Number(t4 >> BigInt(32) & BigInt(4294967295));
          return e4[r5 + 3] = a2, a2 >>= 8, e4[r5 + 2] = a2, a2 >>= 8, e4[r5 + 1] = a2, a2 >>= 8, e4[r5] = a2, r5 + 8;
        }
        function N(e4, t4, r5, n3, o3, i2) {
          if (r5 + n3 > e4.length) throw new RangeError("Index out of range");
          if (r5 < 0) throw new RangeError("Index out of range");
        }
        function U(e4, t4, r5, n3, i2) {
          return t4 = +t4, r5 >>>= 0, i2 || N(e4, 0, r5, 4), o2.write(e4, t4, r5, n3, 23, 4), r5 + 4;
        }
        function M(e4, t4, r5, n3, i2) {
          return t4 = +t4, r5 >>>= 0, i2 || N(e4, 0, r5, 8), o2.write(e4, t4, r5, n3, 52, 8), r5 + 8;
        }
        u.prototype.slice = function(e4, t4) {
          const r5 = this.length;
          (e4 = ~~e4) < 0 ? (e4 += r5) < 0 && (e4 = 0) : e4 > r5 && (e4 = r5), (t4 = void 0 === t4 ? r5 : ~~t4) < 0 ? (t4 += r5) < 0 && (t4 = 0) : t4 > r5 && (t4 = r5), t4 < e4 && (t4 = e4);
          const n3 = this.subarray(e4, t4);
          return Object.setPrototypeOf(n3, u.prototype), n3;
        }, u.prototype.readUintLE = u.prototype.readUIntLE = function(e4, t4, r5) {
          e4 >>>= 0, t4 >>>= 0, r5 || I(e4, t4, this.length);
          let n3 = this[e4], o3 = 1, i2 = 0;
          for (; ++i2 < t4 && (o3 *= 256); ) n3 += this[e4 + i2] * o3;
          return n3;
        }, u.prototype.readUintBE = u.prototype.readUIntBE = function(e4, t4, r5) {
          e4 >>>= 0, t4 >>>= 0, r5 || I(e4, t4, this.length);
          let n3 = this[e4 + --t4], o3 = 1;
          for (; t4 > 0 && (o3 *= 256); ) n3 += this[e4 + --t4] * o3;
          return n3;
        }, u.prototype.readUint8 = u.prototype.readUInt8 = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 1, this.length), this[e4];
        }, u.prototype.readUint16LE = u.prototype.readUInt16LE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 2, this.length), this[e4] | this[e4 + 1] << 8;
        }, u.prototype.readUint16BE = u.prototype.readUInt16BE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 2, this.length), this[e4] << 8 | this[e4 + 1];
        }, u.prototype.readUint32LE = u.prototype.readUInt32LE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 4, this.length), (this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16) + 16777216 * this[e4 + 3];
        }, u.prototype.readUint32BE = u.prototype.readUInt32BE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 4, this.length), 16777216 * this[e4] + (this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3]);
        }, u.prototype.readBigUInt64LE = J(function(e4) {
          K(e4 >>>= 0, "offset");
          const t4 = this[e4], r5 = this[e4 + 7];
          void 0 !== t4 && void 0 !== r5 || H(e4, this.length - 8);
          const n3 = t4 + 256 * this[++e4] + 65536 * this[++e4] + this[++e4] * 2 ** 24, o3 = this[++e4] + 256 * this[++e4] + 65536 * this[++e4] + r5 * 2 ** 24;
          return BigInt(n3) + (BigInt(o3) << BigInt(32));
        }), u.prototype.readBigUInt64BE = J(function(e4) {
          K(e4 >>>= 0, "offset");
          const t4 = this[e4], r5 = this[e4 + 7];
          void 0 !== t4 && void 0 !== r5 || H(e4, this.length - 8);
          const n3 = t4 * 2 ** 24 + 65536 * this[++e4] + 256 * this[++e4] + this[++e4], o3 = this[++e4] * 2 ** 24 + 65536 * this[++e4] + 256 * this[++e4] + r5;
          return (BigInt(n3) << BigInt(32)) + BigInt(o3);
        }), u.prototype.readIntLE = function(e4, t4, r5) {
          e4 >>>= 0, t4 >>>= 0, r5 || I(e4, t4, this.length);
          let n3 = this[e4], o3 = 1, i2 = 0;
          for (; ++i2 < t4 && (o3 *= 256); ) n3 += this[e4 + i2] * o3;
          return o3 *= 128, n3 >= o3 && (n3 -= Math.pow(2, 8 * t4)), n3;
        }, u.prototype.readIntBE = function(e4, t4, r5) {
          e4 >>>= 0, t4 >>>= 0, r5 || I(e4, t4, this.length);
          let n3 = t4, o3 = 1, i2 = this[e4 + --n3];
          for (; n3 > 0 && (o3 *= 256); ) i2 += this[e4 + --n3] * o3;
          return o3 *= 128, i2 >= o3 && (i2 -= Math.pow(2, 8 * t4)), i2;
        }, u.prototype.readInt8 = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 1, this.length), 128 & this[e4] ? -1 * (255 - this[e4] + 1) : this[e4];
        }, u.prototype.readInt16LE = function(e4, t4) {
          e4 >>>= 0, t4 || I(e4, 2, this.length);
          const r5 = this[e4] | this[e4 + 1] << 8;
          return 32768 & r5 ? 4294901760 | r5 : r5;
        }, u.prototype.readInt16BE = function(e4, t4) {
          e4 >>>= 0, t4 || I(e4, 2, this.length);
          const r5 = this[e4 + 1] | this[e4] << 8;
          return 32768 & r5 ? 4294901760 | r5 : r5;
        }, u.prototype.readInt32LE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 4, this.length), this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16 | this[e4 + 3] << 24;
        }, u.prototype.readInt32BE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 4, this.length), this[e4] << 24 | this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3];
        }, u.prototype.readBigInt64LE = J(function(e4) {
          K(e4 >>>= 0, "offset");
          const t4 = this[e4], r5 = this[e4 + 7];
          void 0 !== t4 && void 0 !== r5 || H(e4, this.length - 8);
          const n3 = this[e4 + 4] + 256 * this[e4 + 5] + 65536 * this[e4 + 6] + (r5 << 24);
          return (BigInt(n3) << BigInt(32)) + BigInt(t4 + 256 * this[++e4] + 65536 * this[++e4] + this[++e4] * 2 ** 24);
        }), u.prototype.readBigInt64BE = J(function(e4) {
          K(e4 >>>= 0, "offset");
          const t4 = this[e4], r5 = this[e4 + 7];
          void 0 !== t4 && void 0 !== r5 || H(e4, this.length - 8);
          const n3 = (t4 << 24) + 65536 * this[++e4] + 256 * this[++e4] + this[++e4];
          return (BigInt(n3) << BigInt(32)) + BigInt(this[++e4] * 2 ** 24 + 65536 * this[++e4] + 256 * this[++e4] + r5);
        }), u.prototype.readFloatLE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 4, this.length), o2.read(this, e4, true, 23, 4);
        }, u.prototype.readFloatBE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 4, this.length), o2.read(this, e4, false, 23, 4);
        }, u.prototype.readDoubleLE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 8, this.length), o2.read(this, e4, true, 52, 8);
        }, u.prototype.readDoubleBE = function(e4, t4) {
          return e4 >>>= 0, t4 || I(e4, 8, this.length), o2.read(this, e4, false, 52, 8);
        }, u.prototype.writeUintLE = u.prototype.writeUIntLE = function(e4, t4, r5, n3) {
          if (e4 = +e4, t4 >>>= 0, r5 >>>= 0, !n3) {
            C(this, e4, t4, r5, Math.pow(2, 8 * r5) - 1, 0);
          }
          let o3 = 1, i2 = 0;
          for (this[t4] = 255 & e4; ++i2 < r5 && (o3 *= 256); ) this[t4 + i2] = e4 / o3 & 255;
          return t4 + r5;
        }, u.prototype.writeUintBE = u.prototype.writeUIntBE = function(e4, t4, r5, n3) {
          if (e4 = +e4, t4 >>>= 0, r5 >>>= 0, !n3) {
            C(this, e4, t4, r5, Math.pow(2, 8 * r5) - 1, 0);
          }
          let o3 = r5 - 1, i2 = 1;
          for (this[t4 + o3] = 255 & e4; --o3 >= 0 && (i2 *= 256); ) this[t4 + o3] = e4 / i2 & 255;
          return t4 + r5;
        }, u.prototype.writeUint8 = u.prototype.writeUInt8 = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 1, 255, 0), this[t4] = 255 & e4, t4 + 1;
        }, u.prototype.writeUint16LE = u.prototype.writeUInt16LE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 2, 65535, 0), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, t4 + 2;
        }, u.prototype.writeUint16BE = u.prototype.writeUInt16BE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 2, 65535, 0), this[t4] = e4 >>> 8, this[t4 + 1] = 255 & e4, t4 + 2;
        }, u.prototype.writeUint32LE = u.prototype.writeUInt32LE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 4, 4294967295, 0), this[t4 + 3] = e4 >>> 24, this[t4 + 2] = e4 >>> 16, this[t4 + 1] = e4 >>> 8, this[t4] = 255 & e4, t4 + 4;
        }, u.prototype.writeUint32BE = u.prototype.writeUInt32BE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 4, 4294967295, 0), this[t4] = e4 >>> 24, this[t4 + 1] = e4 >>> 16, this[t4 + 2] = e4 >>> 8, this[t4 + 3] = 255 & e4, t4 + 4;
        }, u.prototype.writeBigUInt64LE = J(function(e4, t4 = 0) {
          return L(this, e4, t4, BigInt(0), BigInt("0xffffffffffffffff"));
        }), u.prototype.writeBigUInt64BE = J(function(e4, t4 = 0) {
          return B(this, e4, t4, BigInt(0), BigInt("0xffffffffffffffff"));
        }), u.prototype.writeIntLE = function(e4, t4, r5, n3) {
          if (e4 = +e4, t4 >>>= 0, !n3) {
            const n4 = Math.pow(2, 8 * r5 - 1);
            C(this, e4, t4, r5, n4 - 1, -n4);
          }
          let o3 = 0, i2 = 1, a2 = 0;
          for (this[t4] = 255 & e4; ++o3 < r5 && (i2 *= 256); ) e4 < 0 && 0 === a2 && 0 !== this[t4 + o3 - 1] && (a2 = 1), this[t4 + o3] = (e4 / i2 | 0) - a2 & 255;
          return t4 + r5;
        }, u.prototype.writeIntBE = function(e4, t4, r5, n3) {
          if (e4 = +e4, t4 >>>= 0, !n3) {
            const n4 = Math.pow(2, 8 * r5 - 1);
            C(this, e4, t4, r5, n4 - 1, -n4);
          }
          let o3 = r5 - 1, i2 = 1, a2 = 0;
          for (this[t4 + o3] = 255 & e4; --o3 >= 0 && (i2 *= 256); ) e4 < 0 && 0 === a2 && 0 !== this[t4 + o3 + 1] && (a2 = 1), this[t4 + o3] = (e4 / i2 | 0) - a2 & 255;
          return t4 + r5;
        }, u.prototype.writeInt8 = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 1, 127, -128), e4 < 0 && (e4 = 255 + e4 + 1), this[t4] = 255 & e4, t4 + 1;
        }, u.prototype.writeInt16LE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 2, 32767, -32768), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, t4 + 2;
        }, u.prototype.writeInt16BE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 2, 32767, -32768), this[t4] = e4 >>> 8, this[t4 + 1] = 255 & e4, t4 + 2;
        }, u.prototype.writeInt32LE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 4, 2147483647, -2147483648), this[t4] = 255 & e4, this[t4 + 1] = e4 >>> 8, this[t4 + 2] = e4 >>> 16, this[t4 + 3] = e4 >>> 24, t4 + 4;
        }, u.prototype.writeInt32BE = function(e4, t4, r5) {
          return e4 = +e4, t4 >>>= 0, r5 || C(this, e4, t4, 4, 2147483647, -2147483648), e4 < 0 && (e4 = 4294967295 + e4 + 1), this[t4] = e4 >>> 24, this[t4 + 1] = e4 >>> 16, this[t4 + 2] = e4 >>> 8, this[t4 + 3] = 255 & e4, t4 + 4;
        }, u.prototype.writeBigInt64LE = J(function(e4, t4 = 0) {
          return L(this, e4, t4, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), u.prototype.writeBigInt64BE = J(function(e4, t4 = 0) {
          return B(this, e4, t4, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), u.prototype.writeFloatLE = function(e4, t4, r5) {
          return U(this, e4, t4, true, r5);
        }, u.prototype.writeFloatBE = function(e4, t4, r5) {
          return U(this, e4, t4, false, r5);
        }, u.prototype.writeDoubleLE = function(e4, t4, r5) {
          return M(this, e4, t4, true, r5);
        }, u.prototype.writeDoubleBE = function(e4, t4, r5) {
          return M(this, e4, t4, false, r5);
        }, u.prototype.copy = function(e4, t4, r5, n3) {
          if (!u.isBuffer(e4)) throw new TypeError("argument should be a Buffer");
          if (r5 || (r5 = 0), n3 || 0 === n3 || (n3 = this.length), t4 >= e4.length && (t4 = e4.length), t4 || (t4 = 0), n3 > 0 && n3 < r5 && (n3 = r5), n3 === r5) return 0;
          if (0 === e4.length || 0 === this.length) return 0;
          if (t4 < 0) throw new RangeError("targetStart out of bounds");
          if (r5 < 0 || r5 >= this.length) throw new RangeError("Index out of range");
          if (n3 < 0) throw new RangeError("sourceEnd out of bounds");
          n3 > this.length && (n3 = this.length), e4.length - t4 < n3 - r5 && (n3 = e4.length - t4 + r5);
          const o3 = n3 - r5;
          return this === e4 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t4, r5, n3) : Uint8Array.prototype.set.call(e4, this.subarray(r5, n3), t4), o3;
        }, u.prototype.fill = function(e4, t4, r5, n3) {
          if ("string" == typeof e4) {
            if ("string" == typeof t4 ? (n3 = t4, t4 = 0, r5 = this.length) : "string" == typeof r5 && (n3 = r5, r5 = this.length), void 0 !== n3 && "string" != typeof n3) throw new TypeError("encoding must be a string");
            if ("string" == typeof n3 && !u.isEncoding(n3)) throw new TypeError("Unknown encoding: " + n3);
            if (1 === e4.length) {
              const t5 = e4.charCodeAt(0);
              ("utf8" === n3 && t5 < 128 || "latin1" === n3) && (e4 = t5);
            }
          } else "number" == typeof e4 ? e4 &= 255 : "boolean" == typeof e4 && (e4 = Number(e4));
          if (t4 < 0 || this.length < t4 || this.length < r5) throw new RangeError("Out of range index");
          if (r5 <= t4) return this;
          let o3;
          if (t4 >>>= 0, r5 = void 0 === r5 ? this.length : r5 >>> 0, e4 || (e4 = 0), "number" == typeof e4) for (o3 = t4; o3 < r5; ++o3) this[o3] = e4;
          else {
            const i2 = u.isBuffer(e4) ? e4 : u.from(e4, n3), a2 = i2.length;
            if (0 === a2) throw new TypeError('The value "' + e4 + '" is invalid for argument "value"');
            for (o3 = 0; o3 < r5 - t4; ++o3) this[o3 + t4] = i2[o3 % a2];
          }
          return this;
        };
        const D = {};
        function F(e4, t4, r5) {
          D[e4] = class extends r5 {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: t4.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e4}]`, this.stack, delete this.name;
            }
            get code() {
              return e4;
            }
            set code(e5) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: e5, writable: true });
            }
            toString() {
              return `${this.name} [${e4}]: ${this.message}`;
            }
          };
        }
        function V(e4) {
          let t4 = "", r5 = e4.length;
          const n3 = "-" === e4[0] ? 1 : 0;
          for (; r5 >= n3 + 4; r5 -= 3) t4 = `_${e4.slice(r5 - 3, r5)}${t4}`;
          return `${e4.slice(0, r5)}${t4}`;
        }
        function q(e4, t4, r5, n3, o3, i2) {
          if (e4 > r5 || e4 < t4) {
            const n4 = "bigint" == typeof t4 ? "n" : "";
            let o4;
            throw o4 = i2 > 3 ? 0 === t4 || t4 === BigInt(0) ? `>= 0${n4} and < 2${n4} ** ${8 * (i2 + 1)}${n4}` : `>= -(2${n4} ** ${8 * (i2 + 1) - 1}${n4}) and < 2 ** ${8 * (i2 + 1) - 1}${n4}` : `>= ${t4}${n4} and <= ${r5}${n4}`, new D.ERR_OUT_OF_RANGE("value", o4, e4);
          }
          !function(e5, t5, r6) {
            K(t5, "offset"), void 0 !== e5[t5] && void 0 !== e5[t5 + r6] || H(t5, e5.length - (r6 + 1));
          }(n3, o3, i2);
        }
        function K(e4, t4) {
          if ("number" != typeof e4) throw new D.ERR_INVALID_ARG_TYPE(t4, "number", e4);
        }
        function H(e4, t4, r5) {
          if (Math.floor(e4) !== e4) throw K(e4, r5), new D.ERR_OUT_OF_RANGE(r5 || "offset", "an integer", e4);
          if (t4 < 0) throw new D.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new D.ERR_OUT_OF_RANGE(r5 || "offset", `>= ${r5 ? 1 : 0} and <= ${t4}`, e4);
        }
        F("ERR_BUFFER_OUT_OF_BOUNDS", function(e4) {
          return e4 ? `${e4} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), F("ERR_INVALID_ARG_TYPE", function(e4, t4) {
          return `The "${e4}" argument must be of type number. Received type ${typeof t4}`;
        }, TypeError), F("ERR_OUT_OF_RANGE", function(e4, t4, r5) {
          let n3 = `The value of "${e4}" is out of range.`, o3 = r5;
          return Number.isInteger(r5) && Math.abs(r5) > 2 ** 32 ? o3 = V(String(r5)) : "bigint" == typeof r5 && (o3 = String(r5), (r5 > BigInt(2) ** BigInt(32) || r5 < -(BigInt(2) ** BigInt(32))) && (o3 = V(o3)), o3 += "n"), n3 += ` It must be ${t4}. Received ${o3}`, n3;
        }, RangeError);
        const z = /[^+/0-9A-Za-z-_]/g;
        function X(e4, t4) {
          let r5;
          t4 = t4 || 1 / 0;
          const n3 = e4.length;
          let o3 = null;
          const i2 = [];
          for (let a2 = 0; a2 < n3; ++a2) {
            if (r5 = e4.charCodeAt(a2), r5 > 55295 && r5 < 57344) {
              if (!o3) {
                if (r5 > 56319) {
                  (t4 -= 3) > -1 && i2.push(239, 191, 189);
                  continue;
                }
                if (a2 + 1 === n3) {
                  (t4 -= 3) > -1 && i2.push(239, 191, 189);
                  continue;
                }
                o3 = r5;
                continue;
              }
              if (r5 < 56320) {
                (t4 -= 3) > -1 && i2.push(239, 191, 189), o3 = r5;
                continue;
              }
              r5 = 65536 + (o3 - 55296 << 10 | r5 - 56320);
            } else o3 && (t4 -= 3) > -1 && i2.push(239, 191, 189);
            if (o3 = null, r5 < 128) {
              if ((t4 -= 1) < 0) break;
              i2.push(r5);
            } else if (r5 < 2048) {
              if ((t4 -= 2) < 0) break;
              i2.push(r5 >> 6 | 192, 63 & r5 | 128);
            } else if (r5 < 65536) {
              if ((t4 -= 3) < 0) break;
              i2.push(r5 >> 12 | 224, r5 >> 6 & 63 | 128, 63 & r5 | 128);
            } else {
              if (!(r5 < 1114112)) throw new Error("Invalid code point");
              if ((t4 -= 4) < 0) break;
              i2.push(r5 >> 18 | 240, r5 >> 12 & 63 | 128, r5 >> 6 & 63 | 128, 63 & r5 | 128);
            }
          }
          return i2;
        }
        function G(e4) {
          return n2.toByteArray(function(e5) {
            if ((e5 = (e5 = e5.split("=")[0]).trim().replace(z, "")).length < 2) return "";
            for (; e5.length % 4 != 0; ) e5 += "=";
            return e5;
          }(e4));
        }
        function W(e4, t4, r5, n3) {
          let o3;
          for (o3 = 0; o3 < n3 && !(o3 + r5 >= t4.length || o3 >= e4.length); ++o3) t4[o3 + r5] = e4[o3];
          return o3;
        }
        function $(e4, t4) {
          return e4 instanceof t4 || null != e4 && null != e4.constructor && null != e4.constructor.name && e4.constructor.name === t4.name;
        }
        function Q(e4) {
          return e4 != e4;
        }
        const Y = function() {
          const e4 = "0123456789abcdef", t4 = new Array(256);
          for (let r5 = 0; r5 < 16; ++r5) {
            const n3 = 16 * r5;
            for (let o3 = 0; o3 < 16; ++o3) t4[n3 + o3] = e4[r5] + e4[o3];
          }
          return t4;
        }();
        function J(e4) {
          return "undefined" == typeof BigInt ? Z : e4;
        }
        function Z() {
          throw new Error("BigInt not supported");
        }
      }, 6866: (e3) => {
        e3.exports = { 100: "Continue", 101: "Switching Protocols", 102: "Processing", 200: "OK", 201: "Created", 202: "Accepted", 203: "Non-Authoritative Information", 204: "No Content", 205: "Reset Content", 206: "Partial Content", 207: "Multi-Status", 208: "Already Reported", 226: "IM Used", 300: "Multiple Choices", 301: "Moved Permanently", 302: "Found", 303: "See Other", 304: "Not Modified", 305: "Use Proxy", 307: "Temporary Redirect", 308: "Permanent Redirect", 400: "Bad Request", 401: "Unauthorized", 402: "Payment Required", 403: "Forbidden", 404: "Not Found", 405: "Method Not Allowed", 406: "Not Acceptable", 407: "Proxy Authentication Required", 408: "Request Timeout", 409: "Conflict", 410: "Gone", 411: "Length Required", 412: "Precondition Failed", 413: "Payload Too Large", 414: "URI Too Long", 415: "Unsupported Media Type", 416: "Range Not Satisfiable", 417: "Expectation Failed", 418: "I'm a teapot", 421: "Misdirected Request", 422: "Unprocessable Entity", 423: "Locked", 424: "Failed Dependency", 425: "Unordered Collection", 426: "Upgrade Required", 428: "Precondition Required", 429: "Too Many Requests", 431: "Request Header Fields Too Large", 451: "Unavailable For Legal Reasons", 500: "Internal Server Error", 501: "Not Implemented", 502: "Bad Gateway", 503: "Service Unavailable", 504: "Gateway Timeout", 505: "HTTP Version Not Supported", 506: "Variant Also Negotiates", 507: "Insufficient Storage", 508: "Loop Detected", 509: "Bandwidth Limit Exceeded", 510: "Not Extended", 511: "Network Authentication Required" };
      }, 8075: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(453), o2 = r4(487), i = o2(n2("String.prototype.indexOf"));
        e3.exports = function(e4, t4) {
          var r5 = n2(e4, !!t4);
          return "function" == typeof r5 && i(e4, ".prototype.") > -1 ? o2(r5) : r5;
        };
      }, 487: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(6743), o2 = r4(453), i = r4(6897), a = r4(9675), s = o2("%Function.prototype.apply%"), u = o2("%Function.prototype.call%"), c = o2("%Reflect.apply%", true) || n2.call(u, s), l2 = r4(655), f = o2("%Math.max%");
        e3.exports = function(e4) {
          if ("function" != typeof e4) throw new a("a function is required");
          var t4 = c(n2, u, arguments);
          return i(t4, 1 + f(0, e4.length - (arguments.length - 1)), true);
        };
        var p = function() {
          return c(n2, s, arguments);
        };
        l2 ? l2(e3.exports, "apply", { value: p }) : e3.exports.apply = p;
      }, 41: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(655), o2 = r4(8068), i = r4(9675), a = r4(5795);
        e3.exports = function(e4, t4, r5) {
          if (!e4 || "object" != typeof e4 && "function" != typeof e4) throw new i("`obj` must be an object or a function`");
          if ("string" != typeof t4 && "symbol" != typeof t4) throw new i("`property` must be a string or a symbol`");
          if (arguments.length > 3 && "boolean" != typeof arguments[3] && null !== arguments[3]) throw new i("`nonEnumerable`, if provided, must be a boolean or null");
          if (arguments.length > 4 && "boolean" != typeof arguments[4] && null !== arguments[4]) throw new i("`nonWritable`, if provided, must be a boolean or null");
          if (arguments.length > 5 && "boolean" != typeof arguments[5] && null !== arguments[5]) throw new i("`nonConfigurable`, if provided, must be a boolean or null");
          if (arguments.length > 6 && "boolean" != typeof arguments[6]) throw new i("`loose`, if provided, must be a boolean");
          var s = arguments.length > 3 ? arguments[3] : null, u = arguments.length > 4 ? arguments[4] : null, c = arguments.length > 5 ? arguments[5] : null, l2 = arguments.length > 6 && arguments[6], f = !!a && a(e4, t4);
          if (n2) n2(e4, t4, { configurable: null === c && f ? f.configurable : !c, enumerable: null === s && f ? f.enumerable : !s, value: r5, writable: null === u && f ? f.writable : !u });
          else {
            if (!l2 && (s || u || c)) throw new o2("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
            e4[t4] = r5;
          }
        };
      }, 655: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(453)("%Object.defineProperty%", true) || false;
        if (n2) try {
          n2({}, "a", { value: 1 });
        } catch (e4) {
          n2 = false;
        }
        e3.exports = n2;
      }, 1237: (e3) => {
        "use strict";
        e3.exports = EvalError;
      }, 9383: (e3) => {
        "use strict";
        e3.exports = Error;
      }, 9290: (e3) => {
        "use strict";
        e3.exports = RangeError;
      }, 9538: (e3) => {
        "use strict";
        e3.exports = ReferenceError;
      }, 8068: (e3) => {
        "use strict";
        e3.exports = SyntaxError;
      }, 9675: (e3) => {
        "use strict";
        e3.exports = TypeError;
      }, 5345: (e3) => {
        "use strict";
        e3.exports = URIError;
      }, 7007: (e3) => {
        "use strict";
        var t3, r4 = "object" == typeof Reflect ? Reflect : null, n2 = r4 && "function" == typeof r4.apply ? r4.apply : function(e4, t4, r5) {
          return Function.prototype.apply.call(e4, t4, r5);
        };
        t3 = r4 && "function" == typeof r4.ownKeys ? r4.ownKeys : Object.getOwnPropertySymbols ? function(e4) {
          return Object.getOwnPropertyNames(e4).concat(Object.getOwnPropertySymbols(e4));
        } : function(e4) {
          return Object.getOwnPropertyNames(e4);
        };
        var o2 = Number.isNaN || function(e4) {
          return e4 != e4;
        };
        function i() {
          i.init.call(this);
        }
        e3.exports = i, e3.exports.once = function(e4, t4) {
          return new Promise(function(r5, n3) {
            function o3(r6) {
              e4.removeListener(t4, i2), n3(r6);
            }
            function i2() {
              "function" == typeof e4.removeListener && e4.removeListener("error", o3), r5([].slice.call(arguments));
            }
            y(e4, t4, i2, { once: true }), "error" !== t4 && function(e5, t5, r6) {
              "function" == typeof e5.on && y(e5, "error", t5, r6);
            }(e4, o3, { once: true });
          });
        }, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._eventsCount = 0, i.prototype._maxListeners = void 0;
        var a = 10;
        function s(e4) {
          if ("function" != typeof e4) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e4);
        }
        function u(e4) {
          return void 0 === e4._maxListeners ? i.defaultMaxListeners : e4._maxListeners;
        }
        function c(e4, t4, r5, n3) {
          var o3, i2, a2, c2;
          if (s(r5), void 0 === (i2 = e4._events) ? (i2 = e4._events = /* @__PURE__ */ Object.create(null), e4._eventsCount = 0) : (void 0 !== i2.newListener && (e4.emit("newListener", t4, r5.listener ? r5.listener : r5), i2 = e4._events), a2 = i2[t4]), void 0 === a2) a2 = i2[t4] = r5, ++e4._eventsCount;
          else if ("function" == typeof a2 ? a2 = i2[t4] = n3 ? [r5, a2] : [a2, r5] : n3 ? a2.unshift(r5) : a2.push(r5), (o3 = u(e4)) > 0 && a2.length > o3 && !a2.warned) {
            a2.warned = true;
            var l3 = new Error("Possible EventEmitter memory leak detected. " + a2.length + " " + String(t4) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            l3.name = "MaxListenersExceededWarning", l3.emitter = e4, l3.type = t4, l3.count = a2.length, c2 = l3, console && console.warn && console.warn(c2);
          }
          return e4;
        }
        function l2() {
          if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = true, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
        function f(e4, t4, r5) {
          var n3 = { fired: false, wrapFn: void 0, target: e4, type: t4, listener: r5 }, o3 = l2.bind(n3);
          return o3.listener = r5, n3.wrapFn = o3, o3;
        }
        function p(e4, t4, r5) {
          var n3 = e4._events;
          if (void 0 === n3) return [];
          var o3 = n3[t4];
          return void 0 === o3 ? [] : "function" == typeof o3 ? r5 ? [o3.listener || o3] : [o3] : r5 ? function(e5) {
            for (var t5 = new Array(e5.length), r6 = 0; r6 < t5.length; ++r6) t5[r6] = e5[r6].listener || e5[r6];
            return t5;
          }(o3) : d(o3, o3.length);
        }
        function h(e4) {
          var t4 = this._events;
          if (void 0 !== t4) {
            var r5 = t4[e4];
            if ("function" == typeof r5) return 1;
            if (void 0 !== r5) return r5.length;
          }
          return 0;
        }
        function d(e4, t4) {
          for (var r5 = new Array(t4), n3 = 0; n3 < t4; ++n3) r5[n3] = e4[n3];
          return r5;
        }
        function y(e4, t4, r5, n3) {
          if ("function" == typeof e4.on) n3.once ? e4.once(t4, r5) : e4.on(t4, r5);
          else {
            if ("function" != typeof e4.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e4);
            e4.addEventListener(t4, function o3(i2) {
              n3.once && e4.removeEventListener(t4, o3), r5(i2);
            });
          }
        }
        Object.defineProperty(i, "defaultMaxListeners", { enumerable: true, get: function() {
          return a;
        }, set: function(e4) {
          if ("number" != typeof e4 || e4 < 0 || o2(e4)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e4 + ".");
          a = e4;
        } }), i.init = function() {
          void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
        }, i.prototype.setMaxListeners = function(e4) {
          if ("number" != typeof e4 || e4 < 0 || o2(e4)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e4 + ".");
          return this._maxListeners = e4, this;
        }, i.prototype.getMaxListeners = function() {
          return u(this);
        }, i.prototype.emit = function(e4) {
          for (var t4 = [], r5 = 1; r5 < arguments.length; r5++) t4.push(arguments[r5]);
          var o3 = "error" === e4, i2 = this._events;
          if (void 0 !== i2) o3 = o3 && void 0 === i2.error;
          else if (!o3) return false;
          if (o3) {
            var a2;
            if (t4.length > 0 && (a2 = t4[0]), a2 instanceof Error) throw a2;
            var s2 = new Error("Unhandled error." + (a2 ? " (" + a2.message + ")" : ""));
            throw s2.context = a2, s2;
          }
          var u2 = i2[e4];
          if (void 0 === u2) return false;
          if ("function" == typeof u2) n2(u2, this, t4);
          else {
            var c2 = u2.length, l3 = d(u2, c2);
            for (r5 = 0; r5 < c2; ++r5) n2(l3[r5], this, t4);
          }
          return true;
        }, i.prototype.addListener = function(e4, t4) {
          return c(this, e4, t4, false);
        }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function(e4, t4) {
          return c(this, e4, t4, true);
        }, i.prototype.once = function(e4, t4) {
          return s(t4), this.on(e4, f(this, e4, t4)), this;
        }, i.prototype.prependOnceListener = function(e4, t4) {
          return s(t4), this.prependListener(e4, f(this, e4, t4)), this;
        }, i.prototype.removeListener = function(e4, t4) {
          var r5, n3, o3, i2, a2;
          if (s(t4), void 0 === (n3 = this._events)) return this;
          if (void 0 === (r5 = n3[e4])) return this;
          if (r5 === t4 || r5.listener === t4) 0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : (delete n3[e4], n3.removeListener && this.emit("removeListener", e4, r5.listener || t4));
          else if ("function" != typeof r5) {
            for (o3 = -1, i2 = r5.length - 1; i2 >= 0; i2--) if (r5[i2] === t4 || r5[i2].listener === t4) {
              a2 = r5[i2].listener, o3 = i2;
              break;
            }
            if (o3 < 0) return this;
            0 === o3 ? r5.shift() : function(e5, t5) {
              for (; t5 + 1 < e5.length; t5++) e5[t5] = e5[t5 + 1];
              e5.pop();
            }(r5, o3), 1 === r5.length && (n3[e4] = r5[0]), void 0 !== n3.removeListener && this.emit("removeListener", e4, a2 || t4);
          }
          return this;
        }, i.prototype.off = i.prototype.removeListener, i.prototype.removeAllListeners = function(e4) {
          var t4, r5, n3;
          if (void 0 === (r5 = this._events)) return this;
          if (void 0 === r5.removeListener) return 0 === arguments.length ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : void 0 !== r5[e4] && (0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : delete r5[e4]), this;
          if (0 === arguments.length) {
            var o3, i2 = Object.keys(r5);
            for (n3 = 0; n3 < i2.length; ++n3) "removeListener" !== (o3 = i2[n3]) && this.removeAllListeners(o3);
            return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
          }
          if ("function" == typeof (t4 = r5[e4])) this.removeListener(e4, t4);
          else if (void 0 !== t4) for (n3 = t4.length - 1; n3 >= 0; n3--) this.removeListener(e4, t4[n3]);
          return this;
        }, i.prototype.listeners = function(e4) {
          return p(this, e4, true);
        }, i.prototype.rawListeners = function(e4) {
          return p(this, e4, false);
        }, i.listenerCount = function(e4, t4) {
          return "function" == typeof e4.listenerCount ? e4.listenerCount(t4) : h.call(e4, t4);
        }, i.prototype.listenerCount = h, i.prototype.eventNames = function() {
          return this._eventsCount > 0 ? t3(this._events) : [];
        };
      }, 1731: (e3, t3, r4) => {
        var n2 = r4(8287).Buffer, o2 = r4(8835).parse, i = r4(7007), a = r4(3464), s = r4(1568), u = r4(537), c = ["pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "secureProtocol", "servername", "checkServerIdentity"], l2 = [239, 187, 191], f = 262144, p = /^(cookie|authorization)$/i;
        function h(e4, t4) {
          var r5 = h.CONNECTING, i2 = t4 && t4.headers, u2 = false;
          Object.defineProperty(this, "readyState", { get: function() {
            return r5;
          } }), Object.defineProperty(this, "url", { get: function() {
            return e4;
          } });
          var m, v = this;
          function g(t5) {
            r5 !== h.CLOSED && (r5 = h.CONNECTING, T("error", new d("error", { message: t5 })), _ && (e4 = _, _ = null, u2 = false), setTimeout(function() {
              r5 !== h.CONNECTING || v.connectionInProgress || (v.connectionInProgress = true, k());
            }, v.reconnectInterval));
          }
          v.reconnectInterval = 1e3, v.connectionInProgress = false;
          var b = "";
          i2 && i2["Last-Event-ID"] && (b = i2["Last-Event-ID"], delete i2["Last-Event-ID"]);
          var w = false, S = "", E = "", _ = null;
          function k() {
            var y2 = o2(e4), S2 = "https:" === y2.protocol;
            if (y2.headers = { "Cache-Control": "no-cache", Accept: "text/event-stream" }, b && (y2.headers["Last-Event-ID"] = b), i2) {
              var E2 = u2 ? function(e5) {
                var t5 = {};
                for (var r6 in e5) p.test(r6) || (t5[r6] = e5[r6]);
                return t5;
              }(i2) : i2;
              for (var x in E2) {
                var A = E2[x];
                A && (y2.headers[x] = A);
              }
            }
            if (y2.rejectUnauthorized = !(t4 && !t4.rejectUnauthorized), t4 && void 0 !== t4.createConnection && (y2.createConnection = t4.createConnection), t4 && t4.proxy) {
              var P = o2(t4.proxy);
              S2 = "https:" === P.protocol, y2.protocol = S2 ? "https:" : "http:", y2.path = e4, y2.headers.Host = y2.host, y2.hostname = P.hostname, y2.host = P.host, y2.port = P.port;
            }
            if (t4 && t4.https) {
              for (var R in t4.https) if (-1 !== c.indexOf(R)) {
                var j = t4.https[R];
                void 0 !== j && (y2[R] = j);
              }
            }
            t4 && void 0 !== t4.withCredentials && (y2.withCredentials = t4.withCredentials), m = (S2 ? a : s).request(y2, function(t5) {
              if (v.connectionInProgress = false, 500 === t5.statusCode || 502 === t5.statusCode || 503 === t5.statusCode || 504 === t5.statusCode) return T("error", new d("error", { status: t5.statusCode, message: t5.statusMessage })), void g();
              if (301 === t5.statusCode || 302 === t5.statusCode || 307 === t5.statusCode) {
                var o3 = t5.headers.location;
                if (!o3) return void T("error", new d("error", { status: t5.statusCode, message: t5.statusMessage }));
                var i3 = new URL(e4).origin, a2 = new URL(o3).origin;
                return u2 = i3 !== a2, 307 === t5.statusCode && (_ = e4), e4 = o3, void process.nextTick(k);
              }
              if (200 !== t5.statusCode) return T("error", new d("error", { status: t5.statusCode, message: t5.statusMessage })), v.close();
              var s2, c2;
              r5 = h.OPEN, t5.on("close", function() {
                t5.removeAllListeners("close"), t5.removeAllListeners("end"), g();
              }), t5.on("end", function() {
                t5.removeAllListeners("close"), t5.removeAllListeners("end"), g();
              }), T("open", new d("open"));
              var p2 = 0, y3 = -1, m2 = 0, b2 = 0;
              t5.on("data", function(e5) {
                s2 ? (e5.length > s2.length - b2 && ((m2 = 2 * s2.length + e5.length) > f && (m2 = s2.length + e5.length + f), c2 = n2.alloc(m2), s2.copy(c2, 0, 0, b2), s2 = c2), e5.copy(s2, b2), b2 += e5.length) : (function(e6) {
                  return l2.every(function(t7, r7) {
                    return e6[r7] === t7;
                  });
                }(s2 = e5) && (s2 = s2.slice(l2.length)), b2 = s2.length);
                for (var t6 = 0, r6 = b2; t6 < r6; ) {
                  w && (10 === s2[t6] && ++t6, w = false);
                  for (var o4, i4 = -1, a3 = y3, u3 = p2; i4 < 0 && u3 < r6; ++u3) 58 === (o4 = s2[u3]) ? a3 < 0 && (a3 = u3 - t6) : 13 === o4 ? (w = true, i4 = u3 - t6) : 10 === o4 && (i4 = u3 - t6);
                  if (i4 < 0) {
                    p2 = r6 - t6, y3 = a3;
                    break;
                  }
                  p2 = 0, y3 = -1, O(s2, t6, a3, i4), t6 += i4 + 1;
                }
                t6 === r6 ? (s2 = void 0, b2 = 0) : t6 > 0 && (s2 = s2.slice(t6, b2), b2 = s2.length);
              });
            }), m.on("error", function(e5) {
              v.connectionInProgress = false, g(e5.message);
            }), m.setNoDelay && m.setNoDelay(true), m.end();
          }
          function T() {
            v.listeners(arguments[0]).length > 0 && v.emit.apply(v, arguments);
          }
          function O(t5, r6, n3, o3) {
            if (0 === o3) {
              if (S.length > 0) {
                var i3 = E || "message";
                T(i3, new y(i3, { data: S.slice(0, -1), lastEventId: b, origin: new URL(e4).origin })), S = "";
              }
              E = void 0;
            } else if (n3 > 0) {
              var a2 = n3 < 0, s2 = 0, u3 = t5.slice(r6, r6 + (a2 ? o3 : n3)).toString();
              r6 += s2 = a2 ? o3 : 32 !== t5[r6 + n3 + 1] ? n3 + 1 : n3 + 2;
              var c2 = o3 - s2, l3 = t5.slice(r6, r6 + c2).toString();
              if ("data" === u3) S += l3 + "\n";
              else if ("event" === u3) E = l3;
              else if ("id" === u3) b = l3;
              else if ("retry" === u3) {
                var f2 = parseInt(l3, 10);
                Number.isNaN(f2) || (v.reconnectInterval = f2);
              }
            }
          }
          k(), this._close = function() {
            r5 !== h.CLOSED && (r5 = h.CLOSED, m.abort && m.abort(), m.xhr && m.xhr.abort && m.xhr.abort());
          };
        }
        function d(e4, t4) {
          if (Object.defineProperty(this, "type", { writable: false, value: e4, enumerable: true }), t4) for (var r5 in t4) t4.hasOwnProperty(r5) && Object.defineProperty(this, r5, { writable: false, value: t4[r5], enumerable: true });
        }
        function y(e4, t4) {
          for (var r5 in Object.defineProperty(this, "type", { writable: false, value: e4, enumerable: true }), t4) t4.hasOwnProperty(r5) && Object.defineProperty(this, r5, { writable: false, value: t4[r5], enumerable: true });
        }
        e3.exports = h, u.inherits(h, i.EventEmitter), h.prototype.constructor = h, ["open", "error", "message"].forEach(function(e4) {
          Object.defineProperty(h.prototype, "on" + e4, { get: function() {
            var t4 = this.listeners(e4)[0];
            return t4 ? t4._listener ? t4._listener : t4 : void 0;
          }, set: function(t4) {
            this.removeAllListeners(e4), this.addEventListener(e4, t4);
          } });
        }), Object.defineProperty(h, "CONNECTING", { enumerable: true, value: 0 }), Object.defineProperty(h, "OPEN", { enumerable: true, value: 1 }), Object.defineProperty(h, "CLOSED", { enumerable: true, value: 2 }), h.prototype.CONNECTING = 0, h.prototype.OPEN = 1, h.prototype.CLOSED = 2, h.prototype.close = function() {
          this._close();
        }, h.prototype.addEventListener = function(e4, t4) {
          "function" == typeof t4 && (t4._listener = t4, this.on(e4, t4));
        }, h.prototype.dispatchEvent = function(e4) {
          if (!e4.type) throw new Error("UNSPECIFIED_EVENT_TYPE_ERR");
          this.emit(e4.type, e4.detail);
        }, h.prototype.removeEventListener = function(e4, t4) {
          "function" == typeof t4 && (t4._listener = void 0, this.removeListener(e4, t4));
        };
      }, 2682: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(9600), o2 = Object.prototype.toString, i = Object.prototype.hasOwnProperty;
        e3.exports = function(e4, t4, r5) {
          if (!n2(t4)) throw new TypeError("iterator must be a function");
          var a;
          arguments.length >= 3 && (a = r5), "[object Array]" === o2.call(e4) ? function(e5, t5, r6) {
            for (var n3 = 0, o3 = e5.length; n3 < o3; n3++) i.call(e5, n3) && (null == r6 ? t5(e5[n3], n3, e5) : t5.call(r6, e5[n3], n3, e5));
          }(e4, t4, a) : "string" == typeof e4 ? function(e5, t5, r6) {
            for (var n3 = 0, o3 = e5.length; n3 < o3; n3++) null == r6 ? t5(e5.charAt(n3), n3, e5) : t5.call(r6, e5.charAt(n3), n3, e5);
          }(e4, t4, a) : function(e5, t5, r6) {
            for (var n3 in e5) i.call(e5, n3) && (null == r6 ? t5(e5[n3], n3, e5) : t5.call(r6, e5[n3], n3, e5));
          }(e4, t4, a);
        };
      }, 1734: (e3) => {
        "use strict";
        var t3 = Object.prototype.toString, r4 = Math.max, n2 = function(e4, t4) {
          for (var r5 = [], n3 = 0; n3 < e4.length; n3 += 1) r5[n3] = e4[n3];
          for (var o2 = 0; o2 < t4.length; o2 += 1) r5[o2 + e4.length] = t4[o2];
          return r5;
        };
        e3.exports = function(e4) {
          var o2 = this;
          if ("function" != typeof o2 || "[object Function]" !== t3.apply(o2)) throw new TypeError("Function.prototype.bind called on incompatible " + o2);
          for (var i, a = function(e5, t4) {
            for (var r5 = [], n3 = t4 || 0, o3 = 0; n3 < e5.length; n3 += 1, o3 += 1) r5[o3] = e5[n3];
            return r5;
          }(arguments, 1), s = r4(0, o2.length - a.length), u = [], c = 0; c < s; c++) u[c] = "$" + c;
          if (i = Function("binder", "return function (" + function(e5, t4) {
            for (var r5 = "", n3 = 0; n3 < e5.length; n3 += 1) r5 += e5[n3], n3 + 1 < e5.length && (r5 += t4);
            return r5;
          }(u, ",") + "){ return binder.apply(this,arguments); }")(function() {
            if (this instanceof i) {
              var t4 = o2.apply(this, n2(a, arguments));
              return Object(t4) === t4 ? t4 : this;
            }
            return o2.apply(e4, n2(a, arguments));
          }), o2.prototype) {
            var l2 = function() {
            };
            l2.prototype = o2.prototype, i.prototype = new l2(), l2.prototype = null;
          }
          return i;
        };
      }, 6743: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(1734);
        e3.exports = Function.prototype.bind || n2;
      }, 453: (e3, t3, r4) => {
        "use strict";
        var n2, o2 = r4(9383), i = r4(1237), a = r4(9290), s = r4(9538), u = r4(8068), c = r4(9675), l2 = r4(5345), f = Function, p = function(e4) {
          try {
            return f('"use strict"; return (' + e4 + ").constructor;")();
          } catch (e5) {
          }
        }, h = Object.getOwnPropertyDescriptor;
        if (h) try {
          h({}, "");
        } catch (e4) {
          h = null;
        }
        var d = function() {
          throw new c();
        }, y = h ? function() {
          try {
            return d;
          } catch (e4) {
            try {
              return h(arguments, "callee").get;
            } catch (e5) {
              return d;
            }
          }
        }() : d, m = r4(4039)(), v = r4(24)(), g = Object.getPrototypeOf || (v ? function(e4) {
          return e4.__proto__;
        } : null), b = {}, w = "undefined" != typeof Uint8Array && g ? g(Uint8Array) : n2, S = { __proto__: null, "%AggregateError%": "undefined" == typeof AggregateError ? n2 : AggregateError, "%Array%": Array, "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? n2 : ArrayBuffer, "%ArrayIteratorPrototype%": m && g ? g([][Symbol.iterator]()) : n2, "%AsyncFromSyncIteratorPrototype%": n2, "%AsyncFunction%": b, "%AsyncGenerator%": b, "%AsyncGeneratorFunction%": b, "%AsyncIteratorPrototype%": b, "%Atomics%": "undefined" == typeof Atomics ? n2 : Atomics, "%BigInt%": "undefined" == typeof BigInt ? n2 : BigInt, "%BigInt64Array%": "undefined" == typeof BigInt64Array ? n2 : BigInt64Array, "%BigUint64Array%": "undefined" == typeof BigUint64Array ? n2 : BigUint64Array, "%Boolean%": Boolean, "%DataView%": "undefined" == typeof DataView ? n2 : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": o2, "%eval%": eval, "%EvalError%": i, "%Float32Array%": "undefined" == typeof Float32Array ? n2 : Float32Array, "%Float64Array%": "undefined" == typeof Float64Array ? n2 : Float64Array, "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? n2 : FinalizationRegistry, "%Function%": f, "%GeneratorFunction%": b, "%Int8Array%": "undefined" == typeof Int8Array ? n2 : Int8Array, "%Int16Array%": "undefined" == typeof Int16Array ? n2 : Int16Array, "%Int32Array%": "undefined" == typeof Int32Array ? n2 : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": m && g ? g(g([][Symbol.iterator]())) : n2, "%JSON%": "object" == typeof JSON ? JSON : n2, "%Map%": "undefined" == typeof Map ? n2 : Map, "%MapIteratorPrototype%": "undefined" != typeof Map && m && g ? g((/* @__PURE__ */ new Map())[Symbol.iterator]()) : n2, "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": "undefined" == typeof Promise ? n2 : Promise, "%Proxy%": "undefined" == typeof Proxy ? n2 : Proxy, "%RangeError%": a, "%ReferenceError%": s, "%Reflect%": "undefined" == typeof Reflect ? n2 : Reflect, "%RegExp%": RegExp, "%Set%": "undefined" == typeof Set ? n2 : Set, "%SetIteratorPrototype%": "undefined" != typeof Set && m && g ? g((/* @__PURE__ */ new Set())[Symbol.iterator]()) : n2, "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? n2 : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": m && g ? g(""[Symbol.iterator]()) : n2, "%Symbol%": m ? Symbol : n2, "%SyntaxError%": u, "%ThrowTypeError%": y, "%TypedArray%": w, "%TypeError%": c, "%Uint8Array%": "undefined" == typeof Uint8Array ? n2 : Uint8Array, "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? n2 : Uint8ClampedArray, "%Uint16Array%": "undefined" == typeof Uint16Array ? n2 : Uint16Array, "%Uint32Array%": "undefined" == typeof Uint32Array ? n2 : Uint32Array, "%URIError%": l2, "%WeakMap%": "undefined" == typeof WeakMap ? n2 : WeakMap, "%WeakRef%": "undefined" == typeof WeakRef ? n2 : WeakRef, "%WeakSet%": "undefined" == typeof WeakSet ? n2 : WeakSet };
        if (g) try {
          null.error;
        } catch (e4) {
          var E = g(g(e4));
          S["%Error.prototype%"] = E;
        }
        var _ = function e4(t4) {
          var r5;
          if ("%AsyncFunction%" === t4) r5 = p("async function () {}");
          else if ("%GeneratorFunction%" === t4) r5 = p("function* () {}");
          else if ("%AsyncGeneratorFunction%" === t4) r5 = p("async function* () {}");
          else if ("%AsyncGenerator%" === t4) {
            var n3 = e4("%AsyncGeneratorFunction%");
            n3 && (r5 = n3.prototype);
          } else if ("%AsyncIteratorPrototype%" === t4) {
            var o3 = e4("%AsyncGenerator%");
            o3 && g && (r5 = g(o3.prototype));
          }
          return S[t4] = r5, r5;
        }, k = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, T = r4(6743), O = r4(9957), x = T.call(Function.call, Array.prototype.concat), A = T.call(Function.apply, Array.prototype.splice), P = T.call(Function.call, String.prototype.replace), R = T.call(Function.call, String.prototype.slice), j = T.call(Function.call, RegExp.prototype.exec), I = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, C = /\\(\\)?/g, L = function(e4, t4) {
          var r5, n3 = e4;
          if (O(k, n3) && (n3 = "%" + (r5 = k[n3])[0] + "%"), O(S, n3)) {
            var o3 = S[n3];
            if (o3 === b && (o3 = _(n3)), void 0 === o3 && !t4) throw new c("intrinsic " + e4 + " exists, but is not available. Please file an issue!");
            return { alias: r5, name: n3, value: o3 };
          }
          throw new u("intrinsic " + e4 + " does not exist!");
        };
        e3.exports = function(e4, t4) {
          if ("string" != typeof e4 || 0 === e4.length) throw new c("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && "boolean" != typeof t4) throw new c('"allowMissing" argument must be a boolean');
          if (null === j(/^%?[^%]*%?$/, e4)) throw new u("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
          var r5 = function(e5) {
            var t5 = R(e5, 0, 1), r6 = R(e5, -1);
            if ("%" === t5 && "%" !== r6) throw new u("invalid intrinsic syntax, expected closing `%`");
            if ("%" === r6 && "%" !== t5) throw new u("invalid intrinsic syntax, expected opening `%`");
            var n4 = [];
            return P(e5, I, function(e6, t6, r7, o4) {
              n4[n4.length] = r7 ? P(o4, C, "$1") : t6 || e6;
            }), n4;
          }(e4), n3 = r5.length > 0 ? r5[0] : "", o3 = L("%" + n3 + "%", t4), i2 = o3.name, a2 = o3.value, s2 = false, l3 = o3.alias;
          l3 && (n3 = l3[0], A(r5, x([0, 1], l3)));
          for (var f2 = 1, p2 = true; f2 < r5.length; f2 += 1) {
            var d2 = r5[f2], y2 = R(d2, 0, 1), m2 = R(d2, -1);
            if (('"' === y2 || "'" === y2 || "`" === y2 || '"' === m2 || "'" === m2 || "`" === m2) && y2 !== m2) throw new u("property names with quotes must have matching quotes");
            if ("constructor" !== d2 && p2 || (s2 = true), O(S, i2 = "%" + (n3 += "." + d2) + "%")) a2 = S[i2];
            else if (null != a2) {
              if (!(d2 in a2)) {
                if (!t4) throw new c("base intrinsic for " + e4 + " exists, but the property is not available.");
                return;
              }
              if (h && f2 + 1 >= r5.length) {
                var v2 = h(a2, d2);
                a2 = (p2 = !!v2) && "get" in v2 && !("originalValue" in v2.get) ? v2.get : a2[d2];
              } else p2 = O(a2, d2), a2 = a2[d2];
              p2 && !s2 && (S[i2] = a2);
            }
          }
          return a2;
        };
      }, 5795: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(453)("%Object.getOwnPropertyDescriptor%", true);
        if (n2) try {
          n2([], "length");
        } catch (e4) {
          n2 = null;
        }
        e3.exports = n2;
      }, 592: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(655), o2 = function() {
          return !!n2;
        };
        o2.hasArrayLengthDefineBug = function() {
          if (!n2) return null;
          try {
            return 1 !== n2([], "length", { value: 1 }).length;
          } catch (e4) {
            return true;
          }
        }, e3.exports = o2;
      }, 24: (e3) => {
        "use strict";
        var t3 = { __proto__: null, foo: {} }, r4 = Object;
        e3.exports = function() {
          return { __proto__: t3 }.foo === t3.foo && !(t3 instanceof r4);
        };
      }, 4039: (e3, t3, r4) => {
        "use strict";
        var n2 = "undefined" != typeof Symbol && Symbol, o2 = r4(1333);
        e3.exports = function() {
          return "function" == typeof n2 && ("function" == typeof Symbol && ("symbol" == typeof n2("foo") && ("symbol" == typeof Symbol("bar") && o2())));
        };
      }, 1333: (e3) => {
        "use strict";
        e3.exports = function() {
          if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols) return false;
          if ("symbol" == typeof Symbol.iterator) return true;
          var e4 = {}, t3 = Symbol("test"), r4 = Object(t3);
          if ("string" == typeof t3) return false;
          if ("[object Symbol]" !== Object.prototype.toString.call(t3)) return false;
          if ("[object Symbol]" !== Object.prototype.toString.call(r4)) return false;
          for (t3 in e4[t3] = 42, e4) return false;
          if ("function" == typeof Object.keys && 0 !== Object.keys(e4).length) return false;
          if ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(e4).length) return false;
          var n2 = Object.getOwnPropertySymbols(e4);
          if (1 !== n2.length || n2[0] !== t3) return false;
          if (!Object.prototype.propertyIsEnumerable.call(e4, t3)) return false;
          if ("function" == typeof Object.getOwnPropertyDescriptor) {
            var o2 = Object.getOwnPropertyDescriptor(e4, t3);
            if (42 !== o2.value || true !== o2.enumerable) return false;
          }
          return true;
        };
      }, 9092: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(1333);
        e3.exports = function() {
          return n2() && !!Symbol.toStringTag;
        };
      }, 9957: (e3, t3, r4) => {
        "use strict";
        var n2 = Function.prototype.call, o2 = Object.prototype.hasOwnProperty, i = r4(6743);
        e3.exports = i.call(n2, o2);
      }, 3464: (e3, t3, r4) => {
        var n2 = r4(1568), o2 = r4(8835), i = e3.exports;
        for (var a in n2) n2.hasOwnProperty(a) && (i[a] = n2[a]);
        function s(e4) {
          if ("string" == typeof e4 && (e4 = o2.parse(e4)), e4.protocol || (e4.protocol = "https:"), "https:" !== e4.protocol) throw new Error('Protocol "' + e4.protocol + '" not supported. Expected "https:"');
          return e4;
        }
        i.request = function(e4, t4) {
          return e4 = s(e4), n2.request.call(this, e4, t4);
        }, i.get = function(e4, t4) {
          return e4 = s(e4), n2.get.call(this, e4, t4);
        };
      }, 251: (e3, t3) => {
        t3.read = function(e4, t4, r4, n2, o2) {
          var i, a, s = 8 * o2 - n2 - 1, u = (1 << s) - 1, c = u >> 1, l2 = -7, f = r4 ? o2 - 1 : 0, p = r4 ? -1 : 1, h = e4[t4 + f];
          for (f += p, i = h & (1 << -l2) - 1, h >>= -l2, l2 += s; l2 > 0; i = 256 * i + e4[t4 + f], f += p, l2 -= 8) ;
          for (a = i & (1 << -l2) - 1, i >>= -l2, l2 += n2; l2 > 0; a = 256 * a + e4[t4 + f], f += p, l2 -= 8) ;
          if (0 === i) i = 1 - c;
          else {
            if (i === u) return a ? NaN : 1 / 0 * (h ? -1 : 1);
            a += Math.pow(2, n2), i -= c;
          }
          return (h ? -1 : 1) * a * Math.pow(2, i - n2);
        }, t3.write = function(e4, t4, r4, n2, o2, i) {
          var a, s, u, c = 8 * i - o2 - 1, l2 = (1 << c) - 1, f = l2 >> 1, p = 23 === o2 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, h = n2 ? 0 : i - 1, d = n2 ? 1 : -1, y = t4 < 0 || 0 === t4 && 1 / t4 < 0 ? 1 : 0;
          for (t4 = Math.abs(t4), isNaN(t4) || t4 === 1 / 0 ? (s = isNaN(t4) ? 1 : 0, a = l2) : (a = Math.floor(Math.log(t4) / Math.LN2), t4 * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), (t4 += a + f >= 1 ? p / u : p * Math.pow(2, 1 - f)) * u >= 2 && (a++, u /= 2), a + f >= l2 ? (s = 0, a = l2) : a + f >= 1 ? (s = (t4 * u - 1) * Math.pow(2, o2), a += f) : (s = t4 * Math.pow(2, f - 1) * Math.pow(2, o2), a = 0)); o2 >= 8; e4[r4 + h] = 255 & s, h += d, s /= 256, o2 -= 8) ;
          for (a = a << o2 | s, c += o2; c > 0; e4[r4 + h] = 255 & a, h += d, a /= 256, c -= 8) ;
          e4[r4 + h - d] |= 128 * y;
        };
      }, 6698: (e3) => {
        "function" == typeof Object.create ? e3.exports = function(e4, t3) {
          t3 && (e4.super_ = t3, e4.prototype = Object.create(t3.prototype, { constructor: { value: e4, enumerable: false, writable: true, configurable: true } }));
        } : e3.exports = function(e4, t3) {
          if (t3) {
            e4.super_ = t3;
            var r4 = function() {
            };
            r4.prototype = t3.prototype, e4.prototype = new r4(), e4.prototype.constructor = e4;
          }
        };
      }, 7244: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(9092)(), o2 = r4(8075)("Object.prototype.toString"), i = function(e4) {
          return !(n2 && e4 && "object" == typeof e4 && Symbol.toStringTag in e4) && "[object Arguments]" === o2(e4);
        }, a = function(e4) {
          return !!i(e4) || null !== e4 && "object" == typeof e4 && "number" == typeof e4.length && e4.length >= 0 && "[object Array]" !== o2(e4) && "[object Function]" === o2(e4.callee);
        }, s = function() {
          return i(arguments);
        }();
        i.isLegacyArguments = a, e3.exports = s ? i : a;
      }, 9600: (e3) => {
        "use strict";
        var t3, r4, n2 = Function.prototype.toString, o2 = "object" == typeof Reflect && null !== Reflect && Reflect.apply;
        if ("function" == typeof o2 && "function" == typeof Object.defineProperty) try {
          t3 = Object.defineProperty({}, "length", { get: function() {
            throw r4;
          } }), r4 = {}, o2(function() {
            throw 42;
          }, null, t3);
        } catch (e4) {
          e4 !== r4 && (o2 = null);
        }
        else o2 = null;
        var i = /^\s*class\b/, a = function(e4) {
          try {
            var t4 = n2.call(e4);
            return i.test(t4);
          } catch (e5) {
            return false;
          }
        }, s = function(e4) {
          try {
            return !a(e4) && (n2.call(e4), true);
          } catch (e5) {
            return false;
          }
        }, u = Object.prototype.toString, c = "function" == typeof Symbol && !!Symbol.toStringTag, l2 = !(0 in [,]), f = function() {
          return false;
        };
        if ("object" == typeof document) {
          var p = document.all;
          u.call(p) === u.call(document.all) && (f = function(e4) {
            if ((l2 || !e4) && (void 0 === e4 || "object" == typeof e4)) try {
              var t4 = u.call(e4);
              return ("[object HTMLAllCollection]" === t4 || "[object HTML document.all class]" === t4 || "[object HTMLCollection]" === t4 || "[object Object]" === t4) && null == e4("");
            } catch (e5) {
            }
            return false;
          });
        }
        e3.exports = o2 ? function(e4) {
          if (f(e4)) return true;
          if (!e4) return false;
          if ("function" != typeof e4 && "object" != typeof e4) return false;
          try {
            o2(e4, null, t3);
          } catch (e5) {
            if (e5 !== r4) return false;
          }
          return !a(e4) && s(e4);
        } : function(e4) {
          if (f(e4)) return true;
          if (!e4) return false;
          if ("function" != typeof e4 && "object" != typeof e4) return false;
          if (c) return s(e4);
          if (a(e4)) return false;
          var t4 = u.call(e4);
          return !("[object Function]" !== t4 && "[object GeneratorFunction]" !== t4 && !/^\[object HTML/.test(t4)) && s(e4);
        };
      }, 8184: (e3, t3, r4) => {
        "use strict";
        var n2, o2 = Object.prototype.toString, i = Function.prototype.toString, a = /^\s*(?:function)?\*/, s = r4(9092)(), u = Object.getPrototypeOf;
        e3.exports = function(e4) {
          if ("function" != typeof e4) return false;
          if (a.test(i.call(e4))) return true;
          if (!s) return "[object GeneratorFunction]" === o2.call(e4);
          if (!u) return false;
          if (void 0 === n2) {
            var t4 = function() {
              if (!s) return false;
              try {
                return Function("return function*() {}")();
              } catch (e5) {
              }
            }();
            n2 = !!t4 && u(t4);
          }
          return u(e4) === n2;
        };
      }, 5680: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(5767);
        e3.exports = function(e4) {
          return !!n2(e4);
        };
      }, 8859: (e3, t3, r4) => {
        var n2 = "function" == typeof Map && Map.prototype, o2 = Object.getOwnPropertyDescriptor && n2 ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, i = n2 && o2 && "function" == typeof o2.get ? o2.get : null, a = n2 && Map.prototype.forEach, s = "function" == typeof Set && Set.prototype, u = Object.getOwnPropertyDescriptor && s ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, c = s && u && "function" == typeof u.get ? u.get : null, l2 = s && Set.prototype.forEach, f = "function" == typeof WeakMap && WeakMap.prototype ? WeakMap.prototype.has : null, p = "function" == typeof WeakSet && WeakSet.prototype ? WeakSet.prototype.has : null, h = "function" == typeof WeakRef && WeakRef.prototype ? WeakRef.prototype.deref : null, d = Boolean.prototype.valueOf, y = Object.prototype.toString, m = Function.prototype.toString, v = String.prototype.match, g = String.prototype.slice, b = String.prototype.replace, w = String.prototype.toUpperCase, S = String.prototype.toLowerCase, E = RegExp.prototype.test, _ = Array.prototype.concat, k = Array.prototype.join, T = Array.prototype.slice, O = Math.floor, x = "function" == typeof BigInt ? BigInt.prototype.valueOf : null, A = Object.getOwnPropertySymbols, P = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? Symbol.prototype.toString : null, R = "function" == typeof Symbol && "object" == typeof Symbol.iterator, j = "function" == typeof Symbol && Symbol.toStringTag && (typeof Symbol.toStringTag === R || "symbol") ? Symbol.toStringTag : null, I = Object.prototype.propertyIsEnumerable, C = ("function" == typeof Reflect ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(e4) {
          return e4.__proto__;
        } : null);
        function L(e4, t4) {
          if (e4 === 1 / 0 || e4 === -1 / 0 || e4 != e4 || e4 && e4 > -1e3 && e4 < 1e3 || E.call(/e/, t4)) return t4;
          var r5 = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
          if ("number" == typeof e4) {
            var n3 = e4 < 0 ? -O(-e4) : O(e4);
            if (n3 !== e4) {
              var o3 = String(n3), i2 = g.call(t4, o3.length + 1);
              return b.call(o3, r5, "$&_") + "." + b.call(b.call(i2, /([0-9]{3})/g, "$&_"), /_$/, "");
            }
          }
          return b.call(t4, r5, "$&_");
        }
        var B = r4(2634), N = B.custom, U = q(N) ? N : null;
        function M(e4, t4, r5) {
          var n3 = "double" === (r5.quoteStyle || t4) ? '"' : "'";
          return n3 + e4 + n3;
        }
        function D(e4) {
          return b.call(String(e4), /"/g, "&quot;");
        }
        function F(e4) {
          return !("[object Array]" !== z(e4) || j && "object" == typeof e4 && j in e4);
        }
        function V(e4) {
          return !("[object RegExp]" !== z(e4) || j && "object" == typeof e4 && j in e4);
        }
        function q(e4) {
          if (R) return e4 && "object" == typeof e4 && e4 instanceof Symbol;
          if ("symbol" == typeof e4) return true;
          if (!e4 || "object" != typeof e4 || !P) return false;
          try {
            return P.call(e4), true;
          } catch (e5) {
          }
          return false;
        }
        e3.exports = function e4(t4, n3, o3, s2) {
          var u2 = n3 || {};
          if (H(u2, "quoteStyle") && "single" !== u2.quoteStyle && "double" !== u2.quoteStyle) throw new TypeError('option "quoteStyle" must be "single" or "double"');
          if (H(u2, "maxStringLength") && ("number" == typeof u2.maxStringLength ? u2.maxStringLength < 0 && u2.maxStringLength !== 1 / 0 : null !== u2.maxStringLength)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
          var y2 = !H(u2, "customInspect") || u2.customInspect;
          if ("boolean" != typeof y2 && "symbol" !== y2) throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
          if (H(u2, "indent") && null !== u2.indent && "	" !== u2.indent && !(parseInt(u2.indent, 10) === u2.indent && u2.indent > 0)) throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
          if (H(u2, "numericSeparator") && "boolean" != typeof u2.numericSeparator) throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
          var w2 = u2.numericSeparator;
          if (void 0 === t4) return "undefined";
          if (null === t4) return "null";
          if ("boolean" == typeof t4) return t4 ? "true" : "false";
          if ("string" == typeof t4) return G(t4, u2);
          if ("number" == typeof t4) {
            if (0 === t4) return 1 / 0 / t4 > 0 ? "0" : "-0";
            var E2 = String(t4);
            return w2 ? L(t4, E2) : E2;
          }
          if ("bigint" == typeof t4) {
            var O2 = String(t4) + "n";
            return w2 ? L(t4, O2) : O2;
          }
          var A2 = void 0 === u2.depth ? 5 : u2.depth;
          if (void 0 === o3 && (o3 = 0), o3 >= A2 && A2 > 0 && "object" == typeof t4) return F(t4) ? "[Array]" : "[Object]";
          var N2 = function(e5, t5) {
            var r5;
            if ("	" === e5.indent) r5 = "	";
            else {
              if (!("number" == typeof e5.indent && e5.indent > 0)) return null;
              r5 = k.call(Array(e5.indent + 1), " ");
            }
            return { base: r5, prev: k.call(Array(t5 + 1), r5) };
          }(u2, o3);
          if (void 0 === s2) s2 = [];
          else if (X(s2, t4) >= 0) return "[Circular]";
          function K2(t5, r5, n4) {
            if (r5 && (s2 = T.call(s2)).push(r5), n4) {
              var i2 = { depth: u2.depth };
              return H(u2, "quoteStyle") && (i2.quoteStyle = u2.quoteStyle), e4(t5, i2, o3 + 1, s2);
            }
            return e4(t5, u2, o3 + 1, s2);
          }
          if ("function" == typeof t4 && !V(t4)) {
            var W2 = function(e5) {
              if (e5.name) return e5.name;
              var t5 = v.call(m.call(e5), /^function\s*([\w$]+)/);
              if (t5) return t5[1];
              return null;
            }(t4), ee = Z(t4, K2);
            return "[Function" + (W2 ? ": " + W2 : " (anonymous)") + "]" + (ee.length > 0 ? " { " + k.call(ee, ", ") + " }" : "");
          }
          if (q(t4)) {
            var te = R ? b.call(String(t4), /^(Symbol\(.*\))_[^)]*$/, "$1") : P.call(t4);
            return "object" != typeof t4 || R ? te : $(te);
          }
          if (function(e5) {
            if (!e5 || "object" != typeof e5) return false;
            if ("undefined" != typeof HTMLElement && e5 instanceof HTMLElement) return true;
            return "string" == typeof e5.nodeName && "function" == typeof e5.getAttribute;
          }(t4)) {
            for (var re = "<" + S.call(String(t4.nodeName)), ne = t4.attributes || [], oe = 0; oe < ne.length; oe++) re += " " + ne[oe].name + "=" + M(D(ne[oe].value), "double", u2);
            return re += ">", t4.childNodes && t4.childNodes.length && (re += "..."), re += "</" + S.call(String(t4.nodeName)) + ">";
          }
          if (F(t4)) {
            if (0 === t4.length) return "[]";
            var ie = Z(t4, K2);
            return N2 && !function(e5) {
              for (var t5 = 0; t5 < e5.length; t5++) if (X(e5[t5], "\n") >= 0) return false;
              return true;
            }(ie) ? "[" + J(ie, N2) + "]" : "[ " + k.call(ie, ", ") + " ]";
          }
          if (function(e5) {
            return !("[object Error]" !== z(e5) || j && "object" == typeof e5 && j in e5);
          }(t4)) {
            var ae = Z(t4, K2);
            return "cause" in Error.prototype || !("cause" in t4) || I.call(t4, "cause") ? 0 === ae.length ? "[" + String(t4) + "]" : "{ [" + String(t4) + "] " + k.call(ae, ", ") + " }" : "{ [" + String(t4) + "] " + k.call(_.call("[cause]: " + K2(t4.cause), ae), ", ") + " }";
          }
          if ("object" == typeof t4 && y2) {
            if (U && "function" == typeof t4[U] && B) return B(t4, { depth: A2 - o3 });
            if ("symbol" !== y2 && "function" == typeof t4.inspect) return t4.inspect();
          }
          if (function(e5) {
            if (!i || !e5 || "object" != typeof e5) return false;
            try {
              i.call(e5);
              try {
                c.call(e5);
              } catch (e6) {
                return true;
              }
              return e5 instanceof Map;
            } catch (e6) {
            }
            return false;
          }(t4)) {
            var se = [];
            return a && a.call(t4, function(e5, r5) {
              se.push(K2(r5, t4, true) + " => " + K2(e5, t4));
            }), Y("Map", i.call(t4), se, N2);
          }
          if (function(e5) {
            if (!c || !e5 || "object" != typeof e5) return false;
            try {
              c.call(e5);
              try {
                i.call(e5);
              } catch (e6) {
                return true;
              }
              return e5 instanceof Set;
            } catch (e6) {
            }
            return false;
          }(t4)) {
            var ue = [];
            return l2 && l2.call(t4, function(e5) {
              ue.push(K2(e5, t4));
            }), Y("Set", c.call(t4), ue, N2);
          }
          if (function(e5) {
            if (!f || !e5 || "object" != typeof e5) return false;
            try {
              f.call(e5, f);
              try {
                p.call(e5, p);
              } catch (e6) {
                return true;
              }
              return e5 instanceof WeakMap;
            } catch (e6) {
            }
            return false;
          }(t4)) return Q("WeakMap");
          if (function(e5) {
            if (!p || !e5 || "object" != typeof e5) return false;
            try {
              p.call(e5, p);
              try {
                f.call(e5, f);
              } catch (e6) {
                return true;
              }
              return e5 instanceof WeakSet;
            } catch (e6) {
            }
            return false;
          }(t4)) return Q("WeakSet");
          if (function(e5) {
            if (!h || !e5 || "object" != typeof e5) return false;
            try {
              return h.call(e5), true;
            } catch (e6) {
            }
            return false;
          }(t4)) return Q("WeakRef");
          if (function(e5) {
            return !("[object Number]" !== z(e5) || j && "object" == typeof e5 && j in e5);
          }(t4)) return $(K2(Number(t4)));
          if (function(e5) {
            if (!e5 || "object" != typeof e5 || !x) return false;
            try {
              return x.call(e5), true;
            } catch (e6) {
            }
            return false;
          }(t4)) return $(K2(x.call(t4)));
          if (function(e5) {
            return !("[object Boolean]" !== z(e5) || j && "object" == typeof e5 && j in e5);
          }(t4)) return $(d.call(t4));
          if (function(e5) {
            return !("[object String]" !== z(e5) || j && "object" == typeof e5 && j in e5);
          }(t4)) return $(K2(String(t4)));
          if ("undefined" != typeof window && t4 === window) return "{ [object Window] }";
          if (t4 === r4.g) return "{ [object globalThis] }";
          if (!function(e5) {
            return !("[object Date]" !== z(e5) || j && "object" == typeof e5 && j in e5);
          }(t4) && !V(t4)) {
            var ce = Z(t4, K2), le = C ? C(t4) === Object.prototype : t4 instanceof Object || t4.constructor === Object, fe = t4 instanceof Object ? "" : "null prototype", pe = !le && j && Object(t4) === t4 && j in t4 ? g.call(z(t4), 8, -1) : fe ? "Object" : "", he = (le || "function" != typeof t4.constructor ? "" : t4.constructor.name ? t4.constructor.name + " " : "") + (pe || fe ? "[" + k.call(_.call([], pe || [], fe || []), ": ") + "] " : "");
            return 0 === ce.length ? he + "{}" : N2 ? he + "{" + J(ce, N2) + "}" : he + "{ " + k.call(ce, ", ") + " }";
          }
          return String(t4);
        };
        var K = Object.prototype.hasOwnProperty || function(e4) {
          return e4 in this;
        };
        function H(e4, t4) {
          return K.call(e4, t4);
        }
        function z(e4) {
          return y.call(e4);
        }
        function X(e4, t4) {
          if (e4.indexOf) return e4.indexOf(t4);
          for (var r5 = 0, n3 = e4.length; r5 < n3; r5++) if (e4[r5] === t4) return r5;
          return -1;
        }
        function G(e4, t4) {
          if (e4.length > t4.maxStringLength) {
            var r5 = e4.length - t4.maxStringLength, n3 = "... " + r5 + " more character" + (r5 > 1 ? "s" : "");
            return G(g.call(e4, 0, t4.maxStringLength), t4) + n3;
          }
          return M(b.call(b.call(e4, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, W), "single", t4);
        }
        function W(e4) {
          var t4 = e4.charCodeAt(0), r5 = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[t4];
          return r5 ? "\\" + r5 : "\\x" + (t4 < 16 ? "0" : "") + w.call(t4.toString(16));
        }
        function $(e4) {
          return "Object(" + e4 + ")";
        }
        function Q(e4) {
          return e4 + " { ? }";
        }
        function Y(e4, t4, r5, n3) {
          return e4 + " (" + t4 + ") {" + (n3 ? J(r5, n3) : k.call(r5, ", ")) + "}";
        }
        function J(e4, t4) {
          if (0 === e4.length) return "";
          var r5 = "\n" + t4.prev + t4.base;
          return r5 + k.call(e4, "," + r5) + "\n" + t4.prev;
        }
        function Z(e4, t4) {
          var r5 = F(e4), n3 = [];
          if (r5) {
            n3.length = e4.length;
            for (var o3 = 0; o3 < e4.length; o3++) n3[o3] = H(e4, o3) ? t4(e4[o3], e4) : "";
          }
          var i2, a2 = "function" == typeof A ? A(e4) : [];
          if (R) {
            i2 = {};
            for (var s2 = 0; s2 < a2.length; s2++) i2["$" + a2[s2]] = a2[s2];
          }
          for (var u2 in e4) H(e4, u2) && (r5 && String(Number(u2)) === u2 && u2 < e4.length || R && i2["$" + u2] instanceof Symbol || (E.call(/[^\w$]/, u2) ? n3.push(t4(u2, e4) + ": " + t4(e4[u2], e4)) : n3.push(u2 + ": " + t4(e4[u2], e4))));
          if ("function" == typeof A) for (var c2 = 0; c2 < a2.length; c2++) I.call(e4, a2[c2]) && n3.push("[" + t4(a2[c2]) + "]: " + t4(e4[a2[c2]], e4));
          return n3;
        }
      }, 6578: (e3) => {
        "use strict";
        e3.exports = ["Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
      }, 4765: (e3) => {
        "use strict";
        var t3 = String.prototype.replace, r4 = /%20/g, n2 = "RFC1738", o2 = "RFC3986";
        e3.exports = { default: o2, formatters: { RFC1738: function(e4) {
          return t3.call(e4, r4, "+");
        }, RFC3986: function(e4) {
          return String(e4);
        } }, RFC1738: n2, RFC3986: o2 };
      }, 5373: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(8636), o2 = r4(2642), i = r4(4765);
        e3.exports = { formats: i, parse: o2, stringify: n2 };
      }, 2642: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(7720), o2 = Object.prototype.hasOwnProperty, i = Array.isArray, a = { allowDots: false, allowEmptyArrays: false, allowPrototypes: false, allowSparse: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decodeDotInKeys: false, decoder: n2.decode, delimiter: "&", depth: 5, duplicates: "combine", ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictNullHandling: false }, s = function(e4) {
          return e4.replace(/&#(\d+);/g, function(e5, t4) {
            return String.fromCharCode(parseInt(t4, 10));
          });
        }, u = function(e4, t4) {
          return e4 && "string" == typeof e4 && t4.comma && e4.indexOf(",") > -1 ? e4.split(",") : e4;
        }, c = function(e4, t4, r5, n3) {
          if (e4) {
            var i2 = r5.allowDots ? e4.replace(/\.([^.[]+)/g, "[$1]") : e4, a2 = /(\[[^[\]]*])/g, s2 = r5.depth > 0 && /(\[[^[\]]*])/.exec(i2), c2 = s2 ? i2.slice(0, s2.index) : i2, l2 = [];
            if (c2) {
              if (!r5.plainObjects && o2.call(Object.prototype, c2) && !r5.allowPrototypes) return;
              l2.push(c2);
            }
            for (var f = 0; r5.depth > 0 && null !== (s2 = a2.exec(i2)) && f < r5.depth; ) {
              if (f += 1, !r5.plainObjects && o2.call(Object.prototype, s2[1].slice(1, -1)) && !r5.allowPrototypes) return;
              l2.push(s2[1]);
            }
            return s2 && l2.push("[" + i2.slice(s2.index) + "]"), function(e5, t5, r6, n4) {
              for (var o3 = n4 ? t5 : u(t5, r6), i3 = e5.length - 1; i3 >= 0; --i3) {
                var a3, s3 = e5[i3];
                if ("[]" === s3 && r6.parseArrays) a3 = r6.allowEmptyArrays && "" === o3 ? [] : [].concat(o3);
                else {
                  a3 = r6.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
                  var c3 = "[" === s3.charAt(0) && "]" === s3.charAt(s3.length - 1) ? s3.slice(1, -1) : s3, l3 = r6.decodeDotInKeys ? c3.replace(/%2E/g, ".") : c3, f2 = parseInt(l3, 10);
                  r6.parseArrays || "" !== l3 ? !isNaN(f2) && s3 !== l3 && String(f2) === l3 && f2 >= 0 && r6.parseArrays && f2 <= r6.arrayLimit ? (a3 = [])[f2] = o3 : "__proto__" !== l3 && (a3[l3] = o3) : a3 = { 0: o3 };
                }
                o3 = a3;
              }
              return o3;
            }(l2, t4, r5, n3);
          }
        };
        e3.exports = function(e4, t4) {
          var r5 = function(e5) {
            if (!e5) return a;
            if (void 0 !== e5.allowEmptyArrays && "boolean" != typeof e5.allowEmptyArrays) throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
            if (void 0 !== e5.decodeDotInKeys && "boolean" != typeof e5.decodeDotInKeys) throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
            if (null !== e5.decoder && void 0 !== e5.decoder && "function" != typeof e5.decoder) throw new TypeError("Decoder has to be a function.");
            if (void 0 !== e5.charset && "utf-8" !== e5.charset && "iso-8859-1" !== e5.charset) throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            var t5 = void 0 === e5.charset ? a.charset : e5.charset, r6 = void 0 === e5.duplicates ? a.duplicates : e5.duplicates;
            if ("combine" !== r6 && "first" !== r6 && "last" !== r6) throw new TypeError("The duplicates option must be either combine, first, or last");
            return { allowDots: void 0 === e5.allowDots ? true === e5.decodeDotInKeys || a.allowDots : !!e5.allowDots, allowEmptyArrays: "boolean" == typeof e5.allowEmptyArrays ? !!e5.allowEmptyArrays : a.allowEmptyArrays, allowPrototypes: "boolean" == typeof e5.allowPrototypes ? e5.allowPrototypes : a.allowPrototypes, allowSparse: "boolean" == typeof e5.allowSparse ? e5.allowSparse : a.allowSparse, arrayLimit: "number" == typeof e5.arrayLimit ? e5.arrayLimit : a.arrayLimit, charset: t5, charsetSentinel: "boolean" == typeof e5.charsetSentinel ? e5.charsetSentinel : a.charsetSentinel, comma: "boolean" == typeof e5.comma ? e5.comma : a.comma, decodeDotInKeys: "boolean" == typeof e5.decodeDotInKeys ? e5.decodeDotInKeys : a.decodeDotInKeys, decoder: "function" == typeof e5.decoder ? e5.decoder : a.decoder, delimiter: "string" == typeof e5.delimiter || n2.isRegExp(e5.delimiter) ? e5.delimiter : a.delimiter, depth: "number" == typeof e5.depth || false === e5.depth ? +e5.depth : a.depth, duplicates: r6, ignoreQueryPrefix: true === e5.ignoreQueryPrefix, interpretNumericEntities: "boolean" == typeof e5.interpretNumericEntities ? e5.interpretNumericEntities : a.interpretNumericEntities, parameterLimit: "number" == typeof e5.parameterLimit ? e5.parameterLimit : a.parameterLimit, parseArrays: false !== e5.parseArrays, plainObjects: "boolean" == typeof e5.plainObjects ? e5.plainObjects : a.plainObjects, strictNullHandling: "boolean" == typeof e5.strictNullHandling ? e5.strictNullHandling : a.strictNullHandling };
          }(t4);
          if ("" === e4 || null == e4) return r5.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          for (var l2 = "string" == typeof e4 ? function(e5, t5) {
            var r6, c2 = { __proto__: null }, l3 = t5.ignoreQueryPrefix ? e5.replace(/^\?/, "") : e5, f2 = t5.parameterLimit === 1 / 0 ? void 0 : t5.parameterLimit, p2 = l3.split(t5.delimiter, f2), h2 = -1, d2 = t5.charset;
            if (t5.charsetSentinel) for (r6 = 0; r6 < p2.length; ++r6) 0 === p2[r6].indexOf("utf8=") && ("utf8=%E2%9C%93" === p2[r6] ? d2 = "utf-8" : "utf8=%26%2310003%3B" === p2[r6] && (d2 = "iso-8859-1"), h2 = r6, r6 = p2.length);
            for (r6 = 0; r6 < p2.length; ++r6) if (r6 !== h2) {
              var y2, m, v = p2[r6], g = v.indexOf("]="), b = -1 === g ? v.indexOf("=") : g + 1;
              -1 === b ? (y2 = t5.decoder(v, a.decoder, d2, "key"), m = t5.strictNullHandling ? null : "") : (y2 = t5.decoder(v.slice(0, b), a.decoder, d2, "key"), m = n2.maybeMap(u(v.slice(b + 1), t5), function(e6) {
                return t5.decoder(e6, a.decoder, d2, "value");
              })), m && t5.interpretNumericEntities && "iso-8859-1" === d2 && (m = s(m)), v.indexOf("[]=") > -1 && (m = i(m) ? [m] : m);
              var w = o2.call(c2, y2);
              w && "combine" === t5.duplicates ? c2[y2] = n2.combine(c2[y2], m) : w && "last" !== t5.duplicates || (c2[y2] = m);
            }
            return c2;
          }(e4, r5) : e4, f = r5.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, p = Object.keys(l2), h = 0; h < p.length; ++h) {
            var d = p[h], y = c(d, l2[d], r5, "string" == typeof e4);
            f = n2.merge(f, y, r5);
          }
          return true === r5.allowSparse ? f : n2.compact(f);
        };
      }, 8636: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(920), o2 = r4(7720), i = r4(4765), a = Object.prototype.hasOwnProperty, s = { brackets: function(e4) {
          return e4 + "[]";
        }, comma: "comma", indices: function(e4, t4) {
          return e4 + "[" + t4 + "]";
        }, repeat: function(e4) {
          return e4;
        } }, u = Array.isArray, c = Array.prototype.push, l2 = function(e4, t4) {
          c.apply(e4, u(t4) ? t4 : [t4]);
        }, f = Date.prototype.toISOString, p = i.default, h = { addQueryPrefix: false, allowDots: false, allowEmptyArrays: false, arrayFormat: "indices", charset: "utf-8", charsetSentinel: false, delimiter: "&", encode: true, encodeDotInKeys: false, encoder: o2.encode, encodeValuesOnly: false, format: p, formatter: i.formatters[p], indices: false, serializeDate: function(e4) {
          return f.call(e4);
        }, skipNulls: false, strictNullHandling: false }, d = {}, y = function e4(t4, r5, i2, a2, s2, c2, f2, p2, y2, m, v, g, b, w, S, E, _, k) {
          for (var T, O = t4, x = k, A = 0, P = false; void 0 !== (x = x.get(d)) && !P; ) {
            var R = x.get(t4);
            if (A += 1, void 0 !== R) {
              if (R === A) throw new RangeError("Cyclic object value");
              P = true;
            }
            void 0 === x.get(d) && (A = 0);
          }
          if ("function" == typeof m ? O = m(r5, O) : O instanceof Date ? O = b(O) : "comma" === i2 && u(O) && (O = o2.maybeMap(O, function(e5) {
            return e5 instanceof Date ? b(e5) : e5;
          })), null === O) {
            if (c2) return y2 && !E ? y2(r5, h.encoder, _, "key", w) : r5;
            O = "";
          }
          if ("string" == typeof (T = O) || "number" == typeof T || "boolean" == typeof T || "symbol" == typeof T || "bigint" == typeof T || o2.isBuffer(O)) return y2 ? [S(E ? r5 : y2(r5, h.encoder, _, "key", w)) + "=" + S(y2(O, h.encoder, _, "value", w))] : [S(r5) + "=" + S(String(O))];
          var j, I = [];
          if (void 0 === O) return I;
          if ("comma" === i2 && u(O)) E && y2 && (O = o2.maybeMap(O, y2)), j = [{ value: O.length > 0 ? O.join(",") || null : void 0 }];
          else if (u(m)) j = m;
          else {
            var C = Object.keys(O);
            j = v ? C.sort(v) : C;
          }
          var L = p2 ? r5.replace(/\./g, "%2E") : r5, B = a2 && u(O) && 1 === O.length ? L + "[]" : L;
          if (s2 && u(O) && 0 === O.length) return B + "[]";
          for (var N = 0; N < j.length; ++N) {
            var U = j[N], M = "object" == typeof U && void 0 !== U.value ? U.value : O[U];
            if (!f2 || null !== M) {
              var D = g && p2 ? U.replace(/\./g, "%2E") : U, F = u(O) ? "function" == typeof i2 ? i2(B, D) : B : B + (g ? "." + D : "[" + D + "]");
              k.set(t4, A);
              var V = n2();
              V.set(d, k), l2(I, e4(M, F, i2, a2, s2, c2, f2, p2, "comma" === i2 && E && u(O) ? null : y2, m, v, g, b, w, S, E, _, V));
            }
          }
          return I;
        };
        e3.exports = function(e4, t4) {
          var r5, o3 = e4, c2 = function(e5) {
            if (!e5) return h;
            if (void 0 !== e5.allowEmptyArrays && "boolean" != typeof e5.allowEmptyArrays) throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
            if (void 0 !== e5.encodeDotInKeys && "boolean" != typeof e5.encodeDotInKeys) throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
            if (null !== e5.encoder && void 0 !== e5.encoder && "function" != typeof e5.encoder) throw new TypeError("Encoder has to be a function.");
            var t5 = e5.charset || h.charset;
            if (void 0 !== e5.charset && "utf-8" !== e5.charset && "iso-8859-1" !== e5.charset) throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            var r6 = i.default;
            if (void 0 !== e5.format) {
              if (!a.call(i.formatters, e5.format)) throw new TypeError("Unknown format option provided.");
              r6 = e5.format;
            }
            var n3, o4 = i.formatters[r6], c3 = h.filter;
            if (("function" == typeof e5.filter || u(e5.filter)) && (c3 = e5.filter), n3 = e5.arrayFormat in s ? e5.arrayFormat : "indices" in e5 ? e5.indices ? "indices" : "repeat" : h.arrayFormat, "commaRoundTrip" in e5 && "boolean" != typeof e5.commaRoundTrip) throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
            var l3 = void 0 === e5.allowDots ? true === e5.encodeDotInKeys || h.allowDots : !!e5.allowDots;
            return { addQueryPrefix: "boolean" == typeof e5.addQueryPrefix ? e5.addQueryPrefix : h.addQueryPrefix, allowDots: l3, allowEmptyArrays: "boolean" == typeof e5.allowEmptyArrays ? !!e5.allowEmptyArrays : h.allowEmptyArrays, arrayFormat: n3, charset: t5, charsetSentinel: "boolean" == typeof e5.charsetSentinel ? e5.charsetSentinel : h.charsetSentinel, commaRoundTrip: e5.commaRoundTrip, delimiter: void 0 === e5.delimiter ? h.delimiter : e5.delimiter, encode: "boolean" == typeof e5.encode ? e5.encode : h.encode, encodeDotInKeys: "boolean" == typeof e5.encodeDotInKeys ? e5.encodeDotInKeys : h.encodeDotInKeys, encoder: "function" == typeof e5.encoder ? e5.encoder : h.encoder, encodeValuesOnly: "boolean" == typeof e5.encodeValuesOnly ? e5.encodeValuesOnly : h.encodeValuesOnly, filter: c3, format: r6, formatter: o4, serializeDate: "function" == typeof e5.serializeDate ? e5.serializeDate : h.serializeDate, skipNulls: "boolean" == typeof e5.skipNulls ? e5.skipNulls : h.skipNulls, sort: "function" == typeof e5.sort ? e5.sort : null, strictNullHandling: "boolean" == typeof e5.strictNullHandling ? e5.strictNullHandling : h.strictNullHandling };
          }(t4);
          "function" == typeof c2.filter ? o3 = (0, c2.filter)("", o3) : u(c2.filter) && (r5 = c2.filter);
          var f2 = [];
          if ("object" != typeof o3 || null === o3) return "";
          var p2 = s[c2.arrayFormat], d2 = "comma" === p2 && c2.commaRoundTrip;
          r5 || (r5 = Object.keys(o3)), c2.sort && r5.sort(c2.sort);
          for (var m = n2(), v = 0; v < r5.length; ++v) {
            var g = r5[v];
            c2.skipNulls && null === o3[g] || l2(f2, y(o3[g], g, p2, d2, c2.allowEmptyArrays, c2.strictNullHandling, c2.skipNulls, c2.encodeDotInKeys, c2.encode ? c2.encoder : null, c2.filter, c2.sort, c2.allowDots, c2.serializeDate, c2.format, c2.formatter, c2.encodeValuesOnly, c2.charset, m));
          }
          var b = f2.join(c2.delimiter), w = true === c2.addQueryPrefix ? "?" : "";
          return c2.charsetSentinel && ("iso-8859-1" === c2.charset ? w += "utf8=%26%2310003%3B&" : w += "utf8=%E2%9C%93&"), b.length > 0 ? w + b : "";
        };
      }, 7720: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(4765), o2 = Object.prototype.hasOwnProperty, i = Array.isArray, a = function() {
          for (var e4 = [], t4 = 0; t4 < 256; ++t4) e4.push("%" + ((t4 < 16 ? "0" : "") + t4.toString(16)).toUpperCase());
          return e4;
        }(), s = function(e4, t4) {
          for (var r5 = t4 && t4.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, n3 = 0; n3 < e4.length; ++n3) void 0 !== e4[n3] && (r5[n3] = e4[n3]);
          return r5;
        }, u = 1024;
        e3.exports = { arrayToObject: s, assign: function(e4, t4) {
          return Object.keys(t4).reduce(function(e5, r5) {
            return e5[r5] = t4[r5], e5;
          }, e4);
        }, combine: function(e4, t4) {
          return [].concat(e4, t4);
        }, compact: function(e4) {
          for (var t4 = [{ obj: { o: e4 }, prop: "o" }], r5 = [], n3 = 0; n3 < t4.length; ++n3) for (var o3 = t4[n3], a2 = o3.obj[o3.prop], s2 = Object.keys(a2), u2 = 0; u2 < s2.length; ++u2) {
            var c = s2[u2], l2 = a2[c];
            "object" == typeof l2 && null !== l2 && -1 === r5.indexOf(l2) && (t4.push({ obj: a2, prop: c }), r5.push(l2));
          }
          return function(e5) {
            for (; e5.length > 1; ) {
              var t5 = e5.pop(), r6 = t5.obj[t5.prop];
              if (i(r6)) {
                for (var n4 = [], o4 = 0; o4 < r6.length; ++o4) void 0 !== r6[o4] && n4.push(r6[o4]);
                t5.obj[t5.prop] = n4;
              }
            }
          }(t4), e4;
        }, decode: function(e4, t4, r5) {
          var n3 = e4.replace(/\+/g, " ");
          if ("iso-8859-1" === r5) return n3.replace(/%[0-9a-f]{2}/gi, unescape);
          try {
            return decodeURIComponent(n3);
          } catch (e5) {
            return n3;
          }
        }, encode: function(e4, t4, r5, o3, i2) {
          if (0 === e4.length) return e4;
          var s2 = e4;
          if ("symbol" == typeof e4 ? s2 = Symbol.prototype.toString.call(e4) : "string" != typeof e4 && (s2 = String(e4)), "iso-8859-1" === r5) return escape(s2).replace(/%u[0-9a-f]{4}/gi, function(e5) {
            return "%26%23" + parseInt(e5.slice(2), 16) + "%3B";
          });
          for (var c = "", l2 = 0; l2 < s2.length; l2 += u) {
            for (var f = s2.length >= u ? s2.slice(l2, l2 + u) : s2, p = [], h = 0; h < f.length; ++h) {
              var d = f.charCodeAt(h);
              45 === d || 46 === d || 95 === d || 126 === d || d >= 48 && d <= 57 || d >= 65 && d <= 90 || d >= 97 && d <= 122 || i2 === n2.RFC1738 && (40 === d || 41 === d) ? p[p.length] = f.charAt(h) : d < 128 ? p[p.length] = a[d] : d < 2048 ? p[p.length] = a[192 | d >> 6] + a[128 | 63 & d] : d < 55296 || d >= 57344 ? p[p.length] = a[224 | d >> 12] + a[128 | d >> 6 & 63] + a[128 | 63 & d] : (h += 1, d = 65536 + ((1023 & d) << 10 | 1023 & f.charCodeAt(h)), p[p.length] = a[240 | d >> 18] + a[128 | d >> 12 & 63] + a[128 | d >> 6 & 63] + a[128 | 63 & d]);
            }
            c += p.join("");
          }
          return c;
        }, isBuffer: function(e4) {
          return !(!e4 || "object" != typeof e4) && !!(e4.constructor && e4.constructor.isBuffer && e4.constructor.isBuffer(e4));
        }, isRegExp: function(e4) {
          return "[object RegExp]" === Object.prototype.toString.call(e4);
        }, maybeMap: function(e4, t4) {
          if (i(e4)) {
            for (var r5 = [], n3 = 0; n3 < e4.length; n3 += 1) r5.push(t4(e4[n3]));
            return r5;
          }
          return t4(e4);
        }, merge: function e4(t4, r5, n3) {
          if (!r5) return t4;
          if ("object" != typeof r5) {
            if (i(t4)) t4.push(r5);
            else {
              if (!t4 || "object" != typeof t4) return [t4, r5];
              (n3 && (n3.plainObjects || n3.allowPrototypes) || !o2.call(Object.prototype, r5)) && (t4[r5] = true);
            }
            return t4;
          }
          if (!t4 || "object" != typeof t4) return [t4].concat(r5);
          var a2 = t4;
          return i(t4) && !i(r5) && (a2 = s(t4, n3)), i(t4) && i(r5) ? (r5.forEach(function(r6, i2) {
            if (o2.call(t4, i2)) {
              var a3 = t4[i2];
              a3 && "object" == typeof a3 && r6 && "object" == typeof r6 ? t4[i2] = e4(a3, r6, n3) : t4.push(r6);
            } else t4[i2] = r6;
          }), t4) : Object.keys(r5).reduce(function(t5, i2) {
            var a3 = r5[i2];
            return o2.call(t5, i2) ? t5[i2] = e4(t5[i2], a3, n3) : t5[i2] = a3, t5;
          }, a2);
        } };
      }, 3209: (e3, t3, r4) => {
        "use strict";
        var n2 = 65536, o2 = 4294967295;
        var i = r4(2861).Buffer, a = r4.g.crypto || r4.g.msCrypto;
        a && a.getRandomValues ? e3.exports = function(e4, t4) {
          if (e4 > o2) throw new RangeError("requested too many random bytes");
          var r5 = i.allocUnsafe(e4);
          if (e4 > 0) if (e4 > n2) for (var s = 0; s < e4; s += n2) a.getRandomValues(r5.slice(s, s + n2));
          else a.getRandomValues(r5);
          if ("function" == typeof t4) return process.nextTick(function() {
            t4(null, r5);
          });
          return r5;
        } : e3.exports = function() {
          throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
        };
      }, 6048: (e3) => {
        "use strict";
        var t3 = {};
        function r4(e4, r5, n3) {
          n3 || (n3 = Error);
          var o2 = function(e5) {
            var t4, n4;
            function o3(t5, n5, o4) {
              return e5.call(this, function(e6, t6, n6) {
                return "string" == typeof r5 ? r5 : r5(e6, t6, n6);
              }(t5, n5, o4)) || this;
            }
            return n4 = e5, (t4 = o3).prototype = Object.create(n4.prototype), t4.prototype.constructor = t4, t4.__proto__ = n4, o3;
          }(n3);
          o2.prototype.name = n3.name, o2.prototype.code = e4, t3[e4] = o2;
        }
        function n2(e4, t4) {
          if (Array.isArray(e4)) {
            var r5 = e4.length;
            return e4 = e4.map(function(e5) {
              return String(e5);
            }), r5 > 2 ? "one of ".concat(t4, " ").concat(e4.slice(0, r5 - 1).join(", "), ", or ") + e4[r5 - 1] : 2 === r5 ? "one of ".concat(t4, " ").concat(e4[0], " or ").concat(e4[1]) : "of ".concat(t4, " ").concat(e4[0]);
          }
          return "of ".concat(t4, " ").concat(String(e4));
        }
        r4("ERR_INVALID_OPT_VALUE", function(e4, t4) {
          return 'The value "' + t4 + '" is invalid for option "' + e4 + '"';
        }, TypeError), r4("ERR_INVALID_ARG_TYPE", function(e4, t4, r5) {
          var o2, i, a, s;
          if ("string" == typeof t4 && (i = "not ", t4.substr(!a || a < 0 ? 0 : +a, i.length) === i) ? (o2 = "must not be", t4 = t4.replace(/^not /, "")) : o2 = "must be", function(e5, t5, r6) {
            return (void 0 === r6 || r6 > e5.length) && (r6 = e5.length), e5.substring(r6 - t5.length, r6) === t5;
          }(e4, " argument")) s = "The ".concat(e4, " ").concat(o2, " ").concat(n2(t4, "type"));
          else {
            var u = function(e5, t5, r6) {
              return "number" != typeof r6 && (r6 = 0), !(r6 + t5.length > e5.length) && -1 !== e5.indexOf(t5, r6);
            }(e4, ".") ? "property" : "argument";
            s = 'The "'.concat(e4, '" ').concat(u, " ").concat(o2, " ").concat(n2(t4, "type"));
          }
          return s += ". Received type ".concat(typeof r5);
        }, TypeError), r4("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), r4("ERR_METHOD_NOT_IMPLEMENTED", function(e4) {
          return "The " + e4 + " method is not implemented";
        }), r4("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), r4("ERR_STREAM_DESTROYED", function(e4) {
          return "Cannot call " + e4 + " after a stream was destroyed";
        }), r4("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), r4("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), r4("ERR_STREAM_WRITE_AFTER_END", "write after end"), r4("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), r4("ERR_UNKNOWN_ENCODING", function(e4) {
          return "Unknown encoding: " + e4;
        }, TypeError), r4("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e3.exports.F = t3;
      }, 5382: (e3, t3, r4) => {
        "use strict";
        var n2 = Object.keys || function(e4) {
          var t4 = [];
          for (var r5 in e4) t4.push(r5);
          return t4;
        };
        e3.exports = c;
        var o2 = r4(5412), i = r4(6708);
        r4(6698)(c, o2);
        for (var a = n2(i.prototype), s = 0; s < a.length; s++) {
          var u = a[s];
          c.prototype[u] || (c.prototype[u] = i.prototype[u]);
        }
        function c(e4) {
          if (!(this instanceof c)) return new c(e4);
          o2.call(this, e4), i.call(this, e4), this.allowHalfOpen = true, e4 && (false === e4.readable && (this.readable = false), false === e4.writable && (this.writable = false), false === e4.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", l2)));
        }
        function l2() {
          this._writableState.ended || process.nextTick(f, this);
        }
        function f(e4) {
          e4.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(c.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(c.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(c.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
        }, set: function(e4) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e4, this._writableState.destroyed = e4);
        } });
      }, 3600: (e3, t3, r4) => {
        "use strict";
        e3.exports = o2;
        var n2 = r4(4610);
        function o2(e4) {
          if (!(this instanceof o2)) return new o2(e4);
          n2.call(this, e4);
        }
        r4(6698)(o2, n2), o2.prototype._transform = function(e4, t4, r5) {
          r5(null, e4);
        };
      }, 5412: (e3, t3, r4) => {
        "use strict";
        var n2;
        e3.exports = k, k.ReadableState = _;
        r4(7007).EventEmitter;
        var o2 = function(e4, t4) {
          return e4.listeners(t4).length;
        }, i = r4(345), a = r4(8287).Buffer, s = (void 0 !== r4.g ? r4.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {
        };
        var u, c = r4(9838);
        u = c && c.debuglog ? c.debuglog("stream") : function() {
        };
        var l2, f, p, h = r4(2726), d = r4(5896), y = r4(5291).getHighWaterMark, m = r4(6048).F, v = m.ERR_INVALID_ARG_TYPE, g = m.ERR_STREAM_PUSH_AFTER_EOF, b = m.ERR_METHOD_NOT_IMPLEMENTED, w = m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r4(6698)(k, i);
        var S = d.errorOrDestroy, E = ["error", "close", "destroy", "pause", "resume"];
        function _(e4, t4, o3) {
          n2 = n2 || r4(5382), e4 = e4 || {}, "boolean" != typeof o3 && (o3 = t4 instanceof n2), this.objectMode = !!e4.objectMode, o3 && (this.objectMode = this.objectMode || !!e4.readableObjectMode), this.highWaterMark = y(this, e4, "readableHighWaterMark", o3), this.buffer = new h(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e4.emitClose, this.autoDestroy = !!e4.autoDestroy, this.destroyed = false, this.defaultEncoding = e4.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e4.encoding && (l2 || (l2 = r4(3141).I), this.decoder = new l2(e4.encoding), this.encoding = e4.encoding);
        }
        function k(e4) {
          if (n2 = n2 || r4(5382), !(this instanceof k)) return new k(e4);
          var t4 = this instanceof n2;
          this._readableState = new _(e4, this, t4), this.readable = true, e4 && ("function" == typeof e4.read && (this._read = e4.read), "function" == typeof e4.destroy && (this._destroy = e4.destroy)), i.call(this);
        }
        function T(e4, t4, r5, n3, o3) {
          u("readableAddChunk", t4);
          var i2, c2 = e4._readableState;
          if (null === t4) c2.reading = false, function(e5, t5) {
            if (u("onEofChunk"), t5.ended) return;
            if (t5.decoder) {
              var r6 = t5.decoder.end();
              r6 && r6.length && (t5.buffer.push(r6), t5.length += t5.objectMode ? 1 : r6.length);
            }
            t5.ended = true, t5.sync ? P(e5) : (t5.needReadable = false, t5.emittedReadable || (t5.emittedReadable = true, R(e5)));
          }(e4, c2);
          else if (o3 || (i2 = function(e5, t5) {
            var r6;
            n4 = t5, a.isBuffer(n4) || n4 instanceof s || "string" == typeof t5 || void 0 === t5 || e5.objectMode || (r6 = new v("chunk", ["string", "Buffer", "Uint8Array"], t5));
            var n4;
            return r6;
          }(c2, t4)), i2) S(e4, i2);
          else if (c2.objectMode || t4 && t4.length > 0) if ("string" == typeof t4 || c2.objectMode || Object.getPrototypeOf(t4) === a.prototype || (t4 = function(e5) {
            return a.from(e5);
          }(t4)), n3) c2.endEmitted ? S(e4, new w()) : O(e4, c2, t4, true);
          else if (c2.ended) S(e4, new g());
          else {
            if (c2.destroyed) return false;
            c2.reading = false, c2.decoder && !r5 ? (t4 = c2.decoder.write(t4), c2.objectMode || 0 !== t4.length ? O(e4, c2, t4, false) : j(e4, c2)) : O(e4, c2, t4, false);
          }
          else n3 || (c2.reading = false, j(e4, c2));
          return !c2.ended && (c2.length < c2.highWaterMark || 0 === c2.length);
        }
        function O(e4, t4, r5, n3) {
          t4.flowing && 0 === t4.length && !t4.sync ? (t4.awaitDrain = 0, e4.emit("data", r5)) : (t4.length += t4.objectMode ? 1 : r5.length, n3 ? t4.buffer.unshift(r5) : t4.buffer.push(r5), t4.needReadable && P(e4)), j(e4, t4);
        }
        Object.defineProperty(k.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e4) {
          this._readableState && (this._readableState.destroyed = e4);
        } }), k.prototype.destroy = d.destroy, k.prototype._undestroy = d.undestroy, k.prototype._destroy = function(e4, t4) {
          t4(e4);
        }, k.prototype.push = function(e4, t4) {
          var r5, n3 = this._readableState;
          return n3.objectMode ? r5 = true : "string" == typeof e4 && ((t4 = t4 || n3.defaultEncoding) !== n3.encoding && (e4 = a.from(e4, t4), t4 = ""), r5 = true), T(this, e4, t4, false, r5);
        }, k.prototype.unshift = function(e4) {
          return T(this, e4, null, true, false);
        }, k.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, k.prototype.setEncoding = function(e4) {
          l2 || (l2 = r4(3141).I);
          var t4 = new l2(e4);
          this._readableState.decoder = t4, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n3 = this._readableState.buffer.head, o3 = ""; null !== n3; ) o3 += t4.write(n3.data), n3 = n3.next;
          return this._readableState.buffer.clear(), "" !== o3 && this._readableState.buffer.push(o3), this._readableState.length = o3.length, this;
        };
        var x = 1073741824;
        function A(e4, t4) {
          return e4 <= 0 || 0 === t4.length && t4.ended ? 0 : t4.objectMode ? 1 : e4 != e4 ? t4.flowing && t4.length ? t4.buffer.head.data.length : t4.length : (e4 > t4.highWaterMark && (t4.highWaterMark = function(e5) {
            return e5 >= x ? e5 = x : (e5--, e5 |= e5 >>> 1, e5 |= e5 >>> 2, e5 |= e5 >>> 4, e5 |= e5 >>> 8, e5 |= e5 >>> 16, e5++), e5;
          }(e4)), e4 <= t4.length ? e4 : t4.ended ? t4.length : (t4.needReadable = true, 0));
        }
        function P(e4) {
          var t4 = e4._readableState;
          u("emitReadable", t4.needReadable, t4.emittedReadable), t4.needReadable = false, t4.emittedReadable || (u("emitReadable", t4.flowing), t4.emittedReadable = true, process.nextTick(R, e4));
        }
        function R(e4) {
          var t4 = e4._readableState;
          u("emitReadable_", t4.destroyed, t4.length, t4.ended), t4.destroyed || !t4.length && !t4.ended || (e4.emit("readable"), t4.emittedReadable = false), t4.needReadable = !t4.flowing && !t4.ended && t4.length <= t4.highWaterMark, N(e4);
        }
        function j(e4, t4) {
          t4.readingMore || (t4.readingMore = true, process.nextTick(I, e4, t4));
        }
        function I(e4, t4) {
          for (; !t4.reading && !t4.ended && (t4.length < t4.highWaterMark || t4.flowing && 0 === t4.length); ) {
            var r5 = t4.length;
            if (u("maybeReadMore read 0"), e4.read(0), r5 === t4.length) break;
          }
          t4.readingMore = false;
        }
        function C(e4) {
          var t4 = e4._readableState;
          t4.readableListening = e4.listenerCount("readable") > 0, t4.resumeScheduled && !t4.paused ? t4.flowing = true : e4.listenerCount("data") > 0 && e4.resume();
        }
        function L(e4) {
          u("readable nexttick read 0"), e4.read(0);
        }
        function B(e4, t4) {
          u("resume", t4.reading), t4.reading || e4.read(0), t4.resumeScheduled = false, e4.emit("resume"), N(e4), t4.flowing && !t4.reading && e4.read(0);
        }
        function N(e4) {
          var t4 = e4._readableState;
          for (u("flow", t4.flowing); t4.flowing && null !== e4.read(); ) ;
        }
        function U(e4, t4) {
          return 0 === t4.length ? null : (t4.objectMode ? r5 = t4.buffer.shift() : !e4 || e4 >= t4.length ? (r5 = t4.decoder ? t4.buffer.join("") : 1 === t4.buffer.length ? t4.buffer.first() : t4.buffer.concat(t4.length), t4.buffer.clear()) : r5 = t4.buffer.consume(e4, t4.decoder), r5);
          var r5;
        }
        function M(e4) {
          var t4 = e4._readableState;
          u("endReadable", t4.endEmitted), t4.endEmitted || (t4.ended = true, process.nextTick(D, t4, e4));
        }
        function D(e4, t4) {
          if (u("endReadableNT", e4.endEmitted, e4.length), !e4.endEmitted && 0 === e4.length && (e4.endEmitted = true, t4.readable = false, t4.emit("end"), e4.autoDestroy)) {
            var r5 = t4._writableState;
            (!r5 || r5.autoDestroy && r5.finished) && t4.destroy();
          }
        }
        function F(e4, t4) {
          for (var r5 = 0, n3 = e4.length; r5 < n3; r5++) if (e4[r5] === t4) return r5;
          return -1;
        }
        k.prototype.read = function(e4) {
          u("read", e4), e4 = parseInt(e4, 10);
          var t4 = this._readableState, r5 = e4;
          if (0 !== e4 && (t4.emittedReadable = false), 0 === e4 && t4.needReadable && ((0 !== t4.highWaterMark ? t4.length >= t4.highWaterMark : t4.length > 0) || t4.ended)) return u("read: emitReadable", t4.length, t4.ended), 0 === t4.length && t4.ended ? M(this) : P(this), null;
          if (0 === (e4 = A(e4, t4)) && t4.ended) return 0 === t4.length && M(this), null;
          var n3, o3 = t4.needReadable;
          return u("need readable", o3), (0 === t4.length || t4.length - e4 < t4.highWaterMark) && u("length less than watermark", o3 = true), t4.ended || t4.reading ? u("reading or ended", o3 = false) : o3 && (u("do read"), t4.reading = true, t4.sync = true, 0 === t4.length && (t4.needReadable = true), this._read(t4.highWaterMark), t4.sync = false, t4.reading || (e4 = A(r5, t4))), null === (n3 = e4 > 0 ? U(e4, t4) : null) ? (t4.needReadable = t4.length <= t4.highWaterMark, e4 = 0) : (t4.length -= e4, t4.awaitDrain = 0), 0 === t4.length && (t4.ended || (t4.needReadable = true), r5 !== e4 && t4.ended && M(this)), null !== n3 && this.emit("data", n3), n3;
        }, k.prototype._read = function(e4) {
          S(this, new b("_read()"));
        }, k.prototype.pipe = function(e4, t4) {
          var r5 = this, n3 = this._readableState;
          switch (n3.pipesCount) {
            case 0:
              n3.pipes = e4;
              break;
            case 1:
              n3.pipes = [n3.pipes, e4];
              break;
            default:
              n3.pipes.push(e4);
          }
          n3.pipesCount += 1, u("pipe count=%d opts=%j", n3.pipesCount, t4);
          var i2 = (!t4 || false !== t4.end) && e4 !== process.stdout && e4 !== process.stderr ? s2 : y2;
          function a2(t5, o3) {
            u("onunpipe"), t5 === r5 && o3 && false === o3.hasUnpiped && (o3.hasUnpiped = true, u("cleanup"), e4.removeListener("close", h2), e4.removeListener("finish", d2), e4.removeListener("drain", c2), e4.removeListener("error", p2), e4.removeListener("unpipe", a2), r5.removeListener("end", s2), r5.removeListener("end", y2), r5.removeListener("data", f2), l3 = true, !n3.awaitDrain || e4._writableState && !e4._writableState.needDrain || c2());
          }
          function s2() {
            u("onend"), e4.end();
          }
          n3.endEmitted ? process.nextTick(i2) : r5.once("end", i2), e4.on("unpipe", a2);
          var c2 = /* @__PURE__ */ function(e5) {
            return function() {
              var t5 = e5._readableState;
              u("pipeOnDrain", t5.awaitDrain), t5.awaitDrain && t5.awaitDrain--, 0 === t5.awaitDrain && o2(e5, "data") && (t5.flowing = true, N(e5));
            };
          }(r5);
          e4.on("drain", c2);
          var l3 = false;
          function f2(t5) {
            u("ondata");
            var o3 = e4.write(t5);
            u("dest.write", o3), false === o3 && ((1 === n3.pipesCount && n3.pipes === e4 || n3.pipesCount > 1 && -1 !== F(n3.pipes, e4)) && !l3 && (u("false write response, pause", n3.awaitDrain), n3.awaitDrain++), r5.pause());
          }
          function p2(t5) {
            u("onerror", t5), y2(), e4.removeListener("error", p2), 0 === o2(e4, "error") && S(e4, t5);
          }
          function h2() {
            e4.removeListener("finish", d2), y2();
          }
          function d2() {
            u("onfinish"), e4.removeListener("close", h2), y2();
          }
          function y2() {
            u("unpipe"), r5.unpipe(e4);
          }
          return r5.on("data", f2), function(e5, t5, r6) {
            if ("function" == typeof e5.prependListener) return e5.prependListener(t5, r6);
            e5._events && e5._events[t5] ? Array.isArray(e5._events[t5]) ? e5._events[t5].unshift(r6) : e5._events[t5] = [r6, e5._events[t5]] : e5.on(t5, r6);
          }(e4, "error", p2), e4.once("close", h2), e4.once("finish", d2), e4.emit("pipe", r5), n3.flowing || (u("pipe resume"), r5.resume()), e4;
        }, k.prototype.unpipe = function(e4) {
          var t4 = this._readableState, r5 = { hasUnpiped: false };
          if (0 === t4.pipesCount) return this;
          if (1 === t4.pipesCount) return e4 && e4 !== t4.pipes || (e4 || (e4 = t4.pipes), t4.pipes = null, t4.pipesCount = 0, t4.flowing = false, e4 && e4.emit("unpipe", this, r5)), this;
          if (!e4) {
            var n3 = t4.pipes, o3 = t4.pipesCount;
            t4.pipes = null, t4.pipesCount = 0, t4.flowing = false;
            for (var i2 = 0; i2 < o3; i2++) n3[i2].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var a2 = F(t4.pipes, e4);
          return -1 === a2 || (t4.pipes.splice(a2, 1), t4.pipesCount -= 1, 1 === t4.pipesCount && (t4.pipes = t4.pipes[0]), e4.emit("unpipe", this, r5)), this;
        }, k.prototype.on = function(e4, t4) {
          var r5 = i.prototype.on.call(this, e4, t4), n3 = this._readableState;
          return "data" === e4 ? (n3.readableListening = this.listenerCount("readable") > 0, false !== n3.flowing && this.resume()) : "readable" === e4 && (n3.endEmitted || n3.readableListening || (n3.readableListening = n3.needReadable = true, n3.flowing = false, n3.emittedReadable = false, u("on readable", n3.length, n3.reading), n3.length ? P(this) : n3.reading || process.nextTick(L, this))), r5;
        }, k.prototype.addListener = k.prototype.on, k.prototype.removeListener = function(e4, t4) {
          var r5 = i.prototype.removeListener.call(this, e4, t4);
          return "readable" === e4 && process.nextTick(C, this), r5;
        }, k.prototype.removeAllListeners = function(e4) {
          var t4 = i.prototype.removeAllListeners.apply(this, arguments);
          return "readable" !== e4 && void 0 !== e4 || process.nextTick(C, this), t4;
        }, k.prototype.resume = function() {
          var e4 = this._readableState;
          return e4.flowing || (u("resume"), e4.flowing = !e4.readableListening, function(e5, t4) {
            t4.resumeScheduled || (t4.resumeScheduled = true, process.nextTick(B, e5, t4));
          }(this, e4)), e4.paused = false, this;
        }, k.prototype.pause = function() {
          return u("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (u("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, k.prototype.wrap = function(e4) {
          var t4 = this, r5 = this._readableState, n3 = false;
          for (var o3 in e4.on("end", function() {
            if (u("wrapped end"), r5.decoder && !r5.ended) {
              var e5 = r5.decoder.end();
              e5 && e5.length && t4.push(e5);
            }
            t4.push(null);
          }), e4.on("data", function(o4) {
            (u("wrapped data"), r5.decoder && (o4 = r5.decoder.write(o4)), r5.objectMode && null == o4) || (r5.objectMode || o4 && o4.length) && (t4.push(o4) || (n3 = true, e4.pause()));
          }), e4) void 0 === this[o3] && "function" == typeof e4[o3] && (this[o3] = /* @__PURE__ */ function(t5) {
            return function() {
              return e4[t5].apply(e4, arguments);
            };
          }(o3));
          for (var i2 = 0; i2 < E.length; i2++) e4.on(E[i2], this.emit.bind(this, E[i2]));
          return this._read = function(t5) {
            u("wrapped _read", t5), n3 && (n3 = false, e4.resume());
          }, this;
        }, "function" == typeof Symbol && (k.prototype[Symbol.asyncIterator] = function() {
          return void 0 === f && (f = r4(2955)), f(this);
        }), Object.defineProperty(k.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(k.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(k.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e4) {
          this._readableState && (this._readableState.flowing = e4);
        } }), k._fromList = U, Object.defineProperty(k.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), "function" == typeof Symbol && (k.from = function(e4, t4) {
          return void 0 === p && (p = r4(5157)), p(k, e4, t4);
        });
      }, 4610: (e3, t3, r4) => {
        "use strict";
        e3.exports = l2;
        var n2 = r4(6048).F, o2 = n2.ERR_METHOD_NOT_IMPLEMENTED, i = n2.ERR_MULTIPLE_CALLBACK, a = n2.ERR_TRANSFORM_ALREADY_TRANSFORMING, s = n2.ERR_TRANSFORM_WITH_LENGTH_0, u = r4(5382);
        function c(e4, t4) {
          var r5 = this._transformState;
          r5.transforming = false;
          var n3 = r5.writecb;
          if (null === n3) return this.emit("error", new i());
          r5.writechunk = null, r5.writecb = null, null != t4 && this.push(t4), n3(e4);
          var o3 = this._readableState;
          o3.reading = false, (o3.needReadable || o3.length < o3.highWaterMark) && this._read(o3.highWaterMark);
        }
        function l2(e4) {
          if (!(this instanceof l2)) return new l2(e4);
          u.call(this, e4), this._transformState = { afterTransform: c.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e4 && ("function" == typeof e4.transform && (this._transform = e4.transform), "function" == typeof e4.flush && (this._flush = e4.flush)), this.on("prefinish", f);
        }
        function f() {
          var e4 = this;
          "function" != typeof this._flush || this._readableState.destroyed ? p(this, null, null) : this._flush(function(t4, r5) {
            p(e4, t4, r5);
          });
        }
        function p(e4, t4, r5) {
          if (t4) return e4.emit("error", t4);
          if (null != r5 && e4.push(r5), e4._writableState.length) throw new s();
          if (e4._transformState.transforming) throw new a();
          return e4.push(null);
        }
        r4(6698)(l2, u), l2.prototype.push = function(e4, t4) {
          return this._transformState.needTransform = false, u.prototype.push.call(this, e4, t4);
        }, l2.prototype._transform = function(e4, t4, r5) {
          r5(new o2("_transform()"));
        }, l2.prototype._write = function(e4, t4, r5) {
          var n3 = this._transformState;
          if (n3.writecb = r5, n3.writechunk = e4, n3.writeencoding = t4, !n3.transforming) {
            var o3 = this._readableState;
            (n3.needTransform || o3.needReadable || o3.length < o3.highWaterMark) && this._read(o3.highWaterMark);
          }
        }, l2.prototype._read = function(e4) {
          var t4 = this._transformState;
          null === t4.writechunk || t4.transforming ? t4.needTransform = true : (t4.transforming = true, this._transform(t4.writechunk, t4.writeencoding, t4.afterTransform));
        }, l2.prototype._destroy = function(e4, t4) {
          u.prototype._destroy.call(this, e4, function(e5) {
            t4(e5);
          });
        };
      }, 6708: (e3, t3, r4) => {
        "use strict";
        function n2(e4) {
          var t4 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e5, t5, r5) {
              var n3 = e5.entry;
              e5.entry = null;
              for (; n3; ) {
                var o3 = n3.callback;
                t5.pendingcb--, o3(r5), n3 = n3.next;
              }
              t5.corkedRequestsFree.next = e5;
            }(t4, e4);
          };
        }
        var o2;
        e3.exports = k, k.WritableState = _;
        var i = { deprecate: r4(4643) }, a = r4(345), s = r4(8287).Buffer, u = (void 0 !== r4.g ? r4.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {
        };
        var c, l2 = r4(5896), f = r4(5291).getHighWaterMark, p = r4(6048).F, h = p.ERR_INVALID_ARG_TYPE, d = p.ERR_METHOD_NOT_IMPLEMENTED, y = p.ERR_MULTIPLE_CALLBACK, m = p.ERR_STREAM_CANNOT_PIPE, v = p.ERR_STREAM_DESTROYED, g = p.ERR_STREAM_NULL_VALUES, b = p.ERR_STREAM_WRITE_AFTER_END, w = p.ERR_UNKNOWN_ENCODING, S = l2.errorOrDestroy;
        function E() {
        }
        function _(e4, t4, i2) {
          o2 = o2 || r4(5382), e4 = e4 || {}, "boolean" != typeof i2 && (i2 = t4 instanceof o2), this.objectMode = !!e4.objectMode, i2 && (this.objectMode = this.objectMode || !!e4.writableObjectMode), this.highWaterMark = f(this, e4, "writableHighWaterMark", i2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var a2 = false === e4.decodeStrings;
          this.decodeStrings = !a2, this.defaultEncoding = e4.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e5) {
            !function(e6, t5) {
              var r5 = e6._writableState, n3 = r5.sync, o3 = r5.writecb;
              if ("function" != typeof o3) throw new y();
              if (function(e7) {
                e7.writing = false, e7.writecb = null, e7.length -= e7.writelen, e7.writelen = 0;
              }(r5), t5) !function(e7, t6, r6, n4, o4) {
                --t6.pendingcb, r6 ? (process.nextTick(o4, n4), process.nextTick(R, e7, t6), e7._writableState.errorEmitted = true, S(e7, n4)) : (o4(n4), e7._writableState.errorEmitted = true, S(e7, n4), R(e7, t6));
              }(e6, r5, n3, t5, o3);
              else {
                var i3 = A(r5) || e6.destroyed;
                i3 || r5.corked || r5.bufferProcessing || !r5.bufferedRequest || x(e6, r5), n3 ? process.nextTick(O, e6, r5, i3, o3) : O(e6, r5, i3, o3);
              }
            }(t4, e5);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e4.emitClose, this.autoDestroy = !!e4.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new n2(this);
        }
        function k(e4) {
          var t4 = this instanceof (o2 = o2 || r4(5382));
          if (!t4 && !c.call(k, this)) return new k(e4);
          this._writableState = new _(e4, this, t4), this.writable = true, e4 && ("function" == typeof e4.write && (this._write = e4.write), "function" == typeof e4.writev && (this._writev = e4.writev), "function" == typeof e4.destroy && (this._destroy = e4.destroy), "function" == typeof e4.final && (this._final = e4.final)), a.call(this);
        }
        function T(e4, t4, r5, n3, o3, i2, a2) {
          t4.writelen = n3, t4.writecb = a2, t4.writing = true, t4.sync = true, t4.destroyed ? t4.onwrite(new v("write")) : r5 ? e4._writev(o3, t4.onwrite) : e4._write(o3, i2, t4.onwrite), t4.sync = false;
        }
        function O(e4, t4, r5, n3) {
          r5 || function(e5, t5) {
            0 === t5.length && t5.needDrain && (t5.needDrain = false, e5.emit("drain"));
          }(e4, t4), t4.pendingcb--, n3(), R(e4, t4);
        }
        function x(e4, t4) {
          t4.bufferProcessing = true;
          var r5 = t4.bufferedRequest;
          if (e4._writev && r5 && r5.next) {
            var o3 = t4.bufferedRequestCount, i2 = new Array(o3), a2 = t4.corkedRequestsFree;
            a2.entry = r5;
            for (var s2 = 0, u2 = true; r5; ) i2[s2] = r5, r5.isBuf || (u2 = false), r5 = r5.next, s2 += 1;
            i2.allBuffers = u2, T(e4, t4, true, t4.length, i2, "", a2.finish), t4.pendingcb++, t4.lastBufferedRequest = null, a2.next ? (t4.corkedRequestsFree = a2.next, a2.next = null) : t4.corkedRequestsFree = new n2(t4), t4.bufferedRequestCount = 0;
          } else {
            for (; r5; ) {
              var c2 = r5.chunk, l3 = r5.encoding, f2 = r5.callback;
              if (T(e4, t4, false, t4.objectMode ? 1 : c2.length, c2, l3, f2), r5 = r5.next, t4.bufferedRequestCount--, t4.writing) break;
            }
            null === r5 && (t4.lastBufferedRequest = null);
          }
          t4.bufferedRequest = r5, t4.bufferProcessing = false;
        }
        function A(e4) {
          return e4.ending && 0 === e4.length && null === e4.bufferedRequest && !e4.finished && !e4.writing;
        }
        function P(e4, t4) {
          e4._final(function(r5) {
            t4.pendingcb--, r5 && S(e4, r5), t4.prefinished = true, e4.emit("prefinish"), R(e4, t4);
          });
        }
        function R(e4, t4) {
          var r5 = A(t4);
          if (r5 && (function(e5, t5) {
            t5.prefinished || t5.finalCalled || ("function" != typeof e5._final || t5.destroyed ? (t5.prefinished = true, e5.emit("prefinish")) : (t5.pendingcb++, t5.finalCalled = true, process.nextTick(P, e5, t5)));
          }(e4, t4), 0 === t4.pendingcb && (t4.finished = true, e4.emit("finish"), t4.autoDestroy))) {
            var n3 = e4._readableState;
            (!n3 || n3.autoDestroy && n3.endEmitted) && e4.destroy();
          }
          return r5;
        }
        r4(6698)(k, a), _.prototype.getBuffer = function() {
          for (var e4 = this.bufferedRequest, t4 = []; e4; ) t4.push(e4), e4 = e4.next;
          return t4;
        }, function() {
          try {
            Object.defineProperty(_.prototype, "buffer", { get: i.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e4) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (c = Function.prototype[Symbol.hasInstance], Object.defineProperty(k, Symbol.hasInstance, { value: function(e4) {
          return !!c.call(this, e4) || this === k && (e4 && e4._writableState instanceof _);
        } })) : c = function(e4) {
          return e4 instanceof this;
        }, k.prototype.pipe = function() {
          S(this, new m());
        }, k.prototype.write = function(e4, t4, r5) {
          var n3, o3 = this._writableState, i2 = false, a2 = !o3.objectMode && (n3 = e4, s.isBuffer(n3) || n3 instanceof u);
          return a2 && !s.isBuffer(e4) && (e4 = function(e5) {
            return s.from(e5);
          }(e4)), "function" == typeof t4 && (r5 = t4, t4 = null), a2 ? t4 = "buffer" : t4 || (t4 = o3.defaultEncoding), "function" != typeof r5 && (r5 = E), o3.ending ? function(e5, t5) {
            var r6 = new b();
            S(e5, r6), process.nextTick(t5, r6);
          }(this, r5) : (a2 || function(e5, t5, r6, n4) {
            var o4;
            return null === r6 ? o4 = new g() : "string" == typeof r6 || t5.objectMode || (o4 = new h("chunk", ["string", "Buffer"], r6)), !o4 || (S(e5, o4), process.nextTick(n4, o4), false);
          }(this, o3, e4, r5)) && (o3.pendingcb++, i2 = function(e5, t5, r6, n4, o4, i3) {
            if (!r6) {
              var a3 = function(e6, t6, r7) {
                e6.objectMode || false === e6.decodeStrings || "string" != typeof t6 || (t6 = s.from(t6, r7));
                return t6;
              }(t5, n4, o4);
              n4 !== a3 && (r6 = true, o4 = "buffer", n4 = a3);
            }
            var u2 = t5.objectMode ? 1 : n4.length;
            t5.length += u2;
            var c2 = t5.length < t5.highWaterMark;
            c2 || (t5.needDrain = true);
            if (t5.writing || t5.corked) {
              var l3 = t5.lastBufferedRequest;
              t5.lastBufferedRequest = { chunk: n4, encoding: o4, isBuf: r6, callback: i3, next: null }, l3 ? l3.next = t5.lastBufferedRequest : t5.bufferedRequest = t5.lastBufferedRequest, t5.bufferedRequestCount += 1;
            } else T(e5, t5, false, u2, n4, o4, i3);
            return c2;
          }(this, o3, a2, e4, t4, r5)), i2;
        }, k.prototype.cork = function() {
          this._writableState.corked++;
        }, k.prototype.uncork = function() {
          var e4 = this._writableState;
          e4.corked && (e4.corked--, e4.writing || e4.corked || e4.bufferProcessing || !e4.bufferedRequest || x(this, e4));
        }, k.prototype.setDefaultEncoding = function(e4) {
          if ("string" == typeof e4 && (e4 = e4.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e4 + "").toLowerCase()) > -1)) throw new w(e4);
          return this._writableState.defaultEncoding = e4, this;
        }, Object.defineProperty(k.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(k.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), k.prototype._write = function(e4, t4, r5) {
          r5(new d("_write()"));
        }, k.prototype._writev = null, k.prototype.end = function(e4, t4, r5) {
          var n3 = this._writableState;
          return "function" == typeof e4 ? (r5 = e4, e4 = null, t4 = null) : "function" == typeof t4 && (r5 = t4, t4 = null), null != e4 && this.write(e4, t4), n3.corked && (n3.corked = 1, this.uncork()), n3.ending || function(e5, t5, r6) {
            t5.ending = true, R(e5, t5), r6 && (t5.finished ? process.nextTick(r6) : e5.once("finish", r6));
            t5.ended = true, e5.writable = false;
          }(this, n3, r5), this;
        }, Object.defineProperty(k.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(k.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e4) {
          this._writableState && (this._writableState.destroyed = e4);
        } }), k.prototype.destroy = l2.destroy, k.prototype._undestroy = l2.undestroy, k.prototype._destroy = function(e4, t4) {
          t4(e4);
        };
      }, 2955: (e3, t3, r4) => {
        "use strict";
        var n2;
        function o2(e4, t4, r5) {
          return (t4 = function(e5) {
            var t5 = function(e6, t6) {
              if ("object" != typeof e6 || null === e6) return e6;
              var r6 = e6[Symbol.toPrimitive];
              if (void 0 !== r6) {
                var n3 = r6.call(e6, t6 || "default");
                if ("object" != typeof n3) return n3;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return ("string" === t6 ? String : Number)(e6);
            }(e5, "string");
            return "symbol" == typeof t5 ? t5 : String(t5);
          }(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        var i = r4(6238), a = Symbol("lastResolve"), s = Symbol("lastReject"), u = Symbol("error"), c = Symbol("ended"), l2 = Symbol("lastPromise"), f = Symbol("handlePromise"), p = Symbol("stream");
        function h(e4, t4) {
          return { value: e4, done: t4 };
        }
        function d(e4) {
          var t4 = e4[a];
          if (null !== t4) {
            var r5 = e4[p].read();
            null !== r5 && (e4[l2] = null, e4[a] = null, e4[s] = null, t4(h(r5, false)));
          }
        }
        function y(e4) {
          process.nextTick(d, e4);
        }
        var m = Object.getPrototypeOf(function() {
        }), v = Object.setPrototypeOf((o2(n2 = { get stream() {
          return this[p];
        }, next: function() {
          var e4 = this, t4 = this[u];
          if (null !== t4) return Promise.reject(t4);
          if (this[c]) return Promise.resolve(h(void 0, true));
          if (this[p].destroyed) return new Promise(function(t5, r6) {
            process.nextTick(function() {
              e4[u] ? r6(e4[u]) : t5(h(void 0, true));
            });
          });
          var r5, n3 = this[l2];
          if (n3) r5 = new Promise(/* @__PURE__ */ function(e5, t5) {
            return function(r6, n4) {
              e5.then(function() {
                t5[c] ? r6(h(void 0, true)) : t5[f](r6, n4);
              }, n4);
            };
          }(n3, this));
          else {
            var o3 = this[p].read();
            if (null !== o3) return Promise.resolve(h(o3, false));
            r5 = new Promise(this[f]);
          }
          return this[l2] = r5, r5;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), o2(n2, "return", function() {
          var e4 = this;
          return new Promise(function(t4, r5) {
            e4[p].destroy(null, function(e5) {
              e5 ? r5(e5) : t4(h(void 0, true));
            });
          });
        }), n2), m);
        e3.exports = function(e4) {
          var t4, r5 = Object.create(v, (o2(t4 = {}, p, { value: e4, writable: true }), o2(t4, a, { value: null, writable: true }), o2(t4, s, { value: null, writable: true }), o2(t4, u, { value: null, writable: true }), o2(t4, c, { value: e4._readableState.endEmitted, writable: true }), o2(t4, f, { value: function(e5, t5) {
            var n3 = r5[p].read();
            n3 ? (r5[l2] = null, r5[a] = null, r5[s] = null, e5(h(n3, false))) : (r5[a] = e5, r5[s] = t5);
          }, writable: true }), t4));
          return r5[l2] = null, i(e4, function(e5) {
            if (e5 && "ERR_STREAM_PREMATURE_CLOSE" !== e5.code) {
              var t5 = r5[s];
              return null !== t5 && (r5[l2] = null, r5[a] = null, r5[s] = null, t5(e5)), void (r5[u] = e5);
            }
            var n3 = r5[a];
            null !== n3 && (r5[l2] = null, r5[a] = null, r5[s] = null, n3(h(void 0, true))), r5[c] = true;
          }), e4.on("readable", y.bind(null, r5)), r5;
        };
      }, 2726: (e3, t3, r4) => {
        "use strict";
        function n2(e4, t4) {
          var r5 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e4);
            t4 && (n3 = n3.filter(function(t5) {
              return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
            })), r5.push.apply(r5, n3);
          }
          return r5;
        }
        function o2(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r5 = null != arguments[t4] ? arguments[t4] : {};
            t4 % 2 ? n2(Object(r5), true).forEach(function(t5) {
              i(e4, t5, r5[t5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r5)) : n2(Object(r5)).forEach(function(t5) {
              Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r5, t5));
            });
          }
          return e4;
        }
        function i(e4, t4, r5) {
          return (t4 = s(t4)) in e4 ? Object.defineProperty(e4, t4, { value: r5, enumerable: true, configurable: true, writable: true }) : e4[t4] = r5, e4;
        }
        function a(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++) {
            var n3 = t4[r5];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e4, s(n3.key), n3);
          }
        }
        function s(e4) {
          var t4 = function(e5, t5) {
            if ("object" != typeof e5 || null === e5) return e5;
            var r5 = e5[Symbol.toPrimitive];
            if (void 0 !== r5) {
              var n3 = r5.call(e5, t5 || "default");
              if ("object" != typeof n3) return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t5 ? String : Number)(e5);
          }(e4, "string");
          return "symbol" == typeof t4 ? t4 : String(t4);
        }
        var u = r4(8287).Buffer, c = r4(5340).inspect, l2 = c && c.custom || "inspect";
        e3.exports = function() {
          function e4() {
            !function(e5, t5) {
              if (!(e5 instanceof t5)) throw new TypeError("Cannot call a class as a function");
            }(this, e4), this.head = null, this.tail = null, this.length = 0;
          }
          var t4, r5, n3;
          return t4 = e4, (r5 = [{ key: "push", value: function(e5) {
            var t5 = { data: e5, next: null };
            this.length > 0 ? this.tail.next = t5 : this.head = t5, this.tail = t5, ++this.length;
          } }, { key: "unshift", value: function(e5) {
            var t5 = { data: e5, next: this.head };
            0 === this.length && (this.tail = t5), this.head = t5, ++this.length;
          } }, { key: "shift", value: function() {
            if (0 !== this.length) {
              var e5 = this.head.data;
              return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e5;
            }
          } }, { key: "clear", value: function() {
            this.head = this.tail = null, this.length = 0;
          } }, { key: "join", value: function(e5) {
            if (0 === this.length) return "";
            for (var t5 = this.head, r6 = "" + t5.data; t5 = t5.next; ) r6 += e5 + t5.data;
            return r6;
          } }, { key: "concat", value: function(e5) {
            if (0 === this.length) return u.alloc(0);
            for (var t5, r6, n4, o3 = u.allocUnsafe(e5 >>> 0), i2 = this.head, a2 = 0; i2; ) t5 = i2.data, r6 = o3, n4 = a2, u.prototype.copy.call(t5, r6, n4), a2 += i2.data.length, i2 = i2.next;
            return o3;
          } }, { key: "consume", value: function(e5, t5) {
            var r6;
            return e5 < this.head.data.length ? (r6 = this.head.data.slice(0, e5), this.head.data = this.head.data.slice(e5)) : r6 = e5 === this.head.data.length ? this.shift() : t5 ? this._getString(e5) : this._getBuffer(e5), r6;
          } }, { key: "first", value: function() {
            return this.head.data;
          } }, { key: "_getString", value: function(e5) {
            var t5 = this.head, r6 = 1, n4 = t5.data;
            for (e5 -= n4.length; t5 = t5.next; ) {
              var o3 = t5.data, i2 = e5 > o3.length ? o3.length : e5;
              if (i2 === o3.length ? n4 += o3 : n4 += o3.slice(0, e5), 0 == (e5 -= i2)) {
                i2 === o3.length ? (++r6, t5.next ? this.head = t5.next : this.head = this.tail = null) : (this.head = t5, t5.data = o3.slice(i2));
                break;
              }
              ++r6;
            }
            return this.length -= r6, n4;
          } }, { key: "_getBuffer", value: function(e5) {
            var t5 = u.allocUnsafe(e5), r6 = this.head, n4 = 1;
            for (r6.data.copy(t5), e5 -= r6.data.length; r6 = r6.next; ) {
              var o3 = r6.data, i2 = e5 > o3.length ? o3.length : e5;
              if (o3.copy(t5, t5.length - e5, 0, i2), 0 == (e5 -= i2)) {
                i2 === o3.length ? (++n4, r6.next ? this.head = r6.next : this.head = this.tail = null) : (this.head = r6, r6.data = o3.slice(i2));
                break;
              }
              ++n4;
            }
            return this.length -= n4, t5;
          } }, { key: l2, value: function(e5, t5) {
            return c(this, o2(o2({}, t5), {}, { depth: 0, customInspect: false }));
          } }]) && a(t4.prototype, r5), n3 && a(t4, n3), Object.defineProperty(t4, "prototype", { writable: false }), e4;
        }();
      }, 5896: (e3) => {
        "use strict";
        function t3(e4, t4) {
          n2(e4, t4), r4(e4);
        }
        function r4(e4) {
          e4._writableState && !e4._writableState.emitClose || e4._readableState && !e4._readableState.emitClose || e4.emit("close");
        }
        function n2(e4, t4) {
          e4.emit("error", t4);
        }
        e3.exports = { destroy: function(e4, o2) {
          var i = this, a = this._readableState && this._readableState.destroyed, s = this._writableState && this._writableState.destroyed;
          return a || s ? (o2 ? o2(e4) : e4 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(n2, this, e4)) : process.nextTick(n2, this, e4)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e4 || null, function(e5) {
            !o2 && e5 ? i._writableState ? i._writableState.errorEmitted ? process.nextTick(r4, i) : (i._writableState.errorEmitted = true, process.nextTick(t3, i, e5)) : process.nextTick(t3, i, e5) : o2 ? (process.nextTick(r4, i), o2(e5)) : process.nextTick(r4, i);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e4, t4) {
          var r5 = e4._readableState, n3 = e4._writableState;
          r5 && r5.autoDestroy || n3 && n3.autoDestroy ? e4.destroy(t4) : e4.emit("error", t4);
        } };
      }, 6238: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(6048).F.ERR_STREAM_PREMATURE_CLOSE;
        function o2() {
        }
        e3.exports = function e4(t4, r5, i) {
          if ("function" == typeof r5) return e4(t4, null, r5);
          r5 || (r5 = {}), i = /* @__PURE__ */ function(e5) {
            var t5 = false;
            return function() {
              if (!t5) {
                t5 = true;
                for (var r6 = arguments.length, n3 = new Array(r6), o3 = 0; o3 < r6; o3++) n3[o3] = arguments[o3];
                e5.apply(this, n3);
              }
            };
          }(i || o2);
          var a = r5.readable || false !== r5.readable && t4.readable, s = r5.writable || false !== r5.writable && t4.writable, u = function() {
            t4.writable || l2();
          }, c = t4._writableState && t4._writableState.finished, l2 = function() {
            s = false, c = true, a || i.call(t4);
          }, f = t4._readableState && t4._readableState.endEmitted, p = function() {
            a = false, f = true, s || i.call(t4);
          }, h = function(e5) {
            i.call(t4, e5);
          }, d = function() {
            var e5;
            return a && !f ? (t4._readableState && t4._readableState.ended || (e5 = new n2()), i.call(t4, e5)) : s && !c ? (t4._writableState && t4._writableState.ended || (e5 = new n2()), i.call(t4, e5)) : void 0;
          }, y = function() {
            t4.req.on("finish", l2);
          };
          return !function(e5) {
            return e5.setHeader && "function" == typeof e5.abort;
          }(t4) ? s && !t4._writableState && (t4.on("end", u), t4.on("close", u)) : (t4.on("complete", l2), t4.on("abort", d), t4.req ? y() : t4.on("request", y)), t4.on("end", p), t4.on("finish", l2), false !== r5.error && t4.on("error", h), t4.on("close", d), function() {
            t4.removeListener("complete", l2), t4.removeListener("abort", d), t4.removeListener("request", y), t4.req && t4.req.removeListener("finish", l2), t4.removeListener("end", u), t4.removeListener("close", u), t4.removeListener("finish", l2), t4.removeListener("end", p), t4.removeListener("error", h), t4.removeListener("close", d);
          };
        };
      }, 5157: (e3) => {
        e3.exports = function() {
          throw new Error("Readable.from is not available in the browser");
        };
      }, 7758: (e3, t3, r4) => {
        "use strict";
        var n2;
        var o2 = r4(6048).F, i = o2.ERR_MISSING_ARGS, a = o2.ERR_STREAM_DESTROYED;
        function s(e4) {
          if (e4) throw e4;
        }
        function u(e4) {
          e4();
        }
        function c(e4, t4) {
          return e4.pipe(t4);
        }
        e3.exports = function() {
          for (var e4 = arguments.length, t4 = new Array(e4), o3 = 0; o3 < e4; o3++) t4[o3] = arguments[o3];
          var l2, f = function(e5) {
            return e5.length ? "function" != typeof e5[e5.length - 1] ? s : e5.pop() : s;
          }(t4);
          if (Array.isArray(t4[0]) && (t4 = t4[0]), t4.length < 2) throw new i("streams");
          var p = t4.map(function(e5, o4) {
            var i2 = o4 < t4.length - 1;
            return function(e6, t5, o5, i3) {
              i3 = /* @__PURE__ */ function(e7) {
                var t6 = false;
                return function() {
                  t6 || (t6 = true, e7.apply(void 0, arguments));
                };
              }(i3);
              var s2 = false;
              e6.on("close", function() {
                s2 = true;
              }), void 0 === n2 && (n2 = r4(6238)), n2(e6, { readable: t5, writable: o5 }, function(e7) {
                if (e7) return i3(e7);
                s2 = true, i3();
              });
              var u2 = false;
              return function(t6) {
                if (!s2 && !u2) return u2 = true, function(e7) {
                  return e7.setHeader && "function" == typeof e7.abort;
                }(e6) ? e6.abort() : "function" == typeof e6.destroy ? e6.destroy() : void i3(t6 || new a("pipe"));
              };
            }(e5, i2, o4 > 0, function(e6) {
              l2 || (l2 = e6), e6 && p.forEach(u), i2 || (p.forEach(u), f(l2));
            });
          });
          return t4.reduce(c);
        };
      }, 5291: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(6048).F.ERR_INVALID_OPT_VALUE;
        e3.exports = { getHighWaterMark: function(e4, t4, r5, o2) {
          var i = function(e5, t5, r6) {
            return null != e5.highWaterMark ? e5.highWaterMark : t5 ? e5[r6] : null;
          }(t4, o2, r5);
          if (null != i) {
            if (!isFinite(i) || Math.floor(i) !== i || i < 0) throw new n2(o2 ? r5 : "highWaterMark", i);
            return Math.floor(i);
          }
          return e4.objectMode ? 16 : 16384;
        } };
      }, 345: (e3, t3, r4) => {
        e3.exports = r4(7007).EventEmitter;
      }, 8399: (e3, t3, r4) => {
        (t3 = e3.exports = r4(5412)).Stream = t3, t3.Readable = t3, t3.Writable = r4(6708), t3.Duplex = r4(5382), t3.Transform = r4(4610), t3.PassThrough = r4(3600), t3.finished = r4(6238), t3.pipeline = r4(7758);
      }, 2861: (e3, t3, r4) => {
        var n2 = r4(8287), o2 = n2.Buffer;
        function i(e4, t4) {
          for (var r5 in e4) t4[r5] = e4[r5];
        }
        function a(e4, t4, r5) {
          return o2(e4, t4, r5);
        }
        o2.from && o2.alloc && o2.allocUnsafe && o2.allocUnsafeSlow ? e3.exports = n2 : (i(n2, t3), t3.Buffer = a), a.prototype = Object.create(o2.prototype), i(o2, a), a.from = function(e4, t4, r5) {
          if ("number" == typeof e4) throw new TypeError("Argument must not be a number");
          return o2(e4, t4, r5);
        }, a.alloc = function(e4, t4, r5) {
          if ("number" != typeof e4) throw new TypeError("Argument must be a number");
          var n3 = o2(e4);
          return void 0 !== t4 ? "string" == typeof r5 ? n3.fill(t4, r5) : n3.fill(t4) : n3.fill(0), n3;
        }, a.allocUnsafe = function(e4) {
          if ("number" != typeof e4) throw new TypeError("Argument must be a number");
          return o2(e4);
        }, a.allocUnsafeSlow = function(e4) {
          if ("number" != typeof e4) throw new TypeError("Argument must be a number");
          return n2.SlowBuffer(e4);
        };
      }, 6897: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(453), o2 = r4(41), i = r4(592)(), a = r4(5795), s = r4(9675), u = n2("%Math.floor%");
        e3.exports = function(e4, t4) {
          if ("function" != typeof e4) throw new s("`fn` is not a function");
          if ("number" != typeof t4 || t4 < 0 || t4 > 4294967295 || u(t4) !== t4) throw new s("`length` must be a positive 32-bit integer");
          var r5 = arguments.length > 2 && !!arguments[2], n3 = true, c = true;
          if ("length" in e4 && a) {
            var l2 = a(e4, "length");
            l2 && !l2.configurable && (n3 = false), l2 && !l2.writable && (c = false);
          }
          return (n3 || c || !r5) && (i ? o2(e4, "length", t4, true, true) : o2(e4, "length", t4)), e4;
        };
      }, 392: (e3, t3, r4) => {
        var n2 = r4(2861).Buffer;
        function o2(e4, t4) {
          this._block = n2.alloc(e4), this._finalSize = t4, this._blockSize = e4, this._len = 0;
        }
        o2.prototype.update = function(e4, t4) {
          "string" == typeof e4 && (t4 = t4 || "utf8", e4 = n2.from(e4, t4));
          for (var r5 = this._block, o3 = this._blockSize, i = e4.length, a = this._len, s = 0; s < i; ) {
            for (var u = a % o3, c = Math.min(i - s, o3 - u), l2 = 0; l2 < c; l2++) r5[u + l2] = e4[s + l2];
            s += c, (a += c) % o3 == 0 && this._update(r5);
          }
          return this._len += i, this;
        }, o2.prototype.digest = function(e4) {
          var t4 = this._len % this._blockSize;
          this._block[t4] = 128, this._block.fill(0, t4 + 1), t4 >= this._finalSize && (this._update(this._block), this._block.fill(0));
          var r5 = 8 * this._len;
          if (r5 <= 4294967295) this._block.writeUInt32BE(r5, this._blockSize - 4);
          else {
            var n3 = (4294967295 & r5) >>> 0, o3 = (r5 - n3) / 4294967296;
            this._block.writeUInt32BE(o3, this._blockSize - 8), this._block.writeUInt32BE(n3, this._blockSize - 4);
          }
          this._update(this._block);
          var i = this._hash();
          return e4 ? i.toString(e4) : i;
        }, o2.prototype._update = function() {
          throw new Error("_update must be implemented by subclass");
        }, e3.exports = o2;
      }, 2802: (e3, t3, r4) => {
        var n2 = e3.exports = function(e4) {
          e4 = e4.toLowerCase();
          var t4 = n2[e4];
          if (!t4) throw new Error(e4 + " is not supported (we accept pull requests)");
          return new t4();
        };
        n2.sha = r4(7816), n2.sha1 = r4(3737), n2.sha224 = r4(6710), n2.sha256 = r4(4107), n2.sha384 = r4(2827), n2.sha512 = r4(2890);
      }, 7816: (e3, t3, r4) => {
        var n2 = r4(6698), o2 = r4(392), i = r4(2861).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s = new Array(80);
        function u() {
          this.init(), this._w = s, o2.call(this, 64, 56);
        }
        function c(e4) {
          return e4 << 30 | e4 >>> 2;
        }
        function l2(e4, t4, r5, n3) {
          return 0 === e4 ? t4 & r5 | ~t4 & n3 : 2 === e4 ? t4 & r5 | t4 & n3 | r5 & n3 : t4 ^ r5 ^ n3;
        }
        n2(u, o2), u.prototype.init = function() {
          return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
        }, u.prototype._update = function(e4) {
          for (var t4, r5 = this._w, n3 = 0 | this._a, o3 = 0 | this._b, i2 = 0 | this._c, s2 = 0 | this._d, u2 = 0 | this._e, f = 0; f < 16; ++f) r5[f] = e4.readInt32BE(4 * f);
          for (; f < 80; ++f) r5[f] = r5[f - 3] ^ r5[f - 8] ^ r5[f - 14] ^ r5[f - 16];
          for (var p = 0; p < 80; ++p) {
            var h = ~~(p / 20), d = 0 | ((t4 = n3) << 5 | t4 >>> 27) + l2(h, o3, i2, s2) + u2 + r5[p] + a[h];
            u2 = s2, s2 = i2, i2 = c(o3), o3 = n3, n3 = d;
          }
          this._a = n3 + this._a | 0, this._b = o3 + this._b | 0, this._c = i2 + this._c | 0, this._d = s2 + this._d | 0, this._e = u2 + this._e | 0;
        }, u.prototype._hash = function() {
          var e4 = i.allocUnsafe(20);
          return e4.writeInt32BE(0 | this._a, 0), e4.writeInt32BE(0 | this._b, 4), e4.writeInt32BE(0 | this._c, 8), e4.writeInt32BE(0 | this._d, 12), e4.writeInt32BE(0 | this._e, 16), e4;
        }, e3.exports = u;
      }, 3737: (e3, t3, r4) => {
        var n2 = r4(6698), o2 = r4(392), i = r4(2861).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s = new Array(80);
        function u() {
          this.init(), this._w = s, o2.call(this, 64, 56);
        }
        function c(e4) {
          return e4 << 5 | e4 >>> 27;
        }
        function l2(e4) {
          return e4 << 30 | e4 >>> 2;
        }
        function f(e4, t4, r5, n3) {
          return 0 === e4 ? t4 & r5 | ~t4 & n3 : 2 === e4 ? t4 & r5 | t4 & n3 | r5 & n3 : t4 ^ r5 ^ n3;
        }
        n2(u, o2), u.prototype.init = function() {
          return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
        }, u.prototype._update = function(e4) {
          for (var t4, r5 = this._w, n3 = 0 | this._a, o3 = 0 | this._b, i2 = 0 | this._c, s2 = 0 | this._d, u2 = 0 | this._e, p = 0; p < 16; ++p) r5[p] = e4.readInt32BE(4 * p);
          for (; p < 80; ++p) r5[p] = (t4 = r5[p - 3] ^ r5[p - 8] ^ r5[p - 14] ^ r5[p - 16]) << 1 | t4 >>> 31;
          for (var h = 0; h < 80; ++h) {
            var d = ~~(h / 20), y = c(n3) + f(d, o3, i2, s2) + u2 + r5[h] + a[d] | 0;
            u2 = s2, s2 = i2, i2 = l2(o3), o3 = n3, n3 = y;
          }
          this._a = n3 + this._a | 0, this._b = o3 + this._b | 0, this._c = i2 + this._c | 0, this._d = s2 + this._d | 0, this._e = u2 + this._e | 0;
        }, u.prototype._hash = function() {
          var e4 = i.allocUnsafe(20);
          return e4.writeInt32BE(0 | this._a, 0), e4.writeInt32BE(0 | this._b, 4), e4.writeInt32BE(0 | this._c, 8), e4.writeInt32BE(0 | this._d, 12), e4.writeInt32BE(0 | this._e, 16), e4;
        }, e3.exports = u;
      }, 6710: (e3, t3, r4) => {
        var n2 = r4(6698), o2 = r4(4107), i = r4(392), a = r4(2861).Buffer, s = new Array(64);
        function u() {
          this.init(), this._w = s, i.call(this, 64, 56);
        }
        n2(u, o2), u.prototype.init = function() {
          return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
        }, u.prototype._hash = function() {
          var e4 = a.allocUnsafe(28);
          return e4.writeInt32BE(this._a, 0), e4.writeInt32BE(this._b, 4), e4.writeInt32BE(this._c, 8), e4.writeInt32BE(this._d, 12), e4.writeInt32BE(this._e, 16), e4.writeInt32BE(this._f, 20), e4.writeInt32BE(this._g, 24), e4;
        }, e3.exports = u;
      }, 4107: (e3, t3, r4) => {
        var n2 = r4(6698), o2 = r4(392), i = r4(2861).Buffer, a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], s = new Array(64);
        function u() {
          this.init(), this._w = s, o2.call(this, 64, 56);
        }
        function c(e4, t4, r5) {
          return r5 ^ e4 & (t4 ^ r5);
        }
        function l2(e4, t4, r5) {
          return e4 & t4 | r5 & (e4 | t4);
        }
        function f(e4) {
          return (e4 >>> 2 | e4 << 30) ^ (e4 >>> 13 | e4 << 19) ^ (e4 >>> 22 | e4 << 10);
        }
        function p(e4) {
          return (e4 >>> 6 | e4 << 26) ^ (e4 >>> 11 | e4 << 21) ^ (e4 >>> 25 | e4 << 7);
        }
        function h(e4) {
          return (e4 >>> 7 | e4 << 25) ^ (e4 >>> 18 | e4 << 14) ^ e4 >>> 3;
        }
        n2(u, o2), u.prototype.init = function() {
          return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
        }, u.prototype._update = function(e4) {
          for (var t4, r5 = this._w, n3 = 0 | this._a, o3 = 0 | this._b, i2 = 0 | this._c, s2 = 0 | this._d, u2 = 0 | this._e, d = 0 | this._f, y = 0 | this._g, m = 0 | this._h, v = 0; v < 16; ++v) r5[v] = e4.readInt32BE(4 * v);
          for (; v < 64; ++v) r5[v] = 0 | (((t4 = r5[v - 2]) >>> 17 | t4 << 15) ^ (t4 >>> 19 | t4 << 13) ^ t4 >>> 10) + r5[v - 7] + h(r5[v - 15]) + r5[v - 16];
          for (var g = 0; g < 64; ++g) {
            var b = m + p(u2) + c(u2, d, y) + a[g] + r5[g] | 0, w = f(n3) + l2(n3, o3, i2) | 0;
            m = y, y = d, d = u2, u2 = s2 + b | 0, s2 = i2, i2 = o3, o3 = n3, n3 = b + w | 0;
          }
          this._a = n3 + this._a | 0, this._b = o3 + this._b | 0, this._c = i2 + this._c | 0, this._d = s2 + this._d | 0, this._e = u2 + this._e | 0, this._f = d + this._f | 0, this._g = y + this._g | 0, this._h = m + this._h | 0;
        }, u.prototype._hash = function() {
          var e4 = i.allocUnsafe(32);
          return e4.writeInt32BE(this._a, 0), e4.writeInt32BE(this._b, 4), e4.writeInt32BE(this._c, 8), e4.writeInt32BE(this._d, 12), e4.writeInt32BE(this._e, 16), e4.writeInt32BE(this._f, 20), e4.writeInt32BE(this._g, 24), e4.writeInt32BE(this._h, 28), e4;
        }, e3.exports = u;
      }, 2827: (e3, t3, r4) => {
        var n2 = r4(6698), o2 = r4(2890), i = r4(392), a = r4(2861).Buffer, s = new Array(160);
        function u() {
          this.init(), this._w = s, i.call(this, 128, 112);
        }
        n2(u, o2), u.prototype.init = function() {
          return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
        }, u.prototype._hash = function() {
          var e4 = a.allocUnsafe(48);
          function t4(t5, r5, n3) {
            e4.writeInt32BE(t5, n3), e4.writeInt32BE(r5, n3 + 4);
          }
          return t4(this._ah, this._al, 0), t4(this._bh, this._bl, 8), t4(this._ch, this._cl, 16), t4(this._dh, this._dl, 24), t4(this._eh, this._el, 32), t4(this._fh, this._fl, 40), e4;
        }, e3.exports = u;
      }, 2890: (e3, t3, r4) => {
        var n2 = r4(6698), o2 = r4(392), i = r4(2861).Buffer, a = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], s = new Array(160);
        function u() {
          this.init(), this._w = s, o2.call(this, 128, 112);
        }
        function c(e4, t4, r5) {
          return r5 ^ e4 & (t4 ^ r5);
        }
        function l2(e4, t4, r5) {
          return e4 & t4 | r5 & (e4 | t4);
        }
        function f(e4, t4) {
          return (e4 >>> 28 | t4 << 4) ^ (t4 >>> 2 | e4 << 30) ^ (t4 >>> 7 | e4 << 25);
        }
        function p(e4, t4) {
          return (e4 >>> 14 | t4 << 18) ^ (e4 >>> 18 | t4 << 14) ^ (t4 >>> 9 | e4 << 23);
        }
        function h(e4, t4) {
          return (e4 >>> 1 | t4 << 31) ^ (e4 >>> 8 | t4 << 24) ^ e4 >>> 7;
        }
        function d(e4, t4) {
          return (e4 >>> 1 | t4 << 31) ^ (e4 >>> 8 | t4 << 24) ^ (e4 >>> 7 | t4 << 25);
        }
        function y(e4, t4) {
          return (e4 >>> 19 | t4 << 13) ^ (t4 >>> 29 | e4 << 3) ^ e4 >>> 6;
        }
        function m(e4, t4) {
          return (e4 >>> 19 | t4 << 13) ^ (t4 >>> 29 | e4 << 3) ^ (e4 >>> 6 | t4 << 26);
        }
        function v(e4, t4) {
          return e4 >>> 0 < t4 >>> 0 ? 1 : 0;
        }
        n2(u, o2), u.prototype.init = function() {
          return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
        }, u.prototype._update = function(e4) {
          for (var t4 = this._w, r5 = 0 | this._ah, n3 = 0 | this._bh, o3 = 0 | this._ch, i2 = 0 | this._dh, s2 = 0 | this._eh, u2 = 0 | this._fh, g = 0 | this._gh, b = 0 | this._hh, w = 0 | this._al, S = 0 | this._bl, E = 0 | this._cl, _ = 0 | this._dl, k = 0 | this._el, T = 0 | this._fl, O = 0 | this._gl, x = 0 | this._hl, A = 0; A < 32; A += 2) t4[A] = e4.readInt32BE(4 * A), t4[A + 1] = e4.readInt32BE(4 * A + 4);
          for (; A < 160; A += 2) {
            var P = t4[A - 30], R = t4[A - 30 + 1], j = h(P, R), I = d(R, P), C = y(P = t4[A - 4], R = t4[A - 4 + 1]), L = m(R, P), B = t4[A - 14], N = t4[A - 14 + 1], U = t4[A - 32], M = t4[A - 32 + 1], D = I + N | 0, F = j + B + v(D, I) | 0;
            F = (F = F + C + v(D = D + L | 0, L) | 0) + U + v(D = D + M | 0, M) | 0, t4[A] = F, t4[A + 1] = D;
          }
          for (var V = 0; V < 160; V += 2) {
            F = t4[V], D = t4[V + 1];
            var q = l2(r5, n3, o3), K = l2(w, S, E), H = f(r5, w), z = f(w, r5), X = p(s2, k), G = p(k, s2), W = a[V], $ = a[V + 1], Q = c(s2, u2, g), Y = c(k, T, O), J = x + G | 0, Z = b + X + v(J, x) | 0;
            Z = (Z = (Z = Z + Q + v(J = J + Y | 0, Y) | 0) + W + v(J = J + $ | 0, $) | 0) + F + v(J = J + D | 0, D) | 0;
            var ee = z + K | 0, te = H + q + v(ee, z) | 0;
            b = g, x = O, g = u2, O = T, u2 = s2, T = k, s2 = i2 + Z + v(k = _ + J | 0, _) | 0, i2 = o3, _ = E, o3 = n3, E = S, n3 = r5, S = w, r5 = Z + te + v(w = J + ee | 0, J) | 0;
          }
          this._al = this._al + w | 0, this._bl = this._bl + S | 0, this._cl = this._cl + E | 0, this._dl = this._dl + _ | 0, this._el = this._el + k | 0, this._fl = this._fl + T | 0, this._gl = this._gl + O | 0, this._hl = this._hl + x | 0, this._ah = this._ah + r5 + v(this._al, w) | 0, this._bh = this._bh + n3 + v(this._bl, S) | 0, this._ch = this._ch + o3 + v(this._cl, E) | 0, this._dh = this._dh + i2 + v(this._dl, _) | 0, this._eh = this._eh + s2 + v(this._el, k) | 0, this._fh = this._fh + u2 + v(this._fl, T) | 0, this._gh = this._gh + g + v(this._gl, O) | 0, this._hh = this._hh + b + v(this._hl, x) | 0;
        }, u.prototype._hash = function() {
          var e4 = i.allocUnsafe(64);
          function t4(t5, r5, n3) {
            e4.writeInt32BE(t5, n3), e4.writeInt32BE(r5, n3 + 4);
          }
          return t4(this._ah, this._al, 0), t4(this._bh, this._bl, 8), t4(this._ch, this._cl, 16), t4(this._dh, this._dl, 24), t4(this._eh, this._el, 32), t4(this._fh, this._fl, 40), t4(this._gh, this._gl, 48), t4(this._hh, this._hl, 56), e4;
        }, e3.exports = u;
      }, 920: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(453), o2 = r4(8075), i = r4(8859), a = r4(9675), s = n2("%WeakMap%", true), u = n2("%Map%", true), c = o2("WeakMap.prototype.get", true), l2 = o2("WeakMap.prototype.set", true), f = o2("WeakMap.prototype.has", true), p = o2("Map.prototype.get", true), h = o2("Map.prototype.set", true), d = o2("Map.prototype.has", true), y = function(e4, t4) {
          for (var r5, n3 = e4; null !== (r5 = n3.next); n3 = r5) if (r5.key === t4) return n3.next = r5.next, r5.next = e4.next, e4.next = r5, r5;
        };
        e3.exports = function() {
          var e4, t4, r5, n3 = { assert: function(e5) {
            if (!n3.has(e5)) throw new a("Side channel does not contain " + i(e5));
          }, get: function(n4) {
            if (s && n4 && ("object" == typeof n4 || "function" == typeof n4)) {
              if (e4) return c(e4, n4);
            } else if (u) {
              if (t4) return p(t4, n4);
            } else if (r5) return function(e5, t5) {
              var r6 = y(e5, t5);
              return r6 && r6.value;
            }(r5, n4);
          }, has: function(n4) {
            if (s && n4 && ("object" == typeof n4 || "function" == typeof n4)) {
              if (e4) return f(e4, n4);
            } else if (u) {
              if (t4) return d(t4, n4);
            } else if (r5) return function(e5, t5) {
              return !!y(e5, t5);
            }(r5, n4);
            return false;
          }, set: function(n4, o3) {
            s && n4 && ("object" == typeof n4 || "function" == typeof n4) ? (e4 || (e4 = new s()), l2(e4, n4, o3)) : u ? (t4 || (t4 = new u()), h(t4, n4, o3)) : (r5 || (r5 = { key: {}, next: null }), function(e5, t5, r6) {
              var n5 = y(e5, t5);
              n5 ? n5.value = r6 : e5.next = { key: t5, next: e5.next, value: r6 };
            }(r5, n4, o3));
          } };
          return n3;
        };
      }, 1568: (e3, t3, r4) => {
        var n2 = r4(5537), o2 = r4(6917), i = r4(7510), a = r4(6866), s = r4(8835), u = t3;
        u.request = function(e4, t4) {
          e4 = "string" == typeof e4 ? s.parse(e4) : i(e4);
          var o3 = -1 === r4.g.location.protocol.search(/^https?:$/) ? "http:" : "", a2 = e4.protocol || o3, u2 = e4.hostname || e4.host, c = e4.port, l2 = e4.path || "/";
          u2 && -1 !== u2.indexOf(":") && (u2 = "[" + u2 + "]"), e4.url = (u2 ? a2 + "//" + u2 : "") + (c ? ":" + c : "") + l2, e4.method = (e4.method || "GET").toUpperCase(), e4.headers = e4.headers || {};
          var f = new n2(e4);
          return t4 && f.on("response", t4), f;
        }, u.get = function(e4, t4) {
          var r5 = u.request(e4, t4);
          return r5.end(), r5;
        }, u.ClientRequest = n2, u.IncomingMessage = o2.IncomingMessage, u.Agent = function() {
        }, u.Agent.defaultMaxSockets = 4, u.globalAgent = new u.Agent(), u.STATUS_CODES = a, u.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"];
      }, 6688: (e3, t3, r4) => {
        var n2;
        function o2() {
          if (void 0 !== n2) return n2;
          if (r4.g.XMLHttpRequest) {
            n2 = new r4.g.XMLHttpRequest();
            try {
              n2.open("GET", r4.g.XDomainRequest ? "/" : "https://example.com");
            } catch (e4) {
              n2 = null;
            }
          } else n2 = null;
          return n2;
        }
        function i(e4) {
          var t4 = o2();
          if (!t4) return false;
          try {
            return t4.responseType = e4, t4.responseType === e4;
          } catch (e5) {
          }
          return false;
        }
        function a(e4) {
          return "function" == typeof e4;
        }
        t3.fetch = a(r4.g.fetch) && a(r4.g.ReadableStream), t3.writableStream = a(r4.g.WritableStream), t3.abortController = a(r4.g.AbortController), t3.arraybuffer = t3.fetch || i("arraybuffer"), t3.msstream = !t3.fetch && i("ms-stream"), t3.mozchunkedarraybuffer = !t3.fetch && i("moz-chunked-arraybuffer"), t3.overrideMimeType = t3.fetch || !!o2() && a(o2().overrideMimeType), n2 = null;
      }, 5537: (e3, t3, r4) => {
        var n2 = r4(8287).Buffer, o2 = r4(6688), i = r4(6698), a = r4(6917), s = r4(8399), u = a.IncomingMessage, c = a.readyStates;
        var l2 = e3.exports = function(e4) {
          var t4, r5 = this;
          s.Writable.call(r5), r5._opts = e4, r5._body = [], r5._headers = {}, e4.auth && r5.setHeader("Authorization", "Basic " + n2.from(e4.auth).toString("base64")), Object.keys(e4.headers).forEach(function(t5) {
            r5.setHeader(t5, e4.headers[t5]);
          });
          var i2 = true;
          if ("disable-fetch" === e4.mode || "requestTimeout" in e4 && !o2.abortController) i2 = false, t4 = true;
          else if ("prefer-streaming" === e4.mode) t4 = false;
          else if ("allow-wrong-content-type" === e4.mode) t4 = !o2.overrideMimeType;
          else {
            if (e4.mode && "default" !== e4.mode && "prefer-fast" !== e4.mode) throw new Error("Invalid value for opts.mode");
            t4 = true;
          }
          r5._mode = function(e5, t5) {
            return o2.fetch && t5 ? "fetch" : o2.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : o2.msstream ? "ms-stream" : o2.arraybuffer && e5 ? "arraybuffer" : "text";
          }(t4, i2), r5._fetchTimer = null, r5._socketTimeout = null, r5._socketTimer = null, r5.on("finish", function() {
            r5._onFinish();
          });
        };
        i(l2, s.Writable), l2.prototype.setHeader = function(e4, t4) {
          var r5 = e4.toLowerCase();
          -1 === f.indexOf(r5) && (this._headers[r5] = { name: e4, value: t4 });
        }, l2.prototype.getHeader = function(e4) {
          var t4 = this._headers[e4.toLowerCase()];
          return t4 ? t4.value : null;
        }, l2.prototype.removeHeader = function(e4) {
          delete this._headers[e4.toLowerCase()];
        }, l2.prototype._onFinish = function() {
          var e4 = this;
          if (!e4._destroyed) {
            var t4 = e4._opts;
            "timeout" in t4 && 0 !== t4.timeout && e4.setTimeout(t4.timeout);
            var n3 = e4._headers, i2 = null;
            "GET" !== t4.method && "HEAD" !== t4.method && (i2 = new Blob(e4._body, { type: (n3["content-type"] || {}).value || "" }));
            var a2 = [];
            if (Object.keys(n3).forEach(function(e5) {
              var t5 = n3[e5].name, r5 = n3[e5].value;
              Array.isArray(r5) ? r5.forEach(function(e6) {
                a2.push([t5, e6]);
              }) : a2.push([t5, r5]);
            }), "fetch" === e4._mode) {
              var s2 = null;
              if (o2.abortController) {
                var u2 = new AbortController();
                s2 = u2.signal, e4._fetchAbortController = u2, "requestTimeout" in t4 && 0 !== t4.requestTimeout && (e4._fetchTimer = r4.g.setTimeout(function() {
                  e4.emit("requestTimeout"), e4._fetchAbortController && e4._fetchAbortController.abort();
                }, t4.requestTimeout));
              }
              r4.g.fetch(e4._opts.url, { method: e4._opts.method, headers: a2, body: i2 || void 0, mode: "cors", credentials: t4.withCredentials ? "include" : "same-origin", signal: s2 }).then(function(t5) {
                e4._fetchResponse = t5, e4._resetTimers(false), e4._connect();
              }, function(t5) {
                e4._resetTimers(true), e4._destroyed || e4.emit("error", t5);
              });
            } else {
              var l3 = e4._xhr = new r4.g.XMLHttpRequest();
              try {
                l3.open(e4._opts.method, e4._opts.url, true);
              } catch (t5) {
                return void process.nextTick(function() {
                  e4.emit("error", t5);
                });
              }
              "responseType" in l3 && (l3.responseType = e4._mode), "withCredentials" in l3 && (l3.withCredentials = !!t4.withCredentials), "text" === e4._mode && "overrideMimeType" in l3 && l3.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in t4 && (l3.timeout = t4.requestTimeout, l3.ontimeout = function() {
                e4.emit("requestTimeout");
              }), a2.forEach(function(e5) {
                l3.setRequestHeader(e5[0], e5[1]);
              }), e4._response = null, l3.onreadystatechange = function() {
                switch (l3.readyState) {
                  case c.LOADING:
                  case c.DONE:
                    e4._onXHRProgress();
                }
              }, "moz-chunked-arraybuffer" === e4._mode && (l3.onprogress = function() {
                e4._onXHRProgress();
              }), l3.onerror = function() {
                e4._destroyed || (e4._resetTimers(true), e4.emit("error", new Error("XHR error")));
              };
              try {
                l3.send(i2);
              } catch (t5) {
                return void process.nextTick(function() {
                  e4.emit("error", t5);
                });
              }
            }
          }
        }, l2.prototype._onXHRProgress = function() {
          var e4 = this;
          e4._resetTimers(false), function(e5) {
            try {
              var t4 = e5.status;
              return null !== t4 && 0 !== t4;
            } catch (e6) {
              return false;
            }
          }(e4._xhr) && !e4._destroyed && (e4._response || e4._connect(), e4._response._onXHRProgress(e4._resetTimers.bind(e4)));
        }, l2.prototype._connect = function() {
          var e4 = this;
          e4._destroyed || (e4._response = new u(e4._xhr, e4._fetchResponse, e4._mode, e4._resetTimers.bind(e4)), e4._response.on("error", function(t4) {
            e4.emit("error", t4);
          }), e4.emit("response", e4._response));
        }, l2.prototype._write = function(e4, t4, r5) {
          this._body.push(e4), r5();
        }, l2.prototype._resetTimers = function(e4) {
          var t4 = this;
          r4.g.clearTimeout(t4._socketTimer), t4._socketTimer = null, e4 ? (r4.g.clearTimeout(t4._fetchTimer), t4._fetchTimer = null) : t4._socketTimeout && (t4._socketTimer = r4.g.setTimeout(function() {
            t4.emit("timeout");
          }, t4._socketTimeout));
        }, l2.prototype.abort = l2.prototype.destroy = function(e4) {
          var t4 = this;
          t4._destroyed = true, t4._resetTimers(true), t4._response && (t4._response._destroyed = true), t4._xhr ? t4._xhr.abort() : t4._fetchAbortController && t4._fetchAbortController.abort(), e4 && t4.emit("error", e4);
        }, l2.prototype.end = function(e4, t4, r5) {
          "function" == typeof e4 && (r5 = e4, e4 = void 0), s.Writable.prototype.end.call(this, e4, t4, r5);
        }, l2.prototype.setTimeout = function(e4, t4) {
          var r5 = this;
          t4 && r5.once("timeout", t4), r5._socketTimeout = e4, r5._resetTimers(false);
        }, l2.prototype.flushHeaders = function() {
        }, l2.prototype.setNoDelay = function() {
        }, l2.prototype.setSocketKeepAlive = function() {
        };
        var f = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"];
      }, 6917: (e3, t3, r4) => {
        var n2 = r4(8287).Buffer, o2 = r4(6688), i = r4(6698), a = r4(8399), s = t3.readyStates = { UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 }, u = t3.IncomingMessage = function(e4, t4, r5, i2) {
          var s2 = this;
          if (a.Readable.call(s2), s2._mode = r5, s2.headers = {}, s2.rawHeaders = [], s2.trailers = {}, s2.rawTrailers = [], s2.on("end", function() {
            process.nextTick(function() {
              s2.emit("close");
            });
          }), "fetch" === r5) {
            if (s2._fetchResponse = t4, s2.url = t4.url, s2.statusCode = t4.status, s2.statusMessage = t4.statusText, t4.headers.forEach(function(e5, t5) {
              s2.headers[t5.toLowerCase()] = e5, s2.rawHeaders.push(t5, e5);
            }), o2.writableStream) {
              var u2 = new WritableStream({ write: function(e5) {
                return i2(false), new Promise(function(t5, r6) {
                  s2._destroyed ? r6() : s2.push(n2.from(e5)) ? t5() : s2._resumeFetch = t5;
                });
              }, close: function() {
                i2(true), s2._destroyed || s2.push(null);
              }, abort: function(e5) {
                i2(true), s2._destroyed || s2.emit("error", e5);
              } });
              try {
                return void t4.body.pipeTo(u2).catch(function(e5) {
                  i2(true), s2._destroyed || s2.emit("error", e5);
                });
              } catch (e5) {
              }
            }
            var c = t4.body.getReader();
            !function e5() {
              c.read().then(function(t5) {
                s2._destroyed || (i2(t5.done), t5.done ? s2.push(null) : (s2.push(n2.from(t5.value)), e5()));
              }).catch(function(e6) {
                i2(true), s2._destroyed || s2.emit("error", e6);
              });
            }();
          } else {
            if (s2._xhr = e4, s2._pos = 0, s2.url = e4.responseURL, s2.statusCode = e4.status, s2.statusMessage = e4.statusText, e4.getAllResponseHeaders().split(/\r?\n/).forEach(function(e5) {
              var t5 = e5.match(/^([^:]+):\s*(.*)/);
              if (t5) {
                var r6 = t5[1].toLowerCase();
                "set-cookie" === r6 ? (void 0 === s2.headers[r6] && (s2.headers[r6] = []), s2.headers[r6].push(t5[2])) : void 0 !== s2.headers[r6] ? s2.headers[r6] += ", " + t5[2] : s2.headers[r6] = t5[2], s2.rawHeaders.push(t5[1], t5[2]);
              }
            }), s2._charset = "x-user-defined", !o2.overrideMimeType) {
              var l2 = s2.rawHeaders["mime-type"];
              if (l2) {
                var f = l2.match(/;\s*charset=([^;])(;|$)/);
                f && (s2._charset = f[1].toLowerCase());
              }
              s2._charset || (s2._charset = "utf-8");
            }
          }
        };
        i(u, a.Readable), u.prototype._read = function() {
          var e4 = this._resumeFetch;
          e4 && (this._resumeFetch = null, e4());
        }, u.prototype._onXHRProgress = function(e4) {
          var t4 = this, o3 = t4._xhr, i2 = null;
          switch (t4._mode) {
            case "text":
              if ((i2 = o3.responseText).length > t4._pos) {
                var a2 = i2.substr(t4._pos);
                if ("x-user-defined" === t4._charset) {
                  for (var u2 = n2.alloc(a2.length), c = 0; c < a2.length; c++) u2[c] = 255 & a2.charCodeAt(c);
                  t4.push(u2);
                } else t4.push(a2, t4._charset);
                t4._pos = i2.length;
              }
              break;
            case "arraybuffer":
              if (o3.readyState !== s.DONE || !o3.response) break;
              i2 = o3.response, t4.push(n2.from(new Uint8Array(i2)));
              break;
            case "moz-chunked-arraybuffer":
              if (i2 = o3.response, o3.readyState !== s.LOADING || !i2) break;
              t4.push(n2.from(new Uint8Array(i2)));
              break;
            case "ms-stream":
              if (i2 = o3.response, o3.readyState !== s.LOADING) break;
              var l2 = new r4.g.MSStreamReader();
              l2.onprogress = function() {
                l2.result.byteLength > t4._pos && (t4.push(n2.from(new Uint8Array(l2.result.slice(t4._pos)))), t4._pos = l2.result.byteLength);
              }, l2.onload = function() {
                e4(true), t4.push(null);
              }, l2.readAsArrayBuffer(i2);
          }
          t4._xhr.readyState === s.DONE && "ms-stream" !== t4._mode && (e4(true), t4.push(null));
        };
      }, 3141: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(2861).Buffer, o2 = n2.isEncoding || function(e4) {
          switch ((e4 = "" + e4) && e4.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return true;
            default:
              return false;
          }
        };
        function i(e4) {
          var t4;
          switch (this.encoding = function(e5) {
            var t5 = function(e6) {
              if (!e6) return "utf8";
              for (var t6; ; ) switch (e6) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return e6;
                default:
                  if (t6) return;
                  e6 = ("" + e6).toLowerCase(), t6 = true;
              }
            }(e5);
            if ("string" != typeof t5 && (n2.isEncoding === o2 || !o2(e5))) throw new Error("Unknown encoding: " + e5);
            return t5 || e5;
          }(e4), this.encoding) {
            case "utf16le":
              this.text = u, this.end = c, t4 = 4;
              break;
            case "utf8":
              this.fillLast = s, t4 = 4;
              break;
            case "base64":
              this.text = l2, this.end = f, t4 = 3;
              break;
            default:
              return this.write = p, void (this.end = h);
          }
          this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n2.allocUnsafe(t4);
        }
        function a(e4) {
          return e4 <= 127 ? 0 : e4 >> 5 == 6 ? 2 : e4 >> 4 == 14 ? 3 : e4 >> 3 == 30 ? 4 : e4 >> 6 == 2 ? -1 : -2;
        }
        function s(e4) {
          var t4 = this.lastTotal - this.lastNeed, r5 = function(e5, t5, r6) {
            if (128 != (192 & t5[0])) return e5.lastNeed = 0, "�";
            if (e5.lastNeed > 1 && t5.length > 1) {
              if (128 != (192 & t5[1])) return e5.lastNeed = 1, "�";
              if (e5.lastNeed > 2 && t5.length > 2 && 128 != (192 & t5[2])) return e5.lastNeed = 2, "�";
            }
          }(this, e4);
          return void 0 !== r5 ? r5 : this.lastNeed <= e4.length ? (e4.copy(this.lastChar, t4, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e4.copy(this.lastChar, t4, 0, e4.length), void (this.lastNeed -= e4.length));
        }
        function u(e4, t4) {
          if ((e4.length - t4) % 2 == 0) {
            var r5 = e4.toString("utf16le", t4);
            if (r5) {
              var n3 = r5.charCodeAt(r5.length - 1);
              if (n3 >= 55296 && n3 <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e4[e4.length - 2], this.lastChar[1] = e4[e4.length - 1], r5.slice(0, -1);
            }
            return r5;
          }
          return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e4[e4.length - 1], e4.toString("utf16le", t4, e4.length - 1);
        }
        function c(e4) {
          var t4 = e4 && e4.length ? this.write(e4) : "";
          if (this.lastNeed) {
            var r5 = this.lastTotal - this.lastNeed;
            return t4 + this.lastChar.toString("utf16le", 0, r5);
          }
          return t4;
        }
        function l2(e4, t4) {
          var r5 = (e4.length - t4) % 3;
          return 0 === r5 ? e4.toString("base64", t4) : (this.lastNeed = 3 - r5, this.lastTotal = 3, 1 === r5 ? this.lastChar[0] = e4[e4.length - 1] : (this.lastChar[0] = e4[e4.length - 2], this.lastChar[1] = e4[e4.length - 1]), e4.toString("base64", t4, e4.length - r5));
        }
        function f(e4) {
          var t4 = e4 && e4.length ? this.write(e4) : "";
          return this.lastNeed ? t4 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t4;
        }
        function p(e4) {
          return e4.toString(this.encoding);
        }
        function h(e4) {
          return e4 && e4.length ? this.write(e4) : "";
        }
        t3.I = i, i.prototype.write = function(e4) {
          if (0 === e4.length) return "";
          var t4, r5;
          if (this.lastNeed) {
            if (void 0 === (t4 = this.fillLast(e4))) return "";
            r5 = this.lastNeed, this.lastNeed = 0;
          } else r5 = 0;
          return r5 < e4.length ? t4 ? t4 + this.text(e4, r5) : this.text(e4, r5) : t4 || "";
        }, i.prototype.end = function(e4) {
          var t4 = e4 && e4.length ? this.write(e4) : "";
          return this.lastNeed ? t4 + "�" : t4;
        }, i.prototype.text = function(e4, t4) {
          var r5 = function(e5, t5, r6) {
            var n4 = t5.length - 1;
            if (n4 < r6) return 0;
            var o3 = a(t5[n4]);
            if (o3 >= 0) return o3 > 0 && (e5.lastNeed = o3 - 1), o3;
            if (--n4 < r6 || -2 === o3) return 0;
            if (o3 = a(t5[n4]), o3 >= 0) return o3 > 0 && (e5.lastNeed = o3 - 2), o3;
            if (--n4 < r6 || -2 === o3) return 0;
            if (o3 = a(t5[n4]), o3 >= 0) return o3 > 0 && (2 === o3 ? o3 = 0 : e5.lastNeed = o3 - 3), o3;
            return 0;
          }(this, e4, t4);
          if (!this.lastNeed) return e4.toString("utf8", t4);
          this.lastTotal = r5;
          var n3 = e4.length - (r5 - this.lastNeed);
          return e4.copy(this.lastChar, 0, n3), e4.toString("utf8", t4, n3);
        }, i.prototype.fillLast = function(e4) {
          if (this.lastNeed <= e4.length) return e4.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
          e4.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e4.length), this.lastNeed -= e4.length;
        };
      }, 1293: (e3, t3, r4) => {
        var n2 = r4(5546), o2 = r4(2708);
        e3.exports = { parse: function(e4) {
          var t4 = n2.parse(e4.toString());
          return o2.compile(t4);
        } };
      }, 2708: (e3) => {
        "use strict";
        e3.exports = { compile: function(e4) {
          var t3 = [], r4 = [], n2 = "", o2 = /* @__PURE__ */ Object.create(null), i = o2;
          return function(e5) {
            for (var t4, r5 = 0; r5 < e5.length; r5++) switch ((t4 = e5[r5]).type) {
              case "Assign":
                s(t4);
                break;
              case "ObjectPath":
                f(t4);
                break;
              case "ArrayPath":
                p(t4);
            }
            return o2;
          }(e4);
          function a(e5, t4, r5) {
            var n3 = new Error(e5);
            throw n3.line = t4, n3.column = r5, n3;
          }
          function s(e5) {
            var o3, s2 = e5.key, l3 = e5.value, f2 = e5.line, p2 = e5.column;
            o3 = n2 ? n2 + "." + s2 : s2, void 0 !== i[s2] && a("Cannot redefine existing key '" + o3 + "'.", f2, p2), i[s2] = c(l3), u(o3) || (t3.push(o3), r4.push(o3));
          }
          function u(e5) {
            return -1 !== t3.indexOf(e5);
          }
          function c(e5) {
            return "Array" === e5.type ? function(e6) {
              for (var t4 = null, r5 = 0; r5 < e6.length; r5++) {
                var n3 = e6[r5];
                null === t4 ? t4 = n3.type : n3.type !== t4 && a("Cannot add value of type " + n3.type + " to array of type " + t4 + ".", n3.line, n3.column);
              }
              return e6.map(c);
            }(e5.value) : "InlineTable" === e5.type ? l2(e5.value) : e5.value;
          }
          function l2(e5) {
            for (var t4 = /* @__PURE__ */ Object.create(null), r5 = 0; r5 < e5.length; r5++) {
              var n3 = e5[r5];
              "InlineTable" === n3.value.type ? t4[n3.key] = l2(n3.value.value) : "InlineTableValue" === n3.type && (t4[n3.key] = c(n3.value));
            }
            return t4;
          }
          function f(e5) {
            var r5 = e5.value, s2 = r5.map(d).join("."), c2 = e5.line, l3 = e5.column;
            u(s2) && a("Cannot redefine existing key '" + r5 + "'.", c2, l3), t3.push(s2), i = h(o2, r5, /* @__PURE__ */ Object.create(null), c2, l3), n2 = r5;
          }
          function p(e5) {
            var r5 = e5.value, s2 = r5.map(d).join("."), c2 = e5.line, l3 = e5.column;
            if (u(s2) || t3.push(s2), (t3 = t3.filter(function(e6) {
              return 0 !== e6.indexOf(s2);
            })).push(s2), i = h(o2, r5, [], c2, l3), n2 = s2, i instanceof Array) {
              var f2 = /* @__PURE__ */ Object.create(null);
              i.push(f2), i = f2;
            } else a("Cannot redefine existing key '" + r5 + "'.", c2, l3);
          }
          function h(e5, t4, n3, o3, i2) {
            for (var s2 = [], u2 = "", c2 = (t4.join("."), e5), l3 = 0; l3 < t4.length; l3++) {
              var f2 = t4[l3];
              s2.push(f2), u2 = s2.join("."), void 0 === c2[f2] ? l3 === t4.length - 1 ? c2[f2] = n3 : c2[f2] = /* @__PURE__ */ Object.create(null) : l3 !== t4.length - 1 && r4.indexOf(u2) > -1 && a("Cannot redefine existing key '" + u2 + "'.", o3, i2), (c2 = c2[f2]) instanceof Array && c2.length && l3 < t4.length - 1 && (c2 = c2[c2.length - 1]);
            }
            return c2;
          }
          function d(e5) {
            return e5.indexOf(".") > -1 ? '"' + e5 + '"' : e5;
          }
        } };
      }, 5546: (e3) => {
        e3.exports = function() {
          function e4(e5, t3, r4, n2, o2, i) {
            this.message = e5, this.expected = t3, this.found = r4, this.offset = n2, this.line = o2, this.column = i, this.name = "SyntaxError";
          }
          return function(e5, t3) {
            function r4() {
              this.constructor = e5;
            }
            r4.prototype = t3.prototype, e5.prototype = new r4();
          }(e4, Error), { SyntaxError: e4, parse: function(t3) {
            var r4, n2 = arguments.length > 1 ? arguments[1] : {}, o2 = {}, i = { start: Lt }, a = Lt, s = function() {
              return pr;
            }, u = o2, c = "#", l2 = { type: "literal", value: "#", description: '"#"' }, f = void 0, p = { type: "any", description: "any character" }, h = "[", d = { type: "literal", value: "[", description: '"["' }, y = "]", m = { type: "literal", value: "]", description: '"]"' }, v = function(e5) {
              hr(dr("ObjectPath", e5, Pt, Rt));
            }, g = function(e5) {
              hr(dr("ArrayPath", e5, Pt, Rt));
            }, b = function(e5, t4) {
              return e5.concat(t4);
            }, w = function(e5) {
              return [e5];
            }, S = function(e5) {
              return e5;
            }, E = ".", _ = { type: "literal", value: ".", description: '"."' }, k = "=", T = { type: "literal", value: "=", description: '"="' }, O = function(e5, t4) {
              hr(dr("Assign", t4, Pt, Rt, e5));
            }, x = function(e5) {
              return e5.join("");
            }, A = function(e5) {
              return e5.value;
            }, P = '"""', R = { type: "literal", value: '"""', description: '"\\"\\"\\""' }, j = null, I = function(e5) {
              return dr("String", e5.join(""), Pt, Rt);
            }, C = '"', L = { type: "literal", value: '"', description: '"\\""' }, B = "'''", N = { type: "literal", value: "'''", description: `"'''"` }, U = "'", M = { type: "literal", value: "'", description: `"'"` }, D = function(e5) {
              return e5;
            }, F = function(e5) {
              return e5;
            }, V = "\\", q = { type: "literal", value: "\\", description: '"\\\\"' }, K = function() {
              return "";
            }, H = "e", z = { type: "literal", value: "e", description: '"e"' }, X = "E", G = { type: "literal", value: "E", description: '"E"' }, W = function(e5, t4) {
              return dr("Float", parseFloat(e5 + "e" + t4), Pt, Rt);
            }, $ = function(e5) {
              return dr("Float", parseFloat(e5), Pt, Rt);
            }, Q = "+", Y = { type: "literal", value: "+", description: '"+"' }, J = function(e5) {
              return e5.join("");
            }, Z = "-", ee = { type: "literal", value: "-", description: '"-"' }, te = function(e5) {
              return "-" + e5.join("");
            }, re = function(e5) {
              return dr("Integer", parseInt(e5, 10), Pt, Rt);
            }, ne = "true", oe = { type: "literal", value: "true", description: '"true"' }, ie = function() {
              return dr("Boolean", true, Pt, Rt);
            }, ae = "false", se = { type: "literal", value: "false", description: '"false"' }, ue = function() {
              return dr("Boolean", false, Pt, Rt);
            }, ce = function() {
              return dr("Array", [], Pt, Rt);
            }, le = function(e5) {
              return dr("Array", e5 ? [e5] : [], Pt, Rt);
            }, fe = function(e5) {
              return dr("Array", e5, Pt, Rt);
            }, pe = function(e5, t4) {
              return dr("Array", e5.concat(t4), Pt, Rt);
            }, he = function(e5) {
              return e5;
            }, de = ",", ye = { type: "literal", value: ",", description: '","' }, me = "{", ve = { type: "literal", value: "{", description: '"{"' }, ge = "}", be = { type: "literal", value: "}", description: '"}"' }, we = function(e5) {
              return dr("InlineTable", e5, Pt, Rt);
            }, Se = function(e5, t4) {
              return dr("InlineTableValue", t4, Pt, Rt, e5);
            }, Ee = function(e5) {
              return "." + e5;
            }, _e = function(e5) {
              return e5.join("");
            }, ke = ":", Te = { type: "literal", value: ":", description: '":"' }, Oe = function(e5) {
              return e5.join("");
            }, xe = "T", Ae = { type: "literal", value: "T", description: '"T"' }, Pe = "Z", Re = { type: "literal", value: "Z", description: '"Z"' }, je = function(e5, t4) {
              return dr("Date", /* @__PURE__ */ new Date(e5 + "T" + t4 + "Z"), Pt, Rt);
            }, Ie = function(e5, t4) {
              return dr("Date", /* @__PURE__ */ new Date(e5 + "T" + t4), Pt, Rt);
            }, Ce = /^[ \t]/, Le = { type: "class", value: "[ \\t]", description: "[ \\t]" }, Be = "\n", Ne = { type: "literal", value: "\n", description: '"\\n"' }, Ue = "\r", Me = { type: "literal", value: "\r", description: '"\\r"' }, De = /^[0-9a-f]/i, Fe = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" }, Ve = /^[0-9]/, qe = { type: "class", value: "[0-9]", description: "[0-9]" }, Ke = "_", He = { type: "literal", value: "_", description: '"_"' }, ze = function() {
              return "";
            }, Xe = /^[A-Za-z0-9_\-]/, Ge = { type: "class", value: "[A-Za-z0-9_\\-]", description: "[A-Za-z0-9_\\-]" }, We = function(e5) {
              return e5.join("");
            }, $e = '\\"', Qe = { type: "literal", value: '\\"', description: '"\\\\\\""' }, Ye = function() {
              return '"';
            }, Je = "\\\\", Ze = { type: "literal", value: "\\\\", description: '"\\\\\\\\"' }, et = function() {
              return "\\";
            }, tt = "\\b", rt = { type: "literal", value: "\\b", description: '"\\\\b"' }, nt = function() {
              return "\b";
            }, ot = "\\t", it = { type: "literal", value: "\\t", description: '"\\\\t"' }, at = function() {
              return "	";
            }, st = "\\n", ut = { type: "literal", value: "\\n", description: '"\\\\n"' }, ct = function() {
              return "\n";
            }, lt = "\\f", ft = { type: "literal", value: "\\f", description: '"\\\\f"' }, pt = function() {
              return "\f";
            }, ht = "\\r", dt = { type: "literal", value: "\\r", description: '"\\\\r"' }, yt = function() {
              return "\r";
            }, mt = "\\U", vt = { type: "literal", value: "\\U", description: '"\\\\U"' }, gt = function(e5) {
              return function(e6, t4, r5) {
                var n3 = parseInt("0x" + e6);
                if (!(!isFinite(n3) || Math.floor(n3) != n3 || n3 < 0 || n3 > 1114111 || n3 > 55295 && n3 < 57344)) return function() {
                  var e7, t5, r6 = 16384, n4 = [], o3 = -1, i2 = arguments.length;
                  if (!i2) return "";
                  var a2 = "";
                  for (; ++o3 < i2; ) {
                    var s2 = Number(arguments[o3]);
                    s2 <= 65535 ? n4.push(s2) : (e7 = 55296 + ((s2 -= 65536) >> 10), t5 = s2 % 1024 + 56320, n4.push(e7, t5)), (o3 + 1 == i2 || n4.length > r6) && (a2 += String.fromCharCode.apply(null, n4), n4.length = 0);
                  }
                  return a2;
                }(n3);
                !function(e7, t5, r6) {
                  var n4 = new Error(e7);
                  throw n4.line = t5, n4.column = r6, n4;
                }("Invalid Unicode escape code: " + e6, t4, r5);
              }(e5.join(""));
            }, bt = "\\u", wt = { type: "literal", value: "\\u", description: '"\\\\u"' }, St = 0, Et = 0, _t = 0, kt = { line: 1, column: 1, seenCR: false }, Tt = 0, Ot = [], xt = 0, At = {};
            if ("startRule" in n2) {
              if (!(n2.startRule in i)) throw new Error(`Can't start parsing from rule "` + n2.startRule + '".');
              a = i[n2.startRule];
            }
            function Pt() {
              return jt(Et).line;
            }
            function Rt() {
              return jt(Et).column;
            }
            function jt(e5) {
              return _t !== e5 && (_t > e5 && (_t = 0, kt = { line: 1, column: 1, seenCR: false }), function(e6, r5, n3) {
                var o3, i2;
                for (o3 = r5; o3 < n3; o3++) "\n" === (i2 = t3.charAt(o3)) ? (e6.seenCR || e6.line++, e6.column = 1, e6.seenCR = false) : "\r" === i2 || "\u2028" === i2 || "\u2029" === i2 ? (e6.line++, e6.column = 1, e6.seenCR = true) : (e6.column++, e6.seenCR = false);
              }(kt, _t, e5), _t = e5), kt;
            }
            function It(e5) {
              St < Tt || (St > Tt && (Tt = St, Ot = []), Ot.push(e5));
            }
            function Ct(r5, n3, o3) {
              var i2 = jt(o3), a2 = o3 < t3.length ? t3.charAt(o3) : null;
              return null !== n3 && function(e5) {
                var t4 = 1;
                for (e5.sort(function(e6, t5) {
                  return e6.description < t5.description ? -1 : e6.description > t5.description ? 1 : 0;
                }); t4 < e5.length; ) e5[t4 - 1] === e5[t4] ? e5.splice(t4, 1) : t4++;
              }(n3), new e4(null !== r5 ? r5 : function(e5, t4) {
                var r6, n4 = new Array(e5.length);
                for (r6 = 0; r6 < e5.length; r6++) n4[r6] = e5[r6].description;
                return "Expected " + (e5.length > 1 ? n4.slice(0, -1).join(", ") + " or " + n4[e5.length - 1] : n4[0]) + " but " + (t4 ? '"' + function(e6) {
                  function t5(e7) {
                    return e7.charCodeAt(0).toString(16).toUpperCase();
                  }
                  return e6.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(e7) {
                    return "\\x0" + t5(e7);
                  }).replace(/[\x10-\x1F\x80-\xFF]/g, function(e7) {
                    return "\\x" + t5(e7);
                  }).replace(/[\u0180-\u0FFF]/g, function(e7) {
                    return "\\u0" + t5(e7);
                  }).replace(/[\u1080-\uFFFF]/g, function(e7) {
                    return "\\u" + t5(e7);
                  });
                }(t4) + '"' : "end of input") + " found.";
              }(n3, a2), n3, a2, o3, i2.line, i2.column);
            }
            function Lt() {
              var e5, t4, r5, n3 = 49 * St + 0, i2 = At[n3];
              if (i2) return St = i2.nextPos, i2.result;
              for (e5 = St, t4 = [], r5 = Bt(); r5 !== o2; ) t4.push(r5), r5 = Bt();
              return t4 !== o2 && (Et = e5, t4 = s()), e5 = t4, At[n3] = { nextPos: St, result: e5 }, e5;
            }
            function Bt() {
              var e5, r5, n3, i2, a2, s2, c2, l3 = 49 * St + 1, f2 = At[l3];
              if (f2) return St = f2.nextPos, f2.result;
              for (e5 = St, r5 = [], n3 = nr(); n3 !== o2; ) r5.push(n3), n3 = nr();
              if (r5 !== o2) if (n3 = function() {
                var e6, r6 = 49 * St + 2, n4 = At[r6];
                if (n4) return St = n4.nextPos, n4.result;
                e6 = Nt(), e6 === o2 && (e6 = function() {
                  var e7, r7, n5, i3, a3, s3, c3 = 49 * St + 4, l4 = At[c3];
                  if (l4) return St = l4.nextPos, l4.result;
                  e7 = St, 91 === t3.charCodeAt(St) ? (r7 = h, St++) : (r7 = o2, 0 === xt && It(d));
                  if (r7 !== o2) {
                    for (n5 = [], i3 = nr(); i3 !== o2; ) n5.push(i3), i3 = nr();
                    if (n5 !== o2) if ((i3 = Ut()) !== o2) {
                      for (a3 = [], s3 = nr(); s3 !== o2; ) a3.push(s3), s3 = nr();
                      a3 !== o2 ? (93 === t3.charCodeAt(St) ? (s3 = y, St++) : (s3 = o2, 0 === xt && It(m)), s3 !== o2 ? (Et = e7, e7 = r7 = v(i3)) : (St = e7, e7 = u)) : (St = e7, e7 = u);
                    } else St = e7, e7 = u;
                    else St = e7, e7 = u;
                  } else St = e7, e7 = u;
                  return At[c3] = { nextPos: St, result: e7 }, e7;
                }(), e6 === o2 && (e6 = function() {
                  var e7, r7, n5, i3, a3, s3, c3, l4, f3 = 49 * St + 5, p2 = At[f3];
                  if (p2) return St = p2.nextPos, p2.result;
                  e7 = St, 91 === t3.charCodeAt(St) ? (r7 = h, St++) : (r7 = o2, 0 === xt && It(d));
                  if (r7 !== o2) if (91 === t3.charCodeAt(St) ? (n5 = h, St++) : (n5 = o2, 0 === xt && It(d)), n5 !== o2) {
                    for (i3 = [], a3 = nr(); a3 !== o2; ) i3.push(a3), a3 = nr();
                    if (i3 !== o2) if ((a3 = Ut()) !== o2) {
                      for (s3 = [], c3 = nr(); c3 !== o2; ) s3.push(c3), c3 = nr();
                      s3 !== o2 ? (93 === t3.charCodeAt(St) ? (c3 = y, St++) : (c3 = o2, 0 === xt && It(m)), c3 !== o2 ? (93 === t3.charCodeAt(St) ? (l4 = y, St++) : (l4 = o2, 0 === xt && It(m)), l4 !== o2 ? (Et = e7, e7 = r7 = g(a3)) : (St = e7, e7 = u)) : (St = e7, e7 = u)) : (St = e7, e7 = u);
                    } else St = e7, e7 = u;
                    else St = e7, e7 = u;
                  } else St = e7, e7 = u;
                  else St = e7, e7 = u;
                  return At[f3] = { nextPos: St, result: e7 }, e7;
                }(), e6 === o2 && (e6 = function() {
                  var e7, r7, n5, i3, a3, s3, c3 = 49 * St + 9, l4 = At[c3];
                  if (l4) return St = l4.nextPos, l4.result;
                  if (e7 = St, r7 = Ft(), r7 !== o2) {
                    for (n5 = [], i3 = nr(); i3 !== o2; ) n5.push(i3), i3 = nr();
                    if (n5 !== o2) if (61 === t3.charCodeAt(St) ? (i3 = k, St++) : (i3 = o2, 0 === xt && It(T)), i3 !== o2) {
                      for (a3 = [], s3 = nr(); s3 !== o2; ) a3.push(s3), s3 = nr();
                      a3 !== o2 && (s3 = qt()) !== o2 ? (Et = e7, e7 = r7 = O(r7, s3)) : (St = e7, e7 = u);
                    } else St = e7, e7 = u;
                    else St = e7, e7 = u;
                  } else St = e7, e7 = u;
                  if (e7 === o2) if (e7 = St, (r7 = Vt()) !== o2) {
                    for (n5 = [], i3 = nr(); i3 !== o2; ) n5.push(i3), i3 = nr();
                    if (n5 !== o2) if (61 === t3.charCodeAt(St) ? (i3 = k, St++) : (i3 = o2, 0 === xt && It(T)), i3 !== o2) {
                      for (a3 = [], s3 = nr(); s3 !== o2; ) a3.push(s3), s3 = nr();
                      a3 !== o2 && (s3 = qt()) !== o2 ? (Et = e7, e7 = r7 = O(r7, s3)) : (St = e7, e7 = u);
                    } else St = e7, e7 = u;
                    else St = e7, e7 = u;
                  } else St = e7, e7 = u;
                  return At[c3] = { nextPos: St, result: e7 }, e7;
                }())));
                return At[r6] = { nextPos: St, result: e6 }, e6;
              }(), n3 !== o2) {
                for (i2 = [], a2 = nr(); a2 !== o2; ) i2.push(a2), a2 = nr();
                if (i2 !== o2) {
                  for (a2 = [], s2 = Nt(); s2 !== o2; ) a2.push(s2), s2 = Nt();
                  if (a2 !== o2) {
                    if (s2 = [], (c2 = or()) !== o2) for (; c2 !== o2; ) s2.push(c2), c2 = or();
                    else s2 = u;
                    s2 === o2 && (s2 = ar()), s2 !== o2 ? e5 = r5 = [r5, n3, i2, a2, s2] : (St = e5, e5 = u);
                  } else St = e5, e5 = u;
                } else St = e5, e5 = u;
              } else St = e5, e5 = u;
              else St = e5, e5 = u;
              if (e5 === o2) {
                if (e5 = St, r5 = [], (n3 = nr()) !== o2) for (; n3 !== o2; ) r5.push(n3), n3 = nr();
                else r5 = u;
                if (r5 !== o2) {
                  if (n3 = [], (i2 = or()) !== o2) for (; i2 !== o2; ) n3.push(i2), i2 = or();
                  else n3 = u;
                  n3 === o2 && (n3 = ar()), n3 !== o2 ? e5 = r5 = [r5, n3] : (St = e5, e5 = u);
                } else St = e5, e5 = u;
                e5 === o2 && (e5 = or());
              }
              return At[l3] = { nextPos: St, result: e5 }, e5;
            }
            function Nt() {
              var e5, r5, n3, i2, a2, s2, h2 = 49 * St + 3, d2 = At[h2];
              if (d2) return St = d2.nextPos, d2.result;
              if (e5 = St, 35 === t3.charCodeAt(St) ? (r5 = c, St++) : (r5 = o2, 0 === xt && It(l2)), r5 !== o2) {
                for (n3 = [], i2 = St, a2 = St, xt++, (s2 = or()) === o2 && (s2 = ar()), xt--, s2 === o2 ? a2 = f : (St = a2, a2 = u), a2 !== o2 ? (t3.length > St ? (s2 = t3.charAt(St), St++) : (s2 = o2, 0 === xt && It(p)), s2 !== o2 ? i2 = a2 = [a2, s2] : (St = i2, i2 = u)) : (St = i2, i2 = u); i2 !== o2; ) n3.push(i2), i2 = St, a2 = St, xt++, (s2 = or()) === o2 && (s2 = ar()), xt--, s2 === o2 ? a2 = f : (St = a2, a2 = u), a2 !== o2 ? (t3.length > St ? (s2 = t3.charAt(St), St++) : (s2 = o2, 0 === xt && It(p)), s2 !== o2 ? i2 = a2 = [a2, s2] : (St = i2, i2 = u)) : (St = i2, i2 = u);
                n3 !== o2 ? e5 = r5 = [r5, n3] : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              return At[h2] = { nextPos: St, result: e5 }, e5;
            }
            function Ut() {
              var e5, t4, r5, n3 = 49 * St + 6, i2 = At[n3];
              if (i2) return St = i2.nextPos, i2.result;
              if (e5 = St, t4 = [], (r5 = Dt()) !== o2) for (; r5 !== o2; ) t4.push(r5), r5 = Dt();
              else t4 = u;
              return t4 !== o2 && (r5 = Mt()) !== o2 ? (Et = e5, e5 = t4 = b(t4, r5)) : (St = e5, e5 = u), e5 === o2 && (e5 = St, (t4 = Mt()) !== o2 && (Et = e5, t4 = w(t4)), e5 = t4), At[n3] = { nextPos: St, result: e5 }, e5;
            }
            function Mt() {
              var e5, t4, r5, n3, i2, a2 = 49 * St + 7, s2 = At[a2];
              if (s2) return St = s2.nextPos, s2.result;
              for (e5 = St, t4 = [], r5 = nr(); r5 !== o2; ) t4.push(r5), r5 = nr();
              if (t4 !== o2) if ((r5 = Ft()) !== o2) {
                for (n3 = [], i2 = nr(); i2 !== o2; ) n3.push(i2), i2 = nr();
                n3 !== o2 ? (Et = e5, e5 = t4 = S(r5)) : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              else St = e5, e5 = u;
              if (e5 === o2) {
                for (e5 = St, t4 = [], r5 = nr(); r5 !== o2; ) t4.push(r5), r5 = nr();
                if (t4 !== o2) if ((r5 = Vt()) !== o2) {
                  for (n3 = [], i2 = nr(); i2 !== o2; ) n3.push(i2), i2 = nr();
                  n3 !== o2 ? (Et = e5, e5 = t4 = S(r5)) : (St = e5, e5 = u);
                } else St = e5, e5 = u;
                else St = e5, e5 = u;
              }
              return At[a2] = { nextPos: St, result: e5 }, e5;
            }
            function Dt() {
              var e5, r5, n3, i2, a2, s2, c2, l3 = 49 * St + 8, f2 = At[l3];
              if (f2) return St = f2.nextPos, f2.result;
              for (e5 = St, r5 = [], n3 = nr(); n3 !== o2; ) r5.push(n3), n3 = nr();
              if (r5 !== o2) if ((n3 = Ft()) !== o2) {
                for (i2 = [], a2 = nr(); a2 !== o2; ) i2.push(a2), a2 = nr();
                if (i2 !== o2) if (46 === t3.charCodeAt(St) ? (a2 = E, St++) : (a2 = o2, 0 === xt && It(_)), a2 !== o2) {
                  for (s2 = [], c2 = nr(); c2 !== o2; ) s2.push(c2), c2 = nr();
                  s2 !== o2 ? (Et = e5, e5 = r5 = S(n3)) : (St = e5, e5 = u);
                } else St = e5, e5 = u;
                else St = e5, e5 = u;
              } else St = e5, e5 = u;
              else St = e5, e5 = u;
              if (e5 === o2) {
                for (e5 = St, r5 = [], n3 = nr(); n3 !== o2; ) r5.push(n3), n3 = nr();
                if (r5 !== o2) if ((n3 = Vt()) !== o2) {
                  for (i2 = [], a2 = nr(); a2 !== o2; ) i2.push(a2), a2 = nr();
                  if (i2 !== o2) if (46 === t3.charCodeAt(St) ? (a2 = E, St++) : (a2 = o2, 0 === xt && It(_)), a2 !== o2) {
                    for (s2 = [], c2 = nr(); c2 !== o2; ) s2.push(c2), c2 = nr();
                    s2 !== o2 ? (Et = e5, e5 = r5 = S(n3)) : (St = e5, e5 = u);
                  } else St = e5, e5 = u;
                  else St = e5, e5 = u;
                } else St = e5, e5 = u;
                else St = e5, e5 = u;
              }
              return At[l3] = { nextPos: St, result: e5 }, e5;
            }
            function Ft() {
              var e5, t4, r5, n3 = 49 * St + 10, i2 = At[n3];
              if (i2) return St = i2.nextPos, i2.result;
              if (e5 = St, t4 = [], (r5 = cr()) !== o2) for (; r5 !== o2; ) t4.push(r5), r5 = cr();
              else t4 = u;
              return t4 !== o2 && (Et = e5, t4 = x(t4)), e5 = t4, At[n3] = { nextPos: St, result: e5 }, e5;
            }
            function Vt() {
              var e5, t4, r5 = 49 * St + 11, n3 = At[r5];
              return n3 ? (St = n3.nextPos, n3.result) : (e5 = St, (t4 = Kt()) !== o2 && (Et = e5, t4 = A(t4)), (e5 = t4) === o2 && (e5 = St, (t4 = Ht()) !== o2 && (Et = e5, t4 = A(t4)), e5 = t4), At[r5] = { nextPos: St, result: e5 }, e5);
            }
            function qt() {
              var e5, r5 = 49 * St + 12, n3 = At[r5];
              return n3 ? (St = n3.nextPos, n3.result) : (e5 = function() {
                var e6, r6 = 49 * St + 13, n4 = At[r6];
                if (n4) return St = n4.nextPos, n4.result;
                e6 = function() {
                  var e7, r7, n5, i2, a2, s2 = 49 * St + 14, c2 = At[s2];
                  if (c2) return St = c2.nextPos, c2.result;
                  e7 = St, t3.substr(St, 3) === P ? (r7 = P, St += 3) : (r7 = o2, 0 === xt && It(R));
                  if (r7 !== o2) if ((n5 = or()) === o2 && (n5 = j), n5 !== o2) {
                    for (i2 = [], a2 = Gt(); a2 !== o2; ) i2.push(a2), a2 = Gt();
                    i2 !== o2 ? (t3.substr(St, 3) === P ? (a2 = P, St += 3) : (a2 = o2, 0 === xt && It(R)), a2 !== o2 ? (Et = e7, e7 = r7 = I(i2)) : (St = e7, e7 = u)) : (St = e7, e7 = u);
                  } else St = e7, e7 = u;
                  else St = e7, e7 = u;
                  return At[s2] = { nextPos: St, result: e7 }, e7;
                }(), e6 === o2 && (e6 = Kt()) === o2 && (e6 = function() {
                  var e7, r7, n5, i2, a2, s2 = 49 * St + 16, c2 = At[s2];
                  if (c2) return St = c2.nextPos, c2.result;
                  e7 = St, t3.substr(St, 3) === B ? (r7 = B, St += 3) : (r7 = o2, 0 === xt && It(N));
                  if (r7 !== o2) if ((n5 = or()) === o2 && (n5 = j), n5 !== o2) {
                    for (i2 = [], a2 = Wt(); a2 !== o2; ) i2.push(a2), a2 = Wt();
                    i2 !== o2 ? (t3.substr(St, 3) === B ? (a2 = B, St += 3) : (a2 = o2, 0 === xt && It(N)), a2 !== o2 ? (Et = e7, e7 = r7 = I(i2)) : (St = e7, e7 = u)) : (St = e7, e7 = u);
                  } else St = e7, e7 = u;
                  else St = e7, e7 = u;
                  return At[s2] = { nextPos: St, result: e7 }, e7;
                }(), e6 === o2 && (e6 = Ht()));
                return At[r6] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = function() {
                var e6, r6, n4, i2, a2, s2 = 49 * St + 38, c2 = At[s2];
                if (c2) return St = c2.nextPos, c2.result;
                e6 = St, (r6 = rr()) !== o2 ? (84 === t3.charCodeAt(St) ? (n4 = xe, St++) : (n4 = o2, 0 === xt && It(Ae)), n4 !== o2 ? (i2 = function() {
                  var e7, r7, n5, i3, a3, s3, c3, l3, f2, p2, h2, d2 = 49 * St + 36, y2 = At[d2];
                  if (y2) return St = y2.nextPos, y2.result;
                  e7 = St, r7 = St, n5 = ur(), n5 !== o2 && (i3 = ur()) !== o2 ? (58 === t3.charCodeAt(St) ? (a3 = ke, St++) : (a3 = o2, 0 === xt && It(Te)), a3 !== o2 && (s3 = ur()) !== o2 && (c3 = ur()) !== o2 ? (58 === t3.charCodeAt(St) ? (l3 = ke, St++) : (l3 = o2, 0 === xt && It(Te)), l3 !== o2 && (f2 = ur()) !== o2 && (p2 = ur()) !== o2 ? ((h2 = tr()) === o2 && (h2 = j), h2 !== o2 ? r7 = n5 = [n5, i3, a3, s3, c3, l3, f2, p2, h2] : (St = r7, r7 = u)) : (St = r7, r7 = u)) : (St = r7, r7 = u)) : (St = r7, r7 = u);
                  r7 !== o2 && (Et = e7, r7 = Oe(r7));
                  return e7 = r7, At[d2] = { nextPos: St, result: e7 }, e7;
                }(), i2 !== o2 ? (90 === t3.charCodeAt(St) ? (a2 = Pe, St++) : (a2 = o2, 0 === xt && It(Re)), a2 !== o2 ? (Et = e6, e6 = r6 = je(r6, i2)) : (St = e6, e6 = u)) : (St = e6, e6 = u)) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                e6 === o2 && (e6 = St, (r6 = rr()) !== o2 ? (84 === t3.charCodeAt(St) ? (n4 = xe, St++) : (n4 = o2, 0 === xt && It(Ae)), n4 !== o2 ? (i2 = function() {
                  var e7, r7, n5, i3, a3, s3, c3, l3, f2, p2, h2, d2, y2, m2, v2, g2, b2, w2 = 49 * St + 37, S2 = At[w2];
                  if (S2) return St = S2.nextPos, S2.result;
                  e7 = St, r7 = St, n5 = ur(), n5 !== o2 && (i3 = ur()) !== o2 ? (58 === t3.charCodeAt(St) ? (a3 = ke, St++) : (a3 = o2, 0 === xt && It(Te)), a3 !== o2 && (s3 = ur()) !== o2 && (c3 = ur()) !== o2 ? (58 === t3.charCodeAt(St) ? (l3 = ke, St++) : (l3 = o2, 0 === xt && It(Te)), l3 !== o2 && (f2 = ur()) !== o2 && (p2 = ur()) !== o2 ? ((h2 = tr()) === o2 && (h2 = j), h2 !== o2 ? (45 === t3.charCodeAt(St) ? (d2 = Z, St++) : (d2 = o2, 0 === xt && It(ee)), d2 === o2 && (43 === t3.charCodeAt(St) ? (d2 = Q, St++) : (d2 = o2, 0 === xt && It(Y))), d2 !== o2 && (y2 = ur()) !== o2 && (m2 = ur()) !== o2 ? (58 === t3.charCodeAt(St) ? (v2 = ke, St++) : (v2 = o2, 0 === xt && It(Te)), v2 !== o2 && (g2 = ur()) !== o2 && (b2 = ur()) !== o2 ? r7 = n5 = [n5, i3, a3, s3, c3, l3, f2, p2, h2, d2, y2, m2, v2, g2, b2] : (St = r7, r7 = u)) : (St = r7, r7 = u)) : (St = r7, r7 = u)) : (St = r7, r7 = u)) : (St = r7, r7 = u)) : (St = r7, r7 = u);
                  r7 !== o2 && (Et = e7, r7 = Oe(r7));
                  return e7 = r7, At[w2] = { nextPos: St, result: e7 }, e7;
                }(), i2 !== o2 ? (Et = e6, e6 = r6 = Ie(r6, i2)) : (St = e6, e6 = u)) : (St = e6, e6 = u)) : (St = e6, e6 = u));
                return At[s2] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = function() {
                var e6, r6, n4, i2, a2 = 49 * St + 23, s2 = At[a2];
                if (s2) return St = s2.nextPos, s2.result;
                e6 = St, (r6 = $t()) === o2 && (r6 = Qt());
                r6 !== o2 ? (101 === t3.charCodeAt(St) ? (n4 = H, St++) : (n4 = o2, 0 === xt && It(z)), n4 === o2 && (69 === t3.charCodeAt(St) ? (n4 = X, St++) : (n4 = o2, 0 === xt && It(G))), n4 !== o2 && (i2 = Qt()) !== o2 ? (Et = e6, e6 = r6 = W(r6, i2)) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                e6 === o2 && (e6 = St, (r6 = $t()) !== o2 && (Et = e6, r6 = $(r6)), e6 = r6);
                return At[a2] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = function() {
                var e6, t4, r6 = 49 * St + 25, n4 = At[r6];
                if (n4) return St = n4.nextPos, n4.result;
                e6 = St, (t4 = Qt()) !== o2 && (Et = e6, t4 = re(t4));
                return e6 = t4, At[r6] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = function() {
                var e6, r6, n4 = 49 * St + 27, i2 = At[n4];
                if (i2) return St = i2.nextPos, i2.result;
                e6 = St, t3.substr(St, 4) === ne ? (r6 = ne, St += 4) : (r6 = o2, 0 === xt && It(oe));
                r6 !== o2 && (Et = e6, r6 = ie());
                e6 = r6, e6 === o2 && (e6 = St, t3.substr(St, 5) === ae ? (r6 = ae, St += 5) : (r6 = o2, 0 === xt && It(se)), r6 !== o2 && (Et = e6, r6 = ue()), e6 = r6);
                return At[n4] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = function() {
                var e6, r6, n4, i2, a2, s2 = 49 * St + 28, c2 = At[s2];
                if (c2) return St = c2.nextPos, c2.result;
                e6 = St, 91 === t3.charCodeAt(St) ? (r6 = h, St++) : (r6 = o2, 0 === xt && It(d));
                if (r6 !== o2) {
                  for (n4 = [], i2 = Zt(); i2 !== o2; ) n4.push(i2), i2 = Zt();
                  n4 !== o2 ? (93 === t3.charCodeAt(St) ? (i2 = y, St++) : (i2 = o2, 0 === xt && It(m)), i2 !== o2 ? (Et = e6, e6 = r6 = ce()) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                } else St = e6, e6 = u;
                if (e6 === o2 && (e6 = St, 91 === t3.charCodeAt(St) ? (r6 = h, St++) : (r6 = o2, 0 === xt && It(d)), r6 !== o2 ? ((n4 = Yt()) === o2 && (n4 = j), n4 !== o2 ? (93 === t3.charCodeAt(St) ? (i2 = y, St++) : (i2 = o2, 0 === xt && It(m)), i2 !== o2 ? (Et = e6, e6 = r6 = le(n4)) : (St = e6, e6 = u)) : (St = e6, e6 = u)) : (St = e6, e6 = u), e6 === o2)) {
                  if (e6 = St, 91 === t3.charCodeAt(St) ? (r6 = h, St++) : (r6 = o2, 0 === xt && It(d)), r6 !== o2) {
                    if (n4 = [], (i2 = Jt()) !== o2) for (; i2 !== o2; ) n4.push(i2), i2 = Jt();
                    else n4 = u;
                    n4 !== o2 ? (93 === t3.charCodeAt(St) ? (i2 = y, St++) : (i2 = o2, 0 === xt && It(m)), i2 !== o2 ? (Et = e6, e6 = r6 = fe(n4)) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                  } else St = e6, e6 = u;
                  if (e6 === o2) if (e6 = St, 91 === t3.charCodeAt(St) ? (r6 = h, St++) : (r6 = o2, 0 === xt && It(d)), r6 !== o2) {
                    if (n4 = [], (i2 = Jt()) !== o2) for (; i2 !== o2; ) n4.push(i2), i2 = Jt();
                    else n4 = u;
                    n4 !== o2 && (i2 = Yt()) !== o2 ? (93 === t3.charCodeAt(St) ? (a2 = y, St++) : (a2 = o2, 0 === xt && It(m)), a2 !== o2 ? (Et = e6, e6 = r6 = pe(n4, i2)) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                  } else St = e6, e6 = u;
                }
                return At[s2] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = function() {
                var e6, r6, n4, i2, a2, s2, c2 = 49 * St + 32, l3 = At[c2];
                if (l3) return St = l3.nextPos, l3.result;
                e6 = St, 123 === t3.charCodeAt(St) ? (r6 = me, St++) : (r6 = o2, 0 === xt && It(ve));
                if (r6 !== o2) {
                  for (n4 = [], i2 = nr(); i2 !== o2; ) n4.push(i2), i2 = nr();
                  if (n4 !== o2) {
                    for (i2 = [], a2 = er(); a2 !== o2; ) i2.push(a2), a2 = er();
                    if (i2 !== o2) {
                      for (a2 = [], s2 = nr(); s2 !== o2; ) a2.push(s2), s2 = nr();
                      a2 !== o2 ? (125 === t3.charCodeAt(St) ? (s2 = ge, St++) : (s2 = o2, 0 === xt && It(be)), s2 !== o2 ? (Et = e6, e6 = r6 = we(i2)) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                    } else St = e6, e6 = u;
                  } else St = e6, e6 = u;
                } else St = e6, e6 = u;
                return At[c2] = { nextPos: St, result: e6 }, e6;
              }())))))), At[r5] = { nextPos: St, result: e5 }, e5);
            }
            function Kt() {
              var e5, r5, n3, i2, a2 = 49 * St + 15, s2 = At[a2];
              if (s2) return St = s2.nextPos, s2.result;
              if (e5 = St, 34 === t3.charCodeAt(St) ? (r5 = C, St++) : (r5 = o2, 0 === xt && It(L)), r5 !== o2) {
                for (n3 = [], i2 = zt(); i2 !== o2; ) n3.push(i2), i2 = zt();
                n3 !== o2 ? (34 === t3.charCodeAt(St) ? (i2 = C, St++) : (i2 = o2, 0 === xt && It(L)), i2 !== o2 ? (Et = e5, e5 = r5 = I(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              return At[a2] = { nextPos: St, result: e5 }, e5;
            }
            function Ht() {
              var e5, r5, n3, i2, a2 = 49 * St + 17, s2 = At[a2];
              if (s2) return St = s2.nextPos, s2.result;
              if (e5 = St, 39 === t3.charCodeAt(St) ? (r5 = U, St++) : (r5 = o2, 0 === xt && It(M)), r5 !== o2) {
                for (n3 = [], i2 = Xt(); i2 !== o2; ) n3.push(i2), i2 = Xt();
                n3 !== o2 ? (39 === t3.charCodeAt(St) ? (i2 = U, St++) : (i2 = o2, 0 === xt && It(M)), i2 !== o2 ? (Et = e5, e5 = r5 = I(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              return At[a2] = { nextPos: St, result: e5 }, e5;
            }
            function zt() {
              var e5, r5, n3, i2 = 49 * St + 18, a2 = At[i2];
              return a2 ? (St = a2.nextPos, a2.result) : ((e5 = fr()) === o2 && (e5 = St, r5 = St, xt++, 34 === t3.charCodeAt(St) ? (n3 = C, St++) : (n3 = o2, 0 === xt && It(L)), xt--, n3 === o2 ? r5 = f : (St = r5, r5 = u), r5 !== o2 ? (t3.length > St ? (n3 = t3.charAt(St), St++) : (n3 = o2, 0 === xt && It(p)), n3 !== o2 ? (Et = e5, e5 = r5 = D(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u)), At[i2] = { nextPos: St, result: e5 }, e5);
            }
            function Xt() {
              var e5, r5, n3, i2 = 49 * St + 19, a2 = At[i2];
              return a2 ? (St = a2.nextPos, a2.result) : (e5 = St, r5 = St, xt++, 39 === t3.charCodeAt(St) ? (n3 = U, St++) : (n3 = o2, 0 === xt && It(M)), xt--, n3 === o2 ? r5 = f : (St = r5, r5 = u), r5 !== o2 ? (t3.length > St ? (n3 = t3.charAt(St), St++) : (n3 = o2, 0 === xt && It(p)), n3 !== o2 ? (Et = e5, e5 = r5 = D(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u), At[i2] = { nextPos: St, result: e5 }, e5);
            }
            function Gt() {
              var e5, r5, n3, i2 = 49 * St + 20, a2 = At[i2];
              return a2 ? (St = a2.nextPos, a2.result) : ((e5 = fr()) === o2 && (e5 = function() {
                var e6, r6, n4, i3, a3 = 49 * St + 21, s2 = At[a3];
                if (s2) return St = s2.nextPos, s2.result;
                e6 = St, 92 === t3.charCodeAt(St) ? (r6 = V, St++) : (r6 = o2, 0 === xt && It(q));
                if (r6 !== o2) if (or() !== o2) {
                  for (n4 = [], i3 = ir(); i3 !== o2; ) n4.push(i3), i3 = ir();
                  n4 !== o2 ? (Et = e6, e6 = r6 = K()) : (St = e6, e6 = u);
                } else St = e6, e6 = u;
                else St = e6, e6 = u;
                return At[a3] = { nextPos: St, result: e6 }, e6;
              }(), e5 === o2 && (e5 = St, r5 = St, xt++, t3.substr(St, 3) === P ? (n3 = P, St += 3) : (n3 = o2, 0 === xt && It(R)), xt--, n3 === o2 ? r5 = f : (St = r5, r5 = u), r5 !== o2 ? (t3.length > St ? (n3 = t3.charAt(St), St++) : (n3 = o2, 0 === xt && It(p)), n3 !== o2 ? (Et = e5, e5 = r5 = F(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u))), At[i2] = { nextPos: St, result: e5 }, e5);
            }
            function Wt() {
              var e5, r5, n3, i2 = 49 * St + 22, a2 = At[i2];
              return a2 ? (St = a2.nextPos, a2.result) : (e5 = St, r5 = St, xt++, t3.substr(St, 3) === B ? (n3 = B, St += 3) : (n3 = o2, 0 === xt && It(N)), xt--, n3 === o2 ? r5 = f : (St = r5, r5 = u), r5 !== o2 ? (t3.length > St ? (n3 = t3.charAt(St), St++) : (n3 = o2, 0 === xt && It(p)), n3 !== o2 ? (Et = e5, e5 = r5 = D(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u), At[i2] = { nextPos: St, result: e5 }, e5);
            }
            function $t() {
              var e5, r5, n3, i2, a2, s2, c2 = 49 * St + 24, l3 = At[c2];
              return l3 ? (St = l3.nextPos, l3.result) : (e5 = St, 43 === t3.charCodeAt(St) ? (r5 = Q, St++) : (r5 = o2, 0 === xt && It(Y)), r5 === o2 && (r5 = j), r5 !== o2 ? (n3 = St, (i2 = lr()) !== o2 ? (46 === t3.charCodeAt(St) ? (a2 = E, St++) : (a2 = o2, 0 === xt && It(_)), a2 !== o2 && (s2 = lr()) !== o2 ? n3 = i2 = [i2, a2, s2] : (St = n3, n3 = u)) : (St = n3, n3 = u), n3 !== o2 ? (Et = e5, e5 = r5 = J(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u), e5 === o2 && (e5 = St, 45 === t3.charCodeAt(St) ? (r5 = Z, St++) : (r5 = o2, 0 === xt && It(ee)), r5 !== o2 ? (n3 = St, (i2 = lr()) !== o2 ? (46 === t3.charCodeAt(St) ? (a2 = E, St++) : (a2 = o2, 0 === xt && It(_)), a2 !== o2 && (s2 = lr()) !== o2 ? n3 = i2 = [i2, a2, s2] : (St = n3, n3 = u)) : (St = n3, n3 = u), n3 !== o2 ? (Et = e5, e5 = r5 = te(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u)), At[c2] = { nextPos: St, result: e5 }, e5);
            }
            function Qt() {
              var e5, r5, n3, i2, a2, s2 = 49 * St + 26, c2 = At[s2];
              if (c2) return St = c2.nextPos, c2.result;
              if (e5 = St, 43 === t3.charCodeAt(St) ? (r5 = Q, St++) : (r5 = o2, 0 === xt && It(Y)), r5 === o2 && (r5 = j), r5 !== o2) {
                if (n3 = [], (i2 = ur()) !== o2) for (; i2 !== o2; ) n3.push(i2), i2 = ur();
                else n3 = u;
                n3 !== o2 ? (i2 = St, xt++, 46 === t3.charCodeAt(St) ? (a2 = E, St++) : (a2 = o2, 0 === xt && It(_)), xt--, a2 === o2 ? i2 = f : (St = i2, i2 = u), i2 !== o2 ? (Et = e5, e5 = r5 = J(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              if (e5 === o2) if (e5 = St, 45 === t3.charCodeAt(St) ? (r5 = Z, St++) : (r5 = o2, 0 === xt && It(ee)), r5 !== o2) {
                if (n3 = [], (i2 = ur()) !== o2) for (; i2 !== o2; ) n3.push(i2), i2 = ur();
                else n3 = u;
                n3 !== o2 ? (i2 = St, xt++, 46 === t3.charCodeAt(St) ? (a2 = E, St++) : (a2 = o2, 0 === xt && It(_)), xt--, a2 === o2 ? i2 = f : (St = i2, i2 = u), i2 !== o2 ? (Et = e5, e5 = r5 = te(n3)) : (St = e5, e5 = u)) : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              return At[s2] = { nextPos: St, result: e5 }, e5;
            }
            function Yt() {
              var e5, t4, r5, n3, i2, a2 = 49 * St + 29, s2 = At[a2];
              if (s2) return St = s2.nextPos, s2.result;
              for (e5 = St, t4 = [], r5 = Zt(); r5 !== o2; ) t4.push(r5), r5 = Zt();
              if (t4 !== o2) if ((r5 = qt()) !== o2) {
                for (n3 = [], i2 = Zt(); i2 !== o2; ) n3.push(i2), i2 = Zt();
                n3 !== o2 ? (Et = e5, e5 = t4 = he(r5)) : (St = e5, e5 = u);
              } else St = e5, e5 = u;
              else St = e5, e5 = u;
              return At[a2] = { nextPos: St, result: e5 }, e5;
            }
            function Jt() {
              var e5, r5, n3, i2, a2, s2, c2, l3 = 49 * St + 30, f2 = At[l3];
              if (f2) return St = f2.nextPos, f2.result;
              for (e5 = St, r5 = [], n3 = Zt(); n3 !== o2; ) r5.push(n3), n3 = Zt();
              if (r5 !== o2) if ((n3 = qt()) !== o2) {
                for (i2 = [], a2 = Zt(); a2 !== o2; ) i2.push(a2), a2 = Zt();
                if (i2 !== o2) if (44 === t3.charCodeAt(St) ? (a2 = de, St++) : (a2 = o2, 0 === xt && It(ye)), a2 !== o2) {
                  for (s2 = [], c2 = Zt(); c2 !== o2; ) s2.push(c2), c2 = Zt();
                  s2 !== o2 ? (Et = e5, e5 = r5 = he(n3)) : (St = e5, e5 = u);
                } else St = e5, e5 = u;
                else St = e5, e5 = u;
              } else St = e5, e5 = u;
              else St = e5, e5 = u;
              return At[l3] = { nextPos: St, result: e5 }, e5;
            }
            function Zt() {
              var e5, t4 = 49 * St + 31, r5 = At[t4];
              return r5 ? (St = r5.nextPos, r5.result) : ((e5 = nr()) === o2 && (e5 = or()) === o2 && (e5 = Nt()), At[t4] = { nextPos: St, result: e5 }, e5);
            }
            function er() {
              var e5, r5, n3, i2, a2, s2, c2, l3, f2, p2, h2, d2 = 49 * St + 33, y2 = At[d2];
              if (y2) return St = y2.nextPos, y2.result;
              for (e5 = St, r5 = [], n3 = nr(); n3 !== o2; ) r5.push(n3), n3 = nr();
              if (r5 !== o2) if ((n3 = Ft()) !== o2) {
                for (i2 = [], a2 = nr(); a2 !== o2; ) i2.push(a2), a2 = nr();
                if (i2 !== o2) if (61 === t3.charCodeAt(St) ? (a2 = k, St++) : (a2 = o2, 0 === xt && It(T)), a2 !== o2) {
                  for (s2 = [], c2 = nr(); c2 !== o2; ) s2.push(c2), c2 = nr();
                  if (s2 !== o2) if ((c2 = qt()) !== o2) {
                    for (l3 = [], f2 = nr(); f2 !== o2; ) l3.push(f2), f2 = nr();
                    if (l3 !== o2) if (44 === t3.charCodeAt(St) ? (f2 = de, St++) : (f2 = o2, 0 === xt && It(ye)), f2 !== o2) {
                      for (p2 = [], h2 = nr(); h2 !== o2; ) p2.push(h2), h2 = nr();
                      p2 !== o2 ? (Et = e5, e5 = r5 = Se(n3, c2)) : (St = e5, e5 = u);
                    } else St = e5, e5 = u;
                    else St = e5, e5 = u;
                  } else St = e5, e5 = u;
                  else St = e5, e5 = u;
                } else St = e5, e5 = u;
                else St = e5, e5 = u;
              } else St = e5, e5 = u;
              else St = e5, e5 = u;
              if (e5 === o2) {
                for (e5 = St, r5 = [], n3 = nr(); n3 !== o2; ) r5.push(n3), n3 = nr();
                if (r5 !== o2) if ((n3 = Ft()) !== o2) {
                  for (i2 = [], a2 = nr(); a2 !== o2; ) i2.push(a2), a2 = nr();
                  if (i2 !== o2) if (61 === t3.charCodeAt(St) ? (a2 = k, St++) : (a2 = o2, 0 === xt && It(T)), a2 !== o2) {
                    for (s2 = [], c2 = nr(); c2 !== o2; ) s2.push(c2), c2 = nr();
                    s2 !== o2 && (c2 = qt()) !== o2 ? (Et = e5, e5 = r5 = Se(n3, c2)) : (St = e5, e5 = u);
                  } else St = e5, e5 = u;
                  else St = e5, e5 = u;
                } else St = e5, e5 = u;
                else St = e5, e5 = u;
              }
              return At[d2] = { nextPos: St, result: e5 }, e5;
            }
            function tr() {
              var e5, r5, n3, i2 = 49 * St + 34, a2 = At[i2];
              return a2 ? (St = a2.nextPos, a2.result) : (e5 = St, 46 === t3.charCodeAt(St) ? (r5 = E, St++) : (r5 = o2, 0 === xt && It(_)), r5 !== o2 && (n3 = lr()) !== o2 ? (Et = e5, e5 = r5 = Ee(n3)) : (St = e5, e5 = u), At[i2] = { nextPos: St, result: e5 }, e5);
            }
            function rr() {
              var e5, r5, n3, i2, a2, s2, c2, l3, f2, p2, h2, d2, y2 = 49 * St + 35, m2 = At[y2];
              return m2 ? (St = m2.nextPos, m2.result) : (e5 = St, r5 = St, (n3 = ur()) !== o2 && (i2 = ur()) !== o2 && (a2 = ur()) !== o2 && (s2 = ur()) !== o2 ? (45 === t3.charCodeAt(St) ? (c2 = Z, St++) : (c2 = o2, 0 === xt && It(ee)), c2 !== o2 && (l3 = ur()) !== o2 && (f2 = ur()) !== o2 ? (45 === t3.charCodeAt(St) ? (p2 = Z, St++) : (p2 = o2, 0 === xt && It(ee)), p2 !== o2 && (h2 = ur()) !== o2 && (d2 = ur()) !== o2 ? r5 = n3 = [n3, i2, a2, s2, c2, l3, f2, p2, h2, d2] : (St = r5, r5 = u)) : (St = r5, r5 = u)) : (St = r5, r5 = u), r5 !== o2 && (Et = e5, r5 = _e(r5)), e5 = r5, At[y2] = { nextPos: St, result: e5 }, e5);
            }
            function nr() {
              var e5, r5 = 49 * St + 39, n3 = At[r5];
              return n3 ? (St = n3.nextPos, n3.result) : (Ce.test(t3.charAt(St)) ? (e5 = t3.charAt(St), St++) : (e5 = o2, 0 === xt && It(Le)), At[r5] = { nextPos: St, result: e5 }, e5);
            }
            function or() {
              var e5, r5, n3, i2 = 49 * St + 40, a2 = At[i2];
              return a2 ? (St = a2.nextPos, a2.result) : (10 === t3.charCodeAt(St) ? (e5 = Be, St++) : (e5 = o2, 0 === xt && It(Ne)), e5 === o2 && (e5 = St, 13 === t3.charCodeAt(St) ? (r5 = Ue, St++) : (r5 = o2, 0 === xt && It(Me)), r5 !== o2 ? (10 === t3.charCodeAt(St) ? (n3 = Be, St++) : (n3 = o2, 0 === xt && It(Ne)), n3 !== o2 ? e5 = r5 = [r5, n3] : (St = e5, e5 = u)) : (St = e5, e5 = u)), At[i2] = { nextPos: St, result: e5 }, e5);
            }
            function ir() {
              var e5, t4 = 49 * St + 41, r5 = At[t4];
              return r5 ? (St = r5.nextPos, r5.result) : ((e5 = or()) === o2 && (e5 = nr()), At[t4] = { nextPos: St, result: e5 }, e5);
            }
            function ar() {
              var e5, r5, n3 = 49 * St + 42, i2 = At[n3];
              return i2 ? (St = i2.nextPos, i2.result) : (e5 = St, xt++, t3.length > St ? (r5 = t3.charAt(St), St++) : (r5 = o2, 0 === xt && It(p)), xt--, r5 === o2 ? e5 = f : (St = e5, e5 = u), At[n3] = { nextPos: St, result: e5 }, e5);
            }
            function sr() {
              var e5, r5 = 49 * St + 43, n3 = At[r5];
              return n3 ? (St = n3.nextPos, n3.result) : (De.test(t3.charAt(St)) ? (e5 = t3.charAt(St), St++) : (e5 = o2, 0 === xt && It(Fe)), At[r5] = { nextPos: St, result: e5 }, e5);
            }
            function ur() {
              var e5, r5, n3 = 49 * St + 44, i2 = At[n3];
              return i2 ? (St = i2.nextPos, i2.result) : (Ve.test(t3.charAt(St)) ? (e5 = t3.charAt(St), St++) : (e5 = o2, 0 === xt && It(qe)), e5 === o2 && (e5 = St, 95 === t3.charCodeAt(St) ? (r5 = Ke, St++) : (r5 = o2, 0 === xt && It(He)), r5 !== o2 && (Et = e5, r5 = ze()), e5 = r5), At[n3] = { nextPos: St, result: e5 }, e5);
            }
            function cr() {
              var e5, r5 = 49 * St + 45, n3 = At[r5];
              return n3 ? (St = n3.nextPos, n3.result) : (Xe.test(t3.charAt(St)) ? (e5 = t3.charAt(St), St++) : (e5 = o2, 0 === xt && It(Ge)), At[r5] = { nextPos: St, result: e5 }, e5);
            }
            function lr() {
              var e5, t4, r5, n3 = 49 * St + 46, i2 = At[n3];
              if (i2) return St = i2.nextPos, i2.result;
              if (e5 = St, t4 = [], (r5 = ur()) !== o2) for (; r5 !== o2; ) t4.push(r5), r5 = ur();
              else t4 = u;
              return t4 !== o2 && (Et = e5, t4 = We(t4)), e5 = t4, At[n3] = { nextPos: St, result: e5 }, e5;
            }
            function fr() {
              var e5, r5, n3 = 49 * St + 47, i2 = At[n3];
              return i2 ? (St = i2.nextPos, i2.result) : (e5 = St, t3.substr(St, 2) === $e ? (r5 = $e, St += 2) : (r5 = o2, 0 === xt && It(Qe)), r5 !== o2 && (Et = e5, r5 = Ye()), (e5 = r5) === o2 && (e5 = St, t3.substr(St, 2) === Je ? (r5 = Je, St += 2) : (r5 = o2, 0 === xt && It(Ze)), r5 !== o2 && (Et = e5, r5 = et()), (e5 = r5) === o2 && (e5 = St, t3.substr(St, 2) === tt ? (r5 = tt, St += 2) : (r5 = o2, 0 === xt && It(rt)), r5 !== o2 && (Et = e5, r5 = nt()), (e5 = r5) === o2 && (e5 = St, t3.substr(St, 2) === ot ? (r5 = ot, St += 2) : (r5 = o2, 0 === xt && It(it)), r5 !== o2 && (Et = e5, r5 = at()), (e5 = r5) === o2 && (e5 = St, t3.substr(St, 2) === st ? (r5 = st, St += 2) : (r5 = o2, 0 === xt && It(ut)), r5 !== o2 && (Et = e5, r5 = ct()), (e5 = r5) === o2 && (e5 = St, t3.substr(St, 2) === lt ? (r5 = lt, St += 2) : (r5 = o2, 0 === xt && It(ft)), r5 !== o2 && (Et = e5, r5 = pt()), (e5 = r5) === o2 && (e5 = St, t3.substr(St, 2) === ht ? (r5 = ht, St += 2) : (r5 = o2, 0 === xt && It(dt)), r5 !== o2 && (Et = e5, r5 = yt()), (e5 = r5) === o2 && (e5 = function() {
                var e6, r6, n4, i3, a2, s2, c2, l3, f2, p2, h2, d2 = 49 * St + 48, y2 = At[d2];
                if (y2) return St = y2.nextPos, y2.result;
                e6 = St, t3.substr(St, 2) === mt ? (r6 = mt, St += 2) : (r6 = o2, 0 === xt && It(vt));
                r6 !== o2 ? (n4 = St, (i3 = sr()) !== o2 && (a2 = sr()) !== o2 && (s2 = sr()) !== o2 && (c2 = sr()) !== o2 && (l3 = sr()) !== o2 && (f2 = sr()) !== o2 && (p2 = sr()) !== o2 && (h2 = sr()) !== o2 ? n4 = i3 = [i3, a2, s2, c2, l3, f2, p2, h2] : (St = n4, n4 = u), n4 !== o2 ? (Et = e6, e6 = r6 = gt(n4)) : (St = e6, e6 = u)) : (St = e6, e6 = u);
                e6 === o2 && (e6 = St, t3.substr(St, 2) === bt ? (r6 = bt, St += 2) : (r6 = o2, 0 === xt && It(wt)), r6 !== o2 ? (n4 = St, (i3 = sr()) !== o2 && (a2 = sr()) !== o2 && (s2 = sr()) !== o2 && (c2 = sr()) !== o2 ? n4 = i3 = [i3, a2, s2, c2] : (St = n4, n4 = u), n4 !== o2 ? (Et = e6, e6 = r6 = gt(n4)) : (St = e6, e6 = u)) : (St = e6, e6 = u));
                return At[d2] = { nextPos: St, result: e6 }, e6;
              }()))))))), At[n3] = { nextPos: St, result: e5 }, e5);
            }
            var pr = [];
            function hr(e5) {
              pr.push(e5);
            }
            function dr(e5, t4, r5, n3, o3) {
              var i2 = { type: e5, value: t4, line: r5(), column: n3() };
              return o3 && (i2.key = o3), i2;
            }
            if ((r4 = a()) !== o2 && St === t3.length) return r4;
            throw r4 !== o2 && St < t3.length && It({ type: "end", description: "end of input" }), Ct(null, Ot, Tt);
          } };
        }();
      }, 1430: function(e3, t3, r4) {
        var n2, o2;
        !function(i, a) {
          "use strict";
          e3.exports ? e3.exports = a() : void 0 === (o2 = "function" == typeof (n2 = a) ? n2.call(t3, r4, t3, e3) : n2) || (e3.exports = o2);
        }(0, function(e4) {
          "use strict";
          var t4 = e4 && e4.IPv6;
          return { best: function(e5) {
            var t5, r5, n3 = e5.toLowerCase().split(":"), o3 = n3.length, i = 8;
            for ("" === n3[0] && "" === n3[1] && "" === n3[2] ? (n3.shift(), n3.shift()) : "" === n3[0] && "" === n3[1] ? n3.shift() : "" === n3[o3 - 1] && "" === n3[o3 - 2] && n3.pop(), -1 !== n3[(o3 = n3.length) - 1].indexOf(".") && (i = 7), t5 = 0; t5 < o3 && "" !== n3[t5]; t5++) ;
            if (t5 < i) for (n3.splice(t5, 1, "0000"); n3.length < i; ) n3.splice(t5, 0, "0000");
            for (var a = 0; a < i; a++) {
              r5 = n3[a].split("");
              for (var s = 0; s < 3 && ("0" === r5[0] && r5.length > 1); s++) r5.splice(0, 1);
              n3[a] = r5.join("");
            }
            var u = -1, c = 0, l2 = 0, f = -1, p = false;
            for (a = 0; a < i; a++) p ? "0" === n3[a] ? l2 += 1 : (p = false, l2 > c && (u = f, c = l2)) : "0" === n3[a] && (p = true, f = a, l2 = 1);
            l2 > c && (u = f, c = l2), c > 1 && n3.splice(u, c, ""), o3 = n3.length;
            var h = "";
            for ("" === n3[0] && (h = ":"), a = 0; a < o3 && (h += n3[a], a !== o3 - 1); a++) h += ":";
            return "" === n3[o3 - 1] && (h += ":"), h;
          }, noConflict: function() {
            return e4.IPv6 === this && (e4.IPv6 = t4), this;
          } };
        });
      }, 4704: function(e3, t3, r4) {
        var n2, o2;
        !function(i, a) {
          "use strict";
          e3.exports ? e3.exports = a() : void 0 === (o2 = "function" == typeof (n2 = a) ? n2.call(t3, r4, t3, e3) : n2) || (e3.exports = o2);
        }(0, function(e4) {
          "use strict";
          var t4 = e4 && e4.SecondLevelDomains, r5 = { list: { ac: " com gov mil net org ", ae: " ac co gov mil name net org pro sch ", af: " com edu gov net org ", al: " com edu gov mil net org ", ao: " co ed gv it og pb ", ar: " com edu gob gov int mil net org tur ", at: " ac co gv or ", au: " asn com csiro edu gov id net org ", ba: " co com edu gov mil net org rs unbi unmo unsa untz unze ", bb: " biz co com edu gov info net org store tv ", bh: " biz cc com edu gov info net org ", bn: " com edu gov net org ", bo: " com edu gob gov int mil net org tv ", br: " adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ", bs: " com edu gov net org ", bz: " du et om ov rg ", ca: " ab bc mb nb nf nl ns nt nu on pe qc sk yk ", ck: " biz co edu gen gov info net org ", cn: " ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ", co: " com edu gov mil net nom org ", cr: " ac c co ed fi go or sa ", cy: " ac biz com ekloges gov ltd name net org parliament press pro tm ", do: " art com edu gob gov mil net org sld web ", dz: " art asso com edu gov net org pol ", ec: " com edu fin gov info med mil net org pro ", eg: " com edu eun gov mil name net org sci ", er: " com edu gov ind mil net org rochest w ", es: " com edu gob nom org ", et: " biz com edu gov info name net org ", fj: " ac biz com info mil name net org pro ", fk: " ac co gov net nom org ", fr: " asso com f gouv nom prd presse tm ", gg: " co net org ", gh: " com edu gov mil org ", gn: " ac com gov net org ", gr: " com edu gov mil net org ", gt: " com edu gob ind mil net org ", gu: " com edu gov net org ", hk: " com edu gov idv net org ", hu: " 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ", id: " ac co go mil net or sch web ", il: " ac co gov idf k12 muni net org ", in: " ac co edu ernet firm gen gov i ind mil net nic org res ", iq: " com edu gov i mil net org ", ir: " ac co dnssec gov i id net org sch ", it: " edu gov ", je: " co net org ", jo: " com edu gov mil name net org sch ", jp: " ac ad co ed go gr lg ne or ", ke: " ac co go info me mobi ne or sc ", kh: " com edu gov mil net org per ", ki: " biz com de edu gov info mob net org tel ", km: " asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ", kn: " edu gov net org ", kr: " ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ", kw: " com edu gov net org ", ky: " com edu gov net org ", kz: " com edu gov mil net org ", lb: " com edu gov net org ", lk: " assn com edu gov grp hotel int ltd net ngo org sch soc web ", lr: " com edu gov net org ", lv: " asn com conf edu gov id mil net org ", ly: " com edu gov id med net org plc sch ", ma: " ac co gov m net org press ", mc: " asso tm ", me: " ac co edu gov its net org priv ", mg: " com edu gov mil nom org prd tm ", mk: " com edu gov inf name net org pro ", ml: " com edu gov net org presse ", mn: " edu gov org ", mo: " com edu gov net org ", mt: " com edu gov net org ", mv: " aero biz com coop edu gov info int mil museum name net org pro ", mw: " ac co com coop edu gov int museum net org ", mx: " com edu gob net org ", my: " com edu gov mil name net org sch ", nf: " arts com firm info net other per rec store web ", ng: " biz com edu gov mil mobi name net org sch ", ni: " ac co com edu gob mil net nom org ", np: " com edu gov mil net org ", nr: " biz com edu gov info net org ", om: " ac biz co com edu gov med mil museum net org pro sch ", pe: " com edu gob mil net nom org sld ", ph: " com edu gov i mil net ngo org ", pk: " biz com edu fam gob gok gon gop gos gov net org web ", pl: " art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ", pr: " ac biz com edu est gov info isla name net org pro prof ", ps: " com edu gov net org plo sec ", pw: " belau co ed go ne or ", ro: " arts com firm info nom nt org rec store tm www ", rs: " ac co edu gov in org ", sb: " com edu gov net org ", sc: " com edu gov net org ", sh: " co com edu gov net nom org ", sl: " com edu gov net org ", st: " co com consulado edu embaixada gov mil net org principe saotome store ", sv: " com edu gob org red ", sz: " ac co org ", tr: " av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ", tt: " aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ", tw: " club com ebiz edu game gov idv mil net org ", mu: " ac co com gov net or org ", mz: " ac co edu gov org ", na: " co com ", nz: " ac co cri geek gen govt health iwi maori mil net org parliament school ", pa: " abo ac com edu gob ing med net nom org sld ", pt: " com edu gov int net nome org publ ", py: " com edu gov mil net org ", qa: " com edu gov mil net org ", re: " asso com nom ", ru: " ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ", rw: " ac co com edu gouv gov int mil net ", sa: " com edu gov med net org pub sch ", sd: " com edu gov info med net org tv ", se: " a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ", sg: " com edu gov idn net org per ", sn: " art com edu gouv org perso univ ", sy: " com edu gov mil net news org ", th: " ac co go in mi net or ", tj: " ac biz co com edu go gov info int mil name net nic org test web ", tn: " agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ", tz: " ac co go ne or ", ua: " biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ", ug: " ac co go ne or org sc ", uk: " ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ", us: " dni fed isa kids nsn ", uy: " com edu gub mil net org ", ve: " co com edu gob info mil net org web ", vi: " co com k12 net org ", vn: " ac biz com edu gov health info int name net org pro ", ye: " co com gov ltd me net org plc ", yu: " ac co edu gov org ", za: " ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ", zm: " ac co com edu gov net org sch ", com: "ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ", net: "gb jp se uk ", org: "ae", de: "com " }, has: function(e5) {
            var t5 = e5.lastIndexOf(".");
            if (t5 <= 0 || t5 >= e5.length - 1) return false;
            var n3 = e5.lastIndexOf(".", t5 - 1);
            if (n3 <= 0 || n3 >= t5 - 1) return false;
            var o3 = r5.list[e5.slice(t5 + 1)];
            return !!o3 && o3.indexOf(" " + e5.slice(n3 + 1, t5) + " ") >= 0;
          }, is: function(e5) {
            var t5 = e5.lastIndexOf(".");
            if (t5 <= 0 || t5 >= e5.length - 1) return false;
            if (e5.lastIndexOf(".", t5 - 1) >= 0) return false;
            var n3 = r5.list[e5.slice(t5 + 1)];
            return !!n3 && n3.indexOf(" " + e5.slice(0, t5) + " ") >= 0;
          }, get: function(e5) {
            var t5 = e5.lastIndexOf(".");
            if (t5 <= 0 || t5 >= e5.length - 1) return null;
            var n3 = e5.lastIndexOf(".", t5 - 1);
            if (n3 <= 0 || n3 >= t5 - 1) return null;
            var o3 = r5.list[e5.slice(t5 + 1)];
            return o3 ? o3.indexOf(" " + e5.slice(n3 + 1, t5) + " ") < 0 ? null : e5.slice(n3 + 1) : null;
          }, noConflict: function() {
            return e4.SecondLevelDomains === this && (e4.SecondLevelDomains = t4), this;
          } };
          return r5;
        });
      }, 4193: function(e3, t3, r4) {
        var n2, o2, i;
        !function(a, s) {
          "use strict";
          e3.exports ? e3.exports = s(r4(9340), r4(1430), r4(4704)) : (o2 = [r4(9340), r4(1430), r4(4704)], void 0 === (i = "function" == typeof (n2 = s) ? n2.apply(t3, o2) : n2) || (e3.exports = i));
        }(0, function(e4, t4, r5, n3) {
          "use strict";
          var o3 = n3 && n3.URI;
          function i2(e5, t5) {
            var r6 = arguments.length >= 1;
            if (!(this instanceof i2)) return r6 ? arguments.length >= 2 ? new i2(e5, t5) : new i2(e5) : new i2();
            if (void 0 === e5) {
              if (r6) throw new TypeError("undefined is not a valid argument for URI");
              e5 = "undefined" != typeof location ? location.href + "" : "";
            }
            if (null === e5 && r6) throw new TypeError("null is not a valid argument for URI");
            return this.href(e5), void 0 !== t5 ? this.absoluteTo(t5) : this;
          }
          i2.version = "1.19.11";
          var a = i2.prototype, s = Object.prototype.hasOwnProperty;
          function u(e5) {
            return e5.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
          }
          function c(e5) {
            return void 0 === e5 ? "Undefined" : String(Object.prototype.toString.call(e5)).slice(8, -1);
          }
          function l2(e5) {
            return "Array" === c(e5);
          }
          function f(e5, t5) {
            var r6, n4, o4 = {};
            if ("RegExp" === c(t5)) o4 = null;
            else if (l2(t5)) for (r6 = 0, n4 = t5.length; r6 < n4; r6++) o4[t5[r6]] = true;
            else o4[t5] = true;
            for (r6 = 0, n4 = e5.length; r6 < n4; r6++) {
              (o4 && void 0 !== o4[e5[r6]] || !o4 && t5.test(e5[r6])) && (e5.splice(r6, 1), n4--, r6--);
            }
            return e5;
          }
          function p(e5, t5) {
            var r6, n4;
            if (l2(t5)) {
              for (r6 = 0, n4 = t5.length; r6 < n4; r6++) if (!p(e5, t5[r6])) return false;
              return true;
            }
            var o4 = c(t5);
            for (r6 = 0, n4 = e5.length; r6 < n4; r6++) if ("RegExp" === o4) {
              if ("string" == typeof e5[r6] && e5[r6].match(t5)) return true;
            } else if (e5[r6] === t5) return true;
            return false;
          }
          function h(e5, t5) {
            if (!l2(e5) || !l2(t5)) return false;
            if (e5.length !== t5.length) return false;
            e5.sort(), t5.sort();
            for (var r6 = 0, n4 = e5.length; r6 < n4; r6++) if (e5[r6] !== t5[r6]) return false;
            return true;
          }
          function d(e5) {
            return e5.replace(/^\/+|\/+$/g, "");
          }
          function y(e5) {
            return escape(e5);
          }
          function m(e5) {
            return encodeURIComponent(e5).replace(/[!'()*]/g, y).replace(/\*/g, "%2A");
          }
          i2._parts = function() {
            return { protocol: null, username: null, password: null, hostname: null, urn: null, port: null, path: null, query: null, fragment: null, preventInvalidHostname: i2.preventInvalidHostname, duplicateQueryParameters: i2.duplicateQueryParameters, escapeQuerySpace: i2.escapeQuerySpace };
          }, i2.preventInvalidHostname = false, i2.duplicateQueryParameters = false, i2.escapeQuerySpace = true, i2.protocol_expression = /^[a-z][a-z0-9.+-]*$/i, i2.idn_expression = /[^a-z0-9\._-]/i, i2.punycode_expression = /(xn--)/i, i2.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, i2.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, i2.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?\xab\xbb\u201c\u201d\u2018\u2019]))/gi, i2.findUri = { start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi, end: /[\s\r\n]|$/, trim: /[`!()\[\]{};:'".,<>?\xab\xbb\u201c\u201d\u201e\u2018\u2019]+$/, parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g }, i2.leading_whitespace_expression = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/, i2.ascii_tab_whitespace = /[\u0009\u000A\u000D]+/g, i2.defaultPorts = { http: "80", https: "443", ftp: "21", gopher: "70", ws: "80", wss: "443" }, i2.hostProtocols = ["http", "https"], i2.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/, i2.domAttributes = { a: "href", blockquote: "cite", link: "href", base: "href", script: "src", form: "action", img: "src", area: "href", iframe: "src", embed: "src", source: "src", track: "src", input: "src", audio: "src", video: "src" }, i2.getDomAttribute = function(e5) {
            if (e5 && e5.nodeName) {
              var t5 = e5.nodeName.toLowerCase();
              if ("input" !== t5 || "image" === e5.type) return i2.domAttributes[t5];
            }
          }, i2.encode = m, i2.decode = decodeURIComponent, i2.iso8859 = function() {
            i2.encode = escape, i2.decode = unescape;
          }, i2.unicode = function() {
            i2.encode = m, i2.decode = decodeURIComponent;
          }, i2.characters = { pathname: { encode: { expression: /%(24|26|2B|2C|3B|3D|3A|40)/gi, map: { "%24": "$", "%26": "&", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%3A": ":", "%40": "@" } }, decode: { expression: /[\/\?#]/g, map: { "/": "%2F", "?": "%3F", "#": "%23" } } }, reserved: { encode: { expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi, map: { "%3A": ":", "%2F": "/", "%3F": "?", "%23": "#", "%5B": "[", "%5D": "]", "%40": "@", "%21": "!", "%24": "$", "%26": "&", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=" } } }, urnpath: { encode: { expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi, map: { "%21": "!", "%24": "$", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%40": "@" } }, decode: { expression: /[\/\?#:]/g, map: { "/": "%2F", "?": "%3F", "#": "%23", ":": "%3A" } } } }, i2.encodeQuery = function(e5, t5) {
            var r6 = i2.encode(e5 + "");
            return void 0 === t5 && (t5 = i2.escapeQuerySpace), t5 ? r6.replace(/%20/g, "+") : r6;
          }, i2.decodeQuery = function(e5, t5) {
            e5 += "", void 0 === t5 && (t5 = i2.escapeQuerySpace);
            try {
              return i2.decode(t5 ? e5.replace(/\+/g, "%20") : e5);
            } catch (t6) {
              return e5;
            }
          };
          var v, g = { encode: "encode", decode: "decode" }, b = function(e5, t5) {
            return function(r6) {
              try {
                return i2[t5](r6 + "").replace(i2.characters[e5][t5].expression, function(r7) {
                  return i2.characters[e5][t5].map[r7];
                });
              } catch (e6) {
                return r6;
              }
            };
          };
          for (v in g) i2[v + "PathSegment"] = b("pathname", g[v]), i2[v + "UrnPathSegment"] = b("urnpath", g[v]);
          var w = function(e5, t5, r6) {
            return function(n4) {
              var o4;
              o4 = r6 ? function(e6) {
                return i2[t5](i2[r6](e6));
              } : i2[t5];
              for (var a2 = (n4 + "").split(e5), s2 = 0, u2 = a2.length; s2 < u2; s2++) a2[s2] = o4(a2[s2]);
              return a2.join(e5);
            };
          };
          function S(e5) {
            return function(t5, r6) {
              return void 0 === t5 ? this._parts[e5] || "" : (this._parts[e5] = t5 || null, this.build(!r6), this);
            };
          }
          function E(e5, t5) {
            return function(r6, n4) {
              return void 0 === r6 ? this._parts[e5] || "" : (null !== r6 && (r6 += "").charAt(0) === t5 && (r6 = r6.substring(1)), this._parts[e5] = r6, this.build(!n4), this);
            };
          }
          i2.decodePath = w("/", "decodePathSegment"), i2.decodeUrnPath = w(":", "decodeUrnPathSegment"), i2.recodePath = w("/", "encodePathSegment", "decode"), i2.recodeUrnPath = w(":", "encodeUrnPathSegment", "decode"), i2.encodeReserved = b("reserved", "encode"), i2.parse = function(e5, t5) {
            var r6;
            return t5 || (t5 = { preventInvalidHostname: i2.preventInvalidHostname }), (r6 = (e5 = (e5 = e5.replace(i2.leading_whitespace_expression, "")).replace(i2.ascii_tab_whitespace, "")).indexOf("#")) > -1 && (t5.fragment = e5.substring(r6 + 1) || null, e5 = e5.substring(0, r6)), (r6 = e5.indexOf("?")) > -1 && (t5.query = e5.substring(r6 + 1) || null, e5 = e5.substring(0, r6)), "//" === (e5 = (e5 = e5.replace(/^(https?|ftp|wss?)?:+[/\\]*/i, "$1://")).replace(/^[/\\]{2,}/i, "//")).substring(0, 2) ? (t5.protocol = null, e5 = e5.substring(2), e5 = i2.parseAuthority(e5, t5)) : (r6 = e5.indexOf(":")) > -1 && (t5.protocol = e5.substring(0, r6) || null, t5.protocol && !t5.protocol.match(i2.protocol_expression) ? t5.protocol = void 0 : "//" === e5.substring(r6 + 1, r6 + 3).replace(/\\/g, "/") ? (e5 = e5.substring(r6 + 3), e5 = i2.parseAuthority(e5, t5)) : (e5 = e5.substring(r6 + 1), t5.urn = true)), t5.path = e5, t5;
          }, i2.parseHost = function(e5, t5) {
            e5 || (e5 = "");
            var r6, n4, o4 = (e5 = e5.replace(/\\/g, "/")).indexOf("/");
            if (-1 === o4 && (o4 = e5.length), "[" === e5.charAt(0)) r6 = e5.indexOf("]"), t5.hostname = e5.substring(1, r6) || null, t5.port = e5.substring(r6 + 2, o4) || null, "/" === t5.port && (t5.port = null);
            else {
              var a2 = e5.indexOf(":"), s2 = e5.indexOf("/"), u2 = e5.indexOf(":", a2 + 1);
              -1 !== u2 && (-1 === s2 || u2 < s2) ? (t5.hostname = e5.substring(0, o4) || null, t5.port = null) : (n4 = e5.substring(0, o4).split(":"), t5.hostname = n4[0] || null, t5.port = n4[1] || null);
            }
            return t5.hostname && "/" !== e5.substring(o4).charAt(0) && (o4++, e5 = "/" + e5), t5.preventInvalidHostname && i2.ensureValidHostname(t5.hostname, t5.protocol), t5.port && i2.ensureValidPort(t5.port), e5.substring(o4) || "/";
          }, i2.parseAuthority = function(e5, t5) {
            return e5 = i2.parseUserinfo(e5, t5), i2.parseHost(e5, t5);
          }, i2.parseUserinfo = function(e5, t5) {
            var r6 = e5;
            -1 !== e5.indexOf("\\") && (e5 = e5.replace(/\\/g, "/"));
            var n4, o4 = e5.indexOf("/"), a2 = e5.lastIndexOf("@", o4 > -1 ? o4 : e5.length - 1);
            return a2 > -1 && (-1 === o4 || a2 < o4) ? (n4 = e5.substring(0, a2).split(":"), t5.username = n4[0] ? i2.decode(n4[0]) : null, n4.shift(), t5.password = n4[0] ? i2.decode(n4.join(":")) : null, e5 = r6.substring(a2 + 1)) : (t5.username = null, t5.password = null), e5;
          }, i2.parseQuery = function(e5, t5) {
            if (!e5) return {};
            if (!(e5 = e5.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, ""))) return {};
            for (var r6, n4, o4, a2 = {}, u2 = e5.split("&"), c2 = u2.length, l3 = 0; l3 < c2; l3++) r6 = u2[l3].split("="), n4 = i2.decodeQuery(r6.shift(), t5), o4 = r6.length ? i2.decodeQuery(r6.join("="), t5) : null, "__proto__" !== n4 && (s.call(a2, n4) ? ("string" != typeof a2[n4] && null !== a2[n4] || (a2[n4] = [a2[n4]]), a2[n4].push(o4)) : a2[n4] = o4);
            return a2;
          }, i2.build = function(e5) {
            var t5 = "", r6 = false;
            return e5.protocol && (t5 += e5.protocol + ":"), e5.urn || !t5 && !e5.hostname || (t5 += "//", r6 = true), t5 += i2.buildAuthority(e5) || "", "string" == typeof e5.path && ("/" !== e5.path.charAt(0) && r6 && (t5 += "/"), t5 += e5.path), "string" == typeof e5.query && e5.query && (t5 += "?" + e5.query), "string" == typeof e5.fragment && e5.fragment && (t5 += "#" + e5.fragment), t5;
          }, i2.buildHost = function(e5) {
            var t5 = "";
            return e5.hostname ? (i2.ip6_expression.test(e5.hostname) ? t5 += "[" + e5.hostname + "]" : t5 += e5.hostname, e5.port && (t5 += ":" + e5.port), t5) : "";
          }, i2.buildAuthority = function(e5) {
            return i2.buildUserinfo(e5) + i2.buildHost(e5);
          }, i2.buildUserinfo = function(e5) {
            var t5 = "";
            return e5.username && (t5 += i2.encode(e5.username)), e5.password && (t5 += ":" + i2.encode(e5.password)), t5 && (t5 += "@"), t5;
          }, i2.buildQuery = function(e5, t5, r6) {
            var n4, o4, a2, u2, c2 = "";
            for (o4 in e5) if ("__proto__" !== o4 && s.call(e5, o4)) if (l2(e5[o4])) for (n4 = {}, a2 = 0, u2 = e5[o4].length; a2 < u2; a2++) void 0 !== e5[o4][a2] && void 0 === n4[e5[o4][a2] + ""] && (c2 += "&" + i2.buildQueryParameter(o4, e5[o4][a2], r6), true !== t5 && (n4[e5[o4][a2] + ""] = true));
            else void 0 !== e5[o4] && (c2 += "&" + i2.buildQueryParameter(o4, e5[o4], r6));
            return c2.substring(1);
          }, i2.buildQueryParameter = function(e5, t5, r6) {
            return i2.encodeQuery(e5, r6) + (null !== t5 ? "=" + i2.encodeQuery(t5, r6) : "");
          }, i2.addQuery = function(e5, t5, r6) {
            if ("object" == typeof t5) for (var n4 in t5) s.call(t5, n4) && i2.addQuery(e5, n4, t5[n4]);
            else {
              if ("string" != typeof t5) throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
              if (void 0 === e5[t5]) return void (e5[t5] = r6);
              "string" == typeof e5[t5] && (e5[t5] = [e5[t5]]), l2(r6) || (r6 = [r6]), e5[t5] = (e5[t5] || []).concat(r6);
            }
          }, i2.setQuery = function(e5, t5, r6) {
            if ("object" == typeof t5) for (var n4 in t5) s.call(t5, n4) && i2.setQuery(e5, n4, t5[n4]);
            else {
              if ("string" != typeof t5) throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");
              e5[t5] = void 0 === r6 ? null : r6;
            }
          }, i2.removeQuery = function(e5, t5, r6) {
            var n4, o4, a2;
            if (l2(t5)) for (n4 = 0, o4 = t5.length; n4 < o4; n4++) e5[t5[n4]] = void 0;
            else if ("RegExp" === c(t5)) for (a2 in e5) t5.test(a2) && (e5[a2] = void 0);
            else if ("object" == typeof t5) for (a2 in t5) s.call(t5, a2) && i2.removeQuery(e5, a2, t5[a2]);
            else {
              if ("string" != typeof t5) throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
              void 0 !== r6 ? "RegExp" === c(r6) ? !l2(e5[t5]) && r6.test(e5[t5]) ? e5[t5] = void 0 : e5[t5] = f(e5[t5], r6) : e5[t5] !== String(r6) || l2(r6) && 1 !== r6.length ? l2(e5[t5]) && (e5[t5] = f(e5[t5], r6)) : e5[t5] = void 0 : e5[t5] = void 0;
            }
          }, i2.hasQuery = function(e5, t5, r6, n4) {
            switch (c(t5)) {
              case "String":
                break;
              case "RegExp":
                for (var o4 in e5) if (s.call(e5, o4) && t5.test(o4) && (void 0 === r6 || i2.hasQuery(e5, o4, r6))) return true;
                return false;
              case "Object":
                for (var a2 in t5) if (s.call(t5, a2) && !i2.hasQuery(e5, a2, t5[a2])) return false;
                return true;
              default:
                throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
            }
            switch (c(r6)) {
              case "Undefined":
                return t5 in e5;
              case "Boolean":
                return r6 === Boolean(l2(e5[t5]) ? e5[t5].length : e5[t5]);
              case "Function":
                return !!r6(e5[t5], t5, e5);
              case "Array":
                return !!l2(e5[t5]) && (n4 ? p : h)(e5[t5], r6);
              case "RegExp":
                return l2(e5[t5]) ? !!n4 && p(e5[t5], r6) : Boolean(e5[t5] && e5[t5].match(r6));
              case "Number":
                r6 = String(r6);
              case "String":
                return l2(e5[t5]) ? !!n4 && p(e5[t5], r6) : e5[t5] === r6;
              default:
                throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
            }
          }, i2.joinPaths = function() {
            for (var e5 = [], t5 = [], r6 = 0, n4 = 0; n4 < arguments.length; n4++) {
              var o4 = new i2(arguments[n4]);
              e5.push(o4);
              for (var a2 = o4.segment(), s2 = 0; s2 < a2.length; s2++) "string" == typeof a2[s2] && t5.push(a2[s2]), a2[s2] && r6++;
            }
            if (!t5.length || !r6) return new i2("");
            var u2 = new i2("").segment(t5);
            return "" !== e5[0].path() && "/" !== e5[0].path().slice(0, 1) || u2.path("/" + u2.path()), u2.normalize();
          }, i2.commonPath = function(e5, t5) {
            var r6, n4 = Math.min(e5.length, t5.length);
            for (r6 = 0; r6 < n4; r6++) if (e5.charAt(r6) !== t5.charAt(r6)) {
              r6--;
              break;
            }
            return r6 < 1 ? e5.charAt(0) === t5.charAt(0) && "/" === e5.charAt(0) ? "/" : "" : ("/" === e5.charAt(r6) && "/" === t5.charAt(r6) || (r6 = e5.substring(0, r6).lastIndexOf("/")), e5.substring(0, r6 + 1));
          }, i2.withinString = function(e5, t5, r6) {
            r6 || (r6 = {});
            var n4 = r6.start || i2.findUri.start, o4 = r6.end || i2.findUri.end, a2 = r6.trim || i2.findUri.trim, s2 = r6.parens || i2.findUri.parens, u2 = /[a-z0-9-]=["']?$/i;
            for (n4.lastIndex = 0; ; ) {
              var c2 = n4.exec(e5);
              if (!c2) break;
              var l3 = c2.index;
              if (r6.ignoreHtml) {
                var f2 = e5.slice(Math.max(l3 - 3, 0), l3);
                if (f2 && u2.test(f2)) continue;
              }
              for (var p2 = l3 + e5.slice(l3).search(o4), h2 = e5.slice(l3, p2), d2 = -1; ; ) {
                var y2 = s2.exec(h2);
                if (!y2) break;
                var m2 = y2.index + y2[0].length;
                d2 = Math.max(d2, m2);
              }
              if (!((h2 = d2 > -1 ? h2.slice(0, d2) + h2.slice(d2).replace(a2, "") : h2.replace(a2, "")).length <= c2[0].length || r6.ignore && r6.ignore.test(h2))) {
                var v2 = t5(h2, l3, p2 = l3 + h2.length, e5);
                void 0 !== v2 ? (v2 = String(v2), e5 = e5.slice(0, l3) + v2 + e5.slice(p2), n4.lastIndex = l3 + v2.length) : n4.lastIndex = p2;
              }
            }
            return n4.lastIndex = 0, e5;
          }, i2.ensureValidHostname = function(t5, r6) {
            var n4 = !!t5, o4 = false;
            if (!!r6 && (o4 = p(i2.hostProtocols, r6)), o4 && !n4) throw new TypeError("Hostname cannot be empty, if protocol is " + r6);
            if (t5 && t5.match(i2.invalid_hostname_characters)) {
              if (!e4) throw new TypeError('Hostname "' + t5 + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
              if (e4.toASCII(t5).match(i2.invalid_hostname_characters)) throw new TypeError('Hostname "' + t5 + '" contains characters other than [A-Z0-9.-:_]');
            }
          }, i2.ensureValidPort = function(e5) {
            if (e5) {
              var t5 = Number(e5);
              if (!(/^[0-9]+$/.test(t5) && t5 > 0 && t5 < 65536)) throw new TypeError('Port "' + e5 + '" is not a valid port');
            }
          }, i2.noConflict = function(e5) {
            if (e5) {
              var t5 = { URI: this.noConflict() };
              return n3.URITemplate && "function" == typeof n3.URITemplate.noConflict && (t5.URITemplate = n3.URITemplate.noConflict()), n3.IPv6 && "function" == typeof n3.IPv6.noConflict && (t5.IPv6 = n3.IPv6.noConflict()), n3.SecondLevelDomains && "function" == typeof n3.SecondLevelDomains.noConflict && (t5.SecondLevelDomains = n3.SecondLevelDomains.noConflict()), t5;
            }
            return n3.URI === this && (n3.URI = o3), this;
          }, a.build = function(e5) {
            return true === e5 ? this._deferred_build = true : (void 0 === e5 || this._deferred_build) && (this._string = i2.build(this._parts), this._deferred_build = false), this;
          }, a.clone = function() {
            return new i2(this);
          }, a.valueOf = a.toString = function() {
            return this.build(false)._string;
          }, a.protocol = S("protocol"), a.username = S("username"), a.password = S("password"), a.hostname = S("hostname"), a.port = S("port"), a.query = E("query", "?"), a.fragment = E("fragment", "#"), a.search = function(e5, t5) {
            var r6 = this.query(e5, t5);
            return "string" == typeof r6 && r6.length ? "?" + r6 : r6;
          }, a.hash = function(e5, t5) {
            var r6 = this.fragment(e5, t5);
            return "string" == typeof r6 && r6.length ? "#" + r6 : r6;
          }, a.pathname = function(e5, t5) {
            if (void 0 === e5 || true === e5) {
              var r6 = this._parts.path || (this._parts.hostname ? "/" : "");
              return e5 ? (this._parts.urn ? i2.decodeUrnPath : i2.decodePath)(r6) : r6;
            }
            return this._parts.urn ? this._parts.path = e5 ? i2.recodeUrnPath(e5) : "" : this._parts.path = e5 ? i2.recodePath(e5) : "/", this.build(!t5), this;
          }, a.path = a.pathname, a.href = function(e5, t5) {
            var r6;
            if (void 0 === e5) return this.toString();
            this._string = "", this._parts = i2._parts();
            var n4 = e5 instanceof i2, o4 = "object" == typeof e5 && (e5.hostname || e5.path || e5.pathname);
            e5.nodeName && (e5 = e5[i2.getDomAttribute(e5)] || "", o4 = false);
            if (!n4 && o4 && void 0 !== e5.pathname && (e5 = e5.toString()), "string" == typeof e5 || e5 instanceof String) this._parts = i2.parse(String(e5), this._parts);
            else {
              if (!n4 && !o4) throw new TypeError("invalid input");
              var a2 = n4 ? e5._parts : e5;
              for (r6 in a2) "query" !== r6 && s.call(this._parts, r6) && (this._parts[r6] = a2[r6]);
              a2.query && this.query(a2.query, false);
            }
            return this.build(!t5), this;
          }, a.is = function(e5) {
            var t5 = false, n4 = false, o4 = false, a2 = false, s2 = false, u2 = false, c2 = false, l3 = !this._parts.urn;
            switch (this._parts.hostname && (l3 = false, n4 = i2.ip4_expression.test(this._parts.hostname), o4 = i2.ip6_expression.test(this._parts.hostname), s2 = (a2 = !(t5 = n4 || o4)) && r5 && r5.has(this._parts.hostname), u2 = a2 && i2.idn_expression.test(this._parts.hostname), c2 = a2 && i2.punycode_expression.test(this._parts.hostname)), e5.toLowerCase()) {
              case "relative":
                return l3;
              case "absolute":
                return !l3;
              case "domain":
              case "name":
                return a2;
              case "sld":
                return s2;
              case "ip":
                return t5;
              case "ip4":
              case "ipv4":
              case "inet4":
                return n4;
              case "ip6":
              case "ipv6":
              case "inet6":
                return o4;
              case "idn":
                return u2;
              case "url":
                return !this._parts.urn;
              case "urn":
                return !!this._parts.urn;
              case "punycode":
                return c2;
            }
            return null;
          };
          var _ = a.protocol, k = a.port, T = a.hostname;
          a.protocol = function(e5, t5) {
            if (e5 && !(e5 = e5.replace(/:(\/\/)?$/, "")).match(i2.protocol_expression)) throw new TypeError('Protocol "' + e5 + `" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]`);
            return _.call(this, e5, t5);
          }, a.scheme = a.protocol, a.port = function(e5, t5) {
            return this._parts.urn ? void 0 === e5 ? "" : this : (void 0 !== e5 && (0 === e5 && (e5 = null), e5 && (":" === (e5 += "").charAt(0) && (e5 = e5.substring(1)), i2.ensureValidPort(e5))), k.call(this, e5, t5));
          }, a.hostname = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 !== e5) {
              var r6 = { preventInvalidHostname: this._parts.preventInvalidHostname };
              if ("/" !== i2.parseHost(e5, r6)) throw new TypeError('Hostname "' + e5 + '" contains characters other than [A-Z0-9.-]');
              e5 = r6.hostname, this._parts.preventInvalidHostname && i2.ensureValidHostname(e5, this._parts.protocol);
            }
            return T.call(this, e5, t5);
          }, a.origin = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5) {
              var r6 = this.protocol();
              return this.authority() ? (r6 ? r6 + "://" : "") + this.authority() : "";
            }
            var n4 = i2(e5);
            return this.protocol(n4.protocol()).authority(n4.authority()).build(!t5), this;
          }, a.host = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5) return this._parts.hostname ? i2.buildHost(this._parts) : "";
            if ("/" !== i2.parseHost(e5, this._parts)) throw new TypeError('Hostname "' + e5 + '" contains characters other than [A-Z0-9.-]');
            return this.build(!t5), this;
          }, a.authority = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5) return this._parts.hostname ? i2.buildAuthority(this._parts) : "";
            if ("/" !== i2.parseAuthority(e5, this._parts)) throw new TypeError('Hostname "' + e5 + '" contains characters other than [A-Z0-9.-]');
            return this.build(!t5), this;
          }, a.userinfo = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5) {
              var r6 = i2.buildUserinfo(this._parts);
              return r6 ? r6.substring(0, r6.length - 1) : r6;
            }
            return "@" !== e5[e5.length - 1] && (e5 += "@"), i2.parseUserinfo(e5, this._parts), this.build(!t5), this;
          }, a.resource = function(e5, t5) {
            var r6;
            return void 0 === e5 ? this.path() + this.search() + this.hash() : (r6 = i2.parse(e5), this._parts.path = r6.path, this._parts.query = r6.query, this._parts.fragment = r6.fragment, this.build(!t5), this);
          }, a.subdomain = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var r6 = this._parts.hostname.length - this.domain().length - 1;
              return this._parts.hostname.substring(0, r6) || "";
            }
            var n4 = this._parts.hostname.length - this.domain().length, o4 = this._parts.hostname.substring(0, n4), a2 = new RegExp("^" + u(o4));
            if (e5 && "." !== e5.charAt(e5.length - 1) && (e5 += "."), -1 !== e5.indexOf(":")) throw new TypeError("Domains cannot contain colons");
            return e5 && i2.ensureValidHostname(e5, this._parts.protocol), this._parts.hostname = this._parts.hostname.replace(a2, e5), this.build(!t5), this;
          }, a.domain = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if ("boolean" == typeof e5 && (t5 = e5, e5 = void 0), void 0 === e5) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var r6 = this._parts.hostname.match(/\./g);
              if (r6 && r6.length < 2) return this._parts.hostname;
              var n4 = this._parts.hostname.length - this.tld(t5).length - 1;
              return n4 = this._parts.hostname.lastIndexOf(".", n4 - 1) + 1, this._parts.hostname.substring(n4) || "";
            }
            if (!e5) throw new TypeError("cannot set domain empty");
            if (-1 !== e5.indexOf(":")) throw new TypeError("Domains cannot contain colons");
            if (i2.ensureValidHostname(e5, this._parts.protocol), !this._parts.hostname || this.is("IP")) this._parts.hostname = e5;
            else {
              var o4 = new RegExp(u(this.domain()) + "$");
              this._parts.hostname = this._parts.hostname.replace(o4, e5);
            }
            return this.build(!t5), this;
          }, a.tld = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if ("boolean" == typeof e5 && (t5 = e5, e5 = void 0), void 0 === e5) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var n4 = this._parts.hostname.lastIndexOf("."), o4 = this._parts.hostname.substring(n4 + 1);
              return true !== t5 && r5 && r5.list[o4.toLowerCase()] && r5.get(this._parts.hostname) || o4;
            }
            var i3;
            if (!e5) throw new TypeError("cannot set TLD empty");
            if (e5.match(/[^a-zA-Z0-9-]/)) {
              if (!r5 || !r5.is(e5)) throw new TypeError('TLD "' + e5 + '" contains characters other than [A-Z0-9]');
              i3 = new RegExp(u(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(i3, e5);
            } else {
              if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host");
              i3 = new RegExp(u(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(i3, e5);
            }
            return this.build(!t5), this;
          }, a.directory = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5 || true === e5) {
              if (!this._parts.path && !this._parts.hostname) return "";
              if ("/" === this._parts.path) return "/";
              var r6 = this._parts.path.length - this.filename().length - 1, n4 = this._parts.path.substring(0, r6) || (this._parts.hostname ? "/" : "");
              return e5 ? i2.decodePath(n4) : n4;
            }
            var o4 = this._parts.path.length - this.filename().length, a2 = this._parts.path.substring(0, o4), s2 = new RegExp("^" + u(a2));
            return this.is("relative") || (e5 || (e5 = "/"), "/" !== e5.charAt(0) && (e5 = "/" + e5)), e5 && "/" !== e5.charAt(e5.length - 1) && (e5 += "/"), e5 = i2.recodePath(e5), this._parts.path = this._parts.path.replace(s2, e5), this.build(!t5), this;
          }, a.filename = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if ("string" != typeof e5) {
              if (!this._parts.path || "/" === this._parts.path) return "";
              var r6 = this._parts.path.lastIndexOf("/"), n4 = this._parts.path.substring(r6 + 1);
              return e5 ? i2.decodePathSegment(n4) : n4;
            }
            var o4 = false;
            "/" === e5.charAt(0) && (e5 = e5.substring(1)), e5.match(/\.?\//) && (o4 = true);
            var a2 = new RegExp(u(this.filename()) + "$");
            return e5 = i2.recodePath(e5), this._parts.path = this._parts.path.replace(a2, e5), o4 ? this.normalizePath(t5) : this.build(!t5), this;
          }, a.suffix = function(e5, t5) {
            if (this._parts.urn) return void 0 === e5 ? "" : this;
            if (void 0 === e5 || true === e5) {
              if (!this._parts.path || "/" === this._parts.path) return "";
              var r6, n4, o4 = this.filename(), a2 = o4.lastIndexOf(".");
              return -1 === a2 ? "" : (r6 = o4.substring(a2 + 1), n4 = /^[a-z0-9%]+$/i.test(r6) ? r6 : "", e5 ? i2.decodePathSegment(n4) : n4);
            }
            "." === e5.charAt(0) && (e5 = e5.substring(1));
            var s2, c2 = this.suffix();
            if (c2) s2 = e5 ? new RegExp(u(c2) + "$") : new RegExp(u("." + c2) + "$");
            else {
              if (!e5) return this;
              this._parts.path += "." + i2.recodePath(e5);
            }
            return s2 && (e5 = i2.recodePath(e5), this._parts.path = this._parts.path.replace(s2, e5)), this.build(!t5), this;
          }, a.segment = function(e5, t5, r6) {
            var n4 = this._parts.urn ? ":" : "/", o4 = this.path(), i3 = "/" === o4.substring(0, 1), a2 = o4.split(n4);
            if (void 0 !== e5 && "number" != typeof e5 && (r6 = t5, t5 = e5, e5 = void 0), void 0 !== e5 && "number" != typeof e5) throw new Error('Bad segment "' + e5 + '", must be 0-based integer');
            if (i3 && a2.shift(), e5 < 0 && (e5 = Math.max(a2.length + e5, 0)), void 0 === t5) return void 0 === e5 ? a2 : a2[e5];
            if (null === e5 || void 0 === a2[e5]) if (l2(t5)) {
              a2 = [];
              for (var s2 = 0, u2 = t5.length; s2 < u2; s2++) (t5[s2].length || a2.length && a2[a2.length - 1].length) && (a2.length && !a2[a2.length - 1].length && a2.pop(), a2.push(d(t5[s2])));
            } else (t5 || "string" == typeof t5) && (t5 = d(t5), "" === a2[a2.length - 1] ? a2[a2.length - 1] = t5 : a2.push(t5));
            else t5 ? a2[e5] = d(t5) : a2.splice(e5, 1);
            return i3 && a2.unshift(""), this.path(a2.join(n4), r6);
          }, a.segmentCoded = function(e5, t5, r6) {
            var n4, o4, a2;
            if ("number" != typeof e5 && (r6 = t5, t5 = e5, e5 = void 0), void 0 === t5) {
              if (l2(n4 = this.segment(e5, t5, r6))) for (o4 = 0, a2 = n4.length; o4 < a2; o4++) n4[o4] = i2.decode(n4[o4]);
              else n4 = void 0 !== n4 ? i2.decode(n4) : void 0;
              return n4;
            }
            if (l2(t5)) for (o4 = 0, a2 = t5.length; o4 < a2; o4++) t5[o4] = i2.encode(t5[o4]);
            else t5 = "string" == typeof t5 || t5 instanceof String ? i2.encode(t5) : t5;
            return this.segment(e5, t5, r6);
          };
          var O = a.query;
          return a.query = function(e5, t5) {
            if (true === e5) return i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            if ("function" == typeof e5) {
              var r6 = i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace), n4 = e5.call(this, r6);
              return this._parts.query = i2.buildQuery(n4 || r6, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!t5), this;
            }
            return void 0 !== e5 && "string" != typeof e5 ? (this._parts.query = i2.buildQuery(e5, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!t5), this) : O.call(this, e5, t5);
          }, a.setQuery = function(e5, t5, r6) {
            var n4 = i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            if ("string" == typeof e5 || e5 instanceof String) n4[e5] = void 0 !== t5 ? t5 : null;
            else {
              if ("object" != typeof e5) throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
              for (var o4 in e5) s.call(e5, o4) && (n4[o4] = e5[o4]);
            }
            return this._parts.query = i2.buildQuery(n4, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), "string" != typeof e5 && (r6 = t5), this.build(!r6), this;
          }, a.addQuery = function(e5, t5, r6) {
            var n4 = i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return i2.addQuery(n4, e5, void 0 === t5 ? null : t5), this._parts.query = i2.buildQuery(n4, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), "string" != typeof e5 && (r6 = t5), this.build(!r6), this;
          }, a.removeQuery = function(e5, t5, r6) {
            var n4 = i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return i2.removeQuery(n4, e5, t5), this._parts.query = i2.buildQuery(n4, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), "string" != typeof e5 && (r6 = t5), this.build(!r6), this;
          }, a.hasQuery = function(e5, t5, r6) {
            var n4 = i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return i2.hasQuery(n4, e5, t5, r6);
          }, a.setSearch = a.setQuery, a.addSearch = a.addQuery, a.removeSearch = a.removeQuery, a.hasSearch = a.hasQuery, a.normalize = function() {
            return this._parts.urn ? this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build() : this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
          }, a.normalizeProtocol = function(e5) {
            return "string" == typeof this._parts.protocol && (this._parts.protocol = this._parts.protocol.toLowerCase(), this.build(!e5)), this;
          }, a.normalizeHostname = function(r6) {
            return this._parts.hostname && (this.is("IDN") && e4 ? this._parts.hostname = e4.toASCII(this._parts.hostname) : this.is("IPv6") && t4 && (this._parts.hostname = t4.best(this._parts.hostname)), this._parts.hostname = this._parts.hostname.toLowerCase(), this.build(!r6)), this;
          }, a.normalizePort = function(e5) {
            return "string" == typeof this._parts.protocol && this._parts.port === i2.defaultPorts[this._parts.protocol] && (this._parts.port = null, this.build(!e5)), this;
          }, a.normalizePath = function(e5) {
            var t5, r6 = this._parts.path;
            if (!r6) return this;
            if (this._parts.urn) return this._parts.path = i2.recodeUrnPath(this._parts.path), this.build(!e5), this;
            if ("/" === this._parts.path) return this;
            var n4, o4, a2 = "";
            for ("/" !== (r6 = i2.recodePath(r6)).charAt(0) && (t5 = true, r6 = "/" + r6), "/.." !== r6.slice(-3) && "/." !== r6.slice(-2) || (r6 += "/"), r6 = r6.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/"), t5 && (a2 = r6.substring(1).match(/^(\.\.\/)+/) || "") && (a2 = a2[0]); -1 !== (n4 = r6.search(/\/\.\.(\/|$)/)); ) 0 !== n4 ? (-1 === (o4 = r6.substring(0, n4).lastIndexOf("/")) && (o4 = n4), r6 = r6.substring(0, o4) + r6.substring(n4 + 3)) : r6 = r6.substring(3);
            return t5 && this.is("relative") && (r6 = a2 + r6.substring(1)), this._parts.path = r6, this.build(!e5), this;
          }, a.normalizePathname = a.normalizePath, a.normalizeQuery = function(e5) {
            return "string" == typeof this._parts.query && (this._parts.query.length ? this.query(i2.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null, this.build(!e5)), this;
          }, a.normalizeFragment = function(e5) {
            return this._parts.fragment || (this._parts.fragment = null, this.build(!e5)), this;
          }, a.normalizeSearch = a.normalizeQuery, a.normalizeHash = a.normalizeFragment, a.iso8859 = function() {
            var e5 = i2.encode, t5 = i2.decode;
            i2.encode = escape, i2.decode = decodeURIComponent;
            try {
              this.normalize();
            } finally {
              i2.encode = e5, i2.decode = t5;
            }
            return this;
          }, a.unicode = function() {
            var e5 = i2.encode, t5 = i2.decode;
            i2.encode = m, i2.decode = unescape;
            try {
              this.normalize();
            } finally {
              i2.encode = e5, i2.decode = t5;
            }
            return this;
          }, a.readable = function() {
            var t5 = this.clone();
            t5.username("").password("").normalize();
            var r6 = "";
            if (t5._parts.protocol && (r6 += t5._parts.protocol + "://"), t5._parts.hostname && (t5.is("punycode") && e4 ? (r6 += e4.toUnicode(t5._parts.hostname), t5._parts.port && (r6 += ":" + t5._parts.port)) : r6 += t5.host()), t5._parts.hostname && t5._parts.path && "/" !== t5._parts.path.charAt(0) && (r6 += "/"), r6 += t5.path(true), t5._parts.query) {
              for (var n4 = "", o4 = 0, a2 = t5._parts.query.split("&"), s2 = a2.length; o4 < s2; o4++) {
                var u2 = (a2[o4] || "").split("=");
                n4 += "&" + i2.decodeQuery(u2[0], this._parts.escapeQuerySpace).replace(/&/g, "%26"), void 0 !== u2[1] && (n4 += "=" + i2.decodeQuery(u2[1], this._parts.escapeQuerySpace).replace(/&/g, "%26"));
              }
              r6 += "?" + n4.substring(1);
            }
            return r6 += i2.decodeQuery(t5.hash(), true);
          }, a.absoluteTo = function(e5) {
            var t5, r6, n4, o4 = this.clone(), a2 = ["protocol", "username", "password", "hostname", "port"];
            if (this._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
            if (e5 instanceof i2 || (e5 = new i2(e5)), o4._parts.protocol) return o4;
            if (o4._parts.protocol = e5._parts.protocol, this._parts.hostname) return o4;
            for (r6 = 0; n4 = a2[r6]; r6++) o4._parts[n4] = e5._parts[n4];
            return o4._parts.path ? (".." === o4._parts.path.substring(-2) && (o4._parts.path += "/"), "/" !== o4.path().charAt(0) && (t5 = (t5 = e5.directory()) || (0 === e5.path().indexOf("/") ? "/" : ""), o4._parts.path = (t5 ? t5 + "/" : "") + o4._parts.path, o4.normalizePath())) : (o4._parts.path = e5._parts.path, o4._parts.query || (o4._parts.query = e5._parts.query)), o4.build(), o4;
          }, a.relativeTo = function(e5) {
            var t5, r6, n4, o4, a2, s2 = this.clone().normalize();
            if (s2._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
            if (e5 = new i2(e5).normalize(), t5 = s2._parts, r6 = e5._parts, o4 = s2.path(), a2 = e5.path(), "/" !== o4.charAt(0)) throw new Error("URI is already relative");
            if ("/" !== a2.charAt(0)) throw new Error("Cannot calculate a URI relative to another relative URI");
            if (t5.protocol === r6.protocol && (t5.protocol = null), t5.username !== r6.username || t5.password !== r6.password) return s2.build();
            if (null !== t5.protocol || null !== t5.username || null !== t5.password) return s2.build();
            if (t5.hostname !== r6.hostname || t5.port !== r6.port) return s2.build();
            if (t5.hostname = null, t5.port = null, o4 === a2) return t5.path = "", s2.build();
            if (!(n4 = i2.commonPath(o4, a2))) return s2.build();
            var u2 = r6.path.substring(n4.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
            return t5.path = u2 + t5.path.substring(n4.length) || "./", s2.build();
          }, a.equals = function(e5) {
            var t5, r6, n4, o4, a2, u2 = this.clone(), c2 = new i2(e5), f2 = {};
            if (u2.normalize(), c2.normalize(), u2.toString() === c2.toString()) return true;
            if (n4 = u2.query(), o4 = c2.query(), u2.query(""), c2.query(""), u2.toString() !== c2.toString()) return false;
            if (n4.length !== o4.length) return false;
            for (a2 in t5 = i2.parseQuery(n4, this._parts.escapeQuerySpace), r6 = i2.parseQuery(o4, this._parts.escapeQuerySpace), t5) if (s.call(t5, a2)) {
              if (l2(t5[a2])) {
                if (!h(t5[a2], r6[a2])) return false;
              } else if (t5[a2] !== r6[a2]) return false;
              f2[a2] = true;
            }
            for (a2 in r6) if (s.call(r6, a2) && !f2[a2]) return false;
            return true;
          }, a.preventInvalidHostname = function(e5) {
            return this._parts.preventInvalidHostname = !!e5, this;
          }, a.duplicateQueryParameters = function(e5) {
            return this._parts.duplicateQueryParameters = !!e5, this;
          }, a.escapeQuerySpace = function(e5) {
            return this._parts.escapeQuerySpace = !!e5, this;
          }, i2;
        });
      }, 9127: function(e3, t3, r4) {
        var n2, o2, i;
        !function(a, s) {
          "use strict";
          e3.exports ? e3.exports = s(r4(4193)) : (o2 = [r4(4193)], void 0 === (i = "function" == typeof (n2 = s) ? n2.apply(t3, o2) : n2) || (e3.exports = i));
        }(0, function(e4, t4) {
          "use strict";
          var r5 = t4 && t4.URITemplate, n3 = Object.prototype.hasOwnProperty;
          function o3(e5) {
            return o3._cache[e5] ? o3._cache[e5] : this instanceof o3 ? (this.expression = e5, o3._cache[e5] = this, this) : new o3(e5);
          }
          function i2(e5) {
            this.data = e5, this.cache = {};
          }
          var a = o3.prototype, s = { "": { prefix: "", separator: ",", named: false, empty_name_separator: false, encode: "encode" }, "+": { prefix: "", separator: ",", named: false, empty_name_separator: false, encode: "encodeReserved" }, "#": { prefix: "#", separator: ",", named: false, empty_name_separator: false, encode: "encodeReserved" }, ".": { prefix: ".", separator: ".", named: false, empty_name_separator: false, encode: "encode" }, "/": { prefix: "/", separator: "/", named: false, empty_name_separator: false, encode: "encode" }, ";": { prefix: ";", separator: ";", named: true, empty_name_separator: false, encode: "encode" }, "?": { prefix: "?", separator: "&", named: true, empty_name_separator: true, encode: "encode" }, "&": { prefix: "&", separator: "&", named: true, empty_name_separator: true, encode: "encode" } };
          return o3._cache = {}, o3.EXPRESSION_PATTERN = /\{([^a-zA-Z0-9%_]?)([^\}]+)(\}|$)/g, o3.VARIABLE_PATTERN = /^([^*:.](?:\.?[^*:.])*)((\*)|:(\d+))?$/, o3.VARIABLE_NAME_PATTERN = /[^a-zA-Z0-9%_.]/, o3.LITERAL_PATTERN = /[<>{}"`^| \\]/, o3.expand = function(e5, t5, r6) {
            var n4, i3, a2, u = s[e5.operator], c = u.named ? "Named" : "Unnamed", l2 = e5.variables, f = [];
            for (a2 = 0; i3 = l2[a2]; a2++) {
              if (0 === (n4 = t5.get(i3.name)).type && r6 && r6.strict) throw new Error('Missing expansion value for variable "' + i3.name + '"');
              if (n4.val.length) {
                if (n4.type > 1 && i3.maxlength) throw new Error('Invalid expression: Prefix modifier not applicable to variable "' + i3.name + '"');
                f.push(o3["expand" + c](n4, u, i3.explode, i3.explode && u.separator || ",", i3.maxlength, i3.name));
              } else n4.type && f.push("");
            }
            return f.length ? u.prefix + f.join(u.separator) : "";
          }, o3.expandNamed = function(t5, r6, n4, o4, i3, a2) {
            var s2, u, c, l2 = "", f = r6.encode, p = r6.empty_name_separator, h = !t5[f].length, d = 2 === t5.type ? "" : e4[f](a2);
            for (u = 0, c = t5.val.length; u < c; u++) i3 ? (s2 = e4[f](t5.val[u][1].substring(0, i3)), 2 === t5.type && (d = e4[f](t5.val[u][0].substring(0, i3)))) : h ? (s2 = e4[f](t5.val[u][1]), 2 === t5.type ? (d = e4[f](t5.val[u][0]), t5[f].push([d, s2])) : t5[f].push([void 0, s2])) : (s2 = t5[f][u][1], 2 === t5.type && (d = t5[f][u][0])), l2 && (l2 += o4), n4 ? l2 += d + (p || s2 ? "=" : "") + s2 : (u || (l2 += e4[f](a2) + (p || s2 ? "=" : "")), 2 === t5.type && (l2 += d + ","), l2 += s2);
            return l2;
          }, o3.expandUnnamed = function(t5, r6, n4, o4, i3) {
            var a2, s2, u, c = "", l2 = r6.encode, f = r6.empty_name_separator, p = !t5[l2].length;
            for (s2 = 0, u = t5.val.length; s2 < u; s2++) i3 ? a2 = e4[l2](t5.val[s2][1].substring(0, i3)) : p ? (a2 = e4[l2](t5.val[s2][1]), t5[l2].push([2 === t5.type ? e4[l2](t5.val[s2][0]) : void 0, a2])) : a2 = t5[l2][s2][1], c && (c += o4), 2 === t5.type && (c += i3 ? e4[l2](t5.val[s2][0].substring(0, i3)) : t5[l2][s2][0], c += n4 ? f || a2 ? "=" : "" : ","), c += a2;
            return c;
          }, o3.noConflict = function() {
            return t4.URITemplate === o3 && (t4.URITemplate = r5), o3;
          }, a.expand = function(e5, t5) {
            var r6 = "";
            this.parts && this.parts.length || this.parse(), e5 instanceof i2 || (e5 = new i2(e5));
            for (var n4 = 0, a2 = this.parts.length; n4 < a2; n4++) r6 += "string" == typeof this.parts[n4] ? this.parts[n4] : o3.expand(this.parts[n4], e5, t5);
            return r6;
          }, a.parse = function() {
            var e5, t5, r6, n4 = this.expression, i3 = o3.EXPRESSION_PATTERN, a2 = o3.VARIABLE_PATTERN, u = o3.VARIABLE_NAME_PATTERN, c = o3.LITERAL_PATTERN, l2 = [], f = 0, p = function(e6) {
              if (e6.match(c)) throw new Error('Invalid Literal "' + e6 + '"');
              return e6;
            };
            for (i3.lastIndex = 0; ; ) {
              if (null === (t5 = i3.exec(n4))) {
                l2.push(p(n4.substring(f)));
                break;
              }
              if (l2.push(p(n4.substring(f, t5.index))), f = t5.index + t5[0].length, !s[t5[1]]) throw new Error('Unknown Operator "' + t5[1] + '" in "' + t5[0] + '"');
              if (!t5[3]) throw new Error('Unclosed Expression "' + t5[0] + '"');
              for (var h = 0, d = (e5 = t5[2].split(",")).length; h < d; h++) {
                if (null === (r6 = e5[h].match(a2))) throw new Error('Invalid Variable "' + e5[h] + '" in "' + t5[0] + '"');
                if (r6[1].match(u)) throw new Error('Invalid Variable Name "' + r6[1] + '" in "' + t5[0] + '"');
                e5[h] = { name: r6[1], explode: !!r6[3], maxlength: r6[4] && parseInt(r6[4], 10) };
              }
              if (!e5.length) throw new Error('Expression Missing Variable(s) "' + t5[0] + '"');
              l2.push({ expression: t5[0], operator: t5[1], variables: e5 });
            }
            return l2.length || l2.push(p(n4)), this.parts = l2, this;
          }, i2.prototype.get = function(e5) {
            var t5, r6, o4, i3 = this.data, a2 = { type: 0, val: [], encode: [], encodeReserved: [] };
            if (void 0 !== this.cache[e5]) return this.cache[e5];
            if (this.cache[e5] = a2, null == (o4 = "[object Function]" === String(Object.prototype.toString.call(i3)) ? i3(e5) : "[object Function]" === String(Object.prototype.toString.call(i3[e5])) ? i3[e5](e5) : i3[e5])) return a2;
            if ("[object Array]" === String(Object.prototype.toString.call(o4))) {
              for (t5 = 0, r6 = o4.length; t5 < r6; t5++) void 0 !== o4[t5] && null !== o4[t5] && a2.val.push([void 0, String(o4[t5])]);
              a2.val.length && (a2.type = 3);
            } else if ("[object Object]" === String(Object.prototype.toString.call(o4))) {
              for (t5 in o4) n3.call(o4, t5) && void 0 !== o4[t5] && null !== o4[t5] && a2.val.push([t5, String(o4[t5])]);
              a2.val.length && (a2.type = 2);
            } else a2.type = 1, a2.val.push([void 0, String(o4)]);
            return a2;
          }, e4.expand = function(t5, r6) {
            var n4 = new o3(t5).expand(r6);
            return new e4(n4);
          }, o3;
        });
      }, 9340: function(e3, t3, r4) {
        var n2;
        e3 = r4.nmd(e3), function(o2) {
          t3 && t3.nodeType, e3 && e3.nodeType;
          var i = "object" == typeof r4.g && r4.g;
          i.global !== i && i.window !== i && i.self;
          var a, s = 2147483647, u = 36, c = 1, l2 = 26, f = 38, p = 700, h = 72, d = 128, y = "-", m = /^xn--/, v = /[^\x20-\x7E]/, g = /[\x2E\u3002\uFF0E\uFF61]/g, b = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, w = u - c, S = Math.floor, E = String.fromCharCode;
          function _(e4) {
            throw new RangeError(b[e4]);
          }
          function k(e4, t4) {
            for (var r5 = e4.length, n3 = []; r5--; ) n3[r5] = t4(e4[r5]);
            return n3;
          }
          function T(e4, t4) {
            var r5 = e4.split("@"), n3 = "";
            return r5.length > 1 && (n3 = r5[0] + "@", e4 = r5[1]), n3 + k((e4 = e4.replace(g, ".")).split("."), t4).join(".");
          }
          function O(e4) {
            for (var t4, r5, n3 = [], o3 = 0, i2 = e4.length; o3 < i2; ) (t4 = e4.charCodeAt(o3++)) >= 55296 && t4 <= 56319 && o3 < i2 ? 56320 == (64512 & (r5 = e4.charCodeAt(o3++))) ? n3.push(((1023 & t4) << 10) + (1023 & r5) + 65536) : (n3.push(t4), o3--) : n3.push(t4);
            return n3;
          }
          function x(e4) {
            return k(e4, function(e5) {
              var t4 = "";
              return e5 > 65535 && (t4 += E((e5 -= 65536) >>> 10 & 1023 | 55296), e5 = 56320 | 1023 & e5), t4 += E(e5);
            }).join("");
          }
          function A(e4, t4) {
            return e4 + 22 + 75 * (e4 < 26) - ((0 != t4) << 5);
          }
          function P(e4, t4, r5) {
            var n3 = 0;
            for (e4 = r5 ? S(e4 / p) : e4 >> 1, e4 += S(e4 / t4); e4 > w * l2 >> 1; n3 += u) e4 = S(e4 / w);
            return S(n3 + (w + 1) * e4 / (e4 + f));
          }
          function R(e4) {
            var t4, r5, n3, o3, i2, a2, f2, p2, m2, v2, g2, b2 = [], w2 = e4.length, E2 = 0, k2 = d, T2 = h;
            for ((r5 = e4.lastIndexOf(y)) < 0 && (r5 = 0), n3 = 0; n3 < r5; ++n3) e4.charCodeAt(n3) >= 128 && _("not-basic"), b2.push(e4.charCodeAt(n3));
            for (o3 = r5 > 0 ? r5 + 1 : 0; o3 < w2; ) {
              for (i2 = E2, a2 = 1, f2 = u; o3 >= w2 && _("invalid-input"), ((p2 = (g2 = e4.charCodeAt(o3++)) - 48 < 10 ? g2 - 22 : g2 - 65 < 26 ? g2 - 65 : g2 - 97 < 26 ? g2 - 97 : u) >= u || p2 > S((s - E2) / a2)) && _("overflow"), E2 += p2 * a2, !(p2 < (m2 = f2 <= T2 ? c : f2 >= T2 + l2 ? l2 : f2 - T2)); f2 += u) a2 > S(s / (v2 = u - m2)) && _("overflow"), a2 *= v2;
              T2 = P(E2 - i2, t4 = b2.length + 1, 0 == i2), S(E2 / t4) > s - k2 && _("overflow"), k2 += S(E2 / t4), E2 %= t4, b2.splice(E2++, 0, k2);
            }
            return x(b2);
          }
          function j(e4) {
            var t4, r5, n3, o3, i2, a2, f2, p2, m2, v2, g2, b2, w2, k2, T2, x2 = [];
            for (b2 = (e4 = O(e4)).length, t4 = d, r5 = 0, i2 = h, a2 = 0; a2 < b2; ++a2) (g2 = e4[a2]) < 128 && x2.push(E(g2));
            for (n3 = o3 = x2.length, o3 && x2.push(y); n3 < b2; ) {
              for (f2 = s, a2 = 0; a2 < b2; ++a2) (g2 = e4[a2]) >= t4 && g2 < f2 && (f2 = g2);
              for (f2 - t4 > S((s - r5) / (w2 = n3 + 1)) && _("overflow"), r5 += (f2 - t4) * w2, t4 = f2, a2 = 0; a2 < b2; ++a2) if ((g2 = e4[a2]) < t4 && ++r5 > s && _("overflow"), g2 == t4) {
                for (p2 = r5, m2 = u; !(p2 < (v2 = m2 <= i2 ? c : m2 >= i2 + l2 ? l2 : m2 - i2)); m2 += u) T2 = p2 - v2, k2 = u - v2, x2.push(E(A(v2 + T2 % k2, 0))), p2 = S(T2 / k2);
                x2.push(E(A(p2, 0))), i2 = P(r5, w2, n3 == o3), r5 = 0, ++n3;
              }
              ++r5, ++t4;
            }
            return x2.join("");
          }
          a = { version: "1.3.2", ucs2: { decode: O, encode: x }, decode: R, encode: j, toASCII: function(e4) {
            return T(e4, function(e5) {
              return v.test(e5) ? "xn--" + j(e5) : e5;
            });
          }, toUnicode: function(e4) {
            return T(e4, function(e5) {
              return m.test(e5) ? R(e5.slice(4).toLowerCase()) : e5;
            });
          } }, void 0 === (n2 = (function() {
            return a;
          }).call(t3, r4, t3, e3)) || (e3.exports = n2);
        }();
      }, 1270: function(e3, t3, r4) {
        var n2;
        e3 = r4.nmd(e3), function(o2) {
          t3 && t3.nodeType, e3 && e3.nodeType;
          var i = "object" == typeof r4.g && r4.g;
          i.global !== i && i.window !== i && i.self;
          var a, s = 2147483647, u = 36, c = 1, l2 = 26, f = 38, p = 700, h = 72, d = 128, y = "-", m = /^xn--/, v = /[^\x20-\x7E]/, g = /[\x2E\u3002\uFF0E\uFF61]/g, b = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, w = u - c, S = Math.floor, E = String.fromCharCode;
          function _(e4) {
            throw new RangeError(b[e4]);
          }
          function k(e4, t4) {
            for (var r5 = e4.length, n3 = []; r5--; ) n3[r5] = t4(e4[r5]);
            return n3;
          }
          function T(e4, t4) {
            var r5 = e4.split("@"), n3 = "";
            return r5.length > 1 && (n3 = r5[0] + "@", e4 = r5[1]), n3 + k((e4 = e4.replace(g, ".")).split("."), t4).join(".");
          }
          function O(e4) {
            for (var t4, r5, n3 = [], o3 = 0, i2 = e4.length; o3 < i2; ) (t4 = e4.charCodeAt(o3++)) >= 55296 && t4 <= 56319 && o3 < i2 ? 56320 == (64512 & (r5 = e4.charCodeAt(o3++))) ? n3.push(((1023 & t4) << 10) + (1023 & r5) + 65536) : (n3.push(t4), o3--) : n3.push(t4);
            return n3;
          }
          function x(e4) {
            return k(e4, function(e5) {
              var t4 = "";
              return e5 > 65535 && (t4 += E((e5 -= 65536) >>> 10 & 1023 | 55296), e5 = 56320 | 1023 & e5), t4 += E(e5);
            }).join("");
          }
          function A(e4, t4) {
            return e4 + 22 + 75 * (e4 < 26) - ((0 != t4) << 5);
          }
          function P(e4, t4, r5) {
            var n3 = 0;
            for (e4 = r5 ? S(e4 / p) : e4 >> 1, e4 += S(e4 / t4); e4 > w * l2 >> 1; n3 += u) e4 = S(e4 / w);
            return S(n3 + (w + 1) * e4 / (e4 + f));
          }
          function R(e4) {
            var t4, r5, n3, o3, i2, a2, f2, p2, m2, v2, g2, b2 = [], w2 = e4.length, E2 = 0, k2 = d, T2 = h;
            for ((r5 = e4.lastIndexOf(y)) < 0 && (r5 = 0), n3 = 0; n3 < r5; ++n3) e4.charCodeAt(n3) >= 128 && _("not-basic"), b2.push(e4.charCodeAt(n3));
            for (o3 = r5 > 0 ? r5 + 1 : 0; o3 < w2; ) {
              for (i2 = E2, a2 = 1, f2 = u; o3 >= w2 && _("invalid-input"), ((p2 = (g2 = e4.charCodeAt(o3++)) - 48 < 10 ? g2 - 22 : g2 - 65 < 26 ? g2 - 65 : g2 - 97 < 26 ? g2 - 97 : u) >= u || p2 > S((s - E2) / a2)) && _("overflow"), E2 += p2 * a2, !(p2 < (m2 = f2 <= T2 ? c : f2 >= T2 + l2 ? l2 : f2 - T2)); f2 += u) a2 > S(s / (v2 = u - m2)) && _("overflow"), a2 *= v2;
              T2 = P(E2 - i2, t4 = b2.length + 1, 0 == i2), S(E2 / t4) > s - k2 && _("overflow"), k2 += S(E2 / t4), E2 %= t4, b2.splice(E2++, 0, k2);
            }
            return x(b2);
          }
          function j(e4) {
            var t4, r5, n3, o3, i2, a2, f2, p2, m2, v2, g2, b2, w2, k2, T2, x2 = [];
            for (b2 = (e4 = O(e4)).length, t4 = d, r5 = 0, i2 = h, a2 = 0; a2 < b2; ++a2) (g2 = e4[a2]) < 128 && x2.push(E(g2));
            for (n3 = o3 = x2.length, o3 && x2.push(y); n3 < b2; ) {
              for (f2 = s, a2 = 0; a2 < b2; ++a2) (g2 = e4[a2]) >= t4 && g2 < f2 && (f2 = g2);
              for (f2 - t4 > S((s - r5) / (w2 = n3 + 1)) && _("overflow"), r5 += (f2 - t4) * w2, t4 = f2, a2 = 0; a2 < b2; ++a2) if ((g2 = e4[a2]) < t4 && ++r5 > s && _("overflow"), g2 == t4) {
                for (p2 = r5, m2 = u; !(p2 < (v2 = m2 <= i2 ? c : m2 >= i2 + l2 ? l2 : m2 - i2)); m2 += u) T2 = p2 - v2, k2 = u - v2, x2.push(E(A(v2 + T2 % k2, 0))), p2 = S(T2 / k2);
                x2.push(E(A(p2, 0))), i2 = P(r5, w2, n3 == o3), r5 = 0, ++n3;
              }
              ++r5, ++t4;
            }
            return x2.join("");
          }
          a = { version: "1.4.1", ucs2: { decode: O, encode: x }, decode: R, encode: j, toASCII: function(e4) {
            return T(e4, function(e5) {
              return v.test(e5) ? "xn--" + j(e5) : e5;
            });
          }, toUnicode: function(e4) {
            return T(e4, function(e5) {
              return m.test(e5) ? R(e5.slice(4).toLowerCase()) : e5;
            });
          } }, void 0 === (n2 = (function() {
            return a;
          }).call(t3, r4, t3, e3)) || (e3.exports = n2);
        }();
      }, 8835: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(1270);
        function o2() {
          this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
        }
        var i = /^([a-z0-9.+-]+:)/i, a = /:[0-9]*$/, s = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/, u = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), c = ["'"].concat(u), l2 = ["%", "/", "?", ";", "#"].concat(c), f = ["/", "?", "#"], p = /^[+a-z0-9A-Z_-]{0,63}$/, h = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, d = { javascript: true, "javascript:": true }, y = { javascript: true, "javascript:": true }, m = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, v = r4(5373);
        function g(e4, t4, r5) {
          if (e4 && "object" == typeof e4 && e4 instanceof o2) return e4;
          var n3 = new o2();
          return n3.parse(e4, t4, r5), n3;
        }
        o2.prototype.parse = function(e4, t4, r5) {
          if ("string" != typeof e4) throw new TypeError("Parameter 'url' must be a string, not " + typeof e4);
          var o3 = e4.indexOf("?"), a2 = -1 !== o3 && o3 < e4.indexOf("#") ? "?" : "#", u2 = e4.split(a2);
          u2[0] = u2[0].replace(/\\/g, "/");
          var g2 = e4 = u2.join(a2);
          if (g2 = g2.trim(), !r5 && 1 === e4.split("#").length) {
            var b = s.exec(g2);
            if (b) return this.path = g2, this.href = g2, this.pathname = b[1], b[2] ? (this.search = b[2], this.query = t4 ? v.parse(this.search.substr(1)) : this.search.substr(1)) : t4 && (this.search = "", this.query = {}), this;
          }
          var w = i.exec(g2);
          if (w) {
            var S = (w = w[0]).toLowerCase();
            this.protocol = S, g2 = g2.substr(w.length);
          }
          if (r5 || w || g2.match(/^\/\/[^@/]+@[^@/]+/)) {
            var E = "//" === g2.substr(0, 2);
            !E || w && y[w] || (g2 = g2.substr(2), this.slashes = true);
          }
          if (!y[w] && (E || w && !m[w])) {
            for (var _, k, T = -1, O = 0; O < f.length; O++) {
              -1 !== (x = g2.indexOf(f[O])) && (-1 === T || x < T) && (T = x);
            }
            -1 !== (k = -1 === T ? g2.lastIndexOf("@") : g2.lastIndexOf("@", T)) && (_ = g2.slice(0, k), g2 = g2.slice(k + 1), this.auth = decodeURIComponent(_)), T = -1;
            for (O = 0; O < l2.length; O++) {
              var x;
              -1 !== (x = g2.indexOf(l2[O])) && (-1 === T || x < T) && (T = x);
            }
            -1 === T && (T = g2.length), this.host = g2.slice(0, T), g2 = g2.slice(T), this.parseHost(), this.hostname = this.hostname || "";
            var A = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
            if (!A) for (var P = this.hostname.split(/\./), R = (O = 0, P.length); O < R; O++) {
              var j = P[O];
              if (j && !j.match(p)) {
                for (var I = "", C = 0, L = j.length; C < L; C++) j.charCodeAt(C) > 127 ? I += "x" : I += j[C];
                if (!I.match(p)) {
                  var B = P.slice(0, O), N = P.slice(O + 1), U = j.match(h);
                  U && (B.push(U[1]), N.unshift(U[2])), N.length && (g2 = "/" + N.join(".") + g2), this.hostname = B.join(".");
                  break;
                }
              }
            }
            this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), A || (this.hostname = n2.toASCII(this.hostname));
            var M = this.port ? ":" + this.port : "", D = this.hostname || "";
            this.host = D + M, this.href += this.host, A && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== g2[0] && (g2 = "/" + g2));
          }
          if (!d[S]) for (O = 0, R = c.length; O < R; O++) {
            var F = c[O];
            if (-1 !== g2.indexOf(F)) {
              var V = encodeURIComponent(F);
              V === F && (V = escape(F)), g2 = g2.split(F).join(V);
            }
          }
          var q = g2.indexOf("#");
          -1 !== q && (this.hash = g2.substr(q), g2 = g2.slice(0, q));
          var K = g2.indexOf("?");
          if (-1 !== K ? (this.search = g2.substr(K), this.query = g2.substr(K + 1), t4 && (this.query = v.parse(this.query)), g2 = g2.slice(0, K)) : t4 && (this.search = "", this.query = {}), g2 && (this.pathname = g2), m[S] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
            M = this.pathname || "";
            var H = this.search || "";
            this.path = M + H;
          }
          return this.href = this.format(), this;
        }, o2.prototype.format = function() {
          var e4 = this.auth || "";
          e4 && (e4 = (e4 = encodeURIComponent(e4)).replace(/%3A/i, ":"), e4 += "@");
          var t4 = this.protocol || "", r5 = this.pathname || "", n3 = this.hash || "", o3 = false, i2 = "";
          this.host ? o3 = e4 + this.host : this.hostname && (o3 = e4 + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (o3 += ":" + this.port)), this.query && "object" == typeof this.query && Object.keys(this.query).length && (i2 = v.stringify(this.query, { arrayFormat: "repeat", addQueryPrefix: false }));
          var a2 = this.search || i2 && "?" + i2 || "";
          return t4 && ":" !== t4.substr(-1) && (t4 += ":"), this.slashes || (!t4 || m[t4]) && false !== o3 ? (o3 = "//" + (o3 || ""), r5 && "/" !== r5.charAt(0) && (r5 = "/" + r5)) : o3 || (o3 = ""), n3 && "#" !== n3.charAt(0) && (n3 = "#" + n3), a2 && "?" !== a2.charAt(0) && (a2 = "?" + a2), t4 + o3 + (r5 = r5.replace(/[?#]/g, function(e5) {
            return encodeURIComponent(e5);
          })) + (a2 = a2.replace("#", "%23")) + n3;
        }, o2.prototype.resolve = function(e4) {
          return this.resolveObject(g(e4, false, true)).format();
        }, o2.prototype.resolveObject = function(e4) {
          if ("string" == typeof e4) {
            var t4 = new o2();
            t4.parse(e4, false, true), e4 = t4;
          }
          for (var r5 = new o2(), n3 = Object.keys(this), i2 = 0; i2 < n3.length; i2++) {
            var a2 = n3[i2];
            r5[a2] = this[a2];
          }
          if (r5.hash = e4.hash, "" === e4.href) return r5.href = r5.format(), r5;
          if (e4.slashes && !e4.protocol) {
            for (var s2 = Object.keys(e4), u2 = 0; u2 < s2.length; u2++) {
              var c2 = s2[u2];
              "protocol" !== c2 && (r5[c2] = e4[c2]);
            }
            return m[r5.protocol] && r5.hostname && !r5.pathname && (r5.pathname = "/", r5.path = r5.pathname), r5.href = r5.format(), r5;
          }
          if (e4.protocol && e4.protocol !== r5.protocol) {
            if (!m[e4.protocol]) {
              for (var l3 = Object.keys(e4), f2 = 0; f2 < l3.length; f2++) {
                var p2 = l3[f2];
                r5[p2] = e4[p2];
              }
              return r5.href = r5.format(), r5;
            }
            if (r5.protocol = e4.protocol, e4.host || y[e4.protocol]) r5.pathname = e4.pathname;
            else {
              for (var h2 = (e4.pathname || "").split("/"); h2.length && !(e4.host = h2.shift()); ) ;
              e4.host || (e4.host = ""), e4.hostname || (e4.hostname = ""), "" !== h2[0] && h2.unshift(""), h2.length < 2 && h2.unshift(""), r5.pathname = h2.join("/");
            }
            if (r5.search = e4.search, r5.query = e4.query, r5.host = e4.host || "", r5.auth = e4.auth, r5.hostname = e4.hostname || e4.host, r5.port = e4.port, r5.pathname || r5.search) {
              var d2 = r5.pathname || "", v2 = r5.search || "";
              r5.path = d2 + v2;
            }
            return r5.slashes = r5.slashes || e4.slashes, r5.href = r5.format(), r5;
          }
          var g2 = r5.pathname && "/" === r5.pathname.charAt(0), b = e4.host || e4.pathname && "/" === e4.pathname.charAt(0), w = b || g2 || r5.host && e4.pathname, S = w, E = r5.pathname && r5.pathname.split("/") || [], _ = (h2 = e4.pathname && e4.pathname.split("/") || [], r5.protocol && !m[r5.protocol]);
          if (_ && (r5.hostname = "", r5.port = null, r5.host && ("" === E[0] ? E[0] = r5.host : E.unshift(r5.host)), r5.host = "", e4.protocol && (e4.hostname = null, e4.port = null, e4.host && ("" === h2[0] ? h2[0] = e4.host : h2.unshift(e4.host)), e4.host = null), w = w && ("" === h2[0] || "" === E[0])), b) r5.host = e4.host || "" === e4.host ? e4.host : r5.host, r5.hostname = e4.hostname || "" === e4.hostname ? e4.hostname : r5.hostname, r5.search = e4.search, r5.query = e4.query, E = h2;
          else if (h2.length) E || (E = []), E.pop(), E = E.concat(h2), r5.search = e4.search, r5.query = e4.query;
          else if (null != e4.search) {
            if (_) r5.host = E.shift(), r5.hostname = r5.host, (A = !!(r5.host && r5.host.indexOf("@") > 0) && r5.host.split("@")) && (r5.auth = A.shift(), r5.hostname = A.shift(), r5.host = r5.hostname);
            return r5.search = e4.search, r5.query = e4.query, null === r5.pathname && null === r5.search || (r5.path = (r5.pathname ? r5.pathname : "") + (r5.search ? r5.search : "")), r5.href = r5.format(), r5;
          }
          if (!E.length) return r5.pathname = null, r5.search ? r5.path = "/" + r5.search : r5.path = null, r5.href = r5.format(), r5;
          for (var k = E.slice(-1)[0], T = (r5.host || e4.host || E.length > 1) && ("." === k || ".." === k) || "" === k, O = 0, x = E.length; x >= 0; x--) "." === (k = E[x]) ? E.splice(x, 1) : ".." === k ? (E.splice(x, 1), O++) : O && (E.splice(x, 1), O--);
          if (!w && !S) for (; O--; O) E.unshift("..");
          !w || "" === E[0] || E[0] && "/" === E[0].charAt(0) || E.unshift(""), T && "/" !== E.join("/").substr(-1) && E.push("");
          var A, P = "" === E[0] || E[0] && "/" === E[0].charAt(0);
          _ && (r5.hostname = P ? "" : E.length ? E.shift() : "", r5.host = r5.hostname, (A = !!(r5.host && r5.host.indexOf("@") > 0) && r5.host.split("@")) && (r5.auth = A.shift(), r5.hostname = A.shift(), r5.host = r5.hostname));
          return (w = w || r5.host && E.length) && !P && E.unshift(""), E.length > 0 ? r5.pathname = E.join("/") : (r5.pathname = null, r5.path = null), null === r5.pathname && null === r5.search || (r5.path = (r5.pathname ? r5.pathname : "") + (r5.search ? r5.search : "")), r5.auth = e4.auth || r5.auth, r5.slashes = r5.slashes || e4.slashes, r5.href = r5.format(), r5;
        }, o2.prototype.parseHost = function() {
          var e4 = this.host, t4 = a.exec(e4);
          t4 && (":" !== (t4 = t4[0]) && (this.port = t4.substr(1)), e4 = e4.substr(0, e4.length - t4.length)), e4 && (this.hostname = e4);
        }, t3.parse = g, t3.resolve = function(e4, t4) {
          return g(e4, false, true).resolve(t4);
        }, t3.resolveObject = function(e4, t4) {
          return e4 ? g(e4, false, true).resolveObject(t4) : t4;
        }, t3.format = function(e4) {
          return "string" == typeof e4 && (e4 = g(e4)), e4 instanceof o2 ? e4.format() : o2.prototype.format.call(e4);
        }, t3.Url = o2;
      }, 4643: (e3, t3, r4) => {
        function n2(e4) {
          try {
            if (!r4.g.localStorage) return false;
          } catch (e5) {
            return false;
          }
          var t4 = r4.g.localStorage[e4];
          return null != t4 && "true" === String(t4).toLowerCase();
        }
        e3.exports = function(e4, t4) {
          if (n2("noDeprecation")) return e4;
          var r5 = false;
          return function() {
            if (!r5) {
              if (n2("throwDeprecation")) throw new Error(t4);
              n2("traceDeprecation") ? console.trace(t4) : console.warn(t4), r5 = true;
            }
            return e4.apply(this, arguments);
          };
        };
      }, 1135: (e3) => {
        e3.exports = function(e4) {
          return e4 && "object" == typeof e4 && "function" == typeof e4.copy && "function" == typeof e4.fill && "function" == typeof e4.readUInt8;
        };
      }, 9032: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(7244), o2 = r4(8184), i = r4(5767), a = r4(5680);
        function s(e4) {
          return e4.call.bind(e4);
        }
        var u = "undefined" != typeof BigInt, c = "undefined" != typeof Symbol, l2 = s(Object.prototype.toString), f = s(Number.prototype.valueOf), p = s(String.prototype.valueOf), h = s(Boolean.prototype.valueOf);
        if (u) var d = s(BigInt.prototype.valueOf);
        if (c) var y = s(Symbol.prototype.valueOf);
        function m(e4, t4) {
          if ("object" != typeof e4) return false;
          try {
            return t4(e4), true;
          } catch (e5) {
            return false;
          }
        }
        function v(e4) {
          return "[object Map]" === l2(e4);
        }
        function g(e4) {
          return "[object Set]" === l2(e4);
        }
        function b(e4) {
          return "[object WeakMap]" === l2(e4);
        }
        function w(e4) {
          return "[object WeakSet]" === l2(e4);
        }
        function S(e4) {
          return "[object ArrayBuffer]" === l2(e4);
        }
        function E(e4) {
          return "undefined" != typeof ArrayBuffer && (S.working ? S(e4) : e4 instanceof ArrayBuffer);
        }
        function _(e4) {
          return "[object DataView]" === l2(e4);
        }
        function k(e4) {
          return "undefined" != typeof DataView && (_.working ? _(e4) : e4 instanceof DataView);
        }
        t3.isArgumentsObject = n2, t3.isGeneratorFunction = o2, t3.isTypedArray = a, t3.isPromise = function(e4) {
          return "undefined" != typeof Promise && e4 instanceof Promise || null !== e4 && "object" == typeof e4 && "function" == typeof e4.then && "function" == typeof e4.catch;
        }, t3.isArrayBufferView = function(e4) {
          return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e4) : a(e4) || k(e4);
        }, t3.isUint8Array = function(e4) {
          return "Uint8Array" === i(e4);
        }, t3.isUint8ClampedArray = function(e4) {
          return "Uint8ClampedArray" === i(e4);
        }, t3.isUint16Array = function(e4) {
          return "Uint16Array" === i(e4);
        }, t3.isUint32Array = function(e4) {
          return "Uint32Array" === i(e4);
        }, t3.isInt8Array = function(e4) {
          return "Int8Array" === i(e4);
        }, t3.isInt16Array = function(e4) {
          return "Int16Array" === i(e4);
        }, t3.isInt32Array = function(e4) {
          return "Int32Array" === i(e4);
        }, t3.isFloat32Array = function(e4) {
          return "Float32Array" === i(e4);
        }, t3.isFloat64Array = function(e4) {
          return "Float64Array" === i(e4);
        }, t3.isBigInt64Array = function(e4) {
          return "BigInt64Array" === i(e4);
        }, t3.isBigUint64Array = function(e4) {
          return "BigUint64Array" === i(e4);
        }, v.working = "undefined" != typeof Map && v(/* @__PURE__ */ new Map()), t3.isMap = function(e4) {
          return "undefined" != typeof Map && (v.working ? v(e4) : e4 instanceof Map);
        }, g.working = "undefined" != typeof Set && g(/* @__PURE__ */ new Set()), t3.isSet = function(e4) {
          return "undefined" != typeof Set && (g.working ? g(e4) : e4 instanceof Set);
        }, b.working = "undefined" != typeof WeakMap && b(/* @__PURE__ */ new WeakMap()), t3.isWeakMap = function(e4) {
          return "undefined" != typeof WeakMap && (b.working ? b(e4) : e4 instanceof WeakMap);
        }, w.working = "undefined" != typeof WeakSet && w(/* @__PURE__ */ new WeakSet()), t3.isWeakSet = function(e4) {
          return w(e4);
        }, S.working = "undefined" != typeof ArrayBuffer && S(new ArrayBuffer()), t3.isArrayBuffer = E, _.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && _(new DataView(new ArrayBuffer(1), 0, 1)), t3.isDataView = k;
        var T = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : void 0;
        function O(e4) {
          return "[object SharedArrayBuffer]" === l2(e4);
        }
        function x(e4) {
          return void 0 !== T && (void 0 === O.working && (O.working = O(new T())), O.working ? O(e4) : e4 instanceof T);
        }
        function A(e4) {
          return m(e4, f);
        }
        function P(e4) {
          return m(e4, p);
        }
        function R(e4) {
          return m(e4, h);
        }
        function j(e4) {
          return u && m(e4, d);
        }
        function I(e4) {
          return c && m(e4, y);
        }
        t3.isSharedArrayBuffer = x, t3.isAsyncFunction = function(e4) {
          return "[object AsyncFunction]" === l2(e4);
        }, t3.isMapIterator = function(e4) {
          return "[object Map Iterator]" === l2(e4);
        }, t3.isSetIterator = function(e4) {
          return "[object Set Iterator]" === l2(e4);
        }, t3.isGeneratorObject = function(e4) {
          return "[object Generator]" === l2(e4);
        }, t3.isWebAssemblyCompiledModule = function(e4) {
          return "[object WebAssembly.Module]" === l2(e4);
        }, t3.isNumberObject = A, t3.isStringObject = P, t3.isBooleanObject = R, t3.isBigIntObject = j, t3.isSymbolObject = I, t3.isBoxedPrimitive = function(e4) {
          return A(e4) || P(e4) || R(e4) || j(e4) || I(e4);
        }, t3.isAnyArrayBuffer = function(e4) {
          return "undefined" != typeof Uint8Array && (E(e4) || x(e4));
        }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(e4) {
          Object.defineProperty(t3, e4, { enumerable: false, value: function() {
            throw new Error(e4 + " is not supported in userland");
          } });
        });
      }, 537: (e3, t3, r4) => {
        var n2 = Object.getOwnPropertyDescriptors || function(e4) {
          for (var t4 = Object.keys(e4), r5 = {}, n3 = 0; n3 < t4.length; n3++) r5[t4[n3]] = Object.getOwnPropertyDescriptor(e4, t4[n3]);
          return r5;
        }, o2 = /%[sdj%]/g;
        t3.format = function(e4) {
          if (!g(e4)) {
            for (var t4 = [], r5 = 0; r5 < arguments.length; r5++) t4.push(u(arguments[r5]));
            return t4.join(" ");
          }
          r5 = 1;
          for (var n3 = arguments, i2 = n3.length, a2 = String(e4).replace(o2, function(e5) {
            if ("%%" === e5) return "%";
            if (r5 >= i2) return e5;
            switch (e5) {
              case "%s":
                return String(n3[r5++]);
              case "%d":
                return Number(n3[r5++]);
              case "%j":
                try {
                  return JSON.stringify(n3[r5++]);
                } catch (e6) {
                  return "[Circular]";
                }
              default:
                return e5;
            }
          }), s2 = n3[r5]; r5 < i2; s2 = n3[++r5]) m(s2) || !S(s2) ? a2 += " " + s2 : a2 += " " + u(s2);
          return a2;
        }, t3.deprecate = function(e4, r5) {
          if ("undefined" != typeof process && true === process.noDeprecation) return e4;
          if ("undefined" == typeof process) return function() {
            return t3.deprecate(e4, r5).apply(this, arguments);
          };
          var n3 = false;
          return function() {
            if (!n3) {
              if (process.throwDeprecation) throw new Error(r5);
              process.traceDeprecation ? console.trace(r5) : console.error(r5), n3 = true;
            }
            return e4.apply(this, arguments);
          };
        };
        var i = {}, a = /^$/;
        if (process.env.NODE_DEBUG) {
          var s = process.env.NODE_DEBUG;
          s = s.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), a = new RegExp("^" + s + "$", "i");
        }
        function u(e4, r5) {
          var n3 = { seen: [], stylize: l2 };
          return arguments.length >= 3 && (n3.depth = arguments[2]), arguments.length >= 4 && (n3.colors = arguments[3]), y(r5) ? n3.showHidden = r5 : r5 && t3._extend(n3, r5), b(n3.showHidden) && (n3.showHidden = false), b(n3.depth) && (n3.depth = 2), b(n3.colors) && (n3.colors = false), b(n3.customInspect) && (n3.customInspect = true), n3.colors && (n3.stylize = c), f(n3, e4, n3.depth);
        }
        function c(e4, t4) {
          var r5 = u.styles[t4];
          return r5 ? "\x1B[" + u.colors[r5][0] + "m" + e4 + "\x1B[" + u.colors[r5][1] + "m" : e4;
        }
        function l2(e4, t4) {
          return e4;
        }
        function f(e4, r5, n3) {
          if (e4.customInspect && r5 && k(r5.inspect) && r5.inspect !== t3.inspect && (!r5.constructor || r5.constructor.prototype !== r5)) {
            var o3 = r5.inspect(n3, e4);
            return g(o3) || (o3 = f(e4, o3, n3)), o3;
          }
          var i2 = function(e5, t4) {
            if (b(t4)) return e5.stylize("undefined", "undefined");
            if (g(t4)) {
              var r6 = "'" + JSON.stringify(t4).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return e5.stylize(r6, "string");
            }
            if (v(t4)) return e5.stylize("" + t4, "number");
            if (y(t4)) return e5.stylize("" + t4, "boolean");
            if (m(t4)) return e5.stylize("null", "null");
          }(e4, r5);
          if (i2) return i2;
          var a2 = Object.keys(r5), s2 = function(e5) {
            var t4 = {};
            return e5.forEach(function(e6, r6) {
              t4[e6] = true;
            }), t4;
          }(a2);
          if (e4.showHidden && (a2 = Object.getOwnPropertyNames(r5)), _(r5) && (a2.indexOf("message") >= 0 || a2.indexOf("description") >= 0)) return p(r5);
          if (0 === a2.length) {
            if (k(r5)) {
              var u2 = r5.name ? ": " + r5.name : "";
              return e4.stylize("[Function" + u2 + "]", "special");
            }
            if (w(r5)) return e4.stylize(RegExp.prototype.toString.call(r5), "regexp");
            if (E(r5)) return e4.stylize(Date.prototype.toString.call(r5), "date");
            if (_(r5)) return p(r5);
          }
          var c2, l3 = "", S2 = false, T2 = ["{", "}"];
          (d(r5) && (S2 = true, T2 = ["[", "]"]), k(r5)) && (l3 = " [Function" + (r5.name ? ": " + r5.name : "") + "]");
          return w(r5) && (l3 = " " + RegExp.prototype.toString.call(r5)), E(r5) && (l3 = " " + Date.prototype.toUTCString.call(r5)), _(r5) && (l3 = " " + p(r5)), 0 !== a2.length || S2 && 0 != r5.length ? n3 < 0 ? w(r5) ? e4.stylize(RegExp.prototype.toString.call(r5), "regexp") : e4.stylize("[Object]", "special") : (e4.seen.push(r5), c2 = S2 ? function(e5, t4, r6, n4, o4) {
            for (var i3 = [], a3 = 0, s3 = t4.length; a3 < s3; ++a3) A(t4, String(a3)) ? i3.push(h(e5, t4, r6, n4, String(a3), true)) : i3.push("");
            return o4.forEach(function(o5) {
              o5.match(/^\d+$/) || i3.push(h(e5, t4, r6, n4, o5, true));
            }), i3;
          }(e4, r5, n3, s2, a2) : a2.map(function(t4) {
            return h(e4, r5, n3, s2, t4, S2);
          }), e4.seen.pop(), function(e5, t4, r6) {
            var n4 = e5.reduce(function(e6, t5) {
              return t5.indexOf("\n") >= 0 && 0, e6 + t5.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0);
            if (n4 > 60) return r6[0] + ("" === t4 ? "" : t4 + "\n ") + " " + e5.join(",\n  ") + " " + r6[1];
            return r6[0] + t4 + " " + e5.join(", ") + " " + r6[1];
          }(c2, l3, T2)) : T2[0] + l3 + T2[1];
        }
        function p(e4) {
          return "[" + Error.prototype.toString.call(e4) + "]";
        }
        function h(e4, t4, r5, n3, o3, i2) {
          var a2, s2, u2;
          if ((u2 = Object.getOwnPropertyDescriptor(t4, o3) || { value: t4[o3] }).get ? s2 = u2.set ? e4.stylize("[Getter/Setter]", "special") : e4.stylize("[Getter]", "special") : u2.set && (s2 = e4.stylize("[Setter]", "special")), A(n3, o3) || (a2 = "[" + o3 + "]"), s2 || (e4.seen.indexOf(u2.value) < 0 ? (s2 = m(r5) ? f(e4, u2.value, null) : f(e4, u2.value, r5 - 1)).indexOf("\n") > -1 && (s2 = i2 ? s2.split("\n").map(function(e5) {
            return "  " + e5;
          }).join("\n").slice(2) : "\n" + s2.split("\n").map(function(e5) {
            return "   " + e5;
          }).join("\n")) : s2 = e4.stylize("[Circular]", "special")), b(a2)) {
            if (i2 && o3.match(/^\d+$/)) return s2;
            (a2 = JSON.stringify("" + o3)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a2 = a2.slice(1, -1), a2 = e4.stylize(a2, "name")) : (a2 = a2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a2 = e4.stylize(a2, "string"));
          }
          return a2 + ": " + s2;
        }
        function d(e4) {
          return Array.isArray(e4);
        }
        function y(e4) {
          return "boolean" == typeof e4;
        }
        function m(e4) {
          return null === e4;
        }
        function v(e4) {
          return "number" == typeof e4;
        }
        function g(e4) {
          return "string" == typeof e4;
        }
        function b(e4) {
          return void 0 === e4;
        }
        function w(e4) {
          return S(e4) && "[object RegExp]" === T(e4);
        }
        function S(e4) {
          return "object" == typeof e4 && null !== e4;
        }
        function E(e4) {
          return S(e4) && "[object Date]" === T(e4);
        }
        function _(e4) {
          return S(e4) && ("[object Error]" === T(e4) || e4 instanceof Error);
        }
        function k(e4) {
          return "function" == typeof e4;
        }
        function T(e4) {
          return Object.prototype.toString.call(e4);
        }
        function O(e4) {
          return e4 < 10 ? "0" + e4.toString(10) : e4.toString(10);
        }
        t3.debuglog = function(e4) {
          if (e4 = e4.toUpperCase(), !i[e4]) if (a.test(e4)) {
            var r5 = process.pid;
            i[e4] = function() {
              var n3 = t3.format.apply(t3, arguments);
              console.error("%s %d: %s", e4, r5, n3);
            };
          } else i[e4] = function() {
          };
          return i[e4];
        }, t3.inspect = u, u.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, u.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, t3.types = r4(9032), t3.isArray = d, t3.isBoolean = y, t3.isNull = m, t3.isNullOrUndefined = function(e4) {
          return null == e4;
        }, t3.isNumber = v, t3.isString = g, t3.isSymbol = function(e4) {
          return "symbol" == typeof e4;
        }, t3.isUndefined = b, t3.isRegExp = w, t3.types.isRegExp = w, t3.isObject = S, t3.isDate = E, t3.types.isDate = E, t3.isError = _, t3.types.isNativeError = _, t3.isFunction = k, t3.isPrimitive = function(e4) {
          return null === e4 || "boolean" == typeof e4 || "number" == typeof e4 || "string" == typeof e4 || "symbol" == typeof e4 || void 0 === e4;
        }, t3.isBuffer = r4(1135);
        var x = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function A(e4, t4) {
          return Object.prototype.hasOwnProperty.call(e4, t4);
        }
        t3.log = function() {
          var e4, r5;
          console.log("%s - %s", (e4 = /* @__PURE__ */ new Date(), r5 = [O(e4.getHours()), O(e4.getMinutes()), O(e4.getSeconds())].join(":"), [e4.getDate(), x[e4.getMonth()], r5].join(" ")), t3.format.apply(t3, arguments));
        }, t3.inherits = r4(6698), t3._extend = function(e4, t4) {
          if (!t4 || !S(t4)) return e4;
          for (var r5 = Object.keys(t4), n3 = r5.length; n3--; ) e4[r5[n3]] = t4[r5[n3]];
          return e4;
        };
        var P = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
        function R(e4, t4) {
          if (!e4) {
            var r5 = new Error("Promise was rejected with a falsy value");
            r5.reason = e4, e4 = r5;
          }
          return t4(e4);
        }
        t3.promisify = function(e4) {
          if ("function" != typeof e4) throw new TypeError('The "original" argument must be of type Function');
          if (P && e4[P]) {
            var t4;
            if ("function" != typeof (t4 = e4[P])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(t4, P, { value: t4, enumerable: false, writable: false, configurable: true }), t4;
          }
          function t4() {
            for (var t5, r5, n3 = new Promise(function(e5, n4) {
              t5 = e5, r5 = n4;
            }), o3 = [], i2 = 0; i2 < arguments.length; i2++) o3.push(arguments[i2]);
            o3.push(function(e5, n4) {
              e5 ? r5(e5) : t5(n4);
            });
            try {
              e4.apply(this, o3);
            } catch (e5) {
              r5(e5);
            }
            return n3;
          }
          return Object.setPrototypeOf(t4, Object.getPrototypeOf(e4)), P && Object.defineProperty(t4, P, { value: t4, enumerable: false, writable: false, configurable: true }), Object.defineProperties(t4, n2(e4));
        }, t3.promisify.custom = P, t3.callbackify = function(e4) {
          if ("function" != typeof e4) throw new TypeError('The "original" argument must be of type Function');
          function t4() {
            for (var t5 = [], r5 = 0; r5 < arguments.length; r5++) t5.push(arguments[r5]);
            var n3 = t5.pop();
            if ("function" != typeof n3) throw new TypeError("The last argument must be of type Function");
            var o3 = this, i2 = function() {
              return n3.apply(o3, arguments);
            };
            e4.apply(this, t5).then(function(e5) {
              process.nextTick(i2.bind(null, null, e5));
            }, function(e5) {
              process.nextTick(R.bind(null, e5, i2));
            });
          }
          return Object.setPrototypeOf(t4, Object.getPrototypeOf(e4)), Object.defineProperties(t4, n2(e4)), t4;
        };
      }, 5767: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(2682), o2 = r4(9209), i = r4(487), a = r4(8075), s = r4(5795), u = a("Object.prototype.toString"), c = r4(9092)(), l2 = "undefined" == typeof globalThis ? r4.g : globalThis, f = o2(), p = a("String.prototype.slice"), h = Object.getPrototypeOf, d = a("Array.prototype.indexOf", true) || function(e4, t4) {
          for (var r5 = 0; r5 < e4.length; r5 += 1) if (e4[r5] === t4) return r5;
          return -1;
        }, y = { __proto__: null };
        n2(f, c && s && h ? function(e4) {
          var t4 = new l2[e4]();
          if (Symbol.toStringTag in t4) {
            var r5 = h(t4), n3 = s(r5, Symbol.toStringTag);
            if (!n3) {
              var o3 = h(r5);
              n3 = s(o3, Symbol.toStringTag);
            }
            y["$" + e4] = i(n3.get);
          }
        } : function(e4) {
          var t4 = new l2[e4](), r5 = t4.slice || t4.set;
          r5 && (y["$" + e4] = i(r5));
        });
        e3.exports = function(e4) {
          if (!e4 || "object" != typeof e4) return false;
          if (!c) {
            var t4 = p(u(e4), 8, -1);
            return d(f, t4) > -1 ? t4 : "Object" === t4 && function(e5) {
              var t5 = false;
              return n2(y, function(r5, n3) {
                if (!t5) try {
                  r5(e5), t5 = p(n3, 1);
                } catch (e6) {
                }
              }), t5;
            }(e4);
          }
          return s ? function(e5) {
            var t5 = false;
            return n2(y, function(r5, n3) {
              if (!t5) try {
                "$" + r5(e5) === n3 && (t5 = p(n3, 1));
              } catch (e6) {
              }
            }), t5;
          }(e4) : null;
        };
      }, 7510: (e3) => {
        e3.exports = function() {
          for (var e4 = {}, r4 = 0; r4 < arguments.length; r4++) {
            var n2 = arguments[r4];
            for (var o2 in n2) t3.call(n2, o2) && (e4[o2] = n2[o2]);
          }
          return e4;
        };
        var t3 = Object.prototype.hasOwnProperty;
      }, 2894: () => {
      }, 2634: () => {
      }, 5340: () => {
      }, 9838: () => {
      }, 9209: (e3, t3, r4) => {
        "use strict";
        var n2 = r4(6578), o2 = "undefined" == typeof globalThis ? r4.g : globalThis;
        e3.exports = function() {
          for (var e4 = [], t4 = 0; t4 < n2.length; t4++) "function" == typeof o2[n2[t4]] && (e4[e4.length] = n2[t4]);
          return e4;
        };
      }, 1083: (e3, t3, r4) => {
        "use strict";
        r4.d(t3, { A: () => mt });
        var n2 = {};
        function o2(e4, t4) {
          return function() {
            return e4.apply(t4, arguments);
          };
        }
        r4.r(n2), r4.d(n2, { hasBrowserEnv: () => ue, hasStandardBrowserEnv: () => ce, hasStandardBrowserWebWorkerEnv: () => fe, origin: () => pe });
        const { toString: i } = Object.prototype, { getPrototypeOf: a } = Object, s = (u = /* @__PURE__ */ Object.create(null), (e4) => {
          const t4 = i.call(e4);
          return u[t4] || (u[t4] = t4.slice(8, -1).toLowerCase());
        });
        var u;
        const c = (e4) => (e4 = e4.toLowerCase(), (t4) => s(t4) === e4), l2 = (e4) => (t4) => typeof t4 === e4, { isArray: f } = Array, p = l2("undefined");
        const h = c("ArrayBuffer");
        const d = l2("string"), y = l2("function"), m = l2("number"), v = (e4) => null !== e4 && "object" == typeof e4, g = (e4) => {
          if ("object" !== s(e4)) return false;
          const t4 = a(e4);
          return !(null !== t4 && t4 !== Object.prototype && null !== Object.getPrototypeOf(t4) || Symbol.toStringTag in e4 || Symbol.iterator in e4);
        }, b = c("Date"), w = c("File"), S = c("Blob"), E = c("FileList"), _ = c("URLSearchParams"), [k, T, O, x] = ["ReadableStream", "Request", "Response", "Headers"].map(c);
        function A(e4, t4, { allOwnKeys: r5 = false } = {}) {
          if (null == e4) return;
          let n3, o3;
          if ("object" != typeof e4 && (e4 = [e4]), f(e4)) for (n3 = 0, o3 = e4.length; n3 < o3; n3++) t4.call(null, e4[n3], n3, e4);
          else {
            const o4 = r5 ? Object.getOwnPropertyNames(e4) : Object.keys(e4), i2 = o4.length;
            let a2;
            for (n3 = 0; n3 < i2; n3++) a2 = o4[n3], t4.call(null, e4[a2], a2, e4);
          }
        }
        function P(e4, t4) {
          t4 = t4.toLowerCase();
          const r5 = Object.keys(e4);
          let n3, o3 = r5.length;
          for (; o3-- > 0; ) if (n3 = r5[o3], t4 === n3.toLowerCase()) return n3;
          return null;
        }
        const R = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : global, j = (e4) => !p(e4) && e4 !== R;
        const I = (C = "undefined" != typeof Uint8Array && a(Uint8Array), (e4) => C && e4 instanceof C);
        var C;
        const L = c("HTMLFormElement"), B = (({ hasOwnProperty: e4 }) => (t4, r5) => e4.call(t4, r5))(Object.prototype), N = c("RegExp"), U = (e4, t4) => {
          const r5 = Object.getOwnPropertyDescriptors(e4), n3 = {};
          A(r5, (r6, o3) => {
            let i2;
            false !== (i2 = t4(r6, o3, e4)) && (n3[o3] = i2 || r6);
          }), Object.defineProperties(e4, n3);
        }, M = "abcdefghijklmnopqrstuvwxyz", D = "0123456789", F = { DIGIT: D, ALPHA: M, ALPHA_DIGIT: M + M.toUpperCase() + D };
        const V = c("AsyncFunction"), q = { isArray: f, isArrayBuffer: h, isBuffer: function(e4) {
          return null !== e4 && !p(e4) && null !== e4.constructor && !p(e4.constructor) && y(e4.constructor.isBuffer) && e4.constructor.isBuffer(e4);
        }, isFormData: (e4) => {
          let t4;
          return e4 && ("function" == typeof FormData && e4 instanceof FormData || y(e4.append) && ("formdata" === (t4 = s(e4)) || "object" === t4 && y(e4.toString) && "[object FormData]" === e4.toString()));
        }, isArrayBufferView: function(e4) {
          let t4;
          return t4 = "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e4) : e4 && e4.buffer && h(e4.buffer), t4;
        }, isString: d, isNumber: m, isBoolean: (e4) => true === e4 || false === e4, isObject: v, isPlainObject: g, isReadableStream: k, isRequest: T, isResponse: O, isHeaders: x, isUndefined: p, isDate: b, isFile: w, isBlob: S, isRegExp: N, isFunction: y, isStream: (e4) => v(e4) && y(e4.pipe), isURLSearchParams: _, isTypedArray: I, isFileList: E, forEach: A, merge: function e4() {
          const { caseless: t4 } = j(this) && this || {}, r5 = {}, n3 = (n4, o3) => {
            const i2 = t4 && P(r5, o3) || o3;
            g(r5[i2]) && g(n4) ? r5[i2] = e4(r5[i2], n4) : g(n4) ? r5[i2] = e4({}, n4) : f(n4) ? r5[i2] = n4.slice() : r5[i2] = n4;
          };
          for (let e5 = 0, t5 = arguments.length; e5 < t5; e5++) arguments[e5] && A(arguments[e5], n3);
          return r5;
        }, extend: (e4, t4, r5, { allOwnKeys: n3 } = {}) => (A(t4, (t5, n4) => {
          r5 && y(t5) ? e4[n4] = o2(t5, r5) : e4[n4] = t5;
        }, { allOwnKeys: n3 }), e4), trim: (e4) => e4.trim ? e4.trim() : e4.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""), stripBOM: (e4) => (65279 === e4.charCodeAt(0) && (e4 = e4.slice(1)), e4), inherits: (e4, t4, r5, n3) => {
          e4.prototype = Object.create(t4.prototype, n3), e4.prototype.constructor = e4, Object.defineProperty(e4, "super", { value: t4.prototype }), r5 && Object.assign(e4.prototype, r5);
        }, toFlatObject: (e4, t4, r5, n3) => {
          let o3, i2, s2;
          const u2 = {};
          if (t4 = t4 || {}, null == e4) return t4;
          do {
            for (o3 = Object.getOwnPropertyNames(e4), i2 = o3.length; i2-- > 0; ) s2 = o3[i2], n3 && !n3(s2, e4, t4) || u2[s2] || (t4[s2] = e4[s2], u2[s2] = true);
            e4 = false !== r5 && a(e4);
          } while (e4 && (!r5 || r5(e4, t4)) && e4 !== Object.prototype);
          return t4;
        }, kindOf: s, kindOfTest: c, endsWith: (e4, t4, r5) => {
          e4 = String(e4), (void 0 === r5 || r5 > e4.length) && (r5 = e4.length), r5 -= t4.length;
          const n3 = e4.indexOf(t4, r5);
          return -1 !== n3 && n3 === r5;
        }, toArray: (e4) => {
          if (!e4) return null;
          if (f(e4)) return e4;
          let t4 = e4.length;
          if (!m(t4)) return null;
          const r5 = new Array(t4);
          for (; t4-- > 0; ) r5[t4] = e4[t4];
          return r5;
        }, forEachEntry: (e4, t4) => {
          const r5 = (e4 && e4[Symbol.iterator]).call(e4);
          let n3;
          for (; (n3 = r5.next()) && !n3.done; ) {
            const r6 = n3.value;
            t4.call(e4, r6[0], r6[1]);
          }
        }, matchAll: (e4, t4) => {
          let r5;
          const n3 = [];
          for (; null !== (r5 = e4.exec(t4)); ) n3.push(r5);
          return n3;
        }, isHTMLForm: L, hasOwnProperty: B, hasOwnProp: B, reduceDescriptors: U, freezeMethods: (e4) => {
          U(e4, (t4, r5) => {
            if (y(e4) && -1 !== ["arguments", "caller", "callee"].indexOf(r5)) return false;
            const n3 = e4[r5];
            y(n3) && (t4.enumerable = false, "writable" in t4 ? t4.writable = false : t4.set || (t4.set = () => {
              throw Error("Can not rewrite read-only method '" + r5 + "'");
            }));
          });
        }, toObjectSet: (e4, t4) => {
          const r5 = {}, n3 = (e5) => {
            e5.forEach((e6) => {
              r5[e6] = true;
            });
          };
          return f(e4) ? n3(e4) : n3(String(e4).split(t4)), r5;
        }, toCamelCase: (e4) => e4.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(e5, t4, r5) {
          return t4.toUpperCase() + r5;
        }), noop: () => {
        }, toFiniteNumber: (e4, t4) => null != e4 && Number.isFinite(e4 = +e4) ? e4 : t4, findKey: P, global: R, isContextDefined: j, ALPHABET: F, generateString: (e4 = 16, t4 = F.ALPHA_DIGIT) => {
          let r5 = "";
          const { length: n3 } = t4;
          for (; e4--; ) r5 += t4[Math.random() * n3 | 0];
          return r5;
        }, isSpecCompliantForm: function(e4) {
          return !!(e4 && y(e4.append) && "FormData" === e4[Symbol.toStringTag] && e4[Symbol.iterator]);
        }, toJSONObject: (e4) => {
          const t4 = new Array(10), r5 = (e5, n3) => {
            if (v(e5)) {
              if (t4.indexOf(e5) >= 0) return;
              if (!("toJSON" in e5)) {
                t4[n3] = e5;
                const o3 = f(e5) ? [] : {};
                return A(e5, (e6, t5) => {
                  const i2 = r5(e6, n3 + 1);
                  !p(i2) && (o3[t5] = i2);
                }), t4[n3] = void 0, o3;
              }
            }
            return e5;
          };
          return r5(e4, 0);
        }, isAsyncFn: V, isThenable: (e4) => e4 && (v(e4) || y(e4)) && y(e4.then) && y(e4.catch) };
        function K(e4, t4, r5, n3, o3) {
          Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e4, this.name = "AxiosError", t4 && (this.code = t4), r5 && (this.config = r5), n3 && (this.request = n3), o3 && (this.response = o3);
        }
        q.inherits(K, Error, { toJSON: function() {
          return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: q.toJSONObject(this.config), code: this.code, status: this.response && this.response.status ? this.response.status : null };
        } });
        const H = K.prototype, z = {};
        ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((e4) => {
          z[e4] = { value: e4 };
        }), Object.defineProperties(K, z), Object.defineProperty(H, "isAxiosError", { value: true }), K.from = (e4, t4, r5, n3, o3, i2) => {
          const a2 = Object.create(H);
          return q.toFlatObject(e4, a2, function(e5) {
            return e5 !== Error.prototype;
          }, (e5) => "isAxiosError" !== e5), K.call(a2, e4.message, t4, r5, n3, o3), a2.cause = e4, a2.name = e4.name, i2 && Object.assign(a2, i2), a2;
        };
        const X = K;
        var G = r4(8287).Buffer;
        function W(e4) {
          return q.isPlainObject(e4) || q.isArray(e4);
        }
        function $(e4) {
          return q.endsWith(e4, "[]") ? e4.slice(0, -2) : e4;
        }
        function Q(e4, t4, r5) {
          return e4 ? e4.concat(t4).map(function(e5, t5) {
            return e5 = $(e5), !r5 && t5 ? "[" + e5 + "]" : e5;
          }).join(r5 ? "." : "") : t4;
        }
        const Y = q.toFlatObject(q, {}, null, function(e4) {
          return /^is[A-Z]/.test(e4);
        });
        const J = function(e4, t4, r5) {
          if (!q.isObject(e4)) throw new TypeError("target must be an object");
          t4 = t4 || new FormData();
          const n3 = (r5 = q.toFlatObject(r5, { metaTokens: true, dots: false, indexes: false }, false, function(e5, t5) {
            return !q.isUndefined(t5[e5]);
          })).metaTokens, o3 = r5.visitor || c2, i2 = r5.dots, a2 = r5.indexes, s2 = (r5.Blob || "undefined" != typeof Blob && Blob) && q.isSpecCompliantForm(t4);
          if (!q.isFunction(o3)) throw new TypeError("visitor must be a function");
          function u2(e5) {
            if (null === e5) return "";
            if (q.isDate(e5)) return e5.toISOString();
            if (!s2 && q.isBlob(e5)) throw new X("Blob is not supported. Use a Buffer instead.");
            return q.isArrayBuffer(e5) || q.isTypedArray(e5) ? s2 && "function" == typeof Blob ? new Blob([e5]) : G.from(e5) : e5;
          }
          function c2(e5, r6, o4) {
            let s3 = e5;
            if (e5 && !o4 && "object" == typeof e5) {
              if (q.endsWith(r6, "{}")) r6 = n3 ? r6 : r6.slice(0, -2), e5 = JSON.stringify(e5);
              else if (q.isArray(e5) && function(e6) {
                return q.isArray(e6) && !e6.some(W);
              }(e5) || (q.isFileList(e5) || q.endsWith(r6, "[]")) && (s3 = q.toArray(e5))) return r6 = $(r6), s3.forEach(function(e6, n4) {
                !q.isUndefined(e6) && null !== e6 && t4.append(true === a2 ? Q([r6], n4, i2) : null === a2 ? r6 : r6 + "[]", u2(e6));
              }), false;
            }
            return !!W(e5) || (t4.append(Q(o4, r6, i2), u2(e5)), false);
          }
          const l3 = [], f2 = Object.assign(Y, { defaultVisitor: c2, convertValue: u2, isVisitable: W });
          if (!q.isObject(e4)) throw new TypeError("data must be an object");
          return function e5(r6, n4) {
            if (!q.isUndefined(r6)) {
              if (-1 !== l3.indexOf(r6)) throw Error("Circular reference detected in " + n4.join("."));
              l3.push(r6), q.forEach(r6, function(r7, i3) {
                true === (!(q.isUndefined(r7) || null === r7) && o3.call(t4, r7, q.isString(i3) ? i3.trim() : i3, n4, f2)) && e5(r7, n4 ? n4.concat(i3) : [i3]);
              }), l3.pop();
            }
          }(e4), t4;
        };
        function Z(e4) {
          const t4 = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" };
          return encodeURIComponent(e4).replace(/[!'()~]|%20|%00/g, function(e5) {
            return t4[e5];
          });
        }
        function ee(e4, t4) {
          this._pairs = [], e4 && J(e4, this, t4);
        }
        const te = ee.prototype;
        te.append = function(e4, t4) {
          this._pairs.push([e4, t4]);
        }, te.toString = function(e4) {
          const t4 = e4 ? function(t5) {
            return e4.call(this, t5, Z);
          } : Z;
          return this._pairs.map(function(e5) {
            return t4(e5[0]) + "=" + t4(e5[1]);
          }, "").join("&");
        };
        const re = ee;
        function ne(e4) {
          return encodeURIComponent(e4).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        function oe(e4, t4, r5) {
          if (!t4) return e4;
          const n3 = r5 && r5.encode || ne, o3 = r5 && r5.serialize;
          let i2;
          if (i2 = o3 ? o3(t4, r5) : q.isURLSearchParams(t4) ? t4.toString() : new re(t4, r5).toString(n3), i2) {
            const t5 = e4.indexOf("#");
            -1 !== t5 && (e4 = e4.slice(0, t5)), e4 += (-1 === e4.indexOf("?") ? "?" : "&") + i2;
          }
          return e4;
        }
        const ie = class {
          constructor() {
            this.handlers = [];
          }
          use(e4, t4, r5) {
            return this.handlers.push({ fulfilled: e4, rejected: t4, synchronous: !!r5 && r5.synchronous, runWhen: r5 ? r5.runWhen : null }), this.handlers.length - 1;
          }
          eject(e4) {
            this.handlers[e4] && (this.handlers[e4] = null);
          }
          clear() {
            this.handlers && (this.handlers = []);
          }
          forEach(e4) {
            q.forEach(this.handlers, function(t4) {
              null !== t4 && e4(t4);
            });
          }
        }, ae = { silentJSONParsing: true, forcedJSONParsing: true, clarifyTimeoutError: false }, se = { isBrowser: true, classes: { URLSearchParams: "undefined" != typeof URLSearchParams ? URLSearchParams : re, FormData: "undefined" != typeof FormData ? FormData : null, Blob: "undefined" != typeof Blob ? Blob : null }, protocols: ["http", "https", "file", "blob", "url", "data"] }, ue = "undefined" != typeof window && "undefined" != typeof document, ce = (le = "undefined" != typeof navigator && navigator.product, ue && ["ReactNative", "NativeScript", "NS"].indexOf(le) < 0);
        var le;
        const fe = "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && "function" == typeof self.importScripts, pe = ue && window.location.href || "http://localhost", he = { ...n2, ...se };
        const de = function(e4) {
          function t4(e5, r5, n3, o3) {
            let i2 = e5[o3++];
            if ("__proto__" === i2) return true;
            const a2 = Number.isFinite(+i2), s2 = o3 >= e5.length;
            if (i2 = !i2 && q.isArray(n3) ? n3.length : i2, s2) return q.hasOwnProp(n3, i2) ? n3[i2] = [n3[i2], r5] : n3[i2] = r5, !a2;
            n3[i2] && q.isObject(n3[i2]) || (n3[i2] = []);
            return t4(e5, r5, n3[i2], o3) && q.isArray(n3[i2]) && (n3[i2] = function(e6) {
              const t5 = {}, r6 = Object.keys(e6);
              let n4;
              const o4 = r6.length;
              let i3;
              for (n4 = 0; n4 < o4; n4++) i3 = r6[n4], t5[i3] = e6[i3];
              return t5;
            }(n3[i2])), !a2;
          }
          if (q.isFormData(e4) && q.isFunction(e4.entries)) {
            const r5 = {};
            return q.forEachEntry(e4, (e5, n3) => {
              t4(function(e6) {
                return q.matchAll(/\w+|\[(\w*)]/g, e6).map((e7) => "[]" === e7[0] ? "" : e7[1] || e7[0]);
              }(e5), n3, r5, 0);
            }), r5;
          }
          return null;
        };
        const ye = { transitional: ae, adapter: ["xhr", "http", "fetch"], transformRequest: [function(e4, t4) {
          const r5 = t4.getContentType() || "", n3 = r5.indexOf("application/json") > -1, o3 = q.isObject(e4);
          o3 && q.isHTMLForm(e4) && (e4 = new FormData(e4));
          if (q.isFormData(e4)) return n3 ? JSON.stringify(de(e4)) : e4;
          if (q.isArrayBuffer(e4) || q.isBuffer(e4) || q.isStream(e4) || q.isFile(e4) || q.isBlob(e4) || q.isReadableStream(e4)) return e4;
          if (q.isArrayBufferView(e4)) return e4.buffer;
          if (q.isURLSearchParams(e4)) return t4.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), e4.toString();
          let i2;
          if (o3) {
            if (r5.indexOf("application/x-www-form-urlencoded") > -1) return function(e5, t5) {
              return J(e5, new he.classes.URLSearchParams(), Object.assign({ visitor: function(e6, t6, r6, n4) {
                return he.isNode && q.isBuffer(e6) ? (this.append(t6, e6.toString("base64")), false) : n4.defaultVisitor.apply(this, arguments);
              } }, t5));
            }(e4, this.formSerializer).toString();
            if ((i2 = q.isFileList(e4)) || r5.indexOf("multipart/form-data") > -1) {
              const t5 = this.env && this.env.FormData;
              return J(i2 ? { "files[]": e4 } : e4, t5 && new t5(), this.formSerializer);
            }
          }
          return o3 || n3 ? (t4.setContentType("application/json", false), function(e5, t5, r6) {
            if (q.isString(e5)) try {
              return (t5 || JSON.parse)(e5), q.trim(e5);
            } catch (e6) {
              if ("SyntaxError" !== e6.name) throw e6;
            }
            return (r6 || JSON.stringify)(e5);
          }(e4)) : e4;
        }], transformResponse: [function(e4) {
          const t4 = this.transitional || ye.transitional, r5 = t4 && t4.forcedJSONParsing, n3 = "json" === this.responseType;
          if (q.isResponse(e4) || q.isReadableStream(e4)) return e4;
          if (e4 && q.isString(e4) && (r5 && !this.responseType || n3)) {
            const r6 = !(t4 && t4.silentJSONParsing) && n3;
            try {
              return JSON.parse(e4);
            } catch (e5) {
              if (r6) {
                if ("SyntaxError" === e5.name) throw X.from(e5, X.ERR_BAD_RESPONSE, this, null, this.response);
                throw e5;
              }
            }
          }
          return e4;
        }], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, maxBodyLength: -1, env: { FormData: he.classes.FormData, Blob: he.classes.Blob }, validateStatus: function(e4) {
          return e4 >= 200 && e4 < 300;
        }, headers: { common: { Accept: "application/json, text/plain, */*", "Content-Type": void 0 } } };
        q.forEach(["delete", "get", "head", "post", "put", "patch"], (e4) => {
          ye.headers[e4] = {};
        });
        const me = ye, ve = q.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]), ge = Symbol("internals");
        function be(e4) {
          return e4 && String(e4).trim().toLowerCase();
        }
        function we(e4) {
          return false === e4 || null == e4 ? e4 : q.isArray(e4) ? e4.map(we) : String(e4);
        }
        function Se(e4, t4, r5, n3, o3) {
          return q.isFunction(n3) ? n3.call(this, t4, r5) : (o3 && (t4 = r5), q.isString(t4) ? q.isString(n3) ? -1 !== t4.indexOf(n3) : q.isRegExp(n3) ? n3.test(t4) : void 0 : void 0);
        }
        class Ee {
          constructor(e4) {
            e4 && this.set(e4);
          }
          set(e4, t4, r5) {
            const n3 = this;
            function o3(e5, t5, r6) {
              const o4 = be(t5);
              if (!o4) throw new Error("header name must be a non-empty string");
              const i3 = q.findKey(n3, o4);
              (!i3 || void 0 === n3[i3] || true === r6 || void 0 === r6 && false !== n3[i3]) && (n3[i3 || t5] = we(e5));
            }
            const i2 = (e5, t5) => q.forEach(e5, (e6, r6) => o3(e6, r6, t5));
            if (q.isPlainObject(e4) || e4 instanceof this.constructor) i2(e4, t4);
            else if (q.isString(e4) && (e4 = e4.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e4.trim())) i2(((e5) => {
              const t5 = {};
              let r6, n4, o4;
              return e5 && e5.split("\n").forEach(function(e6) {
                o4 = e6.indexOf(":"), r6 = e6.substring(0, o4).trim().toLowerCase(), n4 = e6.substring(o4 + 1).trim(), !r6 || t5[r6] && ve[r6] || ("set-cookie" === r6 ? t5[r6] ? t5[r6].push(n4) : t5[r6] = [n4] : t5[r6] = t5[r6] ? t5[r6] + ", " + n4 : n4);
              }), t5;
            })(e4), t4);
            else if (q.isHeaders(e4)) for (const [t5, n4] of e4.entries()) o3(n4, t5, r5);
            else null != e4 && o3(t4, e4, r5);
            return this;
          }
          get(e4, t4) {
            if (e4 = be(e4)) {
              const r5 = q.findKey(this, e4);
              if (r5) {
                const e5 = this[r5];
                if (!t4) return e5;
                if (true === t4) return function(e6) {
                  const t5 = /* @__PURE__ */ Object.create(null), r6 = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                  let n3;
                  for (; n3 = r6.exec(e6); ) t5[n3[1]] = n3[2];
                  return t5;
                }(e5);
                if (q.isFunction(t4)) return t4.call(this, e5, r5);
                if (q.isRegExp(t4)) return t4.exec(e5);
                throw new TypeError("parser must be boolean|regexp|function");
              }
            }
          }
          has(e4, t4) {
            if (e4 = be(e4)) {
              const r5 = q.findKey(this, e4);
              return !(!r5 || void 0 === this[r5] || t4 && !Se(0, this[r5], r5, t4));
            }
            return false;
          }
          delete(e4, t4) {
            const r5 = this;
            let n3 = false;
            function o3(e5) {
              if (e5 = be(e5)) {
                const o4 = q.findKey(r5, e5);
                !o4 || t4 && !Se(0, r5[o4], o4, t4) || (delete r5[o4], n3 = true);
              }
            }
            return q.isArray(e4) ? e4.forEach(o3) : o3(e4), n3;
          }
          clear(e4) {
            const t4 = Object.keys(this);
            let r5 = t4.length, n3 = false;
            for (; r5--; ) {
              const o3 = t4[r5];
              e4 && !Se(0, this[o3], o3, e4, true) || (delete this[o3], n3 = true);
            }
            return n3;
          }
          normalize(e4) {
            const t4 = this, r5 = {};
            return q.forEach(this, (n3, o3) => {
              const i2 = q.findKey(r5, o3);
              if (i2) return t4[i2] = we(n3), void delete t4[o3];
              const a2 = e4 ? function(e5) {
                return e5.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (e6, t5, r6) => t5.toUpperCase() + r6);
              }(o3) : String(o3).trim();
              a2 !== o3 && delete t4[o3], t4[a2] = we(n3), r5[a2] = true;
            }), this;
          }
          concat(...e4) {
            return this.constructor.concat(this, ...e4);
          }
          toJSON(e4) {
            const t4 = /* @__PURE__ */ Object.create(null);
            return q.forEach(this, (r5, n3) => {
              null != r5 && false !== r5 && (t4[n3] = e4 && q.isArray(r5) ? r5.join(", ") : r5);
            }), t4;
          }
          [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
          }
          toString() {
            return Object.entries(this.toJSON()).map(([e4, t4]) => e4 + ": " + t4).join("\n");
          }
          get [Symbol.toStringTag]() {
            return "AxiosHeaders";
          }
          static from(e4) {
            return e4 instanceof this ? e4 : new this(e4);
          }
          static concat(e4, ...t4) {
            const r5 = new this(e4);
            return t4.forEach((e5) => r5.set(e5)), r5;
          }
          static accessor(e4) {
            const t4 = (this[ge] = this[ge] = { accessors: {} }).accessors, r5 = this.prototype;
            function n3(e5) {
              const n4 = be(e5);
              t4[n4] || (!function(e6, t5) {
                const r6 = q.toCamelCase(" " + t5);
                ["get", "set", "has"].forEach((n5) => {
                  Object.defineProperty(e6, n5 + r6, { value: function(e7, r7, o3) {
                    return this[n5].call(this, t5, e7, r7, o3);
                  }, configurable: true });
                });
              }(r5, e5), t4[n4] = true);
            }
            return q.isArray(e4) ? e4.forEach(n3) : n3(e4), this;
          }
        }
        Ee.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), q.reduceDescriptors(Ee.prototype, ({ value: e4 }, t4) => {
          let r5 = t4[0].toUpperCase() + t4.slice(1);
          return { get: () => e4, set(e5) {
            this[r5] = e5;
          } };
        }), q.freezeMethods(Ee);
        const _e = Ee;
        function ke(e4, t4) {
          const r5 = this || me, n3 = t4 || r5, o3 = _e.from(n3.headers);
          let i2 = n3.data;
          return q.forEach(e4, function(e5) {
            i2 = e5.call(r5, i2, o3.normalize(), t4 ? t4.status : void 0);
          }), o3.normalize(), i2;
        }
        function Te(e4) {
          return !(!e4 || !e4.__CANCEL__);
        }
        function Oe(e4, t4, r5) {
          X.call(this, null == e4 ? "canceled" : e4, X.ERR_CANCELED, t4, r5), this.name = "CanceledError";
        }
        q.inherits(Oe, X, { __CANCEL__: true });
        const xe = Oe;
        function Ae(e4, t4, r5) {
          const n3 = r5.config.validateStatus;
          r5.status && n3 && !n3(r5.status) ? t4(new X("Request failed with status code " + r5.status, [X.ERR_BAD_REQUEST, X.ERR_BAD_RESPONSE][Math.floor(r5.status / 100) - 4], r5.config, r5.request, r5)) : e4(r5);
        }
        const Pe = function(e4, t4) {
          e4 = e4 || 10;
          const r5 = new Array(e4), n3 = new Array(e4);
          let o3, i2 = 0, a2 = 0;
          return t4 = void 0 !== t4 ? t4 : 1e3, function(s2) {
            const u2 = Date.now(), c2 = n3[a2];
            o3 || (o3 = u2), r5[i2] = s2, n3[i2] = u2;
            let l3 = a2, f2 = 0;
            for (; l3 !== i2; ) f2 += r5[l3++], l3 %= e4;
            if (i2 = (i2 + 1) % e4, i2 === a2 && (a2 = (a2 + 1) % e4), u2 - o3 < t4) return;
            const p2 = c2 && u2 - c2;
            return p2 ? Math.round(1e3 * f2 / p2) : void 0;
          };
        };
        const Re = function(e4, t4) {
          let r5 = 0;
          const n3 = 1e3 / t4;
          let o3 = null;
          return function() {
            const t5 = true === this, i2 = Date.now();
            if (t5 || i2 - r5 > n3) return o3 && (clearTimeout(o3), o3 = null), r5 = i2, e4.apply(null, arguments);
            o3 || (o3 = setTimeout(() => (o3 = null, r5 = Date.now(), e4.apply(null, arguments)), n3 - (i2 - r5)));
          };
        }, je = (e4, t4, r5 = 3) => {
          let n3 = 0;
          const o3 = Pe(50, 250);
          return Re((r6) => {
            const i2 = r6.loaded, a2 = r6.lengthComputable ? r6.total : void 0, s2 = i2 - n3, u2 = o3(s2);
            n3 = i2;
            const c2 = { loaded: i2, total: a2, progress: a2 ? i2 / a2 : void 0, bytes: s2, rate: u2 || void 0, estimated: u2 && a2 && i2 <= a2 ? (a2 - i2) / u2 : void 0, event: r6, lengthComputable: null != a2 };
            c2[t4 ? "download" : "upload"] = true, e4(c2);
          }, r5);
        }, Ie = he.hasStandardBrowserEnv ? function() {
          const e4 = /(msie|trident)/i.test(navigator.userAgent), t4 = document.createElement("a");
          let r5;
          function n3(r6) {
            let n4 = r6;
            return e4 && (t4.setAttribute("href", n4), n4 = t4.href), t4.setAttribute("href", n4), { href: t4.href, protocol: t4.protocol ? t4.protocol.replace(/:$/, "") : "", host: t4.host, search: t4.search ? t4.search.replace(/^\?/, "") : "", hash: t4.hash ? t4.hash.replace(/^#/, "") : "", hostname: t4.hostname, port: t4.port, pathname: "/" === t4.pathname.charAt(0) ? t4.pathname : "/" + t4.pathname };
          }
          return r5 = n3(window.location.href), function(e5) {
            const t5 = q.isString(e5) ? n3(e5) : e5;
            return t5.protocol === r5.protocol && t5.host === r5.host;
          };
        }() : function() {
          return true;
        }, Ce = he.hasStandardBrowserEnv ? { write(e4, t4, r5, n3, o3, i2) {
          const a2 = [e4 + "=" + encodeURIComponent(t4)];
          q.isNumber(r5) && a2.push("expires=" + new Date(r5).toGMTString()), q.isString(n3) && a2.push("path=" + n3), q.isString(o3) && a2.push("domain=" + o3), true === i2 && a2.push("secure"), document.cookie = a2.join("; ");
        }, read(e4) {
          const t4 = document.cookie.match(new RegExp("(^|;\\s*)(" + e4 + ")=([^;]*)"));
          return t4 ? decodeURIComponent(t4[3]) : null;
        }, remove(e4) {
          this.write(e4, "", Date.now() - 864e5);
        } } : { write() {
        }, read: () => null, remove() {
        } };
        function Le(e4, t4) {
          return e4 && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t4) ? function(e5, t5) {
            return t5 ? e5.replace(/\/?\/$/, "") + "/" + t5.replace(/^\/+/, "") : e5;
          }(e4, t4) : t4;
        }
        const Be = (e4) => e4 instanceof _e ? { ...e4 } : e4;
        function Ne(e4, t4) {
          t4 = t4 || {};
          const r5 = {};
          function n3(e5, t5, r6) {
            return q.isPlainObject(e5) && q.isPlainObject(t5) ? q.merge.call({ caseless: r6 }, e5, t5) : q.isPlainObject(t5) ? q.merge({}, t5) : q.isArray(t5) ? t5.slice() : t5;
          }
          function o3(e5, t5, r6) {
            return q.isUndefined(t5) ? q.isUndefined(e5) ? void 0 : n3(void 0, e5, r6) : n3(e5, t5, r6);
          }
          function i2(e5, t5) {
            if (!q.isUndefined(t5)) return n3(void 0, t5);
          }
          function a2(e5, t5) {
            return q.isUndefined(t5) ? q.isUndefined(e5) ? void 0 : n3(void 0, e5) : n3(void 0, t5);
          }
          function s2(r6, o4, i3) {
            return i3 in t4 ? n3(r6, o4) : i3 in e4 ? n3(void 0, r6) : void 0;
          }
          const u2 = { url: i2, method: i2, data: i2, baseURL: a2, transformRequest: a2, transformResponse: a2, paramsSerializer: a2, timeout: a2, timeoutMessage: a2, withCredentials: a2, withXSRFToken: a2, adapter: a2, responseType: a2, xsrfCookieName: a2, xsrfHeaderName: a2, onUploadProgress: a2, onDownloadProgress: a2, decompress: a2, maxContentLength: a2, maxBodyLength: a2, beforeRedirect: a2, transport: a2, httpAgent: a2, httpsAgent: a2, cancelToken: a2, socketPath: a2, responseEncoding: a2, validateStatus: s2, headers: (e5, t5) => o3(Be(e5), Be(t5), true) };
          return q.forEach(Object.keys(Object.assign({}, e4, t4)), function(n4) {
            const i3 = u2[n4] || o3, a3 = i3(e4[n4], t4[n4], n4);
            q.isUndefined(a3) && i3 !== s2 || (r5[n4] = a3);
          }), r5;
        }
        const Ue = (e4) => {
          const t4 = Ne({}, e4);
          let r5, { data: n3, withXSRFToken: o3, xsrfHeaderName: i2, xsrfCookieName: a2, headers: s2, auth: u2 } = t4;
          if (t4.headers = s2 = _e.from(s2), t4.url = oe(Le(t4.baseURL, t4.url), e4.params, e4.paramsSerializer), u2 && s2.set("Authorization", "Basic " + btoa((u2.username || "") + ":" + (u2.password ? unescape(encodeURIComponent(u2.password)) : ""))), q.isFormData(n3)) {
            if (he.hasStandardBrowserEnv || he.hasStandardBrowserWebWorkerEnv) s2.setContentType(void 0);
            else if (false !== (r5 = s2.getContentType())) {
              const [e5, ...t5] = r5 ? r5.split(";").map((e6) => e6.trim()).filter(Boolean) : [];
              s2.setContentType([e5 || "multipart/form-data", ...t5].join("; "));
            }
          }
          if (he.hasStandardBrowserEnv && (o3 && q.isFunction(o3) && (o3 = o3(t4)), o3 || false !== o3 && Ie(t4.url))) {
            const e5 = i2 && a2 && Ce.read(a2);
            e5 && s2.set(i2, e5);
          }
          return t4;
        }, Me = "undefined" != typeof XMLHttpRequest && function(e4) {
          return new Promise(function(t4, r5) {
            const n3 = Ue(e4);
            let o3 = n3.data;
            const i2 = _e.from(n3.headers).normalize();
            let a2, { responseType: s2 } = n3;
            function u2() {
              n3.cancelToken && n3.cancelToken.unsubscribe(a2), n3.signal && n3.signal.removeEventListener("abort", a2);
            }
            let c2 = new XMLHttpRequest();
            function l3() {
              if (!c2) return;
              const n4 = _e.from("getAllResponseHeaders" in c2 && c2.getAllResponseHeaders());
              Ae(function(e5) {
                t4(e5), u2();
              }, function(e5) {
                r5(e5), u2();
              }, { data: s2 && "text" !== s2 && "json" !== s2 ? c2.response : c2.responseText, status: c2.status, statusText: c2.statusText, headers: n4, config: e4, request: c2 }), c2 = null;
            }
            c2.open(n3.method.toUpperCase(), n3.url, true), c2.timeout = n3.timeout, "onloadend" in c2 ? c2.onloadend = l3 : c2.onreadystatechange = function() {
              c2 && 4 === c2.readyState && (0 !== c2.status || c2.responseURL && 0 === c2.responseURL.indexOf("file:")) && setTimeout(l3);
            }, c2.onabort = function() {
              c2 && (r5(new X("Request aborted", X.ECONNABORTED, n3, c2)), c2 = null);
            }, c2.onerror = function() {
              r5(new X("Network Error", X.ERR_NETWORK, n3, c2)), c2 = null;
            }, c2.ontimeout = function() {
              let e5 = n3.timeout ? "timeout of " + n3.timeout + "ms exceeded" : "timeout exceeded";
              const t5 = n3.transitional || ae;
              n3.timeoutErrorMessage && (e5 = n3.timeoutErrorMessage), r5(new X(e5, t5.clarifyTimeoutError ? X.ETIMEDOUT : X.ECONNABORTED, n3, c2)), c2 = null;
            }, void 0 === o3 && i2.setContentType(null), "setRequestHeader" in c2 && q.forEach(i2.toJSON(), function(e5, t5) {
              c2.setRequestHeader(t5, e5);
            }), q.isUndefined(n3.withCredentials) || (c2.withCredentials = !!n3.withCredentials), s2 && "json" !== s2 && (c2.responseType = n3.responseType), "function" == typeof n3.onDownloadProgress && c2.addEventListener("progress", je(n3.onDownloadProgress, true)), "function" == typeof n3.onUploadProgress && c2.upload && c2.upload.addEventListener("progress", je(n3.onUploadProgress)), (n3.cancelToken || n3.signal) && (a2 = (t5) => {
              c2 && (r5(!t5 || t5.type ? new xe(null, e4, c2) : t5), c2.abort(), c2 = null);
            }, n3.cancelToken && n3.cancelToken.subscribe(a2), n3.signal && (n3.signal.aborted ? a2() : n3.signal.addEventListener("abort", a2)));
            const f2 = function(e5) {
              const t5 = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e5);
              return t5 && t5[1] || "";
            }(n3.url);
            f2 && -1 === he.protocols.indexOf(f2) ? r5(new X("Unsupported protocol " + f2 + ":", X.ERR_BAD_REQUEST, e4)) : c2.send(o3 || null);
          });
        }, De = (e4, t4) => {
          let r5, n3 = new AbortController();
          const o3 = function(e5) {
            if (!r5) {
              r5 = true, a2();
              const t5 = e5 instanceof Error ? e5 : this.reason;
              n3.abort(t5 instanceof X ? t5 : new xe(t5 instanceof Error ? t5.message : t5));
            }
          };
          let i2 = t4 && setTimeout(() => {
            o3(new X(`timeout ${t4} of ms exceeded`, X.ETIMEDOUT));
          }, t4);
          const a2 = () => {
            e4 && (i2 && clearTimeout(i2), i2 = null, e4.forEach((e5) => {
              e5 && (e5.removeEventListener ? e5.removeEventListener("abort", o3) : e5.unsubscribe(o3));
            }), e4 = null);
          };
          e4.forEach((e5) => e5 && e5.addEventListener && e5.addEventListener("abort", o3));
          const { signal: s2 } = n3;
          return s2.unsubscribe = a2, [s2, () => {
            i2 && clearTimeout(i2), i2 = null;
          }];
        }, Fe = function* (e4, t4) {
          let r5 = e4.byteLength;
          if (!t4 || r5 < t4) return void (yield e4);
          let n3, o3 = 0;
          for (; o3 < r5; ) n3 = o3 + t4, yield e4.slice(o3, n3), o3 = n3;
        }, Ve = (e4, t4, r5, n3, o3) => {
          const i2 = async function* (e5, t5, r6) {
            for await (const n4 of e5) yield* Fe(ArrayBuffer.isView(n4) ? n4 : await r6(String(n4)), t5);
          }(e4, t4, o3);
          let a2 = 0;
          return new ReadableStream({ type: "bytes", async pull(e5) {
            const { done: t5, value: o4 } = await i2.next();
            if (t5) return e5.close(), void n3();
            let s2 = o4.byteLength;
            r5 && r5(a2 += s2), e5.enqueue(new Uint8Array(o4));
          }, cancel: (e5) => (n3(e5), i2.return()) }, { highWaterMark: 2 });
        }, qe = (e4, t4) => {
          const r5 = null != e4;
          return (n3) => setTimeout(() => t4({ lengthComputable: r5, total: e4, loaded: n3 }));
        }, Ke = "function" == typeof fetch && "function" == typeof Request && "function" == typeof Response, He = Ke && "function" == typeof ReadableStream, ze = Ke && ("function" == typeof TextEncoder ? (Xe = new TextEncoder(), (e4) => Xe.encode(e4)) : async (e4) => new Uint8Array(await new Response(e4).arrayBuffer()));
        var Xe;
        const Ge = He && (() => {
          let e4 = false;
          const t4 = new Request(he.origin, { body: new ReadableStream(), method: "POST", get duplex() {
            return e4 = true, "half";
          } }).headers.has("Content-Type");
          return e4 && !t4;
        })(), We = He && !!(() => {
          try {
            return q.isReadableStream(new Response("").body);
          } catch (e4) {
          }
        })(), $e = { stream: We && ((e4) => e4.body) };
        var Qe;
        Ke && (Qe = new Response(), ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e4) => {
          !$e[e4] && ($e[e4] = q.isFunction(Qe[e4]) ? (t4) => t4[e4]() : (t4, r5) => {
            throw new X(`Response type '${e4}' is not supported`, X.ERR_NOT_SUPPORT, r5);
          });
        }));
        const Ye = async (e4, t4) => {
          const r5 = q.toFiniteNumber(e4.getContentLength());
          return null == r5 ? (async (e5) => null == e5 ? 0 : q.isBlob(e5) ? e5.size : q.isSpecCompliantForm(e5) ? (await new Request(e5).arrayBuffer()).byteLength : q.isArrayBufferView(e5) ? e5.byteLength : (q.isURLSearchParams(e5) && (e5 += ""), q.isString(e5) ? (await ze(e5)).byteLength : void 0))(t4) : r5;
        }, Je = { http: null, xhr: Me, fetch: Ke && (async (e4) => {
          let { url: t4, method: r5, data: n3, signal: o3, cancelToken: i2, timeout: a2, onDownloadProgress: s2, onUploadProgress: u2, responseType: c2, headers: l3, withCredentials: f2 = "same-origin", fetchOptions: p2 } = Ue(e4);
          c2 = c2 ? (c2 + "").toLowerCase() : "text";
          let h2, d2, [y2, m2] = o3 || i2 || a2 ? De([o3, i2], a2) : [];
          const v2 = () => {
            !h2 && setTimeout(() => {
              y2 && y2.unsubscribe();
            }), h2 = true;
          };
          let g2;
          try {
            if (u2 && Ge && "get" !== r5 && "head" !== r5 && 0 !== (g2 = await Ye(l3, n3))) {
              let e5, r6 = new Request(t4, { method: "POST", body: n3, duplex: "half" });
              q.isFormData(n3) && (e5 = r6.headers.get("content-type")) && l3.setContentType(e5), r6.body && (n3 = Ve(r6.body, 65536, qe(g2, je(u2)), null, ze));
            }
            q.isString(f2) || (f2 = f2 ? "cors" : "omit"), d2 = new Request(t4, { ...p2, signal: y2, method: r5.toUpperCase(), headers: l3.normalize().toJSON(), body: n3, duplex: "half", withCredentials: f2 });
            let o4 = await fetch(d2);
            const i3 = We && ("stream" === c2 || "response" === c2);
            if (We && (s2 || i3)) {
              const e5 = {};
              ["status", "statusText", "headers"].forEach((t6) => {
                e5[t6] = o4[t6];
              });
              const t5 = q.toFiniteNumber(o4.headers.get("content-length"));
              o4 = new Response(Ve(o4.body, 65536, s2 && qe(t5, je(s2, true)), i3 && v2, ze), e5);
            }
            c2 = c2 || "text";
            let a3 = await $e[q.findKey($e, c2) || "text"](o4, e4);
            return !i3 && v2(), m2 && m2(), await new Promise((t5, r6) => {
              Ae(t5, r6, { data: a3, headers: _e.from(o4.headers), status: o4.status, statusText: o4.statusText, config: e4, request: d2 });
            });
          } catch (t5) {
            if (v2(), t5 && "TypeError" === t5.name && /fetch/i.test(t5.message)) throw Object.assign(new X("Network Error", X.ERR_NETWORK, e4, d2), { cause: t5.cause || t5 });
            throw X.from(t5, t5 && t5.code, e4, d2);
          }
        }) };
        q.forEach(Je, (e4, t4) => {
          if (e4) {
            try {
              Object.defineProperty(e4, "name", { value: t4 });
            } catch (e5) {
            }
            Object.defineProperty(e4, "adapterName", { value: t4 });
          }
        });
        const Ze = (e4) => `- ${e4}`, et = (e4) => q.isFunction(e4) || null === e4 || false === e4, tt = (e4) => {
          e4 = q.isArray(e4) ? e4 : [e4];
          const { length: t4 } = e4;
          let r5, n3;
          const o3 = {};
          for (let i2 = 0; i2 < t4; i2++) {
            let t5;
            if (r5 = e4[i2], n3 = r5, !et(r5) && (n3 = Je[(t5 = String(r5)).toLowerCase()], void 0 === n3)) throw new X(`Unknown adapter '${t5}'`);
            if (n3) break;
            o3[t5 || "#" + i2] = n3;
          }
          if (!n3) {
            const e5 = Object.entries(o3).map(([e6, t5]) => `adapter ${e6} ` + (false === t5 ? "is not supported by the environment" : "is not available in the build"));
            let r6 = t4 ? e5.length > 1 ? "since :\n" + e5.map(Ze).join("\n") : " " + Ze(e5[0]) : "as no adapter specified";
            throw new X("There is no suitable adapter to dispatch the request " + r6, "ERR_NOT_SUPPORT");
          }
          return n3;
        };
        function rt(e4) {
          if (e4.cancelToken && e4.cancelToken.throwIfRequested(), e4.signal && e4.signal.aborted) throw new xe(null, e4);
        }
        function nt(e4) {
          rt(e4), e4.headers = _e.from(e4.headers), e4.data = ke.call(e4, e4.transformRequest), -1 !== ["post", "put", "patch"].indexOf(e4.method) && e4.headers.setContentType("application/x-www-form-urlencoded", false);
          return tt(e4.adapter || me.adapter)(e4).then(function(t4) {
            return rt(e4), t4.data = ke.call(e4, e4.transformResponse, t4), t4.headers = _e.from(t4.headers), t4;
          }, function(t4) {
            return Te(t4) || (rt(e4), t4 && t4.response && (t4.response.data = ke.call(e4, e4.transformResponse, t4.response), t4.response.headers = _e.from(t4.response.headers))), Promise.reject(t4);
          });
        }
        const ot = "1.7.2", it = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach((e4, t4) => {
          it[e4] = function(r5) {
            return typeof r5 === e4 || "a" + (t4 < 1 ? "n " : " ") + e4;
          };
        });
        const at = {};
        it.transitional = function(e4, t4, r5) {
          function n3(e5, t5) {
            return "[Axios v1.7.2] Transitional option '" + e5 + "'" + t5 + (r5 ? ". " + r5 : "");
          }
          return (r6, o3, i2) => {
            if (false === e4) throw new X(n3(o3, " has been removed" + (t4 ? " in " + t4 : "")), X.ERR_DEPRECATED);
            return t4 && !at[o3] && (at[o3] = true, console.warn(n3(o3, " has been deprecated since v" + t4 + " and will be removed in the near future"))), !e4 || e4(r6, o3, i2);
          };
        };
        const st = { assertOptions: function(e4, t4, r5) {
          if ("object" != typeof e4) throw new X("options must be an object", X.ERR_BAD_OPTION_VALUE);
          const n3 = Object.keys(e4);
          let o3 = n3.length;
          for (; o3-- > 0; ) {
            const i2 = n3[o3], a2 = t4[i2];
            if (a2) {
              const t5 = e4[i2], r6 = void 0 === t5 || a2(t5, i2, e4);
              if (true !== r6) throw new X("option " + i2 + " must be " + r6, X.ERR_BAD_OPTION_VALUE);
            } else if (true !== r5) throw new X("Unknown option " + i2, X.ERR_BAD_OPTION);
          }
        }, validators: it }, ut = st.validators;
        class ct {
          constructor(e4) {
            this.defaults = e4, this.interceptors = { request: new ie(), response: new ie() };
          }
          async request(e4, t4) {
            try {
              return await this._request(e4, t4);
            } catch (e5) {
              if (e5 instanceof Error) {
                let t5;
                Error.captureStackTrace ? Error.captureStackTrace(t5 = {}) : t5 = new Error();
                const r5 = t5.stack ? t5.stack.replace(/^.+\n/, "") : "";
                try {
                  e5.stack ? r5 && !String(e5.stack).endsWith(r5.replace(/^.+\n.+\n/, "")) && (e5.stack += "\n" + r5) : e5.stack = r5;
                } catch (e6) {
                }
              }
              throw e5;
            }
          }
          _request(e4, t4) {
            "string" == typeof e4 ? (t4 = t4 || {}).url = e4 : t4 = e4 || {}, t4 = Ne(this.defaults, t4);
            const { transitional: r5, paramsSerializer: n3, headers: o3 } = t4;
            void 0 !== r5 && st.assertOptions(r5, { silentJSONParsing: ut.transitional(ut.boolean), forcedJSONParsing: ut.transitional(ut.boolean), clarifyTimeoutError: ut.transitional(ut.boolean) }, false), null != n3 && (q.isFunction(n3) ? t4.paramsSerializer = { serialize: n3 } : st.assertOptions(n3, { encode: ut.function, serialize: ut.function }, true)), t4.method = (t4.method || this.defaults.method || "get").toLowerCase();
            let i2 = o3 && q.merge(o3.common, o3[t4.method]);
            o3 && q.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (e5) => {
              delete o3[e5];
            }), t4.headers = _e.concat(i2, o3);
            const a2 = [];
            let s2 = true;
            this.interceptors.request.forEach(function(e5) {
              "function" == typeof e5.runWhen && false === e5.runWhen(t4) || (s2 = s2 && e5.synchronous, a2.unshift(e5.fulfilled, e5.rejected));
            });
            const u2 = [];
            let c2;
            this.interceptors.response.forEach(function(e5) {
              u2.push(e5.fulfilled, e5.rejected);
            });
            let l3, f2 = 0;
            if (!s2) {
              const e5 = [nt.bind(this), void 0];
              for (e5.unshift.apply(e5, a2), e5.push.apply(e5, u2), l3 = e5.length, c2 = Promise.resolve(t4); f2 < l3; ) c2 = c2.then(e5[f2++], e5[f2++]);
              return c2;
            }
            l3 = a2.length;
            let p2 = t4;
            for (f2 = 0; f2 < l3; ) {
              const e5 = a2[f2++], t5 = a2[f2++];
              try {
                p2 = e5(p2);
              } catch (e6) {
                t5.call(this, e6);
                break;
              }
            }
            try {
              c2 = nt.call(this, p2);
            } catch (e5) {
              return Promise.reject(e5);
            }
            for (f2 = 0, l3 = u2.length; f2 < l3; ) c2 = c2.then(u2[f2++], u2[f2++]);
            return c2;
          }
          getUri(e4) {
            return oe(Le((e4 = Ne(this.defaults, e4)).baseURL, e4.url), e4.params, e4.paramsSerializer);
          }
        }
        q.forEach(["delete", "get", "head", "options"], function(e4) {
          ct.prototype[e4] = function(t4, r5) {
            return this.request(Ne(r5 || {}, { method: e4, url: t4, data: (r5 || {}).data }));
          };
        }), q.forEach(["post", "put", "patch"], function(e4) {
          function t4(t5) {
            return function(r5, n3, o3) {
              return this.request(Ne(o3 || {}, { method: e4, headers: t5 ? { "Content-Type": "multipart/form-data" } : {}, url: r5, data: n3 }));
            };
          }
          ct.prototype[e4] = t4(), ct.prototype[e4 + "Form"] = t4(true);
        });
        const lt = ct;
        class ft {
          constructor(e4) {
            if ("function" != typeof e4) throw new TypeError("executor must be a function.");
            let t4;
            this.promise = new Promise(function(e5) {
              t4 = e5;
            });
            const r5 = this;
            this.promise.then((e5) => {
              if (!r5._listeners) return;
              let t5 = r5._listeners.length;
              for (; t5-- > 0; ) r5._listeners[t5](e5);
              r5._listeners = null;
            }), this.promise.then = (e5) => {
              let t5;
              const n3 = new Promise((e6) => {
                r5.subscribe(e6), t5 = e6;
              }).then(e5);
              return n3.cancel = function() {
                r5.unsubscribe(t5);
              }, n3;
            }, e4(function(e5, n3, o3) {
              r5.reason || (r5.reason = new xe(e5, n3, o3), t4(r5.reason));
            });
          }
          throwIfRequested() {
            if (this.reason) throw this.reason;
          }
          subscribe(e4) {
            this.reason ? e4(this.reason) : this._listeners ? this._listeners.push(e4) : this._listeners = [e4];
          }
          unsubscribe(e4) {
            if (!this._listeners) return;
            const t4 = this._listeners.indexOf(e4);
            -1 !== t4 && this._listeners.splice(t4, 1);
          }
          static source() {
            let e4;
            return { token: new ft(function(t4) {
              e4 = t4;
            }), cancel: e4 };
          }
        }
        const pt = ft;
        const ht = { Continue: 100, SwitchingProtocols: 101, Processing: 102, EarlyHints: 103, Ok: 200, Created: 201, Accepted: 202, NonAuthoritativeInformation: 203, NoContent: 204, ResetContent: 205, PartialContent: 206, MultiStatus: 207, AlreadyReported: 208, ImUsed: 226, MultipleChoices: 300, MovedPermanently: 301, Found: 302, SeeOther: 303, NotModified: 304, UseProxy: 305, Unused: 306, TemporaryRedirect: 307, PermanentRedirect: 308, BadRequest: 400, Unauthorized: 401, PaymentRequired: 402, Forbidden: 403, NotFound: 404, MethodNotAllowed: 405, NotAcceptable: 406, ProxyAuthenticationRequired: 407, RequestTimeout: 408, Conflict: 409, Gone: 410, LengthRequired: 411, PreconditionFailed: 412, PayloadTooLarge: 413, UriTooLong: 414, UnsupportedMediaType: 415, RangeNotSatisfiable: 416, ExpectationFailed: 417, ImATeapot: 418, MisdirectedRequest: 421, UnprocessableEntity: 422, Locked: 423, FailedDependency: 424, TooEarly: 425, UpgradeRequired: 426, PreconditionRequired: 428, TooManyRequests: 429, RequestHeaderFieldsTooLarge: 431, UnavailableForLegalReasons: 451, InternalServerError: 500, NotImplemented: 501, BadGateway: 502, ServiceUnavailable: 503, GatewayTimeout: 504, HttpVersionNotSupported: 505, VariantAlsoNegotiates: 506, InsufficientStorage: 507, LoopDetected: 508, NotExtended: 510, NetworkAuthenticationRequired: 511 };
        Object.entries(ht).forEach(([e4, t4]) => {
          ht[t4] = e4;
        });
        const dt = ht;
        const yt = function e4(t4) {
          const r5 = new lt(t4), n3 = o2(lt.prototype.request, r5);
          return q.extend(n3, lt.prototype, r5, { allOwnKeys: true }), q.extend(n3, r5, null, { allOwnKeys: true }), n3.create = function(r6) {
            return e4(Ne(t4, r6));
          }, n3;
        }(me);
        yt.Axios = lt, yt.CanceledError = xe, yt.CancelToken = pt, yt.isCancel = Te, yt.VERSION = ot, yt.toFormData = J, yt.AxiosError = X, yt.Cancel = yt.CanceledError, yt.all = function(e4) {
          return Promise.all(e4);
        }, yt.spread = function(e4) {
          return function(t4) {
            return e4.apply(null, t4);
          };
        }, yt.isAxiosError = function(e4) {
          return q.isObject(e4) && true === e4.isAxiosError;
        }, yt.mergeConfig = Ne, yt.AxiosHeaders = _e, yt.formToJSON = (e4) => de(q.isHTMLForm(e4) ? new FormData(e4) : e4), yt.getAdapter = tt, yt.HttpStatusCode = dt, yt.default = yt;
        const mt = yt;
      }, 8330: (e3) => {
        "use strict";
        e3.exports = { rE: "12.1.0" };
      } }, t2 = {};
      function r3(n2) {
        var o2 = t2[n2];
        if (void 0 !== o2) return o2.exports;
        var i = t2[n2] = { id: n2, loaded: false, exports: {} };
        return e2[n2].call(i.exports, i, i.exports, r3), i.loaded = true, i.exports;
      }
      return r3.n = (e3) => {
        var t3 = e3 && e3.__esModule ? () => e3.default : () => e3;
        return r3.d(t3, { a: t3 }), t3;
      }, r3.d = (e3, t3) => {
        for (var n2 in t3) r3.o(t3, n2) && !r3.o(e3, n2) && Object.defineProperty(e3, n2, { enumerable: true, get: t3[n2] });
      }, r3.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
          return this || new Function("return this")();
        } catch (e3) {
          if ("object" == typeof window) return window;
        }
      }(), r3.hmd = (e3) => ((e3 = Object.create(e3)).children || (e3.children = []), Object.defineProperty(e3, "exports", { enumerable: true, set: () => {
        throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + e3.id);
      } }), e3), r3.o = (e3, t3) => Object.prototype.hasOwnProperty.call(e3, t3), r3.r = (e3) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
      }, r3.nmd = (e3) => (e3.paths = [], e3.children || (e3.children = []), e3), r3(1924);
    })());
  }
});

// node_modules/base64url/dist/pad-string.js
var require_pad_string = __commonJS({
  "node_modules/base64url/dist/pad-string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function padString(input) {
      var segmentLength = 4;
      var stringLength = input.length;
      var diff = stringLength % segmentLength;
      if (!diff) {
        return input;
      }
      var position2 = stringLength;
      var padLength = segmentLength - diff;
      var paddedStringLength = stringLength + padLength;
      var buffer = Buffer.alloc(paddedStringLength);
      buffer.write(input);
      while (padLength--) {
        buffer.write("=", position2++);
      }
      return buffer.toString();
    }
    exports.default = padString;
  }
});

// node_modules/base64url/dist/base64url.js
var require_base64url = __commonJS({
  "node_modules/base64url/dist/base64url.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var pad_string_1 = require_pad_string();
    function encode(input, encoding) {
      if (encoding === void 0) {
        encoding = "utf8";
      }
      if (Buffer.isBuffer(input)) {
        return fromBase64(input.toString("base64"));
      }
      return fromBase64(Buffer.from(input, encoding).toString("base64"));
    }
    function decode2(base64url3, encoding) {
      if (encoding === void 0) {
        encoding = "utf8";
      }
      return Buffer.from(toBase64(base64url3), "base64").toString(encoding);
    }
    function toBase64(base64url3) {
      base64url3 = base64url3.toString();
      return pad_string_1.default(base64url3).replace(/\-/g, "+").replace(/_/g, "/");
    }
    function fromBase64(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function toBuffer(base64url3) {
      return Buffer.from(toBase64(base64url3), "base64");
    }
    var base64url2 = encode;
    base64url2.encode = encode;
    base64url2.decode = decode2;
    base64url2.toBase64 = toBase64;
    base64url2.fromBase64 = fromBase64;
    base64url2.toBuffer = toBuffer;
    exports.default = base64url2;
  }
});

// node_modules/base64url/index.js
var require_base64url2 = __commonJS({
  "node_modules/base64url/index.js"(exports, module) {
    module.exports = require_base64url().default;
    module.exports.default = module.exports;
  }
});

// node_modules/passkey-kit/src/base.ts
var PasskeyBase = class {
  constructor(options) {
    __publicField(this, "launchtubeUrl");
    __publicField(this, "launchtubeJwt");
    const {
      launchtubeUrl,
      launchtubeJwt
    } = options;
    if (launchtubeUrl)
      this.launchtubeUrl = launchtubeUrl;
    if (launchtubeJwt)
      this.launchtubeJwt = launchtubeJwt;
  }
  async send(xdr2, fee = 1e4) {
    if (!this.launchtubeUrl || !this.launchtubeJwt)
      throw new Error("Launchtube service not configured");
    const data = new FormData();
    data.set("xdr", xdr2);
    data.set("fee", fee.toString());
    return fetch(this.launchtubeUrl, {
      method: "POST",
      headers: {
        authorization: `Bearer ${this.launchtubeJwt}`
      },
      body: data
    }).then(async (res) => {
      if (res.ok)
        return res.json();
      else throw await res.json();
    });
  }
};

// node_modules/passkey-kit-sdk/src/index.ts
var import_buffer = __toESM(require_buffer());
var import_contract = __toESM(require_contract2());
if (typeof window !== "undefined") {
  window.Buffer = window.Buffer || import_buffer.Buffer;
}
var Client = class extends import_contract.Client {
  constructor(options) {
    super(
      new import_contract.Spec([
        "AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAACgAAAAAAAAAOTm90SW5pdGlhbGl6ZWQAAAAAAAEAAAAAAAAACE5vdEZvdW5kAAAAAgAAAAAAAAAMTm90UGVybWl0dGVkAAAAAwAAAAAAAAASQWxyZWFkeUluaXRpYWxpemVkAAAAAAAEAAAAAAAAAA5Kc29uUGFyc2VFcnJvcgAAAAAABQAAAAAAAAAOSW52YWxpZENvbnRleHQAAAAAAAYAAAAAAAAAIENsaWVudERhdGFKc29uQ2hhbGxlbmdlSW5jb3JyZWN0AAAABwAAAAAAAAAXU2VjcDI1NnIxUHVibGljS2V5UGFyc2UAAAAACAAAAAAAAAAXU2VjcDI1NnIxU2lnbmF0dXJlUGFyc2UAAAAACQAAAAAAAAAVU2VjcDI1NnIxVmVyaWZ5RmFpbGVkAAAAAAAACg==",
        "AAAAAAAAAAAAAAAEaW5pdAAAAAIAAAAAAAAAAmlkAAAAAAAOAAAAAAAAAAJwawAAAAAD7gAAAEEAAAABAAAD6QAAA+0AAAAAAAAAAw==",
        "AAAAAAAAAAAAAAAHdXBncmFkZQAAAAABAAAAAAAAAARoYXNoAAAD7gAAACAAAAABAAAD6QAAA+0AAAAAAAAAAw==",
        "AAAAAAAAAAAAAAAHYWRkX3NpZwAAAAACAAAAAAAAAAJpZAAAAAAADgAAAAAAAAACcGsAAAAAA+4AAABBAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
        "AAAAAAAAAAAAAAAGcm1fc2lnAAAAAAABAAAAAAAAAAJpZAAAAAAADgAAAAEAAAPpAAAD7QAAAAAAAAAD",
        "AAAAAAAAAAAAAAAIcmVfc3VwZXIAAAABAAAAAAAAAAJpZAAAAAAADgAAAAEAAAPpAAAD7QAAAAAAAAAD",
        "AAAAAQAAAAAAAAAAAAAACVNpZ25hdHVyZQAAAAAAAAQAAAAAAAAAEmF1dGhlbnRpY2F0b3JfZGF0YQAAAAAADgAAAAAAAAAQY2xpZW50X2RhdGFfanNvbgAAAA4AAAAAAAAAAmlkAAAAAAAOAAAAAAAAAAlzaWduYXR1cmUAAAAAAAPuAAAAQA==",
        "AAAAAAAAAAAAAAAMX19jaGVja19hdXRoAAAAAwAAAAAAAAARc2lnbmF0dXJlX3BheWxvYWQAAAAAAAPuAAAAIAAAAAAAAAAJc2lnbmF0dXJlAAAAAAAH0AAAAAlTaWduYXR1cmUAAAAAAAAAAAAADWF1dGhfY29udGV4dHMAAAAAAAPqAAAH0AAAAAdDb250ZXh0AAAAAAEAAAPpAAAD7QAAAAAAAAAD"
      ]),
      options
    );
    this.options = options;
    __publicField(this, "fromJSON", {
      init: this.txFromJSON,
      upgrade: this.txFromJSON,
      add_sig: this.txFromJSON,
      rm_sig: this.txFromJSON,
      re_super: this.txFromJSON
    });
  }
};

// node_modules/passkey-factory-sdk/src/index.ts
var import_buffer2 = __toESM(require_buffer());
var import_contract2 = __toESM(require_contract3());
if (typeof window !== "undefined") {
  window.Buffer = window.Buffer || import_buffer2.Buffer;
}
var Client2 = class extends import_contract2.Client {
  constructor(options) {
    super(
      new import_contract2.Spec([
        "AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAAAgAAAAAAAAAOTm90SW5pdGlhbGl6ZWQAAAAAAAEAAAAAAAAAEkFscmVhZHlJbml0aWFsaXplZAAAAAAAAg==",
        "AAAAAAAAAAAAAAAEaW5pdAAAAAEAAAAAAAAACXdhc21faGFzaAAAAAAAA+4AAAAgAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
        "AAAAAAAAAAAAAAAGZGVwbG95AAAAAAACAAAAAAAAAAJpZAAAAAAADgAAAAAAAAACcGsAAAAAA+4AAABBAAAAAQAAA+kAAAATAAAAAw=="
      ]),
      options
    );
    this.options = options;
    __publicField(this, "fromJSON", {
      init: this.txFromJSON,
      deploy: this.txFromJSON
    });
  }
};

// node_modules/passkey-kit/src/kit.ts
var import_stellar_sdk = __toESM(require_stellar_sdk_min(), 1);

// node_modules/bigint-conversion/dist/esm/index.browser.js
function n(e2, n2 = false, t2) {
  const r3 = e2.match(/^(0x)?([\da-fA-F]+)$/);
  if (null == r3) throw new RangeError("input must be a hexadecimal string, e.g. '0x124fe3a' or '0214f1b2'");
  let o2 = r3[2];
  if (void 0 !== t2) {
    if (t2 < o2.length / 2) throw new RangeError(`expected byte length ${t2} < input hex byte length ${Math.ceil(o2.length / 2)}`);
    o2 = o2.padStart(2 * t2, "0");
  }
  return n2 ? "0x" + o2 : o2;
}
function t(e2, n2 = false) {
  if (e2 < 0) throw RangeError("a should be a non-negative integer. Negative values are not supported");
  return l(o(e2), n2);
}
function r2(e2) {
  let n2 = 8n;
  ArrayBuffer.isView(e2) ? n2 = BigInt(8 * e2.BYTES_PER_ELEMENT) : e2 = new Uint8Array(e2);
  let t2 = 0n;
  for (const r3 of e2.values()) {
    t2 = (t2 << n2) + BigInt(r3);
  }
  return t2;
}
function o(e2, t2 = false, r3) {
  if (e2 < 0) throw RangeError("a should be a non-negative integer. Negative values are not supported");
  return n(e2.toString(16), t2, r3);
}
function l(e2, t2 = false) {
  let r3 = n(e2);
  return r3 = n(e2, false, Math.ceil(r3.length / 2)), Uint8Array.from(r3.match(/[\da-fA-F]{2}/g).map((e3) => parseInt(e3, 16))).buffer;
}

// node_modules/passkey-kit/src/kit.ts
var import_base64url = __toESM(require_base64url2(), 1);

// node_modules/@simplewebauthn/browser/dist/bundle/index.js
function bufferToBase64URLString(buffer) {
  const bytes = new Uint8Array(buffer);
  let str = "";
  for (const charCode of bytes) {
    str += String.fromCharCode(charCode);
  }
  const base64String = btoa(str);
  return base64String.replace(/\+/g, "-").replace(/\//g, "_").replace(/=/g, "");
}
function base64URLStringToBuffer(base64URLString) {
  const base64 = base64URLString.replace(/-/g, "+").replace(/_/g, "/");
  const padLength = (4 - base64.length % 4) % 4;
  const padded = base64.padEnd(base64.length + padLength, "=");
  const binary = atob(padded);
  const buffer = new ArrayBuffer(binary.length);
  const bytes = new Uint8Array(buffer);
  for (let i = 0; i < binary.length; i++) {
    bytes[i] = binary.charCodeAt(i);
  }
  return buffer;
}
function browserSupportsWebAuthn() {
  return (window == null ? void 0 : window.PublicKeyCredential) !== void 0 && typeof window.PublicKeyCredential === "function";
}
function toPublicKeyCredentialDescriptor(descriptor) {
  const { id } = descriptor;
  return {
    ...descriptor,
    id: base64URLStringToBuffer(id),
    transports: descriptor.transports
  };
}
function isValidDomain(hostname) {
  return hostname === "localhost" || /^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(hostname);
}
var WebAuthnError = class extends Error {
  constructor({ message, code, cause, name }) {
    super(message, { cause });
    this.name = name ?? cause.name;
    this.code = code;
  }
};
function identifyRegistrationError({ error, options }) {
  var _a, _b;
  const { publicKey } = options;
  if (!publicKey) {
    throw Error("options was missing required publicKey property");
  }
  if (error.name === "AbortError") {
    if (options.signal instanceof AbortSignal) {
      return new WebAuthnError({
        message: "Registration ceremony was sent an abort signal",
        code: "ERROR_CEREMONY_ABORTED",
        cause: error
      });
    }
  } else if (error.name === "ConstraintError") {
    if (((_a = publicKey.authenticatorSelection) == null ? void 0 : _a.requireResidentKey) === true) {
      return new WebAuthnError({
        message: "Discoverable credentials were required but no available authenticator supported it",
        code: "ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",
        cause: error
      });
    } else if (((_b = publicKey.authenticatorSelection) == null ? void 0 : _b.userVerification) === "required") {
      return new WebAuthnError({
        message: "User verification was required but no available authenticator supported it",
        code: "ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",
        cause: error
      });
    }
  } else if (error.name === "InvalidStateError") {
    return new WebAuthnError({
      message: "The authenticator was previously registered",
      code: "ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",
      cause: error
    });
  } else if (error.name === "NotAllowedError") {
    return new WebAuthnError({
      message: error.message,
      code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
      cause: error
    });
  } else if (error.name === "NotSupportedError") {
    const validPubKeyCredParams = publicKey.pubKeyCredParams.filter((param) => param.type === "public-key");
    if (validPubKeyCredParams.length === 0) {
      return new WebAuthnError({
        message: 'No entry in pubKeyCredParams was of type "public-key"',
        code: "ERROR_MALFORMED_PUBKEYCREDPARAMS",
        cause: error
      });
    }
    return new WebAuthnError({
      message: "No available authenticator supported any of the specified pubKeyCredParams algorithms",
      code: "ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",
      cause: error
    });
  } else if (error.name === "SecurityError") {
    const effectiveDomain = window.location.hostname;
    if (!isValidDomain(effectiveDomain)) {
      return new WebAuthnError({
        message: `${window.location.hostname} is an invalid domain`,
        code: "ERROR_INVALID_DOMAIN",
        cause: error
      });
    } else if (publicKey.rp.id !== effectiveDomain) {
      return new WebAuthnError({
        message: `The RP ID "${publicKey.rp.id}" is invalid for this domain`,
        code: "ERROR_INVALID_RP_ID",
        cause: error
      });
    }
  } else if (error.name === "TypeError") {
    if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {
      return new WebAuthnError({
        message: "User ID was not between 1 and 64 characters",
        code: "ERROR_INVALID_USER_ID_LENGTH",
        cause: error
      });
    }
  } else if (error.name === "UnknownError") {
    return new WebAuthnError({
      message: "The authenticator was unable to process the specified options, or could not create a new credential",
      code: "ERROR_AUTHENTICATOR_GENERAL_ERROR",
      cause: error
    });
  }
  return error;
}
var BaseWebAuthnAbortService = class {
  createNewAbortSignal() {
    if (this.controller) {
      const abortError = new Error("Cancelling existing WebAuthn API call for new one");
      abortError.name = "AbortError";
      this.controller.abort(abortError);
    }
    const newController = new AbortController();
    this.controller = newController;
    return newController.signal;
  }
  cancelCeremony() {
    if (this.controller) {
      const abortError = new Error("Manually cancelling existing WebAuthn API call");
      abortError.name = "AbortError";
      this.controller.abort(abortError);
      this.controller = void 0;
    }
  }
};
var WebAuthnAbortService = new BaseWebAuthnAbortService();
var attachments = ["cross-platform", "platform"];
function toAuthenticatorAttachment(attachment) {
  if (!attachment) {
    return;
  }
  if (attachments.indexOf(attachment) < 0) {
    return;
  }
  return attachment;
}
async function startRegistration(optionsJSON) {
  var _a;
  if (!browserSupportsWebAuthn()) {
    throw new Error("WebAuthn is not supported in this browser");
  }
  const publicKey = {
    ...optionsJSON,
    challenge: base64URLStringToBuffer(optionsJSON.challenge),
    user: {
      ...optionsJSON.user,
      id: base64URLStringToBuffer(optionsJSON.user.id)
    },
    excludeCredentials: (_a = optionsJSON.excludeCredentials) == null ? void 0 : _a.map(toPublicKeyCredentialDescriptor)
  };
  const options = { publicKey };
  options.signal = WebAuthnAbortService.createNewAbortSignal();
  let credential;
  try {
    credential = await navigator.credentials.create(options);
  } catch (err) {
    throw identifyRegistrationError({ error: err, options });
  }
  if (!credential) {
    throw new Error("Registration was not completed");
  }
  const { id, rawId, response, type } = credential;
  let transports = void 0;
  if (typeof response.getTransports === "function") {
    transports = response.getTransports();
  }
  let responsePublicKeyAlgorithm = void 0;
  if (typeof response.getPublicKeyAlgorithm === "function") {
    try {
      responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();
    } catch (error) {
      warnOnBrokenImplementation("getPublicKeyAlgorithm()", error);
    }
  }
  let responsePublicKey = void 0;
  if (typeof response.getPublicKey === "function") {
    try {
      const _publicKey = response.getPublicKey();
      if (_publicKey !== null) {
        responsePublicKey = bufferToBase64URLString(_publicKey);
      }
    } catch (error) {
      warnOnBrokenImplementation("getPublicKey()", error);
    }
  }
  let responseAuthenticatorData;
  if (typeof response.getAuthenticatorData === "function") {
    try {
      responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());
    } catch (error) {
      warnOnBrokenImplementation("getAuthenticatorData()", error);
    }
  }
  return {
    id,
    rawId: bufferToBase64URLString(rawId),
    response: {
      attestationObject: bufferToBase64URLString(response.attestationObject),
      clientDataJSON: bufferToBase64URLString(response.clientDataJSON),
      transports,
      publicKeyAlgorithm: responsePublicKeyAlgorithm,
      publicKey: responsePublicKey,
      authenticatorData: responseAuthenticatorData
    },
    type,
    clientExtensionResults: credential.getClientExtensionResults(),
    authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment)
  };
}
function warnOnBrokenImplementation(methodName, cause) {
  console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.
`, cause);
}
function browserSupportsWebAuthnAutofill() {
  if (!browserSupportsWebAuthn()) {
    return new Promise((resolve) => resolve(false));
  }
  const globalPublicKeyCredential = window.PublicKeyCredential;
  if (globalPublicKeyCredential.isConditionalMediationAvailable === void 0) {
    return new Promise((resolve) => resolve(false));
  }
  return globalPublicKeyCredential.isConditionalMediationAvailable();
}
function identifyAuthenticationError({ error, options }) {
  const { publicKey } = options;
  if (!publicKey) {
    throw Error("options was missing required publicKey property");
  }
  if (error.name === "AbortError") {
    if (options.signal instanceof AbortSignal) {
      return new WebAuthnError({
        message: "Authentication ceremony was sent an abort signal",
        code: "ERROR_CEREMONY_ABORTED",
        cause: error
      });
    }
  } else if (error.name === "NotAllowedError") {
    return new WebAuthnError({
      message: error.message,
      code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
      cause: error
    });
  } else if (error.name === "SecurityError") {
    const effectiveDomain = window.location.hostname;
    if (!isValidDomain(effectiveDomain)) {
      return new WebAuthnError({
        message: `${window.location.hostname} is an invalid domain`,
        code: "ERROR_INVALID_DOMAIN",
        cause: error
      });
    } else if (publicKey.rpId !== effectiveDomain) {
      return new WebAuthnError({
        message: `The RP ID "${publicKey.rpId}" is invalid for this domain`,
        code: "ERROR_INVALID_RP_ID",
        cause: error
      });
    }
  } else if (error.name === "UnknownError") {
    return new WebAuthnError({
      message: "The authenticator was unable to process the specified options, or could not create a new assertion signature",
      code: "ERROR_AUTHENTICATOR_GENERAL_ERROR",
      cause: error
    });
  }
  return error;
}
async function startAuthentication(optionsJSON, useBrowserAutofill = false) {
  var _a, _b;
  if (!browserSupportsWebAuthn()) {
    throw new Error("WebAuthn is not supported in this browser");
  }
  let allowCredentials;
  if (((_a = optionsJSON.allowCredentials) == null ? void 0 : _a.length) !== 0) {
    allowCredentials = (_b = optionsJSON.allowCredentials) == null ? void 0 : _b.map(toPublicKeyCredentialDescriptor);
  }
  const publicKey = {
    ...optionsJSON,
    challenge: base64URLStringToBuffer(optionsJSON.challenge),
    allowCredentials
  };
  const options = {};
  if (useBrowserAutofill) {
    if (!await browserSupportsWebAuthnAutofill()) {
      throw Error("Browser does not support WebAuthn autofill");
    }
    const eligibleInputs = document.querySelectorAll("input[autocomplete$='webauthn']");
    if (eligibleInputs.length < 1) {
      throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');
    }
    options.mediation = "conditional";
    publicKey.allowCredentials = [];
  }
  options.publicKey = publicKey;
  options.signal = WebAuthnAbortService.createNewAbortSignal();
  let credential;
  try {
    credential = await navigator.credentials.get(options);
  } catch (err) {
    throw identifyAuthenticationError({ error: err, options });
  }
  if (!credential) {
    throw new Error("Authentication was not completed");
  }
  const { id, rawId, response, type } = credential;
  let userHandle = void 0;
  if (response.userHandle) {
    userHandle = bufferToBase64URLString(response.userHandle);
  }
  return {
    id,
    rawId: bufferToBase64URLString(rawId),
    response: {
      authenticatorData: bufferToBase64URLString(response.authenticatorData),
      clientDataJSON: bufferToBase64URLString(response.clientDataJSON),
      signature: bufferToBase64URLString(response.signature),
      userHandle
    },
    type,
    clientExtensionResults: credential.getClientExtensionResults(),
    authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment)
  };
}

// node_modules/cbor-x/decode.js
var decoder;
try {
  decoder = new TextDecoder();
} catch (error) {
}
var src;
var srcEnd;
var position = 0;
var EMPTY_ARRAY = [];
var LEGACY_RECORD_INLINE_ID = 105;
var RECORD_DEFINITIONS_ID = 57342;
var RECORD_INLINE_ID = 57343;
var BUNDLED_STRINGS_ID = 57337;
var PACKED_REFERENCE_TAG_ID = 6;
var STOP_CODE = {};
var maxArraySize = 11281e4;
var maxMapSize = 1681e4;
var strings = EMPTY_ARRAY;
var stringPosition = 0;
var currentDecoder = {};
var currentStructures;
var srcString;
var srcStringStart = 0;
var srcStringEnd = 0;
var bundledStrings;
var referenceMap;
var currentExtensions = [];
var currentExtensionRanges = [];
var packedValues;
var dataView;
var restoreMapsAsObject;
var defaultOptions = {
  useRecords: false,
  mapsAsObjects: true
};
var sequentialMode = false;
var inlineObjectReadThreshold = 2;
try {
  new Function("");
} catch (error) {
  inlineObjectReadThreshold = Infinity;
}
var Decoder = class _Decoder {
  constructor(options) {
    if (options) {
      if ((options.keyMap || options._keyMap) && !options.useRecords) {
        options.useRecords = false;
        options.mapsAsObjects = true;
      }
      if (options.useRecords === false && options.mapsAsObjects === void 0)
        options.mapsAsObjects = true;
      if (options.getStructures)
        options.getShared = options.getStructures;
      if (options.getShared && !options.structures)
        (options.structures = []).uninitialized = true;
      if (options.keyMap) {
        this.mapKey = /* @__PURE__ */ new Map();
        for (let [k, v] of Object.entries(options.keyMap)) this.mapKey.set(v, k);
      }
    }
    Object.assign(this, options);
  }
  /*
  decodeKey(key) {
  	return this.keyMap
  		? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key
  		: key
  }
  */
  decodeKey(key) {
    return this.keyMap ? this.mapKey.get(key) || key : key;
  }
  encodeKey(key) {
    return this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key;
  }
  encodeKeys(rec) {
    if (!this._keyMap) return rec;
    let map = /* @__PURE__ */ new Map();
    for (let [k, v] of Object.entries(rec)) map.set(this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k, v);
    return map;
  }
  decodeKeys(map) {
    if (!this._keyMap || map.constructor.name != "Map") return map;
    if (!this._mapKey) {
      this._mapKey = /* @__PURE__ */ new Map();
      for (let [k, v] of Object.entries(this._keyMap)) this._mapKey.set(v, k);
    }
    let res = {};
    map.forEach((v, k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] = v);
    return res;
  }
  mapDecode(source, end) {
    let res = this.decode(source);
    if (this._keyMap) {
      switch (res.constructor.name) {
        case "Array":
          return res.map((r3) => this.decodeKeys(r3));
      }
    }
    return res;
  }
  decode(source, end) {
    if (src) {
      return saveState(() => {
        clearSource();
        return this ? this.decode(source, end) : _Decoder.prototype.decode.call(defaultOptions, source, end);
      });
    }
    srcEnd = end > -1 ? end : source.length;
    position = 0;
    stringPosition = 0;
    srcStringEnd = 0;
    srcString = null;
    strings = EMPTY_ARRAY;
    bundledStrings = null;
    src = source;
    try {
      dataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength));
    } catch (error) {
      src = null;
      if (source instanceof Uint8Array)
        throw error;
      throw new Error("Source must be a Uint8Array or Buffer but was a " + (source && typeof source == "object" ? source.constructor.name : typeof source));
    }
    if (this instanceof _Decoder) {
      currentDecoder = this;
      packedValues = this.sharedValues && (this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) : this.sharedValues);
      if (this.structures) {
        currentStructures = this.structures;
        return checkedRead();
      } else if (!currentStructures || currentStructures.length > 0) {
        currentStructures = [];
      }
    } else {
      currentDecoder = defaultOptions;
      if (!currentStructures || currentStructures.length > 0)
        currentStructures = [];
      packedValues = null;
    }
    return checkedRead();
  }
  decodeMultiple(source, forEach) {
    let values, lastPosition = 0;
    try {
      let size = source.length;
      sequentialMode = true;
      let value = this ? this.decode(source, size) : defaultDecoder.decode(source, size);
      if (forEach) {
        if (forEach(value) === false) {
          return;
        }
        while (position < size) {
          lastPosition = position;
          if (forEach(checkedRead()) === false) {
            return;
          }
        }
      } else {
        values = [value];
        while (position < size) {
          lastPosition = position;
          values.push(checkedRead());
        }
        return values;
      }
    } catch (error) {
      error.lastPosition = lastPosition;
      error.values = values;
      throw error;
    } finally {
      sequentialMode = false;
      clearSource();
    }
  }
};
function checkedRead() {
  try {
    let result = read();
    if (bundledStrings) {
      if (position >= bundledStrings.postBundlePosition) {
        let error = new Error("Unexpected bundle position");
        error.incomplete = true;
        throw error;
      }
      position = bundledStrings.postBundlePosition;
      bundledStrings = null;
    }
    if (position == srcEnd) {
      currentStructures = null;
      src = null;
      if (referenceMap)
        referenceMap = null;
    } else if (position > srcEnd) {
      let error = new Error("Unexpected end of CBOR data");
      error.incomplete = true;
      throw error;
    } else if (!sequentialMode) {
      throw new Error("Data read, but end of buffer not reached");
    }
    return result;
  } catch (error) {
    clearSource();
    if (error instanceof RangeError || error.message.startsWith("Unexpected end of buffer")) {
      error.incomplete = true;
    }
    throw error;
  }
}
function read() {
  let token = src[position++];
  let majorType = token >> 5;
  token = token & 31;
  if (token > 23) {
    switch (token) {
      case 24:
        token = src[position++];
        break;
      case 25:
        if (majorType == 7) {
          return getFloat16();
        }
        token = dataView.getUint16(position);
        position += 2;
        break;
      case 26:
        if (majorType == 7) {
          let value = dataView.getFloat32(position);
          if (currentDecoder.useFloat32 > 2) {
            let multiplier = mult10[(src[position] & 127) << 1 | src[position + 1] >> 7];
            position += 4;
            return (multiplier * value + (value > 0 ? 0.5 : -0.5) >> 0) / multiplier;
          }
          position += 4;
          return value;
        }
        token = dataView.getUint32(position);
        position += 4;
        break;
      case 27:
        if (majorType == 7) {
          let value = dataView.getFloat64(position);
          position += 8;
          return value;
        }
        if (majorType > 1) {
          if (dataView.getUint32(position) > 0)
            throw new Error("JavaScript does not support arrays, maps, or strings with length over 4294967295");
          token = dataView.getUint32(position + 4);
        } else if (currentDecoder.int64AsNumber) {
          token = dataView.getUint32(position) * 4294967296;
          token += dataView.getUint32(position + 4);
        } else
          token = dataView.getBigUint64(position);
        position += 8;
        break;
      case 31:
        switch (majorType) {
          case 2:
          case 3:
            throw new Error("Indefinite length not supported for byte or text strings");
          case 4:
            let array = [];
            let value, i = 0;
            while ((value = read()) != STOP_CODE) {
              if (i >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`);
              array[i++] = value;
            }
            return majorType == 4 ? array : majorType == 3 ? array.join("") : Buffer.concat(array);
          case 5:
            let key;
            if (currentDecoder.mapsAsObjects) {
              let object = {};
              let i2 = 0;
              if (currentDecoder.keyMap) {
                while ((key = read()) != STOP_CODE) {
                  if (i2++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`);
                  object[safeKey(currentDecoder.decodeKey(key))] = read();
                }
              } else {
                while ((key = read()) != STOP_CODE) {
                  if (i2++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`);
                  object[safeKey(key)] = read();
                }
              }
              return object;
            } else {
              if (restoreMapsAsObject) {
                currentDecoder.mapsAsObjects = true;
                restoreMapsAsObject = false;
              }
              let map = /* @__PURE__ */ new Map();
              if (currentDecoder.keyMap) {
                let i2 = 0;
                while ((key = read()) != STOP_CODE) {
                  if (i2++ >= maxMapSize) {
                    throw new Error(`Map size exceeds ${maxMapSize}`);
                  }
                  map.set(currentDecoder.decodeKey(key), read());
                }
              } else {
                let i2 = 0;
                while ((key = read()) != STOP_CODE) {
                  if (i2++ >= maxMapSize) {
                    throw new Error(`Map size exceeds ${maxMapSize}`);
                  }
                  map.set(key, read());
                }
              }
              return map;
            }
          case 7:
            return STOP_CODE;
          default:
            throw new Error("Invalid major type for indefinite length " + majorType);
        }
      default:
        throw new Error("Unknown token " + token);
    }
  }
  switch (majorType) {
    case 0:
      return token;
    case 1:
      return ~token;
    case 2:
      return readBin(token);
    case 3:
      if (srcStringEnd >= position) {
        return srcString.slice(position - srcStringStart, (position += token) - srcStringStart);
      }
      if (srcStringEnd == 0 && srcEnd < 140 && token < 32) {
        let string = token < 16 ? shortStringInJS(token) : longStringInJS(token);
        if (string != null)
          return string;
      }
      return readFixedString(token);
    case 4:
      if (token >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`);
      let array = new Array(token);
      for (let i = 0; i < token; i++) array[i] = read();
      return array;
    case 5:
      if (token >= maxMapSize) throw new Error(`Map size exceeds ${maxArraySize}`);
      if (currentDecoder.mapsAsObjects) {
        let object = {};
        if (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read();
        else for (let i = 0; i < token; i++) object[safeKey(read())] = read();
        return object;
      } else {
        if (restoreMapsAsObject) {
          currentDecoder.mapsAsObjects = true;
          restoreMapsAsObject = false;
        }
        let map = /* @__PURE__ */ new Map();
        if (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()), read());
        else for (let i = 0; i < token; i++) map.set(read(), read());
        return map;
      }
    case 6:
      if (token >= BUNDLED_STRINGS_ID) {
        let structure = currentStructures[token & 8191];
        if (structure) {
          if (!structure.read) structure.read = createStructureReader(structure);
          return structure.read();
        }
        if (token < 65536) {
          if (token == RECORD_INLINE_ID) {
            let length = readJustLength();
            let id = read();
            let structure2 = read();
            recordDefinition(id, structure2);
            let object = {};
            if (currentDecoder.keyMap) for (let i = 2; i < length; i++) {
              let key = currentDecoder.decodeKey(structure2[i - 2]);
              object[safeKey(key)] = read();
            }
            else for (let i = 2; i < length; i++) {
              let key = structure2[i - 2];
              object[safeKey(key)] = read();
            }
            return object;
          } else if (token == RECORD_DEFINITIONS_ID) {
            let length = readJustLength();
            let id = read();
            for (let i = 2; i < length; i++) {
              recordDefinition(id++, read());
            }
            return read();
          } else if (token == BUNDLED_STRINGS_ID) {
            return readBundleExt();
          }
          if (currentDecoder.getShared) {
            loadShared();
            structure = currentStructures[token & 8191];
            if (structure) {
              if (!structure.read)
                structure.read = createStructureReader(structure);
              return structure.read();
            }
          }
        }
      }
      let extension = currentExtensions[token];
      if (extension) {
        if (extension.handlesRead)
          return extension(read);
        else
          return extension(read());
      } else {
        let input = read();
        for (let i = 0; i < currentExtensionRanges.length; i++) {
          let value = currentExtensionRanges[i](token, input);
          if (value !== void 0)
            return value;
        }
        return new Tag(input, token);
      }
    case 7:
      switch (token) {
        case 20:
          return false;
        case 21:
          return true;
        case 22:
          return null;
        case 23:
          return;
        case 31:
        default:
          let packedValue = (packedValues || getPackedValues())[token];
          if (packedValue !== void 0)
            return packedValue;
          throw new Error("Unknown token " + token);
      }
    default:
      if (isNaN(token)) {
        let error = new Error("Unexpected end of CBOR data");
        error.incomplete = true;
        throw error;
      }
      throw new Error("Unknown CBOR token " + token);
  }
}
var validName = /^[a-zA-Z_$][a-zA-Z\d_$]*$/;
function createStructureReader(structure) {
  if (!structure) throw new Error("Structure is required in record definition");
  function readObject() {
    let length = src[position++];
    length = length & 31;
    if (length > 23) {
      switch (length) {
        case 24:
          length = src[position++];
          break;
        case 25:
          length = dataView.getUint16(position);
          position += 2;
          break;
        case 26:
          length = dataView.getUint32(position);
          position += 4;
          break;
        default:
          throw new Error("Expected array header, but got " + src[position - 1]);
      }
    }
    let compiledReader = this.compiledReader;
    while (compiledReader) {
      if (compiledReader.propertyCount === length)
        return compiledReader(read);
      compiledReader = compiledReader.next;
    }
    if (this.slowReads++ >= inlineObjectReadThreshold) {
      let array = this.length == length ? this : this.slice(0, length);
      compiledReader = currentDecoder.keyMap ? new Function("r", "return {" + array.map((k) => currentDecoder.decodeKey(k)).map((k) => validName.test(k) ? safeKey(k) + ":r()" : "[" + JSON.stringify(k) + "]:r()").join(",") + "}") : new Function("r", "return {" + array.map((key) => validName.test(key) ? safeKey(key) + ":r()" : "[" + JSON.stringify(key) + "]:r()").join(",") + "}");
      if (this.compiledReader)
        compiledReader.next = this.compiledReader;
      compiledReader.propertyCount = length;
      this.compiledReader = compiledReader;
      return compiledReader(read);
    }
    let object = {};
    if (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read();
    else for (let i = 0; i < length; i++) {
      object[safeKey(this[i])] = read();
    }
    return object;
  }
  structure.slowReads = 0;
  return readObject;
}
function safeKey(key) {
  if (typeof key === "string") return key === "__proto__" ? "__proto_" : key;
  if (typeof key === "number" || typeof key === "boolean" || typeof key === "bigint") return key.toString();
  if (key == null) return key + "";
  throw new Error("Invalid property name type " + typeof key);
}
var readFixedString = readStringJS;
function readStringJS(length) {
  let result;
  if (length < 16) {
    if (result = shortStringInJS(length))
      return result;
  }
  if (length > 64 && decoder)
    return decoder.decode(src.subarray(position, position += length));
  const end = position + length;
  const units = [];
  result = "";
  while (position < end) {
    const byte1 = src[position++];
    if ((byte1 & 128) === 0) {
      units.push(byte1);
    } else if ((byte1 & 224) === 192) {
      const byte2 = src[position++] & 63;
      units.push((byte1 & 31) << 6 | byte2);
    } else if ((byte1 & 240) === 224) {
      const byte2 = src[position++] & 63;
      const byte3 = src[position++] & 63;
      units.push((byte1 & 31) << 12 | byte2 << 6 | byte3);
    } else if ((byte1 & 248) === 240) {
      const byte2 = src[position++] & 63;
      const byte3 = src[position++] & 63;
      const byte4 = src[position++] & 63;
      let unit = (byte1 & 7) << 18 | byte2 << 12 | byte3 << 6 | byte4;
      if (unit > 65535) {
        unit -= 65536;
        units.push(unit >>> 10 & 1023 | 55296);
        unit = 56320 | unit & 1023;
      }
      units.push(unit);
    } else {
      units.push(byte1);
    }
    if (units.length >= 4096) {
      result += fromCharCode.apply(String, units);
      units.length = 0;
    }
  }
  if (units.length > 0) {
    result += fromCharCode.apply(String, units);
  }
  return result;
}
var fromCharCode = String.fromCharCode;
function longStringInJS(length) {
  let start = position;
  let bytes = new Array(length);
  for (let i = 0; i < length; i++) {
    const byte = src[position++];
    if ((byte & 128) > 0) {
      position = start;
      return;
    }
    bytes[i] = byte;
  }
  return fromCharCode.apply(String, bytes);
}
function shortStringInJS(length) {
  if (length < 4) {
    if (length < 2) {
      if (length === 0)
        return "";
      else {
        let a = src[position++];
        if ((a & 128) > 1) {
          position -= 1;
          return;
        }
        return fromCharCode(a);
      }
    } else {
      let a = src[position++];
      let b = src[position++];
      if ((a & 128) > 0 || (b & 128) > 0) {
        position -= 2;
        return;
      }
      if (length < 3)
        return fromCharCode(a, b);
      let c = src[position++];
      if ((c & 128) > 0) {
        position -= 3;
        return;
      }
      return fromCharCode(a, b, c);
    }
  } else {
    let a = src[position++];
    let b = src[position++];
    let c = src[position++];
    let d = src[position++];
    if ((a & 128) > 0 || (b & 128) > 0 || (c & 128) > 0 || (d & 128) > 0) {
      position -= 4;
      return;
    }
    if (length < 6) {
      if (length === 4)
        return fromCharCode(a, b, c, d);
      else {
        let e2 = src[position++];
        if ((e2 & 128) > 0) {
          position -= 5;
          return;
        }
        return fromCharCode(a, b, c, d, e2);
      }
    } else if (length < 8) {
      let e2 = src[position++];
      let f = src[position++];
      if ((e2 & 128) > 0 || (f & 128) > 0) {
        position -= 6;
        return;
      }
      if (length < 7)
        return fromCharCode(a, b, c, d, e2, f);
      let g = src[position++];
      if ((g & 128) > 0) {
        position -= 7;
        return;
      }
      return fromCharCode(a, b, c, d, e2, f, g);
    } else {
      let e2 = src[position++];
      let f = src[position++];
      let g = src[position++];
      let h = src[position++];
      if ((e2 & 128) > 0 || (f & 128) > 0 || (g & 128) > 0 || (h & 128) > 0) {
        position -= 8;
        return;
      }
      if (length < 10) {
        if (length === 8)
          return fromCharCode(a, b, c, d, e2, f, g, h);
        else {
          let i = src[position++];
          if ((i & 128) > 0) {
            position -= 9;
            return;
          }
          return fromCharCode(a, b, c, d, e2, f, g, h, i);
        }
      } else if (length < 12) {
        let i = src[position++];
        let j = src[position++];
        if ((i & 128) > 0 || (j & 128) > 0) {
          position -= 10;
          return;
        }
        if (length < 11)
          return fromCharCode(a, b, c, d, e2, f, g, h, i, j);
        let k = src[position++];
        if ((k & 128) > 0) {
          position -= 11;
          return;
        }
        return fromCharCode(a, b, c, d, e2, f, g, h, i, j, k);
      } else {
        let i = src[position++];
        let j = src[position++];
        let k = src[position++];
        let l2 = src[position++];
        if ((i & 128) > 0 || (j & 128) > 0 || (k & 128) > 0 || (l2 & 128) > 0) {
          position -= 12;
          return;
        }
        if (length < 14) {
          if (length === 12)
            return fromCharCode(a, b, c, d, e2, f, g, h, i, j, k, l2);
          else {
            let m = src[position++];
            if ((m & 128) > 0) {
              position -= 13;
              return;
            }
            return fromCharCode(a, b, c, d, e2, f, g, h, i, j, k, l2, m);
          }
        } else {
          let m = src[position++];
          let n2 = src[position++];
          if ((m & 128) > 0 || (n2 & 128) > 0) {
            position -= 14;
            return;
          }
          if (length < 15)
            return fromCharCode(a, b, c, d, e2, f, g, h, i, j, k, l2, m, n2);
          let o2 = src[position++];
          if ((o2 & 128) > 0) {
            position -= 15;
            return;
          }
          return fromCharCode(a, b, c, d, e2, f, g, h, i, j, k, l2, m, n2, o2);
        }
      }
    }
  }
}
function readBin(length) {
  return currentDecoder.copyBuffers ? (
    // specifically use the copying slice (not the node one)
    Uint8Array.prototype.slice.call(src, position, position += length)
  ) : src.subarray(position, position += length);
}
var f32Array = new Float32Array(1);
var u8Array = new Uint8Array(f32Array.buffer, 0, 4);
function getFloat16() {
  let byte0 = src[position++];
  let byte1 = src[position++];
  let exponent = (byte0 & 127) >> 2;
  if (exponent === 31) {
    if (byte1 || byte0 & 3)
      return NaN;
    return byte0 & 128 ? -Infinity : Infinity;
  }
  if (exponent === 0) {
    let abs = ((byte0 & 3) << 8 | byte1) / (1 << 24);
    return byte0 & 128 ? -abs : abs;
  }
  u8Array[3] = byte0 & 128 | // sign bit
  (exponent >> 1) + 56;
  u8Array[2] = (byte0 & 7) << 5 | // last exponent bit and first two mantissa bits
  byte1 >> 3;
  u8Array[1] = byte1 << 5;
  u8Array[0] = 0;
  return f32Array[0];
}
var keyCache = new Array(4096);
var Tag = class {
  constructor(value, tag) {
    this.value = value;
    this.tag = tag;
  }
};
currentExtensions[0] = (dateString) => {
  return new Date(dateString);
};
currentExtensions[1] = (epochSec) => {
  return new Date(Math.round(epochSec * 1e3));
};
currentExtensions[2] = (buffer) => {
  let value = BigInt(0);
  for (let i = 0, l2 = buffer.byteLength; i < l2; i++) {
    value = BigInt(buffer[i]) + (value << BigInt(8));
  }
  return value;
};
currentExtensions[3] = (buffer) => {
  return BigInt(-1) - currentExtensions[2](buffer);
};
currentExtensions[4] = (fraction) => {
  return +(fraction[1] + "e" + fraction[0]);
};
currentExtensions[5] = (fraction) => {
  return fraction[1] * Math.exp(fraction[0] * Math.log(2));
};
var recordDefinition = (id, structure) => {
  id = id - 57344;
  let existingStructure = currentStructures[id];
  if (existingStructure && existingStructure.isShared) {
    (currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure;
  }
  currentStructures[id] = structure;
  structure.read = createStructureReader(structure);
};
currentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {
  let length = data.length;
  let structure = data[1];
  recordDefinition(data[0], structure);
  let object = {};
  for (let i = 2; i < length; i++) {
    let key = structure[i - 2];
    object[safeKey(key)] = data[i];
  }
  return object;
};
currentExtensions[14] = (value) => {
  if (bundledStrings)
    return bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value);
  return new Tag(value, 14);
};
currentExtensions[15] = (value) => {
  if (bundledStrings)
    return bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value);
  return new Tag(value, 15);
};
var glbl = { Error, RegExp };
currentExtensions[27] = (data) => {
  return (glbl[data[0]] || Error)(data[1], data[2]);
};
var packedTable = (read2) => {
  if (src[position++] != 132) {
    let error = new Error("Packed values structure must be followed by a 4 element array");
    if (src.length < position)
      error.incomplete = true;
    throw error;
  }
  let newPackedValues = read2();
  if (!newPackedValues || !newPackedValues.length) {
    let error = new Error("Packed values structure must be followed by a 4 element array");
    error.incomplete = true;
    throw error;
  }
  packedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues;
  packedValues.prefixes = read2();
  packedValues.suffixes = read2();
  return read2();
};
packedTable.handlesRead = true;
currentExtensions[51] = packedTable;
currentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => {
  if (!packedValues) {
    if (currentDecoder.getShared)
      loadShared();
    else
      return new Tag(data, PACKED_REFERENCE_TAG_ID);
  }
  if (typeof data == "number")
    return packedValues[16 + (data >= 0 ? 2 * data : -2 * data - 1)];
  let error = new Error("No support for non-integer packed references yet");
  if (data === void 0)
    error.incomplete = true;
  throw error;
};
currentExtensions[28] = (read2) => {
  if (!referenceMap) {
    referenceMap = /* @__PURE__ */ new Map();
    referenceMap.id = 0;
  }
  let id = referenceMap.id++;
  let startingPosition = position;
  let token = src[position];
  let target;
  if (token >> 5 == 4)
    target = [];
  else
    target = {};
  let refEntry = { target };
  referenceMap.set(id, refEntry);
  let targetProperties = read2();
  if (refEntry.used) {
    if (Object.getPrototypeOf(target) !== Object.getPrototypeOf(targetProperties)) {
      position = startingPosition;
      target = targetProperties;
      referenceMap.set(id, { target });
      targetProperties = read2();
    }
    return Object.assign(target, targetProperties);
  }
  refEntry.target = targetProperties;
  return targetProperties;
};
currentExtensions[28].handlesRead = true;
currentExtensions[29] = (id) => {
  let refEntry = referenceMap.get(id);
  refEntry.used = true;
  return refEntry.target;
};
currentExtensions[258] = (array) => new Set(array);
(currentExtensions[259] = (read2) => {
  if (currentDecoder.mapsAsObjects) {
    currentDecoder.mapsAsObjects = false;
    restoreMapsAsObject = true;
  }
  return read2();
}).handlesRead = true;
function combine(a, b) {
  if (typeof a === "string")
    return a + b;
  if (a instanceof Array)
    return a.concat(b);
  return Object.assign({}, a, b);
}
function getPackedValues() {
  if (!packedValues) {
    if (currentDecoder.getShared)
      loadShared();
    else
      throw new Error("No packed values available");
  }
  return packedValues;
}
var SHARED_DATA_TAG_ID = 1399353956;
currentExtensionRanges.push((tag, input) => {
  if (tag >= 225 && tag <= 255)
    return combine(getPackedValues().prefixes[tag - 224], input);
  if (tag >= 28704 && tag <= 32767)
    return combine(getPackedValues().prefixes[tag - 28672], input);
  if (tag >= 1879052288 && tag <= 2147483647)
    return combine(getPackedValues().prefixes[tag - 1879048192], input);
  if (tag >= 216 && tag <= 223)
    return combine(input, getPackedValues().suffixes[tag - 216]);
  if (tag >= 27647 && tag <= 28671)
    return combine(input, getPackedValues().suffixes[tag - 27639]);
  if (tag >= 1811940352 && tag <= 1879048191)
    return combine(input, getPackedValues().suffixes[tag - 1811939328]);
  if (tag == SHARED_DATA_TAG_ID) {
    return {
      packedValues,
      structures: currentStructures.slice(0),
      version: input
    };
  }
  if (tag == 55799)
    return input;
});
var isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1;
var typedArrays = [
  Uint8Array,
  Uint8ClampedArray,
  Uint16Array,
  Uint32Array,
  typeof BigUint64Array == "undefined" ? { name: "BigUint64Array" } : BigUint64Array,
  Int8Array,
  Int16Array,
  Int32Array,
  typeof BigInt64Array == "undefined" ? { name: "BigInt64Array" } : BigInt64Array,
  Float32Array,
  Float64Array
];
var typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86];
for (let i = 0; i < typedArrays.length; i++) {
  registerTypedArray(typedArrays[i], typedArrayTags[i]);
}
function registerTypedArray(TypedArray, tag) {
  let dvMethod = "get" + TypedArray.name.slice(0, -5);
  let bytesPerElement;
  if (typeof TypedArray === "function")
    bytesPerElement = TypedArray.BYTES_PER_ELEMENT;
  else
    TypedArray = null;
  for (let littleEndian = 0; littleEndian < 2; littleEndian++) {
    if (!littleEndian && bytesPerElement == 1)
      continue;
    let sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : bytesPerElement == 8 ? 3 : 0;
    currentExtensions[littleEndian ? tag : tag - 4] = bytesPerElement == 1 || littleEndian == isLittleEndianMachine ? (buffer) => {
      if (!TypedArray)
        throw new Error("Could not find typed array for code " + tag);
      if (!currentDecoder.copyBuffers) {
        if (bytesPerElement === 1 || bytesPerElement === 2 && !(buffer.byteOffset & 1) || bytesPerElement === 4 && !(buffer.byteOffset & 3) || bytesPerElement === 8 && !(buffer.byteOffset & 7))
          return new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength >> sizeShift);
      }
      return new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer);
    } : (buffer) => {
      if (!TypedArray)
        throw new Error("Could not find typed array for code " + tag);
      let dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);
      let elements = buffer.length >> sizeShift;
      let ta = new TypedArray(elements);
      let method = dv[dvMethod];
      for (let i = 0; i < elements; i++) {
        ta[i] = method.call(dv, i << sizeShift, littleEndian);
      }
      return ta;
    };
  }
}
function readBundleExt() {
  let length = readJustLength();
  let bundlePosition = position + read();
  for (let i = 2; i < length; i++) {
    let bundleLength = readJustLength();
    position += bundleLength;
  }
  let dataPosition = position;
  position = bundlePosition;
  bundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())];
  bundledStrings.position0 = 0;
  bundledStrings.position1 = 0;
  bundledStrings.postBundlePosition = position;
  position = dataPosition;
  return read();
}
function readJustLength() {
  let token = src[position++] & 31;
  if (token > 23) {
    switch (token) {
      case 24:
        token = src[position++];
        break;
      case 25:
        token = dataView.getUint16(position);
        position += 2;
        break;
      case 26:
        token = dataView.getUint32(position);
        position += 4;
        break;
    }
  }
  return token;
}
function loadShared() {
  if (currentDecoder.getShared) {
    let sharedData = saveState(() => {
      src = null;
      return currentDecoder.getShared();
    }) || {};
    let updatedStructures = sharedData.structures || [];
    currentDecoder.sharedVersion = sharedData.version;
    packedValues = currentDecoder.sharedValues = sharedData.packedValues;
    if (currentStructures === true)
      currentDecoder.structures = currentStructures = updatedStructures;
    else
      currentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures));
  }
}
function saveState(callback) {
  let savedSrcEnd = srcEnd;
  let savedPosition = position;
  let savedStringPosition = stringPosition;
  let savedSrcStringStart = srcStringStart;
  let savedSrcStringEnd = srcStringEnd;
  let savedSrcString = srcString;
  let savedStrings = strings;
  let savedReferenceMap = referenceMap;
  let savedBundledStrings = bundledStrings;
  let savedSrc = new Uint8Array(src.slice(0, srcEnd));
  let savedStructures = currentStructures;
  let savedDecoder = currentDecoder;
  let savedSequentialMode = sequentialMode;
  let value = callback();
  srcEnd = savedSrcEnd;
  position = savedPosition;
  stringPosition = savedStringPosition;
  srcStringStart = savedSrcStringStart;
  srcStringEnd = savedSrcStringEnd;
  srcString = savedSrcString;
  strings = savedStrings;
  referenceMap = savedReferenceMap;
  bundledStrings = savedBundledStrings;
  src = savedSrc;
  sequentialMode = savedSequentialMode;
  currentStructures = savedStructures;
  currentDecoder = savedDecoder;
  dataView = new DataView(src.buffer, src.byteOffset, src.byteLength);
  return value;
}
function clearSource() {
  src = null;
  referenceMap = null;
  currentStructures = null;
}
var mult10 = new Array(147);
for (let i = 0; i < 256; i++) {
  mult10[i] = +("1e" + Math.floor(45.15 - i * 0.30103));
}
var defaultDecoder = new Decoder({ useRecords: false });
var decode = defaultDecoder.decode;
var decodeMultiple = defaultDecoder.decodeMultiple;

// node_modules/passkey-kit/src/kit.ts
var import_buffer3 = __toESM(require_buffer(), 1);
var PasskeyKit = class extends PasskeyBase {
  constructor(options) {
    const {
      rpcUrl,
      launchtubeUrl,
      launchtubeJwt,
      networkPassphrase,
      factoryContractId
    } = options;
    super({
      launchtubeUrl,
      launchtubeJwt
    });
    __publicField(this, "keyId");
    __publicField(this, "keyExpired");
    __publicField(this, "wallet");
    __publicField(this, "factory");
    __publicField(this, "networkPassphrase");
    __publicField(this, "rpcUrl");
    __publicField(this, "rpc");
    this.rpcUrl = rpcUrl;
    this.rpc = new import_stellar_sdk.SorobanRpc.Server(rpcUrl);
    this.networkPassphrase = networkPassphrase;
    this.factory = new Client2({
      contractId: factoryContractId,
      networkPassphrase,
      rpcUrl
    });
  }
  async createWallet(name, user) {
    const { keyId, publicKey } = await this.createKey(name, user);
    const { result, built } = await this.factory.deploy({
      id: keyId,
      pk: publicKey
    });
    const contractId = result.unwrap();
    this.wallet = new Client({
      contractId,
      networkPassphrase: this.networkPassphrase,
      rpcUrl: this.rpcUrl
    });
    return {
      keyId,
      contractId,
      xdr: built.toXDR()
    };
  }
  async createKey(name, user) {
    const startRegistrationResponse = await startRegistration({
      challenge: (0, import_base64url.default)("stellaristhebetterblockchain"),
      rp: {
        // id: undefined,
        name
      },
      user: {
        id: (0, import_base64url.default)(user),
        name: user,
        displayName: user
      },
      authenticatorSelection: {
        requireResidentKey: false,
        residentKey: "preferred",
        userVerification: "discouraged"
      },
      pubKeyCredParams: [{ alg: -7, type: "public-key" }],
      attestation: "none"
    });
    if (!this.keyId)
      this.keyId = startRegistrationResponse.id;
    const { publicKeyObject } = this.getPublicKeyObject(startRegistrationResponse.response.attestationObject);
    const publicKey = import_buffer3.Buffer.from([
      4,
      // (0x04 prefix) https://en.bitcoin.it/wiki/Elliptic_Curve_Digital_Signature_Algorithm
      ...publicKeyObject.get("-2"),
      ...publicKeyObject.get("-3")
    ]);
    return {
      keyId: import_base64url.default.toBuffer(startRegistrationResponse.id),
      publicKey
    };
  }
  async connectWallet(opts) {
    let { keyId, getContractId } = opts;
    let keyIdBuffer;
    if (!keyId) {
      const { id } = await startAuthentication({
        challenge: (0, import_base64url.default)("stellaristhebetterblockchain"),
        // rpId: undefined,
        userVerification: "discouraged"
      });
      keyId = id;
    }
    if (keyId instanceof Uint8Array) {
      keyIdBuffer = keyId;
      keyId = (0, import_base64url.default)(keyId);
    } else {
      keyIdBuffer = import_base64url.default.toBuffer(keyId);
    }
    if (!this.keyId)
      this.keyId = keyId;
    let contractId = import_stellar_sdk.StrKey.encodeContract((0, import_stellar_sdk.hash)(import_stellar_sdk.xdr.HashIdPreimage.envelopeTypeContractId(
      new import_stellar_sdk.xdr.HashIdPreimageContractId({
        networkId: (0, import_stellar_sdk.hash)(import_buffer3.Buffer.from(this.networkPassphrase, "utf-8")),
        contractIdPreimage: import_stellar_sdk.xdr.ContractIdPreimage.contractIdPreimageFromAddress(
          new import_stellar_sdk.xdr.ContractIdPreimageFromAddress({
            address: import_stellar_sdk.Address.fromString(this.factory.options.contractId).toScAddress(),
            salt: (0, import_stellar_sdk.hash)(keyIdBuffer)
          })
        )
      })
    ).toXDR()));
    try {
      await this.rpc.getContractData(contractId, import_stellar_sdk.xdr.ScVal.scvLedgerKeyContractInstance());
    } catch {
      contractId = void 0;
      if (getContractId) {
        contractId = await getContractId(keyId);
        try {
          await this.rpc.getContractData(contractId, import_stellar_sdk.xdr.ScVal.scvBytes(keyIdBuffer), import_stellar_sdk.SorobanRpc.Durability.Temporary);
        } catch {
          this.keyExpired = true;
        }
      }
    }
    if (!contractId)
      throw new Error("No `contractId` was found");
    this.wallet = new Client({
      contractId,
      networkPassphrase: this.networkPassphrase,
      rpcUrl: this.rpcUrl
    });
    return {
      keyId: keyIdBuffer,
      contractId
    };
  }
  async signAuthEntry(entry, options) {
    let { keyId, ledgersToLive = 60 } = options || {};
    const lastLedger = await this.rpc.getLatestLedger().then(({ sequence }) => sequence);
    const credentials = entry.credentials().address();
    const preimage = import_stellar_sdk.xdr.HashIdPreimage.envelopeTypeSorobanAuthorization(
      new import_stellar_sdk.xdr.HashIdPreimageSorobanAuthorization({
        networkId: (0, import_stellar_sdk.hash)(import_buffer3.Buffer.from(this.networkPassphrase)),
        nonce: credentials.nonce(),
        signatureExpirationLedger: lastLedger + ledgersToLive,
        invocation: entry.rootInvocation()
      })
    );
    const payload = (0, import_stellar_sdk.hash)(preimage.toXDR());
    const authenticationResponse = await startAuthentication(
      keyId === "any" || !keyId && !this.keyId ? {
        challenge: (0, import_base64url.default)(payload),
        // rpId: undefined,
        userVerification: "discouraged"
      } : {
        challenge: (0, import_base64url.default)(payload),
        // rpId: undefined,
        allowCredentials: [
          {
            id: keyId instanceof Uint8Array ? (0, import_base64url.default)(keyId) : keyId || this.keyId,
            type: "public-key"
          }
        ],
        userVerification: "discouraged"
      }
    );
    const signatureRaw = import_base64url.default.toBuffer(authenticationResponse.response.signature);
    const signature = this.convertEcdsaSignatureAsnToCompact(signatureRaw);
    credentials.signatureExpirationLedger(lastLedger + ledgersToLive);
    credentials.signature(import_stellar_sdk.xdr.ScVal.scvMap([
      new import_stellar_sdk.xdr.ScMapEntry({
        key: import_stellar_sdk.xdr.ScVal.scvSymbol("authenticator_data"),
        val: import_stellar_sdk.xdr.ScVal.scvBytes(import_base64url.default.toBuffer(authenticationResponse.response.authenticatorData))
      }),
      new import_stellar_sdk.xdr.ScMapEntry({
        key: import_stellar_sdk.xdr.ScVal.scvSymbol("client_data_json"),
        val: import_stellar_sdk.xdr.ScVal.scvBytes(import_base64url.default.toBuffer(authenticationResponse.response.clientDataJSON))
      }),
      new import_stellar_sdk.xdr.ScMapEntry({
        key: import_stellar_sdk.xdr.ScVal.scvSymbol("id"),
        val: import_stellar_sdk.xdr.ScVal.scvBytes(import_base64url.default.toBuffer(authenticationResponse.id))
      }),
      new import_stellar_sdk.xdr.ScMapEntry({
        key: import_stellar_sdk.xdr.ScVal.scvSymbol("signature"),
        val: import_stellar_sdk.xdr.ScVal.scvBytes(signature)
      })
    ]));
    return entry;
  }
  async signAuthEntries(entries, options) {
    for (const auth of entries) {
      if (auth.credentials().switch().name === "sorobanCredentialsAddress" && auth.credentials().address().address().switch().name === "scAddressTypeContract") {
        if (import_stellar_sdk.Address.contract(auth.credentials().address().address().contractId()).toString() === this.wallet.options.contractId)
          await this.signAuthEntry(auth, options);
      }
    }
    return entries;
  }
  async sign(txn, options) {
    txn = import_stellar_sdk.TransactionBuilder.cloneFrom(new import_stellar_sdk.Transaction(
      typeof txn === "string" ? txn : txn.toXDR(),
      this.networkPassphrase
    ), { fee: "0" }).build();
    if (txn.operations.length !== 1)
      throw new Error("Must include only one Soroban operation");
    for (const op of txn.operations) {
      if (op.type !== "invokeHostFunction" && op.type !== "extendFootprintTtl" && op.type !== "restoreFootprint") throw new Error("Must include only one operation of type `invokeHostFunction` or `extendFootprintTtl` or `restoreFootprint`");
    }
    if (txn.operations[0].type === "invokeHostFunction") {
      const entries = txn.operations[0].auth;
      if (entries)
        await this.signAuthEntries(entries, options);
    }
    const sim = await this.rpc.simulateTransaction(txn);
    if (import_stellar_sdk.SorobanRpc.Api.isSimulationError(sim) || import_stellar_sdk.SorobanRpc.Api.isSimulationRestore(sim)) throw sim;
    return import_stellar_sdk.SorobanRpc.assembleTransaction(txn, sim).build().toXDR();
  }
  async getSuperKeyId() {
    var _a;
    const data = /* @__PURE__ */ new Map();
    const { val } = await this.rpc.getContractData(
      this.wallet.options.contractId,
      import_stellar_sdk.xdr.ScVal.scvLedgerKeyContractInstance()
    );
    (_a = val.contractData().val().instance().storage()) == null ? void 0 : _a.forEach((entry) => {
      data.set(
        (0, import_stellar_sdk.scValToNative)(entry.key()),
        (0, import_stellar_sdk.scValToNative)(entry.val())
      );
    });
    return (0, import_base64url.default)(data.get("super"));
  }
  /* TODO 
      - Add a getKeyInfo action to get info about a specific passkey
          Specifically looking for name, type, etc. data so a user could grok what signer mapped to what passkey
          @Later
  */
  getPublicKeyObject(attestationObject) {
    const { authData } = decode(import_base64url.default.toBuffer(attestationObject));
    const authDataUint8Array = new Uint8Array(authData);
    const authDataView = new DataView(authDataUint8Array.buffer, 0, authDataUint8Array.length);
    let offset = 0;
    const rpIdHash = authData.slice(offset, offset + 32);
    offset += 32;
    const flags = authDataView.getUint8(offset);
    offset += 1;
    const signCount = authDataView.getUint32(offset, false);
    offset += 4;
    if (flags & 64) {
      const aaguid = authData.slice(offset, offset + 16);
      offset += 16;
      const credIdLength = authDataView.getUint16(offset, false);
      offset += 2;
      const credentialId = authData.slice(offset, offset + credIdLength);
      offset += credIdLength;
      const credentialPublicKey = authData.slice(offset, offset + 77);
      offset += 77;
      const theRest = authData.slice(offset);
      const publicKeyObject = new Map(Object.entries(decode(credentialPublicKey)));
      return {
        rpIdHash,
        flags,
        signCount,
        aaguid,
        credIdLength,
        credentialId,
        credentialPublicKey,
        theRest,
        publicKeyObject
      };
    }
    throw new Error("Attested credential data not present in the flags.");
  }
  convertEcdsaSignatureAsnToCompact(sig) {
    const q = import_buffer3.Buffer.from("ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551", "hex");
    let offset = 0;
    if (sig[offset] != 48) {
      throw "signature is not a sequence";
    }
    offset += 1;
    offset += 1;
    if (sig[offset] != 2) {
      throw "first element in sequence is not an integer";
    }
    offset += 1;
    const rLen = sig[offset];
    offset += 1;
    if (rLen >= 33) {
      if (rLen != 33 || sig[offset] != 0) {
        throw "can only handle larger than 32 byte R's that are len 33 and lead with zero";
      }
      offset += 1;
    }
    const r3 = sig.slice(offset, offset + 32);
    offset += 32;
    if (sig[offset] != 2) {
      throw "second element in sequence is not an integer";
    }
    offset += 1;
    const sLen = sig[offset];
    offset += 1;
    if (sLen >= 33) {
      if (sLen != 33 || sig[offset] != 0) {
        throw "can only handle larger than 32 byte R's that are len 33 and lead with zero";
      }
      offset += 1;
    }
    const s = sig.slice(offset, offset + 32);
    offset += 32;
    let signature64;
    if (r2(s) > (r2(q) - BigInt(1)) / BigInt(2)) {
      signature64 = import_buffer3.Buffer.from([...r3, ...import_buffer3.Buffer.from(t(r2(q) - r2(s), true))]);
    } else {
      signature64 = import_buffer3.Buffer.from([...r3, ...s]);
    }
    return signature64;
  }
};
export {
  PasskeyBase,
  PasskeyKit
};
/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

@stellar/js-xdr/dist/xdr.js:
  (*! For license information please see xdr.js.LICENSE.txt *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

@stellar/stellar-base/lib/auth.js:
  (*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE *)

urijs/src/punycode.js:
  (*! https://mths.be/punycode v1.4.0 by @mathias *)

urijs/src/IPv6.js:
  (*!
   * URI.js - Mutating URLs
   * IPv6 Support
   *
   * Version: 1.19.11
   *
   * Author: Rodney Rehm
   * Web: http://medialize.github.io/URI.js/
   *
   * Licensed under
   *   MIT License http://www.opensource.org/licenses/mit-license
   *
   *)

urijs/src/SecondLevelDomains.js:
  (*!
   * URI.js - Mutating URLs
   * Second Level Domain (SLD) Support
   *
   * Version: 1.19.11
   *
   * Author: Rodney Rehm
   * Web: http://medialize.github.io/URI.js/
   *
   * Licensed under
   *   MIT License http://www.opensource.org/licenses/mit-license
   *
   *)

urijs/src/URI.js:
  (*!
   * URI.js - Mutating URLs
   *
   * Version: 1.19.11
   *
   * Author: Rodney Rehm
   * Web: http://medialize.github.io/URI.js/
   *
   * Licensed under
   *   MIT License http://www.opensource.org/licenses/mit-license
   *
   *)

axios/dist/browser/axios.cjs:
  (*! Axios v1.12.2 Copyright (c) 2025 Matt Zabriskie and contributors *)

@stellar/stellar-sdk/dist/stellar-sdk.min.js:
  (*! For license information please see stellar-sdk.min.js.LICENSE.txt *)
*/
//# sourceMappingURL=passkey-kit.js.map
